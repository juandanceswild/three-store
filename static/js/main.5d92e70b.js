!function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="/three-store/",t(t.s=84)}([function(e,t,n){"use strict";function r(e,t,n,r,o,a,s,c){if(i(t),!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,a,s,c],h=0;u=new Error(t.replace(/%s/g,function(){return l[h++]})),u.name="Invariant Violation"}throw u.framesToPop=1,u}}var i=function(e){};e.exports=r},function(e,t,n){"use strict";var r=n(6),i=r;e.exports=i},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);n+=" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";var i=new Error(n);throw i.name="Invariant Violation",i.framesToPop=1,i}e.exports=r},function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}var i=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,s,c=r(e),u=1;u<arguments.length;u++){n=Object(arguments[u]);for(var l in n)o.call(n,l)&&(c[l]=n[l]);if(i){s=i(n);for(var h=0;h<s.length;h++)a.call(n,s[h])&&(c[s[h]]=n[s[h]])}}return c}},function(e,t,n){"use strict";function r(e,t){return 1===e.nodeType&&e.getAttribute(f)===String(t)||8===e.nodeType&&e.nodeValue===" react-text: "+t+" "||8===e.nodeType&&e.nodeValue===" react-empty: "+t+" "}function i(e){for(var t;t=e._renderedComponent;)e=t;return e}function o(e,t){var n=i(e);n._hostNode=t,t[g]=n}function a(e){var t=e._hostNode;t&&(delete t[g],e._hostNode=null)}function s(e,t){if(!(e._flags&m.hasCachedChildNodes)){var n=e._renderedChildren,a=t.firstChild;e:for(var s in n)if(n.hasOwnProperty(s)){var c=n[s],u=i(c)._domID;if(0!==u){for(;null!==a;a=a.nextSibling)if(r(a,u)){o(c,a);continue e}h("32",u)}}e._flags|=m.hasCachedChildNodes}}function c(e){if(e[g])return e[g];for(var t=[];!e[g];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}for(var n,r;e&&(r=e[g]);e=t.pop())n=r,t.length&&s(r,e);return n}function u(e){var t=c(e);return null!=t&&t._hostNode===e?t:null}function l(e){if(void 0===e._hostNode&&h("33"),e._hostNode)return e._hostNode;for(var t=[];!e._hostNode;)t.push(e),e._hostParent||h("34"),e=e._hostParent;for(;t.length;e=t.pop())s(e,e._hostNode);return e._hostNode}var h=n(2),p=n(14),d=n(54),f=(n(0),p.ID_ATTRIBUTE_NAME),m=d,g="__reactInternalInstance$"+Math.random().toString(36).slice(2),v={getClosestInstanceFromNode:c,getInstanceFromNode:u,getNodeFromInstance:l,precacheChildNodes:s,precacheNode:o,uncacheNode:a};e.exports=v},function(e,t,n){"use strict";var r=!("undefined"===typeof window||!window.document||!window.document.createElement),i={canUseDOM:r,canUseWorkers:"undefined"!==typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=i},function(e,t,n){"use strict";function r(e){return function(){return e}}var i=function(){};i.thatReturns=r,i.thatReturnsFalse=r(!1),i.thatReturnsTrue=r(!0),i.thatReturnsNull=r(null),i.thatReturnsThis=function(){return this},i.thatReturnsArgument=function(e){return e},e.exports=i},function(e,t,n){"use strict";var r=null;e.exports={debugTool:r}},function(e,t,n){"use strict";function r(){A.ReactReconcileTransaction&&_||l("123")}function i(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=p.getPooled(),this.reconcileTransaction=A.ReactReconcileTransaction.getPooled(!0)}function o(e,t,n,i,o,a){return r(),_.batchedUpdates(e,t,n,i,o,a)}function a(e,t){return e._mountOrder-t._mountOrder}function s(e){var t=e.dirtyComponentsLength;t!==v.length&&l("124",t,v.length),v.sort(a),y++;for(var n=0;n<t;n++){var r=v[n],i=r._pendingCallbacks;r._pendingCallbacks=null;var o;if(f.logTopLevelRenders){var s=r;r._currentElement.type.isReactTopLevelWrapper&&(s=r._renderedComponent),o="React update: "+s.getName(),console.time(o)}if(m.performUpdateIfNecessary(r,e.reconcileTransaction,y),o&&console.timeEnd(o),i)for(var c=0;c<i.length;c++)e.callbackQueue.enqueue(i[c],r.getPublicInstance())}}function c(e){if(r(),!_.isBatchingUpdates)return void _.batchedUpdates(c,e);v.push(e),null==e._updateBatchNumber&&(e._updateBatchNumber=y+1)}function u(e,t){_.isBatchingUpdates||l("125"),b.enqueue(e,t),x=!0}var l=n(2),h=n(3),p=n(58),d=n(11),f=n(59),m=n(15),g=n(24),v=(n(0),[]),y=0,b=p.getPooled(),x=!1,_=null,w={initialize:function(){this.dirtyComponentsLength=v.length},close:function(){this.dirtyComponentsLength!==v.length?(v.splice(0,this.dirtyComponentsLength),T()):v.length=0}},E={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},M=[w,E];h(i.prototype,g,{getTransactionWrappers:function(){return M},destructor:function(){this.dirtyComponentsLength=null,p.release(this.callbackQueue),this.callbackQueue=null,A.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return g.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),d.addPoolingTo(i);var T=function(){for(;v.length||x;){if(v.length){var e=i.getPooled();e.perform(s,null,e),i.release(e)}if(x){x=!1;var t=b;b=p.getPooled(),t.notifyAll(),p.release(t)}}},S={injectReconcileTransaction:function(e){e||l("126"),A.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){e||l("127"),"function"!==typeof e.batchedUpdates&&l("128"),"boolean"!==typeof e.isBatchingUpdates&&l("129"),_=e}},A={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:c,flushBatchedUpdates:T,injection:S,asap:u};e.exports=A},function(e,t,n){"use strict";var r={current:null};e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n;var i=this.constructor.Interface;for(var o in i)if(i.hasOwnProperty(o)){var s=i[o];s?this[o]=s(n):"target"===o?this.target=r:this[o]=n[o]}var c=null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue;return this.isDefaultPrevented=c?a.thatReturnsTrue:a.thatReturnsFalse,this.isPropagationStopped=a.thatReturnsFalse,this}var i=n(3),o=n(11),a=n(6),s=(n(1),["dispatchConfig","_targetInst","nativeEvent","isDefaultPrevented","isPropagationStopped","_dispatchListeners","_dispatchInstances"]),c={type:null,target:null,currentTarget:a.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};i(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=a.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=a.thatReturnsTrue)},persist:function(){this.isPersistent=a.thatReturnsTrue},isPersistent:a.thatReturnsFalse,destructor:function(){var e=this.constructor.Interface;for(var t in e)this[t]=null;for(var n=0;n<s.length;n++)this[s[n]]=null}}),r.Interface=c,r.augmentClass=function(e,t){var n=this,r=function(){};r.prototype=n.prototype;var a=new r;i(a,e.prototype),e.prototype=a,e.prototype.constructor=e,e.Interface=i({},n.Interface,t),e.augmentClass=n.augmentClass,o.addPoolingTo(e,o.fourArgumentPooler)},o.addPoolingTo(r,o.fourArgumentPooler),e.exports=r},function(e,t,n){"use strict";var r=n(2),i=(n(0),function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)}),o=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},a=function(e,t,n){var r=this;if(r.instancePool.length){var i=r.instancePool.pop();return r.call(i,e,t,n),i}return new r(e,t,n)},s=function(e,t,n,r){var i=this;if(i.instancePool.length){var o=i.instancePool.pop();return i.call(o,e,t,n,r),o}return new i(e,t,n,r)},c=function(e){var t=this;e instanceof t||r("25"),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},u=i,l=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||u,n.poolSize||(n.poolSize=10),n.release=c,n},h={addPoolingTo:l,oneArgumentPooler:i,twoArgumentPooler:o,threeArgumentPooler:a,fourArgumentPooler:s};e.exports=h},function(e,t,n){"use strict";var r=n(3),i=n(48),o=n(93),a=n(98),s=n(13),c=n(99),u=n(102),l=n(103),h=n(105),p=s.createElement,d=s.createFactory,f=s.cloneElement,m=r,g=function(e){return e},v={Children:{map:o.map,forEach:o.forEach,count:o.count,toArray:o.toArray,only:h},Component:i.Component,PureComponent:i.PureComponent,createElement:p,cloneElement:f,isValidElement:s.isValidElement,PropTypes:c,createClass:l,createFactory:d,createMixin:g,DOM:a,version:u,__spread:m};e.exports=v},function(e,t,n){"use strict";function r(e){return void 0!==e.ref}function i(e){return void 0!==e.key}var o=n(3),a=n(9),s=(n(1),n(50),Object.prototype.hasOwnProperty),c=n(51),u={key:!0,ref:!0,__self:!0,__source:!0},l=function(e,t,n,r,i,o,a){var s={$$typeof:c,type:e,key:t,ref:n,props:a,_owner:o};return s};l.createElement=function(e,t,n){var o,c={},h=null,p=null;if(null!=t){r(t)&&(p=t.ref),i(t)&&(h=""+t.key),void 0===t.__self?null:t.__self,void 0===t.__source?null:t.__source;for(o in t)s.call(t,o)&&!u.hasOwnProperty(o)&&(c[o]=t[o])}var d=arguments.length-2;if(1===d)c.children=n;else if(d>1){for(var f=Array(d),m=0;m<d;m++)f[m]=arguments[m+2];c.children=f}if(e&&e.defaultProps){var g=e.defaultProps;for(o in g)void 0===c[o]&&(c[o]=g[o])}return l(e,h,p,0,0,a.current,c)},l.createFactory=function(e){var t=l.createElement.bind(null,e);return t.type=e,t},l.cloneAndReplaceKey=function(e,t){return l(e.type,t,e.ref,e._self,e._source,e._owner,e.props)},l.cloneElement=function(e,t,n){var c,h=o({},e.props),p=e.key,d=e.ref,f=(e._self,e._source,e._owner);if(null!=t){r(t)&&(d=t.ref,f=a.current),i(t)&&(p=""+t.key);var m;e.type&&e.type.defaultProps&&(m=e.type.defaultProps);for(c in t)s.call(t,c)&&!u.hasOwnProperty(c)&&(void 0===t[c]&&void 0!==m?h[c]=m[c]:h[c]=t[c])}var g=arguments.length-2;if(1===g)h.children=n;else if(g>1){for(var v=Array(g),y=0;y<g;y++)v[y]=arguments[y+2];h.children=v}return l(e.type,p,d,0,0,f,h)},l.isValidElement=function(e){return"object"===typeof e&&null!==e&&e.$$typeof===c},e.exports=l},function(e,t,n){"use strict";function r(e,t){return(e&t)===t}var i=n(2),o=(n(0),{MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,injectDOMPropertyConfig:function(e){var t=o,n=e.Properties||{},a=e.DOMAttributeNamespaces||{},c=e.DOMAttributeNames||{},u=e.DOMPropertyNames||{},l=e.DOMMutationMethods||{};e.isCustomAttribute&&s._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var h in n){s.properties.hasOwnProperty(h)&&i("48",h);var p=h.toLowerCase(),d=n[h],f={attributeName:p,attributeNamespace:null,propertyName:h,mutationMethod:null,mustUseProperty:r(d,t.MUST_USE_PROPERTY),hasBooleanValue:r(d,t.HAS_BOOLEAN_VALUE),hasNumericValue:r(d,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:r(d,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:r(d,t.HAS_OVERLOADED_BOOLEAN_VALUE)};if(f.hasBooleanValue+f.hasNumericValue+f.hasOverloadedBooleanValue<=1||i("50",h),c.hasOwnProperty(h)){var m=c[h];f.attributeName=m}a.hasOwnProperty(h)&&(f.attributeNamespace=a[h]),u.hasOwnProperty(h)&&(f.propertyName=u[h]),l.hasOwnProperty(h)&&(f.mutationMethod=l[h]),s.properties[h]=f}}}),a=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",s={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:a,ATTRIBUTE_NAME_CHAR:a+"\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<s._isCustomAttributeFunctions.length;t++){if((0,s._isCustomAttributeFunctions[t])(e))return!0}return!1},injection:o};e.exports=s},function(e,t,n){"use strict";function r(){i.attachRefs(this,this._currentElement)}var i=n(115),o=(n(7),n(1),{mountComponent:function(e,t,n,i,o,a){var s=e.mountComponent(t,n,i,o,a);return e._currentElement&&null!=e._currentElement.ref&&t.getReactMountReady().enqueue(r,e),s},getHostNode:function(e){return e.getHostNode()},unmountComponent:function(e,t){i.detachRefs(e,e._currentElement),e.unmountComponent(t)},receiveComponent:function(e,t,n,o){var a=e._currentElement;if(t!==a||o!==e._context){var s=i.shouldUpdateRefs(a,t);s&&i.detachRefs(e,a),e.receiveComponent(t,n,o),s&&e._currentElement&&null!=e._currentElement.ref&&n.getReactMountReady().enqueue(r,e)}},performUpdateIfNecessary:function(e,t,n){e._updateBatchNumber===n&&e.performUpdateIfNecessary(t)}});e.exports=o},function(e,t,n){"use strict";function r(e){if(f){var t=e.node,n=e.children;if(n.length)for(var r=0;r<n.length;r++)m(t,n[r],null);else null!=e.html?h(t,e.html):null!=e.text&&d(t,e.text)}}function i(e,t){e.parentNode.replaceChild(t.node,e),r(t)}function o(e,t){f?e.children.push(t):e.node.appendChild(t.node)}function a(e,t){f?e.html=t:h(e.node,t)}function s(e,t){f?e.text=t:d(e.node,t)}function c(){return this.node.nodeName}function u(e){return{node:e,children:[],html:null,text:null,toString:c}}var l=n(36),h=n(26),p=n(37),d=n(63),f="undefined"!==typeof document&&"number"===typeof document.documentMode||"undefined"!==typeof navigator&&"string"===typeof navigator.userAgent&&/\bEdge\/\d/.test(navigator.userAgent),m=p(function(e,t,n){11===t.node.nodeType||1===t.node.nodeType&&"object"===t.node.nodeName.toLowerCase()&&(null==t.node.namespaceURI||t.node.namespaceURI===l.html)?(r(t),e.insertBefore(t.node,n)):(e.insertBefore(t.node,n),r(t))});u.insertTreeBefore=m,u.replaceChildWithTree=i,u.queueChild=o,u.queueHTML=a,u.queueText=s,e.exports=u},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);n+=" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";var i=new Error(n);throw i.name="Invariant Violation",i.framesToPop=1,i}e.exports=r},function(e,t,n){"use strict";function r(e,t,n){var r=t.dispatchConfig.phasedRegistrationNames[n];return v(e,r)}function i(e,t,n){var i=r(e,n,t);i&&(n._dispatchListeners=m(n._dispatchListeners,i),n._dispatchInstances=m(n._dispatchInstances,e))}function o(e){e&&e.dispatchConfig.phasedRegistrationNames&&f.traverseTwoPhase(e._targetInst,i,e)}function a(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst,n=t?f.getParentInstance(t):null;f.traverseTwoPhase(n,i,e)}}function s(e,t,n){if(n&&n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,i=v(e,r);i&&(n._dispatchListeners=m(n._dispatchListeners,i),n._dispatchInstances=m(n._dispatchInstances,e))}}function c(e){e&&e.dispatchConfig.registrationName&&s(e._targetInst,null,e)}function u(e){g(e,o)}function l(e){g(e,a)}function h(e,t,n,r){f.traverseEnterLeave(n,r,s,e,t)}function p(e){g(e,c)}var d=n(19),f=n(30),m=n(55),g=n(56),v=(n(1),d.getListener),y={accumulateTwoPhaseDispatches:u,accumulateTwoPhaseDispatchesSkipTarget:l,accumulateDirectDispatches:p,accumulateEnterLeaveDispatches:h};e.exports=y},function(e,t,n){"use strict";function r(e){return"button"===e||"input"===e||"select"===e||"textarea"===e}function i(e,t,n){switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":return!(!n.disabled||!r(t));default:return!1}}var o=n(2),a=n(29),s=n(30),c=n(31),u=n(55),l=n(56),h=(n(0),{}),p=null,d=function(e,t){e&&(s.executeDispatchesInOrder(e,t),e.isPersistent()||e.constructor.release(e))},f=function(e){return d(e,!0)},m=function(e){return d(e,!1)},g=function(e){return"."+e._rootNodeID},v={injection:{injectEventPluginOrder:a.injectEventPluginOrder,injectEventPluginsByName:a.injectEventPluginsByName},putListener:function(e,t,n){"function"!==typeof n&&o("94",t,typeof n);var r=g(e);(h[t]||(h[t]={}))[r]=n;var i=a.registrationNameModules[t];i&&i.didPutListener&&i.didPutListener(e,t,n)},getListener:function(e,t){var n=h[t];if(i(t,e._currentElement.type,e._currentElement.props))return null;var r=g(e);return n&&n[r]},deleteListener:function(e,t){var n=a.registrationNameModules[t];n&&n.willDeleteListener&&n.willDeleteListener(e,t);var r=h[t];if(r){delete r[g(e)]}},deleteAllListeners:function(e){var t=g(e);for(var n in h)if(h.hasOwnProperty(n)&&h[n][t]){var r=a.registrationNameModules[n];r&&r.willDeleteListener&&r.willDeleteListener(e,n),delete h[n][t]}},extractEvents:function(e,t,n,r){for(var i,o=a.plugins,s=0;s<o.length;s++){var c=o[s];if(c){var l=c.extractEvents(e,t,n,r);l&&(i=u(i,l))}}return i},enqueueEvents:function(e){e&&(p=u(p,e))},processEventQueue:function(e){var t=p;p=null,e?l(t,f):l(t,m),p&&o("95"),c.rethrowCaughtError()},__purge:function(){h={}},__getListenerBank:function(){return h}};e.exports=v},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(10),o=n(32),a={view:function(e){if(e.view)return e.view;var t=o(e);if(t.window===t)return t;var n=t.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(e){return e.detail||0}};i.augmentClass(r,a),e.exports=r},function(e,t,n){"use strict";var r={remove:function(e){e._reactInternalInstance=void 0},get:function(e){return e._reactInternalInstance},has:function(e){return void 0!==e._reactInternalInstance},set:function(e,t){e._reactInternalInstance=t}};e.exports=r},function(e,t,n){"use strict";e.exports=n(12)},function(e,t,n){"use strict";var r={};e.exports=r},function(e,t,n){"use strict";var r=n(2),i=(n(0),{}),o={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(e,t,n,i,o,a,s,c){this.isInTransaction()&&r("27");var u,l;try{this._isInTransaction=!0,u=!0,this.initializeAll(0),l=e.call(t,n,i,o,a,s,c),u=!1}finally{try{if(u)try{this.closeAll(0)}catch(e){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return l},initializeAll:function(e){for(var t=this.transactionWrappers,n=e;n<t.length;n++){var r=t[n];try{this.wrapperInitData[n]=i,this.wrapperInitData[n]=r.initialize?r.initialize.call(this):null}finally{if(this.wrapperInitData[n]===i)try{this.initializeAll(n+1)}catch(e){}}}},closeAll:function(e){this.isInTransaction()||r("28");for(var t=this.transactionWrappers,n=e;n<t.length;n++){var o,a=t[n],s=this.wrapperInitData[n];try{o=!0,s!==i&&a.close&&a.close.call(this,s),o=!1}finally{if(o)try{this.closeAll(n+1)}catch(e){}}}this.wrapperInitData.length=0}};e.exports=o},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(20),o=n(62),a=n(34),s={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:a,button:function(e){var t=e.button;return"which"in e?t:2===t?2:4===t?1:0},buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},pageX:function(e){return"pageX"in e?e.pageX:e.clientX+o.currentScrollLeft},pageY:function(e){return"pageY"in e?e.pageY:e.clientY+o.currentScrollTop}};i.augmentClass(r,s),e.exports=r},function(e,t,n){"use strict";var r,i=n(5),o=n(36),a=/^[ \r\n\t\f]/,s=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,c=n(37),u=c(function(e,t){if(e.namespaceURI!==o.svg||"innerHTML"in e)e.innerHTML=t;else{r=r||document.createElement("div"),r.innerHTML="<svg>"+t+"</svg>";for(var n=r.firstChild;n.firstChild;)e.appendChild(n.firstChild)}});if(i.canUseDOM){var l=document.createElement("div");l.innerHTML=" ",""===l.innerHTML&&(u=function(e,t){if(e.parentNode&&e.parentNode.replaceChild(e,e),a.test(t)||"<"===t[0]&&s.test(t)){e.innerHTML=String.fromCharCode(65279)+t;var n=e.firstChild;1===n.data.length?e.removeChild(n):n.deleteData(0,1)}else e.innerHTML=t}),l=null}e.exports=u},function(e,t,n){"use strict";function r(e){var t=""+e,n=o.exec(t);if(!n)return t;var r,i="",a=0,s=0;for(a=n.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 39:r="&#x27;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}s!==a&&(i+=t.substring(s,a)),s=a+1,i+=r}return s!==a?i+t.substring(s,a):i}function i(e){return"boolean"===typeof e||"number"===typeof e?""+e:r(e)}var o=/["'&<>]/;e.exports=i},function(e,t,n){"use strict";function r(e){return Object.prototype.hasOwnProperty.call(e,m)||(e[m]=d++,h[e[m]]={}),h[e[m]]}var i,o=n(3),a=n(29),s=n(136),c=n(62),u=n(137),l=n(33),h={},p=!1,d=0,f={topAbort:"abort",topAnimationEnd:u("animationend")||"animationend",topAnimationIteration:u("animationiteration")||"animationiteration",topAnimationStart:u("animationstart")||"animationstart",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:u("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},m="_reactListenersID"+String(Math.random()).slice(2),g=o({},s,{ReactEventListener:null,injection:{injectReactEventListener:function(e){e.setHandleTopLevel(g.handleTopLevel),g.ReactEventListener=e}},setEnabled:function(e){g.ReactEventListener&&g.ReactEventListener.setEnabled(e)},isEnabled:function(){return!(!g.ReactEventListener||!g.ReactEventListener.isEnabled())},listenTo:function(e,t){for(var n=t,i=r(n),o=a.registrationNameDependencies[e],s=0;s<o.length;s++){var c=o[s];i.hasOwnProperty(c)&&i[c]||("topWheel"===c?l("wheel")?g.ReactEventListener.trapBubbledEvent("topWheel","wheel",n):l("mousewheel")?g.ReactEventListener.trapBubbledEvent("topWheel","mousewheel",n):g.ReactEventListener.trapBubbledEvent("topWheel","DOMMouseScroll",n):"topScroll"===c?l("scroll",!0)?g.ReactEventListener.trapCapturedEvent("topScroll","scroll",n):g.ReactEventListener.trapBubbledEvent("topScroll","scroll",g.ReactEventListener.WINDOW_HANDLE):"topFocus"===c||"topBlur"===c?(l("focus",!0)?(g.ReactEventListener.trapCapturedEvent("topFocus","focus",n),g.ReactEventListener.trapCapturedEvent("topBlur","blur",n)):l("focusin")&&(g.ReactEventListener.trapBubbledEvent("topFocus","focusin",n),g.ReactEventListener.trapBubbledEvent("topBlur","focusout",n)),i.topBlur=!0,i.topFocus=!0):f.hasOwnProperty(c)&&g.ReactEventListener.trapBubbledEvent(c,f[c],n),i[c]=!0)}},trapBubbledEvent:function(e,t,n){return g.ReactEventListener.trapBubbledEvent(e,t,n)},trapCapturedEvent:function(e,t,n){return g.ReactEventListener.trapCapturedEvent(e,t,n)},supportsEventPageXY:function(){if(!document.createEvent)return!1;var e=document.createEvent("MouseEvent");return null!=e&&"pageX"in e},ensureScrollValueMonitoring:function(){if(void 0===i&&(i=g.supportsEventPageXY()),!i&&!p){var e=c.refreshScrollValues;g.ReactEventListener.monitorScrollValue(e),p=!0}}});e.exports=g},function(e,t,n){"use strict";function r(){if(s)for(var e in c){var t=c[e],n=s.indexOf(e);if(n>-1||a("96",e),!u.plugins[n]){t.extractEvents||a("97",e),u.plugins[n]=t;var r=t.eventTypes;for(var o in r)i(r[o],t,o)||a("98",o,e)}}}function i(e,t,n){u.eventNameDispatchConfigs.hasOwnProperty(n)&&a("99",n),u.eventNameDispatchConfigs[n]=e;var r=e.phasedRegistrationNames;if(r){for(var i in r)if(r.hasOwnProperty(i)){var s=r[i];o(s,t,n)}return!0}return!!e.registrationName&&(o(e.registrationName,t,n),!0)}function o(e,t,n){u.registrationNameModules[e]&&a("100",e),u.registrationNameModules[e]=t,u.registrationNameDependencies[e]=t.eventTypes[n].dependencies}var a=n(2),s=(n(0),null),c={},u={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(e){s&&a("101"),s=Array.prototype.slice.call(e),r()},injectEventPluginsByName:function(e){var t=!1;for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];c.hasOwnProperty(n)&&c[n]===i||(c[n]&&a("102",n),c[n]=i,t=!0)}t&&r()},getPluginModuleForEvent:function(e){var t=e.dispatchConfig;if(t.registrationName)return u.registrationNameModules[t.registrationName]||null;if(void 0!==t.phasedRegistrationNames){var n=t.phasedRegistrationNames;for(var r in n)if(n.hasOwnProperty(r)){var i=u.registrationNameModules[n[r]];if(i)return i}}return null},_resetEventPlugins:function(){s=null;for(var e in c)c.hasOwnProperty(e)&&delete c[e];u.plugins.length=0;var t=u.eventNameDispatchConfigs;for(var n in t)t.hasOwnProperty(n)&&delete t[n];var r=u.registrationNameModules;for(var i in r)r.hasOwnProperty(i)&&delete r[i]}};e.exports=u},function(e,t,n){"use strict";function r(e){return"topMouseUp"===e||"topTouchEnd"===e||"topTouchCancel"===e}function i(e){return"topMouseMove"===e||"topTouchMove"===e}function o(e){return"topMouseDown"===e||"topTouchStart"===e}function a(e,t,n,r){var i=e.type||"unknown-event";e.currentTarget=v.getNodeFromInstance(r),t?m.invokeGuardedCallbackWithCatch(i,n,e):m.invokeGuardedCallback(i,n,e),e.currentTarget=null}function s(e,t){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var i=0;i<n.length&&!e.isPropagationStopped();i++)a(e,t,n[i],r[i]);else n&&a(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null}function c(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t)){for(var r=0;r<t.length&&!e.isPropagationStopped();r++)if(t[r](e,n[r]))return n[r]}else if(t&&t(e,n))return n;return null}function u(e){var t=c(e);return e._dispatchInstances=null,e._dispatchListeners=null,t}function l(e){var t=e._dispatchListeners,n=e._dispatchInstances;Array.isArray(t)&&f("103"),e.currentTarget=t?v.getNodeFromInstance(n):null;var r=t?t(e):null;return e.currentTarget=null,e._dispatchListeners=null,e._dispatchInstances=null,r}function h(e){return!!e._dispatchListeners}var p,d,f=n(2),m=n(31),g=(n(0),n(1),{injectComponentTree:function(e){p=e},injectTreeTraversal:function(e){d=e}}),v={isEndish:r,isMoveish:i,isStartish:o,executeDirectDispatch:l,executeDispatchesInOrder:s,executeDispatchesInOrderStopAtTrue:u,hasDispatches:h,getInstanceFromNode:function(e){return p.getInstanceFromNode(e)},getNodeFromInstance:function(e){return p.getNodeFromInstance(e)},isAncestor:function(e,t){return d.isAncestor(e,t)},getLowestCommonAncestor:function(e,t){return d.getLowestCommonAncestor(e,t)},getParentInstance:function(e){return d.getParentInstance(e)},traverseTwoPhase:function(e,t,n){return d.traverseTwoPhase(e,t,n)},traverseEnterLeave:function(e,t,n,r,i){return d.traverseEnterLeave(e,t,n,r,i)},injection:g};e.exports=v},function(e,t,n){"use strict";function r(e,t,n){try{t(n)}catch(e){null===i&&(i=e)}}var i=null,o={invokeGuardedCallback:r,invokeGuardedCallbackWithCatch:r,rethrowCaughtError:function(){if(i){var e=i;throw i=null,e}}};e.exports=o},function(e,t,n){"use strict";function r(e){var t=e.target||e.srcElement||window;return t.correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}e.exports=r},function(e,t,n){"use strict";function r(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,r=n in document;if(!r){var a=document.createElement("div");a.setAttribute(n,"return;"),r="function"===typeof a[n]}return!r&&i&&"wheel"===e&&(r=document.implementation.hasFeature("Events.wheel","3.0")),r}var i,o=n(5);o.canUseDOM&&(i=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("","")),e.exports=r},function(e,t,n){"use strict";function r(e){var t=this,n=t.nativeEvent;if(n.getModifierState)return n.getModifierState(e);var r=o[e];return!!r&&!!n[r]}function i(e){return r}var o={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};e.exports=i},function(e,t,n){"use strict";function r(e,t){return Array.isArray(t)&&(t=t[1]),t?t.nextSibling:e.firstChild}function i(e,t,n){l.insertTreeBefore(e,t,n)}function o(e,t,n){Array.isArray(t)?s(e,t[0],t[1],n):m(e,t,n)}function a(e,t){if(Array.isArray(t)){var n=t[1];t=t[0],c(e,t,n),e.removeChild(n)}e.removeChild(t)}function s(e,t,n,r){for(var i=t;;){var o=i.nextSibling;if(m(e,i,r),i===n)break;i=o}}function c(e,t,n){for(;;){var r=t.nextSibling;if(r===n)break;e.removeChild(r)}}function u(e,t,n){var r=e.parentNode,i=e.nextSibling;i===t?n&&m(r,document.createTextNode(n),i):n?(f(i,n),c(r,i,t)):c(r,e,t)}var l=n(16),h=n(121),p=(n(4),n(7),n(37)),d=n(26),f=n(63),m=p(function(e,t,n){e.insertBefore(t,n)}),g=h.dangerouslyReplaceNodeWithMarkup,v={dangerouslyReplaceNodeWithMarkup:g,replaceDelimitedText:u,processUpdates:function(e,t){for(var n=0;n<t.length;n++){var s=t[n];switch(s.type){case"INSERT_MARKUP":i(e,s.content,r(e,s.afterNode));break;case"MOVE_EXISTING":o(e,s.fromNode,r(e,s.afterNode));break;case"SET_MARKUP":d(e,s.content);break;case"TEXT_CONTENT":f(e,s.content);break;case"REMOVE_NODE":a(e,s.fromNode)}}}};e.exports=v},function(e,t,n){"use strict";var r={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};e.exports=r},function(e,t,n){"use strict";var r=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,i)})}:e};e.exports=r},function(e,t,n){"use strict";function r(e){null!=e.checkedLink&&null!=e.valueLink&&s("87")}function i(e){r(e),(null!=e.value||null!=e.onChange)&&s("88")}function o(e){r(e),(null!=e.checked||null!=e.onChange)&&s("89")}function a(e){if(e){var t=e.getName();if(t)return" Check the render method of `"+t+"`."}return""}var s=n(2),c=n(139),u=n(52),l=n(12),h=u(l.isValidElement),p=(n(0),n(1),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),d={value:function(e,t,n){return!e[t]||p[e.type]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(e,t,n){return!e[t]||e.onChange||e.readOnly||e.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:h.func},f={},m={checkPropTypes:function(e,t,n){for(var r in d){if(d.hasOwnProperty(r))var i=d[r](t,r,e,"prop",null,c);if(i instanceof Error&&!(i.message in f)){f[i.message]=!0;a(n)}}},getValue:function(e){return e.valueLink?(i(e),e.valueLink.value):e.value},getChecked:function(e){return e.checkedLink?(o(e),e.checkedLink.value):e.checked},executeOnChange:function(e,t){return e.valueLink?(i(e),e.valueLink.requestChange(t.target.value)):e.checkedLink?(o(e),e.checkedLink.requestChange(t.target.checked)):e.onChange?e.onChange.call(void 0,t):void 0}};e.exports=m},function(e,t,n){"use strict";var r=n(2),i=(n(0),!1),o={replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(e){i&&r("104"),o.replaceNodeWithMarkup=e.replaceNodeWithMarkup,o.processChildrenUpdates=e.processChildrenUpdates,i=!0}}};e.exports=o},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function i(e,t){if(r(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!o.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var o=Object.prototype.hasOwnProperty;e.exports=i},function(e,t,n){"use strict";function r(e,t){var n=null===e||!1===e,r=null===t||!1===t;if(n||r)return n===r;var i=typeof e,o=typeof t;return"string"===i||"number"===i?"string"===o||"number"===o:"object"===o&&e.type===t.type&&e.key===t.key}e.exports=r},function(e,t,n){"use strict";function r(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function i(e){var t=/(=0|=2)/g,n={"=0":"=","=2":":"};return(""+("."===e[0]&&"$"===e[1]?e.substring(2):e.substring(1))).replace(t,function(e){return n[e]})}var o={escape:r,unescape:i};e.exports=o},function(e,t,n){"use strict";function r(e){c.enqueueUpdate(e)}function i(e){var t=typeof e;if("object"!==t)return t;var n=e.constructor&&e.constructor.name||t,r=Object.keys(e);return r.length>0&&r.length<20?n+" (keys: "+r.join(", ")+")":n}function o(e,t){var n=s.get(e);if(!n){return null}return n}var a=n(2),s=(n(9),n(21)),c=(n(7),n(8)),u=(n(0),n(1),{isMounted:function(e){var t=s.get(e);return!!t&&!!t._renderedComponent},enqueueCallback:function(e,t,n){u.validateCallback(t,n);var i=o(e);if(!i)return null;i._pendingCallbacks?i._pendingCallbacks.push(t):i._pendingCallbacks=[t],r(i)},enqueueCallbackInternal:function(e,t){e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t],r(e)},enqueueForceUpdate:function(e){var t=o(e,"forceUpdate");t&&(t._pendingForceUpdate=!0,r(t))},enqueueReplaceState:function(e,t,n){var i=o(e,"replaceState");i&&(i._pendingStateQueue=[t],i._pendingReplaceState=!0,void 0!==n&&null!==n&&(u.validateCallback(n,"replaceState"),i._pendingCallbacks?i._pendingCallbacks.push(n):i._pendingCallbacks=[n]),r(i))},enqueueSetState:function(e,t){var n=o(e,"setState");if(n){(n._pendingStateQueue||(n._pendingStateQueue=[])).push(t),r(n)}},enqueueElementInternal:function(e,t,n){e._pendingElement=t,e._context=n,r(e)},validateCallback:function(e,t){e&&"function"!==typeof e&&a("122",t,i(e))}});e.exports=u},function(e,t,n){"use strict";var r=(n(3),n(6)),i=(n(1),r);e.exports=i},function(e,t,n){"use strict";function r(e){var t,n=e.keyCode;return"charCode"in e?0===(t=e.charCode)&&13===n&&(t=13):t=n,t>=32||13===t?t:0}e.exports=r},function(e,t,n){"use strict";function r(){}function i(e,t){this.x=e||0,this.y=t||0}function o(e,t,n,r,a,s,c,u,l,h){Object.defineProperty(this,"id",{value:Ms++}),this.uuid=Es.generateUUID(),this.name="",this.image=void 0!==e?e:o.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:o.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:ya,this.wrapT=void 0!==r?r:ya,this.magFilter=void 0!==a?a:Ea,this.minFilter=void 0!==s?s:Ta,this.anisotropy=void 0!==l?l:1,this.format=void 0!==c?c:za,this.type=void 0!==u?u:Sa,this.offset=new i(0,0),this.repeat=new i(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==h?h:ds,this.version=0,this.onUpdate=null}function a(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1}function s(e,t,n){this.uuid=Es.generateUUID(),this.width=e,this.height=t,this.scissor=new a(0,0,e,t),this.scissorTest=!1,this.viewport=new a(0,0,e,t),n=n||{},void 0===n.minFilter&&(n.minFilter=Ea),this.texture=new o(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function c(e,t,n){s.call(this,e,t,n),this.activeCubeFace=0,this.activeMipMapLevel=0}function u(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1}function l(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}function h(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function p(e,t,n,r,i,a,s,c,u,l,h,p){o.call(this,null,a,s,c,u,l,r,i,h,p),this.image={data:e,width:t,height:n},this.magFilter=void 0!==u?u:xa,this.minFilter=void 0!==l?l:xa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function d(e,t,n,r,i,a,s,c,u,l){e=void 0!==e?e:[],t=void 0!==t?t:la,o.call(this,e,t,n,r,i,a,s,c,u,l),this.flipY=!1}function f(){this.seq=[],this.map={}}function m(e,t,n){var r=e[0];if(r<=0||r>0)return e;var i=t*n,o=As[i];if(void 0===o&&(o=new Float32Array(i),As[i]=o),0!==t){r.toArray(o,0);for(var a=1,s=0;a!==t;++a)s+=n,e[a].toArray(o,s)}return o}function g(e,t){var n=Cs[t];void 0===n&&(n=new Int32Array(t),Cs[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocTextureUnit();return n}function v(e,t){e.uniform1f(this.addr,t)}function y(e,t){e.uniform1i(this.addr,t)}function b(e,t){void 0===t.x?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)}function x(e,t){void 0!==t.x?e.uniform3f(this.addr,t.x,t.y,t.z):void 0!==t.r?e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3fv(this.addr,t)}function _(e,t){void 0===t.x?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)}function w(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)}function E(e,t){void 0===t.elements?e.uniformMatrix3fv(this.addr,!1,t):(Ps.set(t.elements),e.uniformMatrix3fv(this.addr,!1,Ps))}function M(e,t){void 0===t.elements?e.uniformMatrix4fv(this.addr,!1,t):(Rs.set(t.elements),e.uniformMatrix4fv(this.addr,!1,Rs))}function T(e,t,n){var r=n.allocTextureUnit();e.uniform1i(this.addr,r),n.setTexture2D(t||Ts,r)}function S(e,t,n){var r=n.allocTextureUnit();e.uniform1i(this.addr,r),n.setTextureCube(t||Ss,r)}function A(e,t){e.uniform2iv(this.addr,t)}function C(e,t){e.uniform3iv(this.addr,t)}function R(e,t){e.uniform4iv(this.addr,t)}function P(e){switch(e){case 5126:return v;case 35664:return b;case 35665:return x;case 35666:return _;case 35674:return w;case 35675:return E;case 35676:return M;case 35678:return T;case 35680:return S;case 5124:case 35670:return y;case 35667:case 35671:return A;case 35668:case 35672:return C;case 35669:case 35673:return R}}function L(e,t){e.uniform1fv(this.addr,t)}function N(e,t){e.uniform1iv(this.addr,t)}function I(e,t){e.uniform2fv(this.addr,m(t,this.size,2))}function D(e,t){e.uniform3fv(this.addr,m(t,this.size,3))}function O(e,t){e.uniform4fv(this.addr,m(t,this.size,4))}function U(e,t){e.uniformMatrix2fv(this.addr,!1,m(t,this.size,4))}function B(e,t){e.uniformMatrix3fv(this.addr,!1,m(t,this.size,9))}function F(e,t){e.uniformMatrix4fv(this.addr,!1,m(t,this.size,16))}function k(e,t,n){var r=t.length,i=g(n,r);e.uniform1iv(this.addr,i);for(var o=0;o!==r;++o)n.setTexture2D(t[o]||Ts,i[o])}function z(e,t,n){var r=t.length,i=g(n,r);e.uniform1iv(this.addr,i);for(var o=0;o!==r;++o)n.setTextureCube(t[o]||Ss,i[o])}function j(e){switch(e){case 5126:return L;case 35664:return I;case 35665:return D;case 35666:return O;case 35674:return U;case 35675:return B;case 35676:return F;case 35678:return k;case 35680:return z;case 5124:case 35670:return N;case 35667:case 35671:return A;case 35668:case 35672:return C;case 35669:case 35673:return R}}function G(e,t,n){this.id=e,this.addr=n,this.setValue=P(t.type)}function V(e,t,n){this.id=e,this.addr=n,this.size=t.size,this.setValue=j(t.type)}function H(e){this.id=e,f.call(this)}function W(e,t){e.seq.push(t),e.map[t.id]=t}function X(e,t,n){var r=e.name,i=r.length;for(Ls.lastIndex=0;;){var o=Ls.exec(r),a=Ls.lastIndex,s=o[1],c="]"===o[2],u=o[3];if(c&&(s|=0),void 0===u||"["===u&&a+2===i){W(n,void 0===u?new G(s,e,t):new V(s,e,t));break}var l=n.map,h=l[s];void 0===h&&(h=new H(s),W(n,h)),n=h}}function q(e,t,n){f.call(this),this.renderer=n;for(var r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),i=0;i<r;++i){var o=e.getActiveUniform(t,i),a=o.name;X(o,e.getUniformLocation(t,a),this)}}function Y(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}function Z(e,t){this.min=void 0!==e?e:new i(1/0,1/0),this.max=void 0!==t?t:new i(-1/0,-1/0)}function K(e,t){function n(){var e=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),t=new Uint16Array([0,1,2,0,2,3]);o=f.createBuffer(),a=f.createBuffer(),f.bindBuffer(f.ARRAY_BUFFER,o),f.bufferData(f.ARRAY_BUFFER,e,f.STATIC_DRAW),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,a),f.bufferData(f.ELEMENT_ARRAY_BUFFER,t,f.STATIC_DRAW),p=f.createTexture(),d=f.createTexture(),m.bindTexture(f.TEXTURE_2D,p),f.texImage2D(f.TEXTURE_2D,0,f.RGB,16,16,0,f.RGB,f.UNSIGNED_BYTE,null),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),m.bindTexture(f.TEXTURE_2D,d),f.texImage2D(f.TEXTURE_2D,0,f.RGBA,16,16,0,f.RGBA,f.UNSIGNED_BYTE,null),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),s={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},c=r(s),u={vertex:f.getAttribLocation(c,"position"),uv:f.getAttribLocation(c,"uv")},h={renderType:f.getUniformLocation(c,"renderType"),map:f.getUniformLocation(c,"map"),occlusionMap:f.getUniformLocation(c,"occlusionMap"),opacity:f.getUniformLocation(c,"opacity"),color:f.getUniformLocation(c,"color"),scale:f.getUniformLocation(c,"scale"),rotation:f.getUniformLocation(c,"rotation"),screenPosition:f.getUniformLocation(c,"screenPosition")}}function r(t){var n=f.createProgram(),r=f.createShader(f.FRAGMENT_SHADER),i=f.createShader(f.VERTEX_SHADER),o="precision "+e.getPrecision()+" float;\n";return f.shaderSource(r,o+t.fragmentShader),f.shaderSource(i,o+t.vertexShader),f.compileShader(r),f.compileShader(i),f.attachShader(n,r),f.attachShader(n,i),f.linkProgram(n),n}var o,a,s,c,u,h,p,d,f=e.context,m=e.state;this.render=function(r,s,g){if(0!==t.length){var v=new l,y=g.w/g.z,b=.5*g.z,x=.5*g.w,_=16/g.w,w=new i(_*y,_),E=new l(1,1,0),M=new i(1,1),T=new Z;T.min.set(g.x,g.y),T.max.set(g.x+(g.z-16),g.y+(g.w-16)),void 0===c&&n(),f.useProgram(c),m.initAttributes(),m.enableAttribute(u.vertex),m.enableAttribute(u.uv),m.disableUnusedAttributes(),f.uniform1i(h.occlusionMap,0),f.uniform1i(h.map,1),f.bindBuffer(f.ARRAY_BUFFER,o),f.vertexAttribPointer(u.vertex,2,f.FLOAT,!1,16,0),f.vertexAttribPointer(u.uv,2,f.FLOAT,!1,16,8),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,a),m.disable(f.CULL_FACE),m.buffers.depth.setMask(!1);for(var S=0,A=t.length;S<A;S++){_=16/g.w,w.set(_*y,_);var C=t[S];if(v.set(C.matrixWorld.elements[12],C.matrixWorld.elements[13],C.matrixWorld.elements[14]),v.applyMatrix4(s.matrixWorldInverse),v.applyMatrix4(s.projectionMatrix),E.copy(v),M.x=g.x+E.x*b+b-8,M.y=g.y+E.y*x+x-8,!0===T.containsPoint(M)){m.activeTexture(f.TEXTURE0),m.bindTexture(f.TEXTURE_2D,null),m.activeTexture(f.TEXTURE1),m.bindTexture(f.TEXTURE_2D,p),f.copyTexImage2D(f.TEXTURE_2D,0,f.RGB,M.x,M.y,16,16,0),f.uniform1i(h.renderType,0),f.uniform2f(h.scale,w.x,w.y),f.uniform3f(h.screenPosition,E.x,E.y,E.z),m.disable(f.BLEND),m.enable(f.DEPTH_TEST),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),m.activeTexture(f.TEXTURE0),m.bindTexture(f.TEXTURE_2D,d),f.copyTexImage2D(f.TEXTURE_2D,0,f.RGBA,M.x,M.y,16,16,0),f.uniform1i(h.renderType,1),m.disable(f.DEPTH_TEST),m.activeTexture(f.TEXTURE1),m.bindTexture(f.TEXTURE_2D,p),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),C.positionScreen.copy(E),C.customUpdateCallback?C.customUpdateCallback(C):C.updateLensFlares(),f.uniform1i(h.renderType,2),m.enable(f.BLEND);for(var R=0,P=C.lensFlares.length;R<P;R++){var L=C.lensFlares[R];L.opacity>.001&&L.scale>.001&&(E.x=L.x,E.y=L.y,E.z=L.z,_=L.size*L.scale/g.w,w.x=_*y,w.y=_,f.uniform3f(h.screenPosition,E.x,E.y,E.z),f.uniform2f(h.scale,w.x,w.y),f.uniform1f(h.rotation,L.rotation),f.uniform1f(h.opacity,L.opacity),f.uniform3f(h.color,L.color.r,L.color.g,L.color.b),m.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst),e.setTexture2D(L.texture,1),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0))}}}m.enable(f.CULL_FACE),m.enable(f.DEPTH_TEST),m.buffers.depth.setMask(!0),e.resetGLState()}}}function J(e,t){function n(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),t=new Uint16Array([0,1,2,0,2,3]);a=f.createBuffer(),s=f.createBuffer(),f.bindBuffer(f.ARRAY_BUFFER,a),f.bufferData(f.ARRAY_BUFFER,e,f.STATIC_DRAW),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,s),f.bufferData(f.ELEMENT_ARRAY_BUFFER,t,f.STATIC_DRAW),c=r(),h={position:f.getAttribLocation(c,"position"),uv:f.getAttribLocation(c,"uv")},p={uvOffset:f.getUniformLocation(c,"uvOffset"),uvScale:f.getUniformLocation(c,"uvScale"),rotation:f.getUniformLocation(c,"rotation"),scale:f.getUniformLocation(c,"scale"),color:f.getUniformLocation(c,"color"),map:f.getUniformLocation(c,"map"),opacity:f.getUniformLocation(c,"opacity"),modelViewMatrix:f.getUniformLocation(c,"modelViewMatrix"),projectionMatrix:f.getUniformLocation(c,"projectionMatrix"),fogType:f.getUniformLocation(c,"fogType"),fogDensity:f.getUniformLocation(c,"fogDensity"),fogNear:f.getUniformLocation(c,"fogNear"),fogFar:f.getUniformLocation(c,"fogFar"),fogColor:f.getUniformLocation(c,"fogColor"),alphaTest:f.getUniformLocation(c,"alphaTest")};var n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8,n.height=8;var i=n.getContext("2d");i.fillStyle="white",i.fillRect(0,0,8,8),d=new o(n),d.needsUpdate=!0}function r(){var t=f.createProgram(),n=f.createShader(f.VERTEX_SHADER),r=f.createShader(f.FRAGMENT_SHADER);return f.shaderSource(n,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),f.shaderSource(r,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),f.compileShader(n),f.compileShader(r),f.attachShader(t,n),f.attachShader(t,r),f.linkProgram(t),t}function i(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:t.id-e.id}var a,s,c,h,p,d,f=e.context,m=e.state,g=new l,v=new u,y=new l;this.render=function(r,o){if(0!==t.length){void 0===c&&n(),f.useProgram(c),m.initAttributes(),m.enableAttribute(h.position),m.enableAttribute(h.uv),m.disableUnusedAttributes(),m.disable(f.CULL_FACE),m.enable(f.BLEND),f.bindBuffer(f.ARRAY_BUFFER,a),f.vertexAttribPointer(h.position,2,f.FLOAT,!1,16,0),f.vertexAttribPointer(h.uv,2,f.FLOAT,!1,16,8),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,s),f.uniformMatrix4fv(p.projectionMatrix,!1,o.projectionMatrix.elements),m.activeTexture(f.TEXTURE0),f.uniform1i(p.map,0);var u=0,l=0,b=r.fog;b?(f.uniform3f(p.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(f.uniform1f(p.fogNear,b.near),f.uniform1f(p.fogFar,b.far),f.uniform1i(p.fogType,1),u=1,l=1):b.isFogExp2&&(f.uniform1f(p.fogDensity,b.density),f.uniform1i(p.fogType,2),u=2,l=2)):(f.uniform1i(p.fogType,0),u=0,l=0);for(var x=0,_=t.length;x<_;x++){var w=t[x];w.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,w.matrixWorld),w.z=-w.modelViewMatrix.elements[14]}t.sort(i);for(var E=[],x=0,_=t.length;x<_;x++){var w=t[x],M=w.material;if(!1!==M.visible){f.uniform1f(p.alphaTest,M.alphaTest),f.uniformMatrix4fv(p.modelViewMatrix,!1,w.modelViewMatrix.elements),w.matrixWorld.decompose(g,v,y),E[0]=y.x,E[1]=y.y;var T=0;r.fog&&M.fog&&(T=l),u!==T&&(f.uniform1i(p.fogType,T),u=T),null!==M.map?(f.uniform2f(p.uvOffset,M.map.offset.x,M.map.offset.y),f.uniform2f(p.uvScale,M.map.repeat.x,M.map.repeat.y)):(f.uniform2f(p.uvOffset,0,0),f.uniform2f(p.uvScale,1,1)),f.uniform1f(p.opacity,M.opacity),f.uniform3f(p.color,M.color.r,M.color.g,M.color.b),f.uniform1f(p.rotation,M.rotation),f.uniform2fv(p.scale,E),m.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst),m.buffers.depth.setTest(M.depthTest),m.buffers.depth.setMask(M.depthWrite),M.map?e.setTexture2D(M.map,0):e.setTexture2D(d,0),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0)}}m.enable(f.CULL_FACE),e.resetGLState()}}}function Q(){Object.defineProperty(this,"id",{value:Bs++}),this.uuid=Es.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=So,this.side=vo,this.shading=_o,this.vertexColors=wo,this.opacity=1,this.transparent=!1,this.blendSrc=zo,this.blendDst=jo,this.blendEquation=Lo,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ko,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.needsUpdate=!0}function $(e){Q.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function ee(e){Q.call(this),this.type="MeshDepthMaterial",this.depthPacking=_s,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}function te(e,t){this.min=void 0!==e?e:new l(1/0,1/0,1/0),this.max=void 0!==t?t:new l(-1/0,-1/0,-1/0)}function ne(e,t){this.center=void 0!==e?e:new l,this.radius=void 0!==t?t:0}function re(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function ie(e,t){this.normal=void 0!==e?e:new l(1,0,0),this.constant=void 0!==t?t:0}function oe(e,t,n,r,i,o){this.planes=[void 0!==e?e:new ie,void 0!==t?t:new ie,void 0!==n?n:new ie,void 0!==r?r:new ie,void 0!==i?i:new ie,void 0!==o?o:new ie]}function ae(e,t,n,r){function o(t,n,r,i){var o=t.geometry,a=null,s=E,c=t.customDepthMaterial;if(r&&(s=M,c=t.customDistanceMaterial),c)a=c;else{var u=!1;n.morphTargets&&(o&&o.isBufferGeometry?u=o.morphAttributes&&o.morphAttributes.position&&o.morphAttributes.position.length>0:o&&o.isGeometry&&(u=o.morphTargets&&o.morphTargets.length>0)),t.isSkinnedMesh&&!1===n.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t);var l=t.isSkinnedMesh&&n.skinning,h=0;u&&(h|=x),l&&(h|=_),a=s[h]}if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){var p=a.uuid,d=n.uuid,f=T[p];void 0===f&&(f={},T[p]=f);var m=f[d];void 0===m&&(m=a.clone(),f[d]=m),a=m}a.visible=n.visible,a.wireframe=n.wireframe;var g=n.side;return B.renderSingleSided&&g==bo&&(g=vo),B.renderReverseSided&&(g===vo?g=yo:g===yo&&(g=vo)),a.side=g,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,r&&void 0!==a.uniforms.lightPos&&a.uniforms.lightPos.value.copy(i),a}function c(t,r,i,a){if(!1!==t.visible){if(t.layers.test(r.layers)&&(t.isMesh||t.isLine||t.isPoints)&&t.castShadow&&(!t.frustumCulled||d.intersectsObject(t))){t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld);var s=n.update(t),u=t.material;if(Array.isArray(u))for(var l=s.groups,h=0,p=l.length;h<p;h++){var f=l[h],m=u[f.materialIndex];if(m&&m.visible){var g=o(t,m,a,b);e.renderBufferDirect(i,null,s,g,t,f)}}else if(u.visible){var g=o(t,u,a,b);e.renderBufferDirect(i,null,s,g,t,null)}}for(var v=t.children,y=0,x=v.length;y<x;y++)c(v[y],r,i,a)}}var u=e.context,p=e.state,d=new oe,f=new h,m=t.shadows,g=new i,v=new i(r.maxTextureSize,r.maxTextureSize),y=new l,b=new l,x=1,_=2,w=1+(x|_),E=new Array(w),M=new Array(w),T={},S=[new l(1,0,0),new l(-1,0,0),new l(0,0,1),new l(0,0,-1),new l(0,1,0),new l(0,-1,0)],A=[new l(0,1,0),new l(0,1,0),new l(0,1,0),new l(0,1,0),new l(0,0,1),new l(0,0,-1)],C=[new a,new a,new a,new a,new a,new a],R=new ee;R.depthPacking=ws,R.clipping=!0;for(var P=Us.distanceRGBA,L=Ds.clone(P.uniforms),N=0;N!==w;++N){var I=0!==(N&x),D=0!==(N&_),O=R.clone();O.morphTargets=I,O.skinning=D,E[N]=O;var U=new $({defines:{USE_SHADOWMAP:""},uniforms:L,vertexShader:P.vertexShader,fragmentShader:P.fragmentShader,morphTargets:I,skinning:D,clipping:!0});M[N]=U}var B=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=mo,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(t,n){if(!1!==B.enabled&&(!1!==B.autoUpdate||!1!==B.needsUpdate)&&0!==m.length){p.disable(u.BLEND),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(var r,i,o=0,a=m.length;o<a;o++){var l=m[o],h=l.shadow;if(void 0!==h){var x=h.camera,_=h.matrix;if(b.setFromMatrixPosition(l.matrixWorld),x.position.copy(b),g.copy(h.mapSize),g.min(v),l&&l.isPointLight){r=6,i=!0;var w=g.x,E=g.y;C[0].set(2*w,E,w,E),C[1].set(0,E,w,E),C[2].set(3*w,E,w,E),C[3].set(w,E,w,E),C[4].set(3*w,0,w,E),C[5].set(w,0,w,E),g.x*=4,g.y*=2,_.makeTranslation(-b.x,-b.y,-b.z)}else r=1,i=!1,y.setFromMatrixPosition(l.target.matrixWorld),x.lookAt(y),x.updateMatrixWorld(),x.matrixWorldInverse.getInverse(x.matrixWorld),_.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),_.multiply(x.projectionMatrix),_.multiply(x.matrixWorldInverse);if(null===h.map){var M={minFilter:xa,magFilter:xa,format:za};h.map=new s(g.x,g.y,M),h.map.texture.name=l.name+".shadowMap",x.updateProjectionMatrix()}h.isSpotLightShadow&&h.update(l);var T=h.map;e.setRenderTarget(T),e.clear();for(var R=0;R<r;R++){if(i){y.copy(x.position),y.add(S[R]),x.up.copy(A[R]),x.lookAt(y),x.updateMatrixWorld(),x.matrixWorldInverse.getInverse(x.matrixWorld);var P=C[R];p.viewport(P)}f.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse),d.setFromMatrix(f),c(t,n,x,i)}}else console.warn("THREE.WebGLShadowMap:",l,"has no shadow.")}var L=e.getClearColor(),N=e.getClearAlpha();e.setClearColor(L,N),B.needsUpdate=!1}}}function se(e,t){this.origin=void 0!==e?e:new l,this.direction=void 0!==t?t:new l}function ce(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||ce.DefaultOrder}function ue(){this.mask=1}function le(){function e(){i.setFromEuler(r,!1)}function t(){r.setFromQuaternion(i,void 0,!1)}Object.defineProperty(this,"id",{value:Fs++}),this.uuid=Es.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=le.DefaultUp.clone();var n=new l,r=new ce,i=new u,o=new l(1,1,1);r.onChange(e),i.onChange(t),Object.defineProperties(this,{position:{enumerable:!0,value:n},rotation:{enumerable:!0,value:r},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:o},modelViewMatrix:{value:new h},normalMatrix:{value:new re}}),this.matrix=new h,this.matrixWorld=new h,this.matrixAutoUpdate=le.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ue,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={},this.onBeforeRender=function(){},this.onAfterRender=function(){}}function he(e,t){this.start=void 0!==e?e:new l,this.end=void 0!==t?t:new l}function pe(e,t,n){this.a=void 0!==e?e:new l,this.b=void 0!==t?t:new l,this.c=void 0!==n?n:new l}function de(e,t,n,r,i,o){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new l,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new Y,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==o?o:0}function fe(e){Q.call(this),this.type="MeshBasicMaterial",this.color=new Y(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ta,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}function me(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=Es.generateUUID(),this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function ge(e,t){me.call(this,new Int8Array(e),t)}function ve(e,t){me.call(this,new Uint8Array(e),t)}function ye(e,t){me.call(this,new Uint8ClampedArray(e),t)}function be(e,t){me.call(this,new Int16Array(e),t)}function xe(e,t){me.call(this,new Uint16Array(e),t)}function _e(e,t){me.call(this,new Int32Array(e),t)}function we(e,t){me.call(this,new Uint32Array(e),t)}function Ee(e,t){me.call(this,new Float32Array(e),t)}function Me(e,t){me.call(this,new Float64Array(e),t)}function Te(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Se(e){if(0===e.length)return-1/0;for(var t=e[0],n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}function Ae(){return ks++}function Ce(){Object.defineProperty(this,"id",{value:Ae()}),this.uuid=Es.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function Re(){Object.defineProperty(this,"id",{value:Ae()}),this.uuid=Es.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function Pe(e,t){le.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new Re,this.material=void 0!==t?t:new fe({color:16777215*Math.random()}),this.drawMode=ls,this.updateMorphTargets()}function Le(e,t,n,r,i,o){Ce.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:o},this.fromBufferGeometry(new Ne(e,t,n,r,i,o)),this.mergeVertices()}function Ne(e,t,n,r,i,o){function a(e,t,n,r,i,o,a,m,g,v,y){var b,x,_=o/g,w=a/v,E=o/2,M=a/2,T=m/2,S=g+1,A=v+1,C=0,R=0,P=new l;for(x=0;x<A;x++){var L=x*w-M;for(b=0;b<S;b++){var N=b*_-E;P[e]=N*r,P[t]=L*i,P[n]=T,u.push(P.x,P.y,P.z),P[e]=0,P[t]=0,P[n]=m>0?1:-1,h.push(P.x,P.y,P.z),p.push(b/g),p.push(1-x/v),C+=1}}for(x=0;x<v;x++)for(b=0;b<g;b++){var I=d+b+S*x,D=d+b+S*(x+1),O=d+(b+1)+S*(x+1),U=d+(b+1)+S*x;c.push(I,D,U),c.push(D,O,U),R+=6}s.addGroup(f,R,y),f+=R,d+=C}Re.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:o};var s=this;r=Math.floor(r)||1,i=Math.floor(i)||1,o=Math.floor(o)||1;var c=[],u=[],h=[],p=[],d=0,f=0;a("z","y","x",-1,-1,n,t,e,o,i,0),a("z","y","x",1,-1,n,t,-e,o,i,1),a("x","z","y",1,1,e,n,t,r,o,2),a("x","z","y",1,-1,e,n,-t,r,o,3),a("x","y","z",1,-1,e,t,n,r,i,4),a("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(c),this.addAttribute("position",new Ee(u,3)),this.addAttribute("normal",new Ee(h,3)),this.addAttribute("uv",new Ee(p,2))}function Ie(e,t,n,r){Ce.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new De(e,t,n,r)),this.mergeVertices()}function De(e,t,n,r){Re.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i,o,a=e/2,s=t/2,c=Math.floor(n)||1,u=Math.floor(r)||1,l=c+1,h=u+1,p=e/c,d=t/u,f=[],m=[],g=[],v=[];for(o=0;o<h;o++){var y=o*d-s;for(i=0;i<l;i++){var b=i*p-a;m.push(b,-y,0),g.push(0,0,1),v.push(i/c),v.push(1-o/u)}}for(o=0;o<u;o++)for(i=0;i<c;i++){var x=i+l*o,_=i+l*(o+1),w=i+1+l*(o+1),E=i+1+l*o;f.push(x,_,E),f.push(_,w,E)}this.setIndex(f),this.addAttribute("position",new Ee(m,3)),this.addAttribute("normal",new Ee(g,3)),this.addAttribute("uv",new Ee(v,2))}function Oe(){le.call(this),this.type="Camera",this.matrixWorldInverse=new h,this.projectionMatrix=new h}function Ue(e,t,n,r){Oe.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Be(e,t,n,r,i,o){Oe.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function Fe(e){function t(t,n){var r=t.array,i=t.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,o=e.createBuffer();e.bindBuffer(n,o),e.bufferData(n,r,i),t.onUploadCallback();var a=e.FLOAT;return r instanceof Float32Array?a=e.FLOAT:r instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array"):r instanceof Uint16Array?a=e.UNSIGNED_SHORT:r instanceof Int16Array?a=e.SHORT:r instanceof Uint32Array?a=e.UNSIGNED_INT:r instanceof Int32Array?a=e.INT:r instanceof Int8Array?a=e.BYTE:r instanceof Uint8Array&&(a=e.UNSIGNED_BYTE),{buffer:o,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}function n(t,n,r){var i=n.array,o=n.updateRange;e.bindBuffer(r,t),!1===n.dynamic?e.bufferData(r,i,e.STATIC_DRAW):-1===o.count?e.bufferSubData(r,0,i):0===o.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(r,o.offset*i.BYTES_PER_ELEMENT,i.subarray(o.offset,o.offset+o.count)),o.count=0)}function r(e){return e.isInterleavedBufferAttribute&&(e=e.data),a[e.uuid]}function i(t){var n=a[t.uuid];n&&(e.deleteBuffer(n.buffer),delete a[t.uuid])}function o(e,r){e.isInterleavedBufferAttribute&&(e=e.data);var i=a[e.uuid];void 0===i?a[e.uuid]=t(e,r):i.version<e.version&&(n(i.buffer,e,r),i.version=e.version)}var a={};return{get:r,remove:i,update:o}}function ke(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program&&t.program&&e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function ze(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function je(){function e(){o=-1,s=-1}function t(e,t,n,r,c){var u,l;n.transparent?(u=a,l=++s):(u=i,l=++o);var h=u[l];h?(h.id=e.id,h.object=e,h.geometry=t,h.material=n,h.program=n.program,h.renderOrder=e.renderOrder,h.z=r,h.group=c):(h={id:e.id,object:e,geometry:t,material:n,program:n.program,renderOrder:e.renderOrder,z:r,group:c},u.push(h))}function n(){i.length=o+1,a.length=s+1}function r(){i.sort(ke),a.sort(ze)}var i=[],o=-1,a=[],s=-1;return{opaque:i,transparent:a,init:e,push:t,finish:n,sort:r}}function Ge(){function e(e,t){var r=e.id+","+t.id,i=n[r];return void 0===i&&(i=new je,n[r]=i),i}function t(){n={}}var n={};return{get:e,dispose:t}}function Ve(e,t,n){function r(e){s=e}function i(n){n.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(c=e.UNSIGNED_INT,u=4):n.array instanceof Uint16Array?(c=e.UNSIGNED_SHORT,u=2):(c=e.UNSIGNED_BYTE,u=1)}function o(t,r){e.drawElements(s,r,c,t*u),n.calls++,n.vertices+=r,s===e.TRIANGLES&&(n.faces+=r/3)}function a(r,i,o){var a=t.get("ANGLE_instanced_arrays");if(null===a)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");a.drawElementsInstancedANGLE(s,o,c,i*u,r.maxInstancedCount),n.calls++,n.vertices+=o*r.maxInstancedCount,s===e.TRIANGLES&&(n.faces+=r.maxInstancedCount*o/3)}var s,c,u;this.setMode=r,this.setIndex=i,this.render=o,this.renderInstances=a}function He(e,t,n){function r(e){a=e}function i(t,r){e.drawArrays(a,t,r),n.calls++,n.vertices+=r,a===e.TRIANGLES&&(n.faces+=r/3)}function o(r,i,o){var s=t.get("ANGLE_instanced_arrays");if(null===s)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var c=r.attributes.position;c.isInterleavedBufferAttribute?(o=c.data.count,s.drawArraysInstancedANGLE(a,0,o,r.maxInstancedCount)):s.drawArraysInstancedANGLE(a,i,o,r.maxInstancedCount),n.calls++,n.vertices+=o*r.maxInstancedCount,a===e.TRIANGLES&&(n.faces+=r.maxInstancedCount*o/3)}var a;this.setMode=r,this.render=i,this.renderInstances=o}function We(e,t,n){function r(e){var i=e.target,o=s[i.id];null!==o.index&&t.remove(o.index);for(var a in o.attributes)t.remove(o.attributes[a]);i.removeEventListener("dispose",r),delete s[i.id];var u=c[i.id];u&&(t.remove(u),delete c[i.id]),u=c[o.id],u&&(t.remove(u),delete c[o.id]),n.geometries--}function i(e,t){var i=s[t.id];return i||(t.addEventListener("dispose",r),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new Re).setFromObject(e)),i=t._bufferGeometry),s[t.id]=i,n.geometries++,i)}function o(n){var r=n.index,i=n.attributes;null!==r&&t.update(r,e.ELEMENT_ARRAY_BUFFER);for(var o in i)t.update(i[o],e.ARRAY_BUFFER);var a=n.morphAttributes;for(var o in a)for(var s=a[o],c=0,u=s.length;c<u;c++)t.update(s[c],e.ARRAY_BUFFER)}function a(n){var r=c[n.id];if(r)return r;var i=[],o=n.index,a=n.attributes;if(null!==o)for(var s=o.array,u=0,l=s.length;u<l;u+=3){var h=s[u+0],p=s[u+1],d=s[u+2];i.push(h,p,p,d,d,h)}else for(var s=a.position.array,u=0,l=s.length/3-1;u<l;u+=3){var h=u+0,p=u+1,d=u+2;i.push(h,p,p,d,d,h)}return r=new(Se(i)>65535?we:xe)(i,1),t.update(r,e.ELEMENT_ARRAY_BUFFER),c[n.id]=r,r}var s={},c={};return{get:i,update:o,getWireframeAttribute:a}}function Xe(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new l,color:new Y,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"SpotLight":n={position:new l,direction:new l,color:new Y,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"PointLight":n={position:new l,color:new Y,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"HemisphereLight":n={direction:new l,skyColor:new Y,groundColor:new Y};break;case"RectAreaLight":n={color:new Y,position:new l,halfWidth:new l,halfHeight:new l}}return e[t.id]=n,n}}}function qe(e,t,n){function r(e){var r=n.frame,i=e.geometry,a=t.get(e,i);return o[a.id]!==r&&(i.isGeometry&&a.updateFromObject(e),t.update(a),o[a.id]=r),a}function i(){o={}}var o={};return{update:r,clear:i}}function Ye(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}function Ze(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),!1===e.getShaderParameter(r,e.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(r)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t===e.VERTEX_SHADER?"vertex":"fragment",e.getShaderInfoLog(r),Ye(n)),r}function Ke(e){switch(e){case ds:return["Linear","( value )"];case fs:return["sRGB","( value )"];case gs:return["RGBE","( value )"];case ys:return["RGBM","( value, 7.0 )"];case bs:return["RGBM","( value, 16.0 )"];case xs:return["RGBD","( value, 256.0 )"];case ms:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function Je(e,t){var n=Ke(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Qe(e,t){var n=Ke(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function $e(e,t){var n;switch(t){case oa:n="Linear";break;case aa:n="Reinhard";break;case sa:n="Uncharted2";break;case ca:n="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function et(e,t,n){return e=e||{},[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(rt).join("\n")}function tt(e){var t=[];for(var n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}function nt(e,t,n){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),o=0;o<i;o++){var a=e.getActiveAttrib(t,o),s=a.name;r[s]=e.getAttribLocation(t,s)}return r}function rt(e){return""!==e}function it(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function ot(e){function t(e,t){var n=Os[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return ot(n)}var n=/^[ \t]*#include +<([\w\d.]+)>/gm;return e.replace(n,t)}function at(e){function t(e,t,n,r){for(var i="",o=parseInt(t);o<parseInt(n);o++)i+=r.replace(/\[ i \]/g,"[ "+o+" ]");return i}var n=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return e.replace(n,t)}function st(e,t,n,r){var i=e.context,o=n.extensions,a=n.defines,s=n.__webglShader.vertexShader,c=n.__webglShader.fragmentShader,u="SHADOWMAP_TYPE_BASIC";r.shadowMapType===mo?u="SHADOWMAP_TYPE_PCF":r.shadowMapType===go&&(u="SHADOWMAP_TYPE_PCF_SOFT");var l="ENVMAP_TYPE_CUBE",h="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(r.envMap){switch(n.envMap.mapping){case la:case ha:l="ENVMAP_TYPE_CUBE";break;case ma:case ga:l="ENVMAP_TYPE_CUBE_UV";break;case pa:case da:l="ENVMAP_TYPE_EQUIREC";break;case fa:l="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case ha:case da:h="ENVMAP_MODE_REFRACTION"}switch(n.combine){case ta:p="ENVMAP_BLENDING_MULTIPLY";break;case na:p="ENVMAP_BLENDING_MIX";break;case ra:p="ENVMAP_BLENDING_ADD"}}var d,f,m=e.gammaFactor>0?e.gammaFactor:1,g=et(o,r,e.extensions),v=tt(a),y=i.createProgram();n.isRawShaderMaterial?(d=[v,"\n"].filter(rt).join("\n"),f=[g,v,"\n"].filter(rt).join("\n")):(d=["precision "+r.precision+" float;","precision "+r.precision+" int;","#define SHADER_NAME "+n.__webglShader.name,v,r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+h:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexColors?"#define USE_COLOR":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+r.numClippingPlanes,r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+u:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(rt).join("\n"),f=[g,"precision "+r.precision+" float;","precision "+r.precision+" int;","#define SHADER_NAME "+n.__webglShader.name,v,r.alphaTest?"#define ALPHATEST "+r.alphaTest:"","#define GAMMA_FACTOR "+m,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+l:"",r.envMap?"#define "+h:"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexColors?"#define USE_COLOR":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+r.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(r.numClippingPlanes-r.numClipIntersection),r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+u:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",r.envMap&&e.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",r.toneMapping!==ia?"#define TONE_MAPPING":"",r.toneMapping!==ia?Os.tonemapping_pars_fragment:"",r.toneMapping!==ia?$e("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.outputEncoding||r.mapEncoding||r.envMapEncoding||r.emissiveMapEncoding?Os.encodings_pars_fragment:"",r.mapEncoding?Je("mapTexelToLinear",r.mapEncoding):"",r.envMapEncoding?Je("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMapEncoding?Je("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.outputEncoding?Qe("linearToOutputTexel",r.outputEncoding):"",r.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(rt).join("\n")),s=ot(s,r),s=it(s,r),c=ot(c,r),c=it(c,r),n.isShaderMaterial||(s=at(s),c=at(c));var b=d+s,x=f+c,_=Ze(i,i.VERTEX_SHADER,b),w=Ze(i,i.FRAGMENT_SHADER,x);i.attachShader(y,_),i.attachShader(y,w),void 0!==n.index0AttributeName?i.bindAttribLocation(y,0,n.index0AttributeName):!0===r.morphTargets&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y);var E=i.getProgramInfoLog(y),M=i.getShaderInfoLog(_),T=i.getShaderInfoLog(w),S=!0,A=!0;!1===i.getProgramParameter(y,i.LINK_STATUS)?(S=!1,console.error("THREE.WebGLProgram: shader error: ",i.getError(),"gl.VALIDATE_STATUS",i.getProgramParameter(y,i.VALIDATE_STATUS),"gl.getProgramInfoLog",E,M,T)):""!==E?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",E):""!==M&&""!==T||(A=!1),A&&(this.diagnostics={runnable:S,material:n,programLog:E,vertexShader:{log:M,prefix:d},fragmentShader:{log:T,prefix:f}}),i.deleteShader(_),i.deleteShader(w);var C;this.getUniforms=function(){return void 0===C&&(C=new q(i,y,e)),C};var R;return this.getAttributes=function(){return void 0===R&&(R=nt(i,y)),R},this.destroy=function(){i.deleteProgram(y),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=zs++,this.code=t,this.usedTimes=1,this.program=y,this.vertexShader=_,this.fragmentShader=w,this}function ct(e,t){function n(e){var n=e.skeleton,r=n.bones;if(t.floatVertexTextures)return 1024;var i=t.maxVertexUniforms,o=Math.floor((i-20)/4),a=Math.min(o,r.length);return a<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+a+"."),0):a}function r(e,t){var n;return e?e.isTexture?n=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),n=e.texture.encoding):n=ds,n===ds&&t&&(n=ms),n}var i=[],o={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},a=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(i,a,s,c,u,l){var h=o[i.type],p=l.isSkinnedMesh?n(l):0,d=e.getPrecision();null!==i.precision&&(d=t.getMaxPrecision(i.precision))!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",d,"instead.");var f=e.getRenderTarget();return{shaderID:h,precision:d,supportsVertexTextures:t.vertexTextures,outputEncoding:r(f?f.texture:null,e.gammaOutput),map:!!i.map,mapEncoding:r(i.map,e.gammaInput),envMap:!!i.envMap,envMapMode:i.envMap&&i.envMap.mapping,envMapEncoding:r(i.envMap,e.gammaInput),envMapCubeUV:!!i.envMap&&(i.envMap.mapping===ma||i.envMap.mapping===ga),lightMap:!!i.lightMap,aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:r(i.emissiveMap,e.gammaInput),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,combine:i.combine,vertexColors:i.vertexColors,fog:!!s,useFog:i.fog,fogExp:s&&s.isFogExp2,flatShading:i.shading===xo,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:i.skinning&&p>0,maxBones:p,useVertexTexture:t.floatVertexTextures,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numClippingPlanes:c,numClipIntersection:u,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&l.receiveShadow&&a.shadows.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===bo,flipSided:i.side===yo,depthPacking:void 0!==i.depthPacking&&i.depthPacking}},this.getProgramCode=function(e,t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var i=0;i<a.length;i++)n.push(t[a[i]]);return n.join()},this.acquireProgram=function(t,n,r){for(var o,a=0,s=i.length;a<s;a++){var c=i[a];if(c.code===r){o=c,++o.usedTimes;break}}return void 0===o&&(o=new st(e,r,t,n),i.push(o)),o},this.releaseProgram=function(e){if(0===--e.usedTimes){var t=i.indexOf(e);i[t]=i[i.length-1],i.pop(),e.destroy()}},this.programs=i}function ut(e,t,n,r,i,o,a){function s(e,t){if(e.width>t||e.height>t){var n=t/Math.max(e.width,e.height),r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");r.width=Math.floor(e.width*n),r.height=Math.floor(e.height*n);return r.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+r.width+"x"+r.height,e),r}return e}function c(e){return Es.isPowerOfTwo(e.width)&&Es.isPowerOfTwo(e.height)}function u(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");t.width=Es.nearestPowerOfTwo(e.width),t.height=Es.nearestPowerOfTwo(e.height);return t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function l(e){return e.wrapS!==ya||e.wrapT!==ya||e.minFilter!==xa&&e.minFilter!==Ea}function h(t){return t===xa||t===_a||t===wa?e.NEAREST:e.LINEAR}function p(e){var t=e.target;t.removeEventListener("dispose",p),f(t),a.textures--}function d(e){var t=e.target;t.removeEventListener("dispose",d),m(t),a.textures--}function f(t){var n=r.get(t);if(t.image&&n.__image__webglTextureCube)e.deleteTexture(n.__image__webglTextureCube);else{if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture)}r.remove(t)}function m(t){var n=r.get(t),i=r.get(t.texture);if(t){if(void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLRenderTargetCube)for(var o=0;o<6;o++)e.deleteFramebuffer(n.__webglFramebuffer[o]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[o]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer);r.remove(t.texture),r.remove(t)}}function g(t,i){var o=r.get(t);if(t.version>0&&o.__version!==t.version){var a=t.image;if(void 0===a)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t);else{if(!1!==a.complete)return void x(o,t,i);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t)}}n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_2D,o.__webglTexture)}function v(t,u){var l=r.get(t);if(6===t.image.length)if(t.version>0&&l.__version!==t.version){l.__image__webglTextureCube||(t.addEventListener("dispose",p),l.__image__webglTextureCube=e.createTexture(),a.textures++),n.activeTexture(e.TEXTURE0+u),n.bindTexture(e.TEXTURE_CUBE_MAP,l.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var h=t&&t.isCompressedTexture,d=t.image[0]&&t.image[0].isDataTexture,f=[],m=0;m<6;m++)f[m]=h||d?d?t.image[m].image:t.image[m]:s(t.image[m],i.maxCubemapSize);var g=f[0],v=c(g),y=o(t.format),x=o(t.type);b(e.TEXTURE_CUBE_MAP,t,v);for(var m=0;m<6;m++)if(h)for(var _,w=f[m].mipmaps,E=0,M=w.length;E<M;E++)_=w[E],t.format!==za&&t.format!==ka?n.getCompressedTextureFormats().indexOf(y)>-1?n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+m,E,y,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+m,E,y,_.width,_.height,0,y,x,_.data);else d?n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,y,f[m].width,f[m].height,0,y,x,f[m].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,y,y,x,f[m]);t.generateMipmaps&&v&&e.generateMipmap(e.TEXTURE_CUBE_MAP),l.__version=t.version,t.onUpdate&&t.onUpdate(t)}else n.activeTexture(e.TEXTURE0+u),n.bindTexture(e.TEXTURE_CUBE_MAP,l.__image__webglTextureCube)}function y(t,i){n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_CUBE_MAP,r.get(t).__webglTexture)}function b(n,a,s){var c;if(s?(e.texParameteri(n,e.TEXTURE_WRAP_S,o(a.wrapS)),e.texParameteri(n,e.TEXTURE_WRAP_T,o(a.wrapT)),e.texParameteri(n,e.TEXTURE_MAG_FILTER,o(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,o(a.minFilter))):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),a.wrapS===ya&&a.wrapT===ya||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",a),e.texParameteri(n,e.TEXTURE_MAG_FILTER,h(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,h(a.minFilter)),a.minFilter!==xa&&a.minFilter!==Ea&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",a)),c=t.get("EXT_texture_filter_anisotropic")){if(a.type===Na&&null===t.get("OES_texture_float_linear"))return;if(a.type===Ia&&null===t.get("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function x(t,r,h){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",p),t.__webglTexture=e.createTexture(),a.textures++),n.activeTexture(e.TEXTURE0+h),n.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment);var d=s(r.image,i.maxTextureSize);l(r)&&!1===c(d)&&(d=u(d));var f=c(d),m=o(r.format),g=o(r.type);b(e.TEXTURE_2D,r,f);var v,y=r.mipmaps;if(r.isDepthTexture){var x=e.DEPTH_COMPONENT;if(r.type===Na){if(!A)throw new Error("Float Depth Texture only supported in WebGL2.0");x=e.DEPTH_COMPONENT32F}else A&&(x=e.DEPTH_COMPONENT16);r.format===Ha&&x===e.DEPTH_COMPONENT&&r.type!==Ra&&r.type!==La&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Ra,g=o(r.type)),r.format===Wa&&(x=e.DEPTH_STENCIL,r.type!==Ba&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Ba,g=o(r.type))),n.texImage2D(e.TEXTURE_2D,0,x,d.width,d.height,0,m,g,null)}else if(r.isDataTexture)if(y.length>0&&f){for(var _=0,w=y.length;_<w;_++)v=y[_],n.texImage2D(e.TEXTURE_2D,_,m,v.width,v.height,0,m,g,v.data);r.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,m,d.width,d.height,0,m,g,d.data);else if(r.isCompressedTexture)for(var _=0,w=y.length;_<w;_++)v=y[_],r.format!==za&&r.format!==ka?n.getCompressedTextureFormats().indexOf(m)>-1?n.compressedTexImage2D(e.TEXTURE_2D,_,m,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(e.TEXTURE_2D,_,m,v.width,v.height,0,m,g,v.data);else if(y.length>0&&f){for(var _=0,w=y.length;_<w;_++)v=y[_],n.texImage2D(e.TEXTURE_2D,_,m,m,g,v);r.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,m,m,g,d);r.generateMipmaps&&f&&e.generateMipmap(e.TEXTURE_2D),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function _(t,i,a,s){var c=o(i.texture.format),u=o(i.texture.type);n.texImage2D(s,0,c,i.width,i.height,0,c,u,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,a,s,r.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function w(t,n){e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):n.depthBuffer&&n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,n.width,n.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function E(t,n){if(n&&n.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported!");if(e.bindFramebuffer(e.FRAMEBUFFER,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),g(n.depthTexture,0);var i=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Ha)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,i,0);else{if(n.depthTexture.format!==Wa)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,i,0)}}function M(t){var n=r.get(t),i=!0===t.isWebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");E(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(var o=0;o<6;o++)e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer[o]),n.__webglDepthbuffer[o]=e.createRenderbuffer(),w(n.__webglDepthbuffer[o],t)}else e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),w(n.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}function T(t){var i=r.get(t),o=r.get(t.texture);t.addEventListener("dispose",d),o.__webglTexture=e.createTexture(),a.textures++;var s=!0===t.isWebGLRenderTargetCube,u=c(t);if(s){i.__webglFramebuffer=[];for(var l=0;l<6;l++)i.__webglFramebuffer[l]=e.createFramebuffer()}else i.__webglFramebuffer=e.createFramebuffer();if(s){n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture),b(e.TEXTURE_CUBE_MAP,t.texture,u);for(var l=0;l<6;l++)_(i.__webglFramebuffer[l],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+l);t.texture.generateMipmaps&&u&&e.generateMipmap(e.TEXTURE_CUBE_MAP),n.bindTexture(e.TEXTURE_CUBE_MAP,null)}else n.bindTexture(e.TEXTURE_2D,o.__webglTexture),b(e.TEXTURE_2D,t.texture,u),_(i.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),t.texture.generateMipmaps&&u&&e.generateMipmap(e.TEXTURE_2D),n.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&M(t)}function S(t){var i=t.texture;if(i.generateMipmaps&&c(t)&&i.minFilter!==xa&&i.minFilter!==Ea){var o=t&&t.isWebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=r.get(i).__webglTexture;n.bindTexture(o,a),e.generateMipmap(o),n.bindTexture(o,null)}}var A="undefined"!==typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext;this.setTexture2D=g,this.setTextureCube=v,this.setTextureCubeDynamic=y,this.setupRenderTarget=T,this.updateRenderTargetMipmap=S}function lt(){function e(e){var t=e.uuid,n=r[t];return void 0===n&&(n={},r[t]=n),n}function t(e){delete r[e.uuid]}function n(){r={}}var r={};return{get:e,remove:t,clear:n}}function ht(e,t,n){function r(){var t=!1,n=new a,r=null,i=new a;return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,o,a,s){!0===s&&(t*=a,r*=a,o*=a),n.set(t,r,o,a),!1===i.equals(n)&&(e.clearColor(t,r,o,a),i.copy(n))},reset:function(){t=!1,r=null,i.set(0,0,0,1)}}}function i(){var t=!1,n=null,r=null,i=null;return{setTest:function(t){t?d(e.DEPTH_TEST):f(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case qo:e.depthFunc(e.NEVER);break;case Yo:e.depthFunc(e.ALWAYS);break;case Zo:e.depthFunc(e.LESS);break;case Ko:e.depthFunc(e.LEQUAL);break;case Jo:e.depthFunc(e.EQUAL);break;case Qo:e.depthFunc(e.GEQUAL);break;case $o:e.depthFunc(e.GREATER);break;case ea:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}}function o(){var t=!1,n=null,r=null,i=null,o=null,a=null,s=null,c=null,u=null;return{setTest:function(t){t?d(e.STENCIL_TEST):f(e.STENCIL_TEST)},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,a){r===t&&i===n&&o===a||(e.stencilFunc(t,n,a),r=t,i=n,o=a)},setOp:function(t,n,r){a===t&&s===n&&c===r||(e.stencilOp(t,n,r),a=t,s=n,c=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,i=null,o=null,a=null,s=null,c=null,u=null}}}function s(t,n,r){var i=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var a=0;a<r;a++)e.texImage2D(n+a,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return o}function c(){L.setClear(0,0,0,1),N.setClear(1),I.setClear(0),d(e.DEPTH_TEST),N.setFunc(Ko),y(!1),b(co),d(e.CULL_FACE),d(e.BLEND),g(So)}function u(){for(var e=0,t=O.length;e<t;e++)O[e]=0}function l(n){if(O[n]=1,0===U[n]&&(e.enableVertexAttribArray(n),U[n]=1),0!==B[n]){t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n,0),B[n]=0}}function h(n,r){if(O[n]=1,0===U[n]&&(e.enableVertexAttribArray(n),U[n]=1),B[n]!==r){t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n,r),B[n]=r}}function p(){for(var t=0,n=U.length;t!==n;++t)U[t]!==O[t]&&(e.disableVertexAttribArray(t),U[t]=0)}function d(t){!0!==F[t]&&(e.enable(t),F[t]=!0)}function f(t){!1!==F[t]&&(e.disable(t),F[t]=!1)}function m(){if(null===k&&(k=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")))for(var n=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),r=0;r<n.length;r++)k.push(n[r]);return k}function g(t,r,i,o,a,s,c,u){t!==To?d(e.BLEND):f(e.BLEND),t===z&&u===q||(t===Ao?u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===Co?u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===Ro?u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),z=t,q=u),t===Po?(a=a||r,s=s||i,c=c||o,r===j&&a===H||(e.blendEquationSeparate(n(r),n(a)),j=r,H=a),i===G&&o===V&&s===W&&c===X||(e.blendFuncSeparate(n(i),n(o),n(s),n(c)),G=i,V=o,W=s,X=c)):(j=null,G=null,V=null,H=null,W=null,X=null)}function v(t){t.side===bo?f(e.CULL_FACE):d(e.CULL_FACE),y(t.side===yo),!0===t.transparent?g(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):g(To),N.setFunc(t.depthFunc),N.setTest(t.depthTest),N.setMask(t.depthWrite),L.setMask(t.colorWrite),_(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function y(t){Y!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),Y=t)}function b(t){t!==so?(d(e.CULL_FACE),t!==Z&&(t===co?e.cullFace(e.BACK):t===uo?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):f(e.CULL_FACE),Z=t}function x(t){t!==K&&(ne&&e.lineWidth(t),K=t)}function _(t,n,r){t?(d(e.POLYGON_OFFSET_FILL),J===n&&Q===r||(e.polygonOffset(n,r),J=n,Q=r)):f(e.POLYGON_OFFSET_FILL)}function w(){return $}function E(t){$=t,t?d(e.SCISSOR_TEST):f(e.SCISSOR_TEST)}function M(t){void 0===t&&(t=e.TEXTURE0+ee-1),re!==t&&(e.activeTexture(t),re=t)}function T(t,n){null===re&&M();var r=ie[re];void 0===r&&(r={type:void 0,texture:void 0},ie[re]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||se[t]),r.type=t,r.texture=n)}function S(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error(e)}}function A(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error(e)}}function C(t){!1===oe.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),oe.copy(t))}function R(t){!1===ae.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ae.copy(t))}function P(){for(var t=0;t<U.length;t++)1===U[t]&&(e.disableVertexAttribArray(t),U[t]=0);F={},k=null,re=null,ie={},z=null,Y=null,Z=null,L.reset(),N.reset(),I.reset()}var L=new r,N=new i,I=new o,D=e.getParameter(e.MAX_VERTEX_ATTRIBS),O=new Uint8Array(D),U=new Uint8Array(D),B=new Uint8Array(D),F={},k=null,z=null,j=null,G=null,V=null,H=null,W=null,X=null,q=!1,Y=null,Z=null,K=null,J=null,Q=null,$=null,ee=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),te=parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),ne=parseFloat(te)>=1,re=null,ie={},oe=new a,ae=new a,se={};return se[e.TEXTURE_2D]=s(e.TEXTURE_2D,e.TEXTURE_2D,1),se[e.TEXTURE_CUBE_MAP]=s(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),{buffers:{color:L,depth:N,stencil:I},init:c,initAttributes:u,enableAttribute:l,enableAttributeAndDivisor:h,disableUnusedAttributes:p,enable:d,disable:f,getCompressedTextureFormats:m,setBlending:g,setMaterial:v,setFlipSided:y,setCullFace:b,setLineWidth:x,setPolygonOffset:_,getScissorTest:w,setScissorTest:E,activeTexture:M,bindTexture:T,compressedTexImage2D:S,texImage2D:A,scissor:C,viewport:R,reset:P}}function pt(e,t,n){function r(){if(void 0!==o)return o;var n=t.get("EXT_texture_filter_anisotropic");return o=null!==n?e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var o,a=void 0!==n.precision?n.precision:"highp",s=i(a);s!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",s,"instead."),a=s);var c=!0===n.logarithmicDepthBuffer&&!!t.get("EXT_frag_depth"),u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),l=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),d=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=l>0,y=!!t.get("OES_texture_float");return{getMaxAnisotropy:r,getMaxPrecision:i,precision:a,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:l,maxTextureSize:h,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y}}function dt(e){var t={};return{get:function(n){if(void 0!==t[n])return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":r=e.getExtension("WEBGL_compressed_texture_etc1");break;default:r=e.getExtension(n)}return null===r&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}}}function ft(){function e(){u.value!==r&&(u.value=r,u.needsUpdate=i>0),n.numPlanes=i,n.numIntersection=0}function t(e,t,r,i){var o=null!==e?e.length:0,a=null;if(0!==o){if(a=u.value,!0!==i||null===a){var l=r+4*o,h=t.matrixWorldInverse;c.getNormalMatrix(h),(null===a||a.length<l)&&(a=new Float32Array(l));for(var p=0,d=r;p!==o;++p,d+=4)s.copy(e[p]).applyMatrix4(h,c),s.normal.toArray(a,d),a[d+3]=s.constant}u.value=a,u.needsUpdate=!0}return n.numPlanes=o,a}var n=this,r=null,i=0,o=!1,a=!1,s=new ie,c=new re,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(e,n,a){var s=0!==e.length||n||0!==i||o;return o=n,r=t(e,a,0),i=e.length,s},this.beginShadows=function(){a=!0,t(null)},this.endShadows=function(){a=!1,e()},this.setState=function(n,s,c,l,h,p){if(!o||null===n||0===n.length||a&&!c)a?t(null):e();else{var d=a?0:i,f=4*d,m=h.clippingState||null;u.value=m,m=t(n,l,f,p);for(var g=0;g!==f;++g)m[g]=r[g];h.clippingState=m,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=d}}}function mt(e){function t(){return null===ne?ye:1}function n(){Ke.init(),Ke.scissor(ue.copy(be).multiplyScalar(ye)),Ke.viewport(he.copy(_e).multiplyScalar(ye)),Ke.buffers.color.setClear(de.r,de.g,de.b,me,G)}function r(){te=null,ce=null,se="",ie=-1,Ke.reset()}function i(e){e.preventDefault(),r(),n(),Je.clear(),tt.clear()}function o(e){var t=e.target;t.removeEventListener("dispose",o),s(t)}function s(e){c(e),Je.remove(e)}function c(e){var t=Je.get(e).program;e.program=void 0,void 0!==t&&nt.releaseProgram(t)}function u(e,t,n){e.render(function(e){ee.renderBufferImmediate(e,t,n)})}function d(e,t){return Math.abs(t[0])-Math.abs(e[0])}function f(e,t,n,r){if(n&&n.isInstancedBufferGeometry&&null===Ye.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===r&&(r=0),Ke.initAttributes();var i=n.attributes,o=t.getAttributes(),a=e.defaultAttributeValues;for(var s in o){var c=o[s];if(c>=0){var u=i[s];if(void 0!==u){var l=u.normalized,h=u.itemSize,p=$e.get(u),d=p.buffer,f=p.type,m=p.bytesPerElement;if(u.isInterleavedBufferAttribute){var g=u.data,v=g.stride,y=u.offset;g&&g.isInstancedInterleavedBuffer?(Ke.enableAttributeAndDivisor(c,g.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=g.meshPerAttribute*g.count)):Ke.enableAttribute(c),ze.bindBuffer(ze.ARRAY_BUFFER,d),ze.vertexAttribPointer(c,h,f,l,v*m,(r*v+y)*m)}else u.isInstancedBufferAttribute?(Ke.enableAttributeAndDivisor(c,u.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=u.meshPerAttribute*u.count)):Ke.enableAttribute(c),ze.bindBuffer(ze.ARRAY_BUFFER,d),ze.vertexAttribPointer(c,h,f,l,0,r*h*m)}else if(void 0!==a){var b=a[s];if(void 0!==b)switch(b.length){case 2:ze.vertexAttrib2fv(c,b);break;case 3:ze.vertexAttrib3fv(c,b);break;case 4:ze.vertexAttrib4fv(c,b);break;default:ze.vertexAttrib1fv(c,b)}}}}Ke.disableUnusedAttributes()}function m(e,t,n){if(e.visible){if(e.layers.test(t.layers))if(e.isLight)H.push(e);else if(e.isSprite)e.frustumCulled&&!we.intersectsSprite(e)||Z.push(e);else if(e.isLensFlare)Q.push(e);else if(e.isImmediateRenderObject)n&&Ae.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Se),W.push(e,null,e.material,Ae.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||we.intersectsObject(e))){n&&Ae.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Se);var r=tt.update(e),i=e.material;if(Array.isArray(i))for(var o=r.groups,a=0,s=o.length;a<s;a++){var c=o[a],u=i[c.materialIndex];u&&u.visible&&W.push(e,r,u,Ae.z,c)}else i.visible&&W.push(e,r,i,Ae.z,null)}for(var l=e.children,a=0,s=l.length;a<s;a++)m(l[a],t,n)}}function g(e,t,n,r){for(var i=0,o=e.length;i<o;i++){var a=e[i],s=a.object,c=a.geometry,u=void 0===r?a.material:r,l=a.group;if(s.onBeforeRender(ee,t,n,c,u,l),n.isArrayCamera&&n.enabled)for(var h=n.cameras,p=0,d=h.length;p<d;p++){var f=h[p],m=f.bounds;ee.setViewport(m.x*ge*ye,m.y*ve*ye,m.z*ge*ye,m.w*ve*ye),ee.setScissor(m.x*ge*ye,m.y*ve*ye,m.z*ge*ye,m.w*ve*ye),ee.setScissorTest(!0),v(s,t,f,c,u,l)}else v(s,t,n,c,u,l);s.onAfterRender(ee,t,n,c,u,l)}}function v(e,t,n,r,i,o){if(e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){Ke.setMaterial(i);var a=b(n,t.fog,i,e);se="",u(e,a,i)}else ee.renderBufferDirect(n,t.fog,r,i,e,o)}function y(e,t,n){var r=Je.get(e),i=nt.getParameters(e,Ie,t,Ee.numPlanes,Ee.numIntersection,n),a=nt.getProgramCode(e,i),s=r.program,u=!0;if(void 0===s)e.addEventListener("dispose",o);else if(s.code!==a)c(e);else{if(void 0!==i.shaderID)return;u=!1}if(u){if(i.shaderID){var l=Us[i.shaderID];r.__webglShader={name:e.type,uniforms:Ds.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}else r.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.__webglShader=r.__webglShader,s=nt.acquireProgram(e,i,a),r.program=s,e.program=s}var h=s.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var p=0;p<ee.maxMorphTargets;p++)h["morphTarget"+p]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var p=0;p<ee.maxMorphNormals;p++)h["morphNormal"+p]>=0&&e.numSupportedMorphNormals++}var d=r.__webglShader.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=Ee.numPlanes,r.numIntersection=Ee.numIntersection,d.clippingPlanes=Ee.uniform),r.fog=t,r.lightsHash=Ie.hash,e.lights&&(d.ambientLightColor.value=Ie.ambient,d.directionalLights.value=Ie.directional,d.spotLights.value=Ie.spot,d.rectAreaLights.value=Ie.rectArea,d.pointLights.value=Ie.point,d.hemisphereLights.value=Ie.hemi,d.directionalShadowMap.value=Ie.directionalShadowMap,d.directionalShadowMatrix.value=Ie.directionalShadowMatrix,d.spotShadowMap.value=Ie.spotShadowMap,d.spotShadowMatrix.value=Ie.spotShadowMatrix,d.pointShadowMap.value=Ie.pointShadowMap,d.pointShadowMatrix.value=Ie.pointShadowMatrix);var f=r.program.getUniforms(),m=q.seqWithValue(f.seq,d);r.uniformsList=m}function b(e,t,n,r){pe=0;var i=Je.get(n);if(Me&&(Te||e!==ce)){var o=e===ce&&n.id===ie;Ee.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,e,i,o)}!1===n.needsUpdate&&(void 0===i.program?n.needsUpdate=!0:n.fog&&i.fog!==t?n.needsUpdate=!0:n.lights&&i.lightsHash!==Ie.hash?n.needsUpdate=!0:void 0===i.numClippingPlanes||i.numClippingPlanes===Ee.numPlanes&&i.numIntersection===Ee.numIntersection||(n.needsUpdate=!0)),n.needsUpdate&&(y(n,t,r),n.needsUpdate=!1);var a=!1,s=!1,c=!1,u=i.program,l=u.getUniforms(),h=i.__webglShader.uniforms;if(u.id!==te&&(ze.useProgram(u.program),te=u.id,a=!0,s=!0,c=!0),n.id!==ie&&(ie=n.id,s=!0),a||e!==ce){if(l.setValue(ze,"projectionMatrix",e.projectionMatrix),Ze.logarithmicDepthBuffer&&l.setValue(ze,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),e!==ce&&(ce=e,s=!0,c=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.envMap){var d=l.map.cameraPosition;void 0!==d&&d.setValue(ze,Ae.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&l.setValue(ze,"viewMatrix",e.matrixWorldInverse),l.setValue(ze,"toneMappingExposure",ee.toneMappingExposure),l.setValue(ze,"toneMappingWhitePoint",ee.toneMappingWhitePoint)}if(n.skinning){l.setOptional(ze,r,"bindMatrix"),l.setOptional(ze,r,"bindMatrixInverse");var f=r.skeleton;if(f){var m=f.bones;if(Ze.floatVertexTextures){if(void 0===f.boneTexture){var g=Math.sqrt(4*m.length);g=Es.nextPowerOfTwo(Math.ceil(g)),g=Math.max(g,4);var v=new Float32Array(g*g*4);v.set(f.boneMatrices);var b=new p(v,g,g,za,Na);f.boneMatrices=v,f.boneTexture=b,f.boneTextureSize=g}l.setValue(ze,"boneTexture",f.boneTexture),l.setValue(ze,"boneTextureSize",f.boneTextureSize)}else l.setOptional(ze,f,"boneMatrices")}}return s&&(n.lights&&L(h,c),t&&n.fog&&M(h,t),(n.isMeshBasicMaterial||n.isMeshLambertMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isMeshNormalMaterial||n.isMeshDepthMaterial)&&x(h,n),n.isLineBasicMaterial?_(h,n):n.isLineDashedMaterial?(_(h,n),w(h,n)):n.isPointsMaterial?E(h,n):n.isMeshLambertMaterial?T(h,n):n.isMeshToonMaterial?A(h,n):n.isMeshPhongMaterial?S(h,n):n.isMeshPhysicalMaterial?R(h,n):n.isMeshStandardMaterial?C(h,n):n.isMeshDepthMaterial?n.displacementMap&&(h.displacementMap.value=n.displacementMap,h.displacementScale.value=n.displacementScale,h.displacementBias.value=n.displacementBias):n.isMeshNormalMaterial&&P(h,n),void 0!==h.ltcMat&&(h.ltcMat.value=Is.LTC_MAT_TEXTURE),void 0!==h.ltcMag&&(h.ltcMag.value=Is.LTC_MAG_TEXTURE),q.upload(ze,i.uniformsList,h,ee)),l.setValue(ze,"modelViewMatrix",r.modelViewMatrix),l.setValue(ze,"normalMatrix",r.normalMatrix),l.setValue(ze,"modelMatrix",r.matrixWorld),u}function x(e,t){e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var n;if(t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap),void 0!==n){n.isWebGLRenderTarget&&(n=n.texture);var r=n.offset,i=n.repeat;e.offsetRepeat.value.set(r.x,r.y,i.x,i.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap&&t.envMap.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}function _(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function w(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function E(e,t){if(e.diffuse.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size*ye,e.scale.value=.5*ve,e.map.value=t.map,null!==t.map){var n=t.map.offset,r=t.map.repeat;e.offsetRepeat.value.set(n.x,n.y,r.x,r.y)}}function M(e,t){e.fogColor.value=t.color,t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function T(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function S(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function A(e,t){S(e,t),t.gradientMap&&(e.gradientMap.value=t.gradientMap)}function C(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}function R(e,t){e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness,C(e,t)}function P(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function L(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function N(e){for(var t=0,n=0,r=e.length;n<r;n++){var i=e[n];i.castShadow&&(Ie.shadows[t]=i,t++)}Ie.shadows.length=t}function I(e,t){var n,r,i,o,a,s,c,u,l=0,h=0,p=0,d=t.matrixWorldInverse,f=0,m=0,g=0,v=0,y=0;for(n=0,r=e.length;n<r;n++)if(i=e[n],a=i.color,s=i.intensity,c=i.distance,u=i.shadow&&i.shadow.map?i.shadow.map.texture:null,i.isAmbientLight)l+=a.r*s,h+=a.g*s,p+=a.b*s;else if(i.isDirectionalLight){var b=rt.get(i);b.color.copy(i.color).multiplyScalar(i.intensity),b.direction.setFromMatrixPosition(i.matrixWorld),Ae.setFromMatrixPosition(i.target.matrixWorld),b.direction.sub(Ae),b.direction.transformDirection(d),b.shadow=i.castShadow,i.castShadow&&(o=i.shadow,b.shadowBias=o.bias,b.shadowRadius=o.radius,b.shadowMapSize=o.mapSize),Ie.directionalShadowMap[f]=u,Ie.directionalShadowMatrix[f]=i.shadow.matrix,Ie.directional[f]=b,f++}else if(i.isSpotLight){var b=rt.get(i);b.position.setFromMatrixPosition(i.matrixWorld),b.position.applyMatrix4(d),b.color.copy(a).multiplyScalar(s),b.distance=c,b.direction.setFromMatrixPosition(i.matrixWorld),Ae.setFromMatrixPosition(i.target.matrixWorld),b.direction.sub(Ae),b.direction.transformDirection(d),b.coneCos=Math.cos(i.angle),b.penumbraCos=Math.cos(i.angle*(1-i.penumbra)),b.decay=0===i.distance?0:i.decay,b.shadow=i.castShadow,i.castShadow&&(o=i.shadow,b.shadowBias=o.bias,b.shadowRadius=o.radius,b.shadowMapSize=o.mapSize),Ie.spotShadowMap[g]=u,Ie.spotShadowMatrix[g]=i.shadow.matrix,Ie.spot[g]=b,g++}else if(i.isRectAreaLight){var b=rt.get(i);b.color.copy(a).multiplyScalar(s/(i.width*i.height)),b.position.setFromMatrixPosition(i.matrixWorld),b.position.applyMatrix4(d),Le.identity(),Ce.copy(i.matrixWorld),Ce.premultiply(d),Le.extractRotation(Ce),b.halfWidth.set(.5*i.width,0,0),b.halfHeight.set(0,.5*i.height,0),b.halfWidth.applyMatrix4(Le),b.halfHeight.applyMatrix4(Le),Ie.rectArea[v]=b,v++}else if(i.isPointLight){var b=rt.get(i);b.position.setFromMatrixPosition(i.matrixWorld),b.position.applyMatrix4(d),b.color.copy(i.color).multiplyScalar(i.intensity),b.distance=i.distance,b.decay=0===i.distance?0:i.decay,b.shadow=i.castShadow,i.castShadow&&(o=i.shadow,b.shadowBias=o.bias,b.shadowRadius=o.radius,b.shadowMapSize=o.mapSize),Ie.pointShadowMap[m]=u,Ie.pointShadowMatrix[m]=i.shadow.matrix,Ie.point[m]=b,m++}else if(i.isHemisphereLight){var b=rt.get(i);b.direction.setFromMatrixPosition(i.matrixWorld),b.direction.transformDirection(d),b.direction.normalize(),b.skyColor.copy(i.color).multiplyScalar(s),b.groundColor.copy(i.groundColor).multiplyScalar(s),Ie.hemi[y]=b,y++}Ie.ambient[0]=l,Ie.ambient[1]=h,Ie.ambient[2]=p,Ie.directional.length=f,Ie.spot.length=g,Ie.rectArea.length=v,Ie.point.length=m,Ie.hemi.length=y,Ie.hash=f+","+m+","+g+","+v+","+y+","+Ie.shadows.length}function D(){var e=pe;return e>=Ze.maxTextures&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Ze.maxTextures),pe+=1,e}function O(e){var t;if(e===va)return ze.REPEAT;if(e===ya)return ze.CLAMP_TO_EDGE;if(e===ba)return ze.MIRRORED_REPEAT;if(e===xa)return ze.NEAREST;if(e===_a)return ze.NEAREST_MIPMAP_NEAREST;if(e===wa)return ze.NEAREST_MIPMAP_LINEAR;if(e===Ea)return ze.LINEAR;if(e===Ma)return ze.LINEAR_MIPMAP_NEAREST;if(e===Ta)return ze.LINEAR_MIPMAP_LINEAR;if(e===Sa)return ze.UNSIGNED_BYTE;if(e===Da)return ze.UNSIGNED_SHORT_4_4_4_4;if(e===Oa)return ze.UNSIGNED_SHORT_5_5_5_1;if(e===Ua)return ze.UNSIGNED_SHORT_5_6_5;if(e===Aa)return ze.BYTE;if(e===Ca)return ze.SHORT;if(e===Ra)return ze.UNSIGNED_SHORT;if(e===Pa)return ze.INT;if(e===La)return ze.UNSIGNED_INT;if(e===Na)return ze.FLOAT;if(e===Ia&&null!==(t=Ye.get("OES_texture_half_float")))return t.HALF_FLOAT_OES;if(e===Fa)return ze.ALPHA;if(e===ka)return ze.RGB;if(e===za)return ze.RGBA;if(e===ja)return ze.LUMINANCE;if(e===Ga)return ze.LUMINANCE_ALPHA;if(e===Ha)return ze.DEPTH_COMPONENT;if(e===Wa)return ze.DEPTH_STENCIL;if(e===Lo)return ze.FUNC_ADD;if(e===No)return ze.FUNC_SUBTRACT;if(e===Io)return ze.FUNC_REVERSE_SUBTRACT;if(e===Uo)return ze.ZERO;if(e===Bo)return ze.ONE;if(e===Fo)return ze.SRC_COLOR;if(e===ko)return ze.ONE_MINUS_SRC_COLOR;if(e===zo)return ze.SRC_ALPHA;if(e===jo)return ze.ONE_MINUS_SRC_ALPHA;if(e===Go)return ze.DST_ALPHA;if(e===Vo)return ze.ONE_MINUS_DST_ALPHA;if(e===Ho)return ze.DST_COLOR;if(e===Wo)return ze.ONE_MINUS_DST_COLOR;if(e===Xo)return ze.SRC_ALPHA_SATURATE;if((e===Xa||e===qa||e===Ya||e===Za)&&null!==(t=Ye.get("WEBGL_compressed_texture_s3tc"))){if(e===Xa)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===qa)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ya)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Za)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((e===Ka||e===Ja||e===Qa||e===$a)&&null!==(t=Ye.get("WEBGL_compressed_texture_pvrtc"))){if(e===Ka)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ja)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Qa)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===$a)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===es&&null!==(t=Ye.get("WEBGL_compressed_texture_etc1")))return t.COMPRESSED_RGB_ETC1_WEBGL;if((e===Do||e===Oo)&&null!==(t=Ye.get("EXT_blend_minmax"))){if(e===Do)return t.MIN_EXT;if(e===Oo)return t.MAX_EXT}return e===Ba&&null!==(t=Ye.get("WEBGL_depth_texture"))?t.UNSIGNED_INT_24_8_WEBGL:0}console.log("THREE.WebGLRenderer",oo),e=e||{};var U=void 0!==e.canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),B=void 0!==e.context?e.context:null,F=void 0!==e.alpha&&e.alpha,k=void 0===e.depth||e.depth,z=void 0===e.stencil||e.stencil,j=void 0!==e.antialias&&e.antialias,G=void 0===e.premultipliedAlpha||e.premultipliedAlpha,V=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,H=[],W=null,X=new Float32Array(8),Z=[],Q=[];this.domElement=U,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=oa,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var ee=this,te=null,ne=null,re=null,ie=-1,se="",ce=null,ue=new a,le=null,he=new a,pe=0,de=new Y(0),me=0,ge=U.width,ve=U.height,ye=1,be=new a(0,0,ge,ve),xe=!1,_e=new a(0,0,ge,ve),we=new oe,Ee=new ft,Me=!1,Te=!1,Se=new h,Ae=new l,Ce=new h,Le=new h,Ie={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},Oe={geometries:0,textures:0},ke={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:ke,memory:Oe,programs:null};var ze;try{var je={alpha:F,depth:k,stencil:z,antialias:j,premultipliedAlpha:G,preserveDrawingBuffer:V};if(null===(ze=B||U.getContext("webgl",je)||U.getContext("experimental-webgl",je)))throw null!==U.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";void 0===ze.getShaderPrecisionFormat&&(ze.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),U.addEventListener("webglcontextlost",i,!1)}catch(e){console.error("THREE.WebGLRenderer: "+e)}var Ye=new dt(ze);Ye.get("WEBGL_depth_texture"),Ye.get("OES_texture_float"),Ye.get("OES_texture_float_linear"),Ye.get("OES_texture_half_float"),Ye.get("OES_texture_half_float_linear"),Ye.get("OES_standard_derivatives"),Ye.get("ANGLE_instanced_arrays"),Ye.get("OES_element_index_uint")&&(Re.MaxIndex=4294967296);var Ze=new pt(ze,Ye,e),Ke=new ht(ze,Ye,O),Je=new lt,Qe=new ut(ze,Ye,Ke,Je,Ze,O,Oe),$e=new Fe(ze),et=new We(ze,$e,Oe),tt=new qe(ze,et,ke),nt=new ct(this,Ze),rt=new Xe,it=new Ge;this.info.programs=nt.programs;var ot,at,st,mt,gt=new He(ze,Ye,ke),vt=new Ve(ze,Ye,ke);n(),this.context=ze,this.capabilities=Ze,this.extensions=Ye,this.properties=Je,this.state=Ke;var yt=new ae(this,Ie,tt,Ze);this.shadowMap=yt;var bt=new J(this,Z),xt=new K(this,Q);this.getContext=function(){return ze},this.getContextAttributes=function(){return ze.getContextAttributes()},this.forceContextLoss=function(){var e=Ye.get("WEBGL_lose_context");e&&e.loseContext()},this.getMaxAnisotropy=function(){return Ze.getMaxAnisotropy()},this.getPrecision=function(){return Ze.precision},this.getPixelRatio=function(){return ye},this.setPixelRatio=function(e){void 0!==e&&(ye=e,this.setSize(_e.z,_e.w,!1))},this.getSize=function(){return{width:ge,height:ve}},this.setSize=function(e,t,n){ge=e,ve=t,U.width=e*ye,U.height=t*ye,!1!==n&&(U.style.width=e+"px",U.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,n,r){Ke.viewport(_e.set(e,t,n,r))},this.setScissor=function(e,t,n,r){Ke.scissor(be.set(e,t,n,r))},this.setScissorTest=function(e){Ke.setScissorTest(xe=e)},this.getClearColor=function(){return de},this.setClearColor=function(e,t){de.set(e),me=void 0!==t?t:1,Ke.buffers.color.setClear(de.r,de.g,de.b,me,G)},this.getClearAlpha=function(){return me},this.setClearAlpha=function(e){me=e,Ke.buffers.color.setClear(de.r,de.g,de.b,me,G)},this.clear=function(e,t,n){var r=0;(void 0===e||e)&&(r|=ze.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=ze.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=ze.STENCIL_BUFFER_BIT),ze.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.resetGLState=r,this.dispose=function(){U.removeEventListener("webglcontextlost",i,!1),it.dispose()},this.renderBufferImmediate=function(e,t,n){Ke.initAttributes();var r=Je.get(e);e.hasPositions&&!r.position&&(r.position=ze.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=ze.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=ze.createBuffer()),e.hasColors&&!r.color&&(r.color=ze.createBuffer());var i=t.getAttributes();if(e.hasPositions&&(ze.bindBuffer(ze.ARRAY_BUFFER,r.position),ze.bufferData(ze.ARRAY_BUFFER,e.positionArray,ze.DYNAMIC_DRAW),Ke.enableAttribute(i.position),ze.vertexAttribPointer(i.position,3,ze.FLOAT,!1,0,0)),e.hasNormals){if(ze.bindBuffer(ze.ARRAY_BUFFER,r.normal),!n.isMeshPhongMaterial&&!n.isMeshStandardMaterial&&!n.isMeshNormalMaterial&&n.shading===xo)for(var o=0,a=3*e.count;o<a;o+=9){var s=e.normalArray,c=(s[o+0]+s[o+3]+s[o+6])/3,u=(s[o+1]+s[o+4]+s[o+7])/3,l=(s[o+2]+s[o+5]+s[o+8])/3;s[o+0]=c,s[o+1]=u,s[o+2]=l,s[o+3]=c,s[o+4]=u,s[o+5]=l,s[o+6]=c,s[o+7]=u,s[o+8]=l}ze.bufferData(ze.ARRAY_BUFFER,e.normalArray,ze.DYNAMIC_DRAW),Ke.enableAttribute(i.normal),ze.vertexAttribPointer(i.normal,3,ze.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(ze.bindBuffer(ze.ARRAY_BUFFER,r.uv),ze.bufferData(ze.ARRAY_BUFFER,e.uvArray,ze.DYNAMIC_DRAW),Ke.enableAttribute(i.uv),ze.vertexAttribPointer($e.uv,2,ze.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==wo&&(ze.bindBuffer(ze.ARRAY_BUFFER,r.color),ze.bufferData(ze.ARRAY_BUFFER,e.colorArray,ze.DYNAMIC_DRAW),Ke.enableAttribute(i.color),ze.vertexAttribPointer(i.color,3,ze.FLOAT,!1,0,0)),Ke.disableUnusedAttributes(),ze.drawArrays(ze.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,n,r,i,o,a){Ke.setMaterial(i);var s=b(e,n,i,o),c=r.id+"_"+s.id+"_"+(!0===i.wireframe),u=!1;c!==se&&(se=c,u=!0);var l=o.morphTargetInfluences;if(void 0!==l){for(var h=[],p=0,m=l.length;p<m;p++){var g=l[p];h.push([g,p])}h.sort(d),h.length>8&&(h.length=8);for(var v=r.morphAttributes,p=0,m=h.length;p<m;p++){var g=h[p];if(X[p]=g[0],0!==g[0]){var y=g[1];!0===i.morphTargets&&v.position&&r.addAttribute("morphTarget"+p,v.position[y]),!0===i.morphNormals&&v.normal&&r.addAttribute("morphNormal"+p,v.normal[y])}else!0===i.morphTargets&&r.removeAttribute("morphTarget"+p),!0===i.morphNormals&&r.removeAttribute("morphNormal"+p)}for(var p=h.length,x=X.length;p<x;p++)X[p]=0;s.getUniforms().setValue(ze,"morphTargetInfluences",X),u=!0}var y=r.index,_=r.attributes.position,w=1;!0===i.wireframe&&(y=et.getWireframeAttribute(r),w=2);var E=gt;null!==y&&(E=vt,E.setIndex(y)),u&&(f(i,s,r),null!==y&&ze.bindBuffer(ze.ELEMENT_ARRAY_BUFFER,$e.get(y).buffer));var M=0;null!==y?M=y.count:void 0!==_&&(M=_.count);var T=r.drawRange.start*w,S=r.drawRange.count*w,A=null!==a?a.start*w:0,C=null!==a?a.count*w:1/0,R=Math.max(T,A),P=Math.min(M,T+S,A+C)-1,L=Math.max(0,P-R+1);if(0!==L){if(o.isMesh)if(!0===i.wireframe)Ke.setLineWidth(i.wireframeLinewidth*t()),E.setMode(ze.LINES);else switch(o.drawMode){case ls:E.setMode(ze.TRIANGLES);break;case hs:E.setMode(ze.TRIANGLE_STRIP);break;case ps:E.setMode(ze.TRIANGLE_FAN)}else if(o.isLine){var N=i.linewidth;void 0===N&&(N=1),Ke.setLineWidth(N*t()),o.isLineSegments?E.setMode(ze.LINES):o.isLineLoop?E.setMode(ze.LINE_LOOP):E.setMode(ze.LINE_STRIP)}else o.isPoints&&E.setMode(ze.POINTS);r&&r.isInstancedBufferGeometry?r.maxInstancedCount>0&&E.renderInstances(r,R,L):E.render(R,L)}},this.compile=function(e,t){H=[],e.traverse(function(e){e.isLight&&H.push(e)}),I(H,t),e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var n=0;n<t.material.length;n++)y(t.material[n],e.fog,t);else y(t.material,e.fog,t)})},this.render=function(e,t,n,r){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");se="",ie=-1,ce=null,!0===e.autoUpdate&&e.updateMatrixWorld(),t.onBeforeRender(ee),null===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Se.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),we.setFromMatrix(Se),H.length=0,Z.length=0,Q.length=0,Te=this.localClippingEnabled,Me=Ee.init(this.clippingPlanes,Te,t),W=it.get(e,t),W.init(),m(e,t,ee.sortObjects),W.finish(),!0===ee.sortObjects&&W.sort(),Me&&Ee.beginShadows(),N(H),yt.render(e,t),I(H,t),Me&&Ee.endShadows(),ke.frame++,ke.calls=0,ke.vertices=0,ke.faces=0,ke.points=0,void 0===n&&(n=null),this.setRenderTarget(n);var i=e.background;null===i?Ke.buffers.color.setClear(de.r,de.g,de.b,me,G):i&&i.isColor&&(Ke.buffers.color.setClear(i.r,i.g,i.b,1,G),r=!0),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i&&i.isCubeTexture?(void 0===st&&(st=new Ue,mt=new Pe(new Ne(5,5,5),new $({uniforms:Us.cube.uniforms,vertexShader:Us.cube.vertexShader,fragmentShader:Us.cube.fragmentShader,side:yo,depthTest:!1,depthWrite:!1,fog:!1}))),st.projectionMatrix.copy(t.projectionMatrix),st.matrixWorld.extractRotation(t.matrixWorld),st.matrixWorldInverse.getInverse(st.matrixWorld),mt.material.uniforms.tCube.value=i,mt.modelViewMatrix.multiplyMatrices(st.matrixWorldInverse,mt.matrixWorld),tt.update(mt),ee.renderBufferDirect(st,null,mt.geometry,mt.material,mt,null)):i&&i.isTexture&&(void 0===ot&&(ot=new Be(-1,1,1,-1,0,1),at=new Pe(new De(2,2),new fe({depthTest:!1,depthWrite:!1,fog:!1}))),at.material.map=i,tt.update(at),ee.renderBufferDirect(ot,null,at.geometry,at.material,at,null));var o=W.opaque,a=W.transparent;if(e.overrideMaterial){var s=e.overrideMaterial;o.length&&g(o,e,t,s),a.length&&g(a,e,t,s)}else o.length&&g(o,e,t),a.length&&g(a,e,t);bt.render(e,t),xt.render(e,t,he),n&&Qe.updateRenderTargetMipmap(n),Ke.buffers.depth.setTest(!0),Ke.buffers.depth.setMask(!0),Ke.buffers.color.setMask(!0),t.isArrayCamera&&t.enabled&&ee.setScissorTest(!1),t.onAfterRender(ee)},this.setFaceCulling=function(e,t){Ke.setCullFace(e),Ke.setFlipSided(t===ho)},this.allocTextureUnit=D,this.setTexture2D=function(){var e=!1;return function(t,n){t&&t.isWebGLRenderTarget&&(e||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),e=!0),t=t.texture),Qe.setTexture2D(t,n)}}(),this.setTexture=function(){var e=!1;return function(t,n){e||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),e=!0),Qe.setTexture2D(t,n)}}(),this.setTextureCube=function(){var e=!1;return function(t,n){t&&t.isWebGLRenderTargetCube&&(e||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),e=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?Qe.setTextureCube(t,n):Qe.setTextureCubeDynamic(t,n)}}(),this.getRenderTarget=function(){return ne},this.setRenderTarget=function(e){ne=e,e&&void 0===Je.get(e).__webglFramebuffer&&Qe.setupRenderTarget(e);var t,n=e&&e.isWebGLRenderTargetCube;if(e){var r=Je.get(e);t=n?r.__webglFramebuffer[e.activeCubeFace]:r.__webglFramebuffer,ue.copy(e.scissor),le=e.scissorTest,he.copy(e.viewport)}else t=null,ue.copy(be).multiplyScalar(ye),le=xe,he.copy(_e).multiplyScalar(ye);if(re!==t&&(ze.bindFramebuffer(ze.FRAMEBUFFER,t),re=t),Ke.scissor(ue),Ke.setScissorTest(le),Ke.viewport(he),n){var i=Je.get(e.texture);ze.framebufferTexture2D(ze.FRAMEBUFFER,ze.COLOR_ATTACHMENT0,ze.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,n,r,i,o){if(!1===(e&&e.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var a=Je.get(e).__webglFramebuffer;if(a){var s=!1;a!==re&&(ze.bindFramebuffer(ze.FRAMEBUFFER,a),s=!0);try{var c=e.texture,u=c.format,l=c.type;if(u!==za&&O(u)!==ze.getParameter(ze.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(l!==Sa&&O(l)!==ze.getParameter(ze.IMPLEMENTATION_COLOR_READ_TYPE)&&(l!==Na||!Ye.get("OES_texture_float")&&!Ye.get("WEBGL_color_buffer_float"))&&(l!==Ia||!Ye.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");ze.checkFramebufferStatus(ze.FRAMEBUFFER)===ze.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&ze.readPixels(t,n,r,i,O(u),O(l),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&ze.bindFramebuffer(ze.FRAMEBUFFER,re)}}}}function gt(e,t){this.name="",this.color=new Y(e),this.density=void 0!==t?t:25e-5}function vt(e,t,n){this.name="",this.color=new Y(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}function yt(){le.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function bt(e,t,n,r,i){le.call(this),this.lensFlares=[],this.positionScreen=new l,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,n,r,i)}function xt(e){Q.call(this),this.type="SpriteMaterial",this.color=new Y(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(e)}function _t(e){le.call(this),this.type="Sprite",this.material=void 0!==e?e:new xt}function wt(){le.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Et(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new h)}}function Mt(){le.call(this),this.type="Bone"}function Tt(e,t){Pe.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new h,this.bindMatrixInverse=new h;var n=this.initBones(),r=new Et(n);this.bind(r,this.matrixWorld),this.normalizeSkinWeights()}function St(e){Q.call(this),this.type="LineBasicMaterial",this.color=new Y(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(e)}function At(e,t,n){if(1===n)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new Ct(e,t);le.call(this),this.type="Line",this.geometry=void 0!==e?e:new Re,this.material=void 0!==t?t:new St({color:16777215*Math.random()})}function Ct(e,t){At.call(this,e,t),this.type="LineSegments"}function Rt(e,t){At.call(this,e,t),this.type="LineLoop"}function Pt(e){Q.call(this),this.type="PointsMaterial",this.color=new Y(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(e)}function Lt(e,t){le.call(this),this.type="Points",this.geometry=void 0!==e?e:new Re,this.material=void 0!==t?t:new Pt({color:16777215*Math.random()})}function Nt(){le.call(this),this.type="Group"}function It(e,t,n,r,i,a,s,c,u){function l(){requestAnimationFrame(l),e.readyState>=e.HAVE_CURRENT_DATA&&(h.needsUpdate=!0)}o.call(this,e,t,n,r,i,a,s,c,u),this.generateMipmaps=!1;var h=this;l()}function Dt(e,t,n,r,i,a,s,c,u,l,h,p){o.call(this,null,a,s,c,u,l,r,i,h,p),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function Ot(e,t,n,r,i,a,s,c,u){o.call(this,e,t,n,r,i,a,s,c,u),this.needsUpdate=!0}function Ut(e,t,n,r,i,a,s,c,u,l){if((l=void 0!==l?l:Ha)!==Ha&&l!==Wa)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===Ha&&(n=Ra),void 0===n&&l===Wa&&(n=Ba),o.call(this,null,r,i,a,s,c,l,n,u),this.image={width:e,height:t},this.magFilter=void 0!==s?s:xa,this.minFilter=void 0!==c?c:xa,this.flipY=!1,this.generateMipmaps=!1}function Bt(e){Re.call(this),this.type="WireframeGeometry";var t,n,r,i,o,a,s,c,u,h,p=[],d=[0,0],f={},m=["a","b","c"];if(e&&e.isGeometry){var g=e.faces;for(t=0,r=g.length;t<r;t++){var v=g[t];for(n=0;n<3;n++)s=v[m[n]],c=v[m[(n+1)%3]],d[0]=Math.min(s,c),d[1]=Math.max(s,c),u=d[0]+","+d[1],void 0===f[u]&&(f[u]={index1:d[0],index2:d[1]})}for(u in f)a=f[u],h=e.vertices[a.index1],p.push(h.x,h.y,h.z),h=e.vertices[a.index2],p.push(h.x,h.y,h.z)}else if(e&&e.isBufferGeometry){var y,b,x,_,w,E,M,T;if(h=new l,null!==e.index){for(y=e.attributes.position,b=e.index,x=e.groups,0===x.length&&(x=[{start:0,count:b.count,materialIndex:0}]),i=0,o=x.length;i<o;++i)for(_=x[i],w=_.start,E=_.count,t=w,r=w+E;t<r;t+=3)for(n=0;n<3;n++)s=b.getX(t+n),c=b.getX(t+(n+1)%3),d[0]=Math.min(s,c),d[1]=Math.max(s,c),u=d[0]+","+d[1],void 0===f[u]&&(f[u]={index1:d[0],index2:d[1]});for(u in f)a=f[u],h.fromBufferAttribute(y,a.index1),p.push(h.x,h.y,h.z),h.fromBufferAttribute(y,a.index2),p.push(h.x,h.y,h.z)}else for(y=e.attributes.position,t=0,r=y.count/3;t<r;t++)for(n=0;n<3;n++)M=3*t+n,h.fromBufferAttribute(y,M),p.push(h.x,h.y,h.z),T=3*t+(n+1)%3,h.fromBufferAttribute(y,T),p.push(h.x,h.y,h.z)}this.addAttribute("position",new Ee(p,3))}function Ft(e,t,n){Ce.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new kt(e,t,n)),this.mergeVertices()}function kt(e,t,n){Re.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};var r,i,o=[],a=[],s=[],c=[],u=new l,h=new l,p=new l,d=new l,f=new l,m=t+1;for(r=0;r<=n;r++){var g=r/n;for(i=0;i<=t;i++){var v=i/t;h=e(v,g,h),a.push(h.x,h.y,h.z),v-1e-5>=0?(p=e(v-1e-5,g,p),d.subVectors(h,p)):(p=e(v+1e-5,g,p),d.subVectors(p,h)),g-1e-5>=0?(p=e(v,g-1e-5,p),f.subVectors(h,p)):(p=e(v,g+1e-5,p),f.subVectors(p,h)),u.crossVectors(d,f).normalize(),s.push(u.x,u.y,u.z),c.push(v,g)}}for(r=0;r<n;r++)for(i=0;i<t;i++){var y=r*m+i,b=r*m+i+1,x=(r+1)*m+i+1,_=(r+1)*m+i;o.push(y,b,_),o.push(b,x,_)}this.setIndex(o),this.addAttribute("position",new Ee(a,3)),this.addAttribute("normal",new Ee(s,3)),this.addAttribute("uv",new Ee(c,2))}function zt(e,t,n,r){Ce.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new jt(e,t,n,r)),this.mergeVertices()}function jt(e,t,n,r){function o(e,t,n,r){var i,o,a=Math.pow(2,r),c=[];for(i=0;i<=a;i++){c[i]=[];var u=e.clone().lerp(n,i/a),l=t.clone().lerp(n,i/a),h=a-i;for(o=0;o<=h;o++)c[i][o]=0===o&&i===a?u:u.clone().lerp(l,o/h)}for(i=0;i<a;i++)for(o=0;o<2*(a-i)-1;o++){var p=Math.floor(o/2);o%2===0?(s(c[i][p+1]),s(c[i+1][p]),s(c[i][p])):(s(c[i][p+1]),s(c[i+1][p+1]),s(c[i+1][p]))}}function a(){for(var e=0;e<m.length;e+=6){var t=m[e+0],n=m[e+2],r=m[e+4],i=Math.max(t,n,r),o=Math.min(t,n,r);i>.9&&o<.1&&(t<.2&&(m[e+0]+=1),n<.2&&(m[e+2]+=1),r<.2&&(m[e+4]+=1))}}function s(e){f.push(e.x,e.y,e.z)}function c(t,n){var r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function u(){for(var e=new l,t=new l,n=new l,r=new l,o=new i,a=new i,s=new i,c=0,u=0;c<f.length;c+=9,u+=6){e.set(f[c+0],f[c+1],f[c+2]),t.set(f[c+3],f[c+4],f[c+5]),n.set(f[c+6],f[c+7],f[c+8]),o.set(m[u+0],m[u+1]),a.set(m[u+2],m[u+3]),s.set(m[u+4],m[u+5]),r.copy(e).add(t).add(n).divideScalar(3);var d=p(r);h(o,u+0,e,d),h(a,u+2,t,d),h(s,u+4,n,d)}}function h(e,t,n,r){r<0&&1===e.x&&(m[t]=e.x-1),0===n.x&&0===n.z&&(m[t]=r/2/Math.PI+.5)}function p(e){return Math.atan2(e.z,-e.x)}function d(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}Re.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;var f=[],m=[];!function(e){for(var n=new l,r=new l,i=new l,a=0;a<t.length;a+=3)c(t[a+0],n),c(t[a+1],r),c(t[a+2],i),o(n,r,i,e)}(r),function(e){for(var t=new l,n=0;n<f.length;n+=3)t.x=f[n+0],t.y=f[n+1],t.z=f[n+2],t.normalize().multiplyScalar(e),f[n+0]=t.x,f[n+1]=t.y,f[n+2]=t.z}(n),function(){for(var e=new l,t=0;t<f.length;t+=3){e.x=f[t+0],e.y=f[t+1],e.z=f[t+2];var n=p(e)/2/Math.PI+.5,r=d(e)/Math.PI+.5;m.push(n,1-r)}u(),a()}(),this.addAttribute("position",new Ee(f,3)),this.addAttribute("normal",new Ee(f.slice(),3)),this.addAttribute("uv",new Ee(m,2)),this.normalizeNormals()}function Gt(e,t){Ce.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Vt(e,t)),this.mergeVertices()}function Vt(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];jt.call(this,n,r,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function Ht(e,t){Ce.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Wt(e,t)),this.mergeVertices()}function Wt(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];jt.call(this,n,r,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function Xt(e,t){Ce.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new qt(e,t)),this.mergeVertices()}function qt(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];jt.call(this,r,i,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}function Yt(e,t){Ce.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Zt(e,t)),this.mergeVertices()}function Zt(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];jt.call(this,i,o,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}function Kt(e,t,n,r,i,o){Ce.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");var a=new Jt(e,t,n,r,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}function Jt(e,t,n,r,o){function a(i){var o=e.getPointAt(i/t),a=u.normals[i],s=u.binormals[i];for(p=0;p<=r;p++){var c=p/r*Math.PI*2,l=Math.sin(c),h=-Math.cos(c);f.x=h*a.x+l*s.x,f.y=h*a.y+l*s.y,f.z=h*a.z+l*s.z,f.normalize(),v.push(f.x,f.y,f.z),d.x=o.x+n*f.x,d.y=o.y+n*f.y,d.z=o.z+n*f.z,g.push(d.x,d.y,d.z)}}function s(){for(p=1;p<=t;p++)for(h=1;h<=r;h++){var e=(r+1)*(p-1)+(h-1),n=(r+1)*p+(h-1),i=(r+1)*p+h,o=(r+1)*(p-1)+h;b.push(e,n,o),b.push(n,i,o)}}function c(){for(h=0;h<=t;h++)for(p=0;p<=r;p++)m.x=h/t,m.y=p/r,y.push(m.x,m.y)}Re.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:o},t=t||64,n=n||1,r=r||8,o=o||!1;var u=e.computeFrenetFrames(t,o);this.tangents=u.tangents,this.normals=u.normals,this.binormals=u.binormals;var h,p,d=new l,f=new l,m=new i,g=[],v=[],y=[],b=[];!function(){for(h=0;h<t;h++)a(h);a(!1===o?t:0),c(),s()}(),this.setIndex(b),this.addAttribute("position",new Ee(g,3)),this.addAttribute("normal",new Ee(v,3)),this.addAttribute("uv",new Ee(y,2))}function Qt(e,t,n,r,i,o,a){Ce.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new $t(e,t,n,r,i,o)),this.mergeVertices()}function $t(e,t,n,r,i,o){function a(e,t,n,r,i){var o=Math.cos(e),a=Math.sin(e),s=n/t*e,c=Math.cos(s);i.x=r*(2+c)*.5*o,i.y=r*(2+c)*a*.5,i.z=r*Math.sin(s)*.5}Re.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:o},e=e||100,t=t||40,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,o=o||3;var s,c,u=[],h=[],p=[],d=[],f=new l,m=new l,g=new l,v=new l,y=new l,b=new l,x=new l;for(s=0;s<=n;++s){var _=s/n*i*Math.PI*2;for(a(_,i,o,e,g),a(_+.01,i,o,e,v),b.subVectors(v,g),x.addVectors(v,g),y.crossVectors(b,x),x.crossVectors(y,b),y.normalize(),x.normalize(),c=0;c<=r;++c){var w=c/r*Math.PI*2,E=-t*Math.cos(w),M=t*Math.sin(w);f.x=g.x+(E*x.x+M*y.x),f.y=g.y+(E*x.y+M*y.y),f.z=g.z+(E*x.z+M*y.z),h.push(f.x,f.y,f.z),m.subVectors(f,g).normalize(),p.push(m.x,m.y,m.z),d.push(s/n),d.push(c/r)}}for(c=1;c<=n;c++)for(s=1;s<=r;s++){var T=(r+1)*(c-1)+(s-1),S=(r+1)*c+(s-1),A=(r+1)*c+s,C=(r+1)*(c-1)+s;u.push(T,S,C),u.push(S,A,C)}this.setIndex(u),this.addAttribute("position",new Ee(h,3)),this.addAttribute("normal",new Ee(p,3)),this.addAttribute("uv",new Ee(d,2))}function en(e,t,n,r,i){Ce.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new tn(e,t,n,r,i)),this.mergeVertices()}function tn(e,t,n,r,i){Re.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||100,t=t||40,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||2*Math.PI;var o,a,s=[],c=[],u=[],h=[],p=new l,d=new l,f=new l;for(o=0;o<=n;o++)for(a=0;a<=r;a++){var m=a/r*i,g=o/n*Math.PI*2;d.x=(e+t*Math.cos(g))*Math.cos(m),d.y=(e+t*Math.cos(g))*Math.sin(m),d.z=t*Math.sin(g),c.push(d.x,d.y,d.z),p.x=e*Math.cos(m),p.y=e*Math.sin(m),f.subVectors(d,p).normalize(),u.push(f.x,f.y,f.z),h.push(a/r),h.push(o/n)}for(o=1;o<=n;o++)for(a=1;a<=r;a++){var v=(r+1)*o+a-1,y=(r+1)*(o-1)+a-1,b=(r+1)*(o-1)+a,x=(r+1)*o+a;s.push(v,y,x),s.push(y,b,x)}this.setIndex(s),this.addAttribute("position",new Ee(c,3)),this.addAttribute("normal",new Ee(u,3)),this.addAttribute("uv",new Ee(h,2))}function nn(e,t){Ce.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new rn(e,t)),this.mergeVertices()}function rn(e,t){if("undefined"===typeof e)return void(e=[]);Re.call(this),this.type="ExtrudeBufferGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeVertexNormals()}function on(e,t){Ce.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new an(e,t)),this.mergeVertices()}function an(e,t){t=t||{};var n=t.font;if(!1===(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ce;var r=n.generateShapes(e,t.size,t.curveSegments);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),rn.call(this,r,t),this.type="TextBufferGeometry"}function sn(e,t,n,r,i,o,a){Ce.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new cn(e,t,n,r,i,o,a)),this.mergeVertices()}function cn(e,t,n,r,i,o,a){Re.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:o,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,c,u=o+a,h=0,p=[],d=new l,f=new l,m=[],g=[],v=[],y=[];for(c=0;c<=n;c++){var b=[],x=c/n;for(s=0;s<=t;s++){var _=s/t;d.x=-e*Math.cos(r+_*i)*Math.sin(o+x*a),d.y=e*Math.cos(o+x*a),d.z=e*Math.sin(r+_*i)*Math.sin(o+x*a),g.push(d.x,d.y,d.z),f.set(d.x,d.y,d.z).normalize(),v.push(f.x,f.y,f.z),y.push(_,1-x),b.push(h++)}p.push(b)}for(c=0;c<n;c++)for(s=0;s<t;s++){var w=p[c][s+1],E=p[c][s],M=p[c+1][s],T=p[c+1][s+1];(0!==c||o>0)&&m.push(w,E,T),(c!==n-1||u<Math.PI)&&m.push(E,M,T)}this.setIndex(m),this.addAttribute("position",new Ee(g,3)),this.addAttribute("normal",new Ee(v,3)),this.addAttribute("uv",new Ee(y,2))}function un(e,t,n,r,i,o){Ce.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:o},this.fromBufferGeometry(new ln(e,t,n,r,i,o)),this.mergeVertices()}function ln(e,t,n,r,o,a){Re.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:o,thetaLength:a},e=e||20,t=t||50,o=void 0!==o?o:0,a=void 0!==a?a:2*Math.PI,n=void 0!==n?Math.max(3,n):8,r=void 0!==r?Math.max(1,r):1;var s,c,u,h=[],p=[],d=[],f=[],m=e,g=(t-e)/r,v=new l,y=new i;for(c=0;c<=r;c++){for(u=0;u<=n;u++)s=o+u/n*a,v.x=m*Math.cos(s),v.y=m*Math.sin(s),p.push(v.x,v.y,v.z),d.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,f.push(y.x,y.y);m+=g}for(c=0;c<r;c++){var b=c*(n+1);for(u=0;u<n;u++){s=u+b;var x=s,_=s+n+1,w=s+n+2,E=s+1;h.push(x,_,E),h.push(_,w,E)}}this.setIndex(h),this.addAttribute("position",new Ee(p,3)),this.addAttribute("normal",new Ee(d,3)),this.addAttribute("uv",new Ee(f,2))}function hn(e,t,n,r){Ce.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new pn(e,t,n,r)),this.mergeVertices()}function pn(e,t,n,r){Re.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||2*Math.PI,r=Es.clamp(r,0,2*Math.PI);var o,a,s,c=[],u=[],h=[],p=1/t,d=new l,f=new i;for(a=0;a<=t;a++){var m=n+a*p*r,g=Math.sin(m),v=Math.cos(m);for(s=0;s<=e.length-1;s++)d.x=e[s].x*g,d.y=e[s].y,d.z=e[s].x*v,u.push(d.x,d.y,d.z),f.x=a/t,f.y=s/(e.length-1),h.push(f.x,f.y)}for(a=0;a<t;a++)for(s=0;s<e.length-1;s++){o=s+a*e.length;var y=o,b=o+e.length,x=o+e.length+1,_=o+1;c.push(y,b,_),c.push(b,x,_)}if(this.setIndex(c),this.addAttribute("position",new Ee(u,3)),this.addAttribute("uv",new Ee(h,2)),this.computeVertexNormals(),r===2*Math.PI){var w=this.attributes.normal.array,E=new l,M=new l,T=new l;for(o=t*e.length*3,a=0,s=0;a<e.length;a++,s+=3)E.x=w[s+0],E.y=w[s+1],E.z=w[s+2],M.x=w[o+s+0],M.y=w[o+s+1],M.z=w[o+s+2],T.addVectors(E,M).normalize(),w[s+0]=w[o+s+0]=T.x,w[s+1]=w[o+s+1]=T.y,w[s+2]=w[o+s+2]=T.z}}function dn(e,t){Ce.call(this),this.type="ShapeGeometry","object"===typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new fn(e,t)),this.mergeVertices()}function fn(e,t){function n(e){var n,s,u,l=i.length/3,h=e.extractPoints(t),p=h.shape,d=h.holes;if(!1===js.isClockWise(p))for(p=p.reverse(),n=0,s=d.length;n<s;n++)u=d[n],!0===js.isClockWise(u)&&(d[n]=u.reverse());var f=js.triangulateShape(p,d);for(n=0,s=d.length;n<s;n++)u=d[n],p=p.concat(u);for(n=0,s=p.length;n<s;n++){var m=p[n];i.push(m.x,m.y,0),o.push(0,0,1),a.push(m.x,m.y)}for(n=0,s=f.length;n<s;n++){var g=f[n],v=g[0]+l,y=g[1]+l,b=g[2]+l;r.push(v,y,b),c+=3}}Re.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var r=[],i=[],o=[],a=[],s=0,c=0;if(!1===Array.isArray(e))n(e);else for(var u=0;u<e.length;u++)n(e[u]),this.addGroup(s,c,u),s+=c,c=0;this.setIndex(r),this.addAttribute("position",new Ee(i,3)),this.addAttribute("normal",new Ee(o,3)),this.addAttribute("uv",new Ee(a,2))}function mn(e,t){Re.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;var n,r,i,o,a=[],s=Math.cos(Es.DEG2RAD*t),c=[0,0],u={},l=["a","b","c"];e.isBufferGeometry?(o=new Ce,o.fromBufferGeometry(e)):o=e.clone(),o.mergeVertices(),o.computeFaceNormals();for(var h=o.vertices,p=o.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],g=0;g<3;g++)n=m[l[g]],r=m[l[(g+1)%3]],c[0]=Math.min(n,r),c[1]=Math.max(n,r),i=c[0]+","+c[1],void 0===u[i]?u[i]={index1:c[0],index2:c[1],face1:d,face2:void 0}:u[i].face2=d;for(i in u){var v=u[i];if(void 0===v.face2||p[v.face1].normal.dot(p[v.face2].normal)<=s){var y=h[v.index1];a.push(y.x,y.y,y.z),y=h[v.index2],a.push(y.x,y.y,y.z)}}this.addAttribute("position",new Ee(a,3))}function gn(e,t,n,r,i,o,a,s){Ce.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new vn(e,t,n,r,i,o,a,s)),this.mergeVertices()}function vn(e,t,n,r,o,a,s,c){function u(n){var o,a,u,v=new i,x=new l,_=0,w=!0===n?e:t,E=!0===n?1:-1;for(a=g,o=1;o<=r;o++)d.push(0,y*E,0),f.push(0,E,0),m.push(.5,.5),g++;for(u=g,o=0;o<=r;o++){var M=o/r,T=M*c+s,S=Math.cos(T),A=Math.sin(T);x.x=w*A,x.y=y*E,x.z=w*S,d.push(x.x,x.y,x.z),f.push(0,E,0),v.x=.5*S+.5,v.y=.5*A*E+.5,m.push(v.x,v.y),g++}for(o=0;o<r;o++){var C=a+o,R=u+o;!0===n?p.push(R,R+1,C):p.push(R+1,R,C),_+=3}h.addGroup(b,_,!0===n?1:2),b+=_}Re.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:o,openEnded:a,thetaStart:s,thetaLength:c};var h=this;e=void 0!==e?e:20,t=void 0!==t?t:20,n=void 0!==n?n:100,r=Math.floor(r)||8,o=Math.floor(o)||1,a=void 0!==a&&a,s=void 0!==s?s:0,c=void 0!==c?c:2*Math.PI;var p=[],d=[],f=[],m=[],g=0,v=[],y=n/2,b=0;!function(){var i,a,u=new l,x=new l,_=0,w=(t-e)/n;for(a=0;a<=o;a++){var E=[],M=a/o,T=M*(t-e)+e;for(i=0;i<=r;i++){var S=i/r,A=S*c+s,C=Math.sin(A),R=Math.cos(A);x.x=T*C,x.y=-M*n+y,x.z=T*R,d.push(x.x,x.y,x.z),u.set(C,w,R).normalize(),f.push(u.x,u.y,u.z),m.push(S,1-M),E.push(g++)}v.push(E)}for(i=0;i<r;i++)for(a=0;a<o;a++){var P=v[a][i],L=v[a+1][i],N=v[a+1][i+1],I=v[a][i+1];p.push(P,L,I),p.push(L,N,I),_+=6}h.addGroup(b,_,0),b+=_}(),!1===a&&(e>0&&u(!0),t>0&&u(!1)),this.setIndex(p),this.addAttribute("position",new Ee(d,3)),this.addAttribute("normal",new Ee(f,3)),this.addAttribute("uv",new Ee(m,2))}function yn(e,t,n,r,i,o,a){gn.call(this,0,e,t,n,r,i,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:o,thetaLength:a}}function bn(e,t,n,r,i,o,a){vn.call(this,0,e,t,n,r,i,o,a),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:o,thetaLength:a}}function xn(e,t,n,r){Ce.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new _n(e,t,n,r)),this.mergeVertices()}function _n(e,t,n,r){Re.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||50,t=void 0!==t?Math.max(3,t):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var o,a,s=[],c=[],u=[],h=[],p=new l,d=new i;for(c.push(0,0,0),u.push(0,0,1),h.push(.5,.5),a=0,o=3;a<=t;a++,o+=3){var f=n+a/t*r;p.x=e*Math.cos(f),p.y=e*Math.sin(f),c.push(p.x,p.y,p.z),u.push(0,0,1),d.x=(c[o]/e+1)/2,d.y=(c[o+1]/e+1)/2,h.push(d.x,d.y)}for(o=1;o<=t;o++)s.push(o,o+1,0);this.setIndex(s),this.addAttribute("position",new Ee(c,3)),this.addAttribute("normal",new Ee(u,3)),this.addAttribute("uv",new Ee(h,2))}function wn(e){$.call(this,{uniforms:Ds.merge([Is.lights,{opacity:{value:1}}]),vertexShader:Os.shadow_vert,fragmentShader:Os.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}}}),this.setValues(e)}function En(e){$.call(this,e),this.type="RawShaderMaterial"}function Mn(e){Q.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Y(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Y(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Tn(e){Mn.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)}function Sn(e){Q.call(this),this.type="MeshPhongMaterial",this.color=new Y(16777215),this.specular=new Y(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Y(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ta,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function An(e){Sn.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(e)}function Cn(e){Q.call(this,e),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Rn(e){Q.call(this),this.type="MeshLambertMaterial",this.color=new Y(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Y(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ta,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Pn(e){Q.call(this),this.type="LineDashedMaterial",this.color=new Y(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(e)}function Ln(e,t,n){var r=this,i=!1,o=0,a=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){a++,!1===i&&void 0!==r.onStart&&r.onStart(e,o,a),i=!0},this.itemEnd=function(e){o++,void 0!==r.onProgress&&r.onProgress(e,o,a),o===a&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)}}function Nn(e){this.manager=void 0!==e?e:Ws}function In(e){this.manager=void 0!==e?e:Ws,this._parser=null}function Dn(e){this.manager=void 0!==e?e:Ws,this._parser=null}function On(e){this.manager=void 0!==e?e:Ws}function Un(e){this.manager=void 0!==e?e:Ws}function Bn(e){this.manager=void 0!==e?e:Ws}function Fn(e,t){le.call(this),this.type="Light",this.color=new Y(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function kn(e,t,n){Fn.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(le.DefaultUp),this.updateMatrix(),this.groundColor=new Y(t)}function zn(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new i(512,512),this.map=null,this.matrix=new h}function jn(){zn.call(this,new Ue(50,1,.5,500))}function Gn(e,t,n,r,i,o){Fn.call(this,e,t),this.type="SpotLight",this.position.copy(le.DefaultUp),this.updateMatrix(),this.target=new le,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==o?o:1,this.shadow=new jn}function Vn(e,t,n,r){Fn.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new zn(new Ue(90,1,.5,500))}function Hn(){zn.call(this,new Be(-5,5,5,-5,.5,500))}function Wn(e,t){Fn.call(this,e,t),this.type="DirectionalLight",this.position.copy(le.DefaultUp),this.updateMatrix(),this.target=new le,this.shadow=new Hn}function Xn(e,t){Fn.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function qn(e,t,n,r){Fn.call(this,e,t),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}function Yn(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function Zn(e,t,n,r){Yn.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Kn(e,t,n,r){Yn.call(this,e,t,n,r)}function Jn(e,t,n,r){Yn.call(this,e,t,n,r)}function Qn(e,t,n,r){if(void 0===e)throw new Error("track name is undefined");if(void 0===t||0===t.length)throw new Error("no keyframes in track named "+e);this.name=e,this.times=Xs.convertArray(t,this.TimeBufferType),this.values=Xs.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation),this.validate(),this.optimize()}function $n(e,t,n,r){Qn.call(this,e,t,n,r)}function er(e,t,n,r){Yn.call(this,e,t,n,r)}function tr(e,t,n,r){Qn.call(this,e,t,n,r)}function nr(e,t,n,r){Qn.call(this,e,t,n,r)}function rr(e,t,n,r){Qn.call(this,e,t,n,r)}function ir(e,t,n){Qn.call(this,e,t,n)}function or(e,t,n,r){Qn.call(this,e,t,n,r)}function ar(e,t,n,r){Qn.apply(this,arguments)}function sr(e,t,n){this.name=e,this.tracks=n,this.duration=void 0!==t?t:-1,this.uuid=Es.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function cr(e){this.manager=void 0!==e?e:Ws,this.textures={}}function ur(e){this.manager=void 0!==e?e:Ws}function lr(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}function hr(e){"boolean"===typeof e&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0!==e?e:Ws,this.withCredentials=!1}function pr(e){this.manager=void 0!==e?e:Ws,this.texturePath=""}function dr(e,t,n,r,i){var o=.5*(r-t),a=.5*(i-n),s=e*e;return(2*n-2*r+o+a)*(e*s)+(-3*n+3*r-2*o-a)*s+o*e+n}function fr(e,t){var n=1-e;return n*n*t}function mr(e,t){return 2*(1-e)*e*t}function gr(e,t){return e*e*t}function vr(e,t,n,r){return fr(e,t)+mr(e,n)+gr(e,r)}function yr(e,t){var n=1-e;return n*n*n*t}function br(e,t){var n=1-e;return 3*n*n*e*t}function xr(e,t){return 3*(1-e)*e*e*t}function _r(e,t){return e*e*e*t}function wr(e,t,n,r,i){return yr(e,t)+br(e,n)+xr(e,r)+_r(e,i)}function Er(){this.arcLengthDivisions=200}function Mr(e,t){Er.call(this),this.v1=e,this.v2=t}function Tr(){Er.call(this),this.curves=[],this.autoClose=!1}function Sr(e,t,n,r,i,o,a,s){Er.call(this),this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=o,this.aClockwise=a,this.aRotation=s||0}function Ar(e){Er.call(this),this.points=void 0===e?[]:e}function Cr(e,t,n,r){Er.call(this),this.v0=e,this.v1=t,this.v2=n,this.v3=r}function Rr(e,t,n){Er.call(this),this.v0=e,this.v1=t,this.v2=n}function Pr(e){Tr.call(this),this.currentPoint=new i,e&&this.fromPoints(e)}function Lr(){Pr.apply(this,arguments),this.holes=[]}function Nr(){this.subPaths=[],this.currentPath=null}function Ir(e){this.data=e}function Dr(e){this.manager=void 0!==e?e:Ws}function Or(e){this.manager=void 0!==e?e:Ws}function Ur(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ue,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ue,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function Br(e,t,n){le.call(this),this.type="CubeCamera";var r=new Ue(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new l(1,0,0)),this.add(r);var i=new Ue(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new l(-1,0,0)),this.add(i);var o=new Ue(90,1,e,t);o.up.set(0,0,1),o.lookAt(new l(0,1,0)),this.add(o);var a=new Ue(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new l(0,-1,0)),this.add(a);var s=new Ue(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new l(0,0,1)),this.add(s);var u=new Ue(90,1,e,t);u.up.set(0,-1,0),u.lookAt(new l(0,0,-1)),this.add(u);var h={format:ka,magFilter:Ea,minFilter:Ea};this.renderTarget=new c(n,n,h),this.renderTarget.texture.name="CubeCamera",this.updateCubeMap=function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,c=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,r,n),n.activeCubeFace=1,e.render(t,i,n),n.activeCubeFace=2,e.render(t,o,n),n.activeCubeFace=3,e.render(t,a,n),n.activeCubeFace=4,e.render(t,s,n),n.texture.generateMipmaps=c,n.activeCubeFace=5,e.render(t,u,n),e.setRenderTarget(null)}}function Fr(e){Ue.call(this),this.enabled=!1,this.cameras=e||[]}function kr(){le.call(this),this.type="AudioListener",this.context=ec.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function zr(e){le.call(this),this.type="Audio",this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}function jr(e){zr.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function Gr(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}function Vr(e,t,n){this.binding=e,this.valueSize=n;var r,i=Float64Array;switch(t){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(4*n),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function Hr(e,t,n){var r=n||Wr.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}function Wr(e,t,n){this.path=t,this.parsedPath=n||Wr.parseTrackName(t),this.node=Wr.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function Xr(e){this.uuid=Es.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}function qr(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,i=r.length,o=new Array(i),a={endingStart:ss,endingEnd:ss},s=0;s!==i;++s){var c=r[s].createInterpolant(null);o[s]=c,c.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ns,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Yr(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Zr(e){"string"===typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}function Kr(){Re.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function Jr(e,t,n,r){this.uuid=Es.generateUUID(),this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}function Qr(e,t){this.uuid=Es.generateUUID(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function $r(e,t,n){Qr.call(this,e,t),this.meshPerAttribute=n||1}function ei(e,t,n){me.call(this,e,t),this.meshPerAttribute=n||1}function ti(e,t,n,r){this.ray=new se(e,t),this.near=n||0,this.far=r||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ni(e,t){return e.distance-t.distance}function ri(e,t,n,r){if(!1!==e.visible&&(e.raycast(t,n),!0===r))for(var i=e.children,o=0,a=i.length;o<a;o++)ri(i[o],t,n,!0)}function ii(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function oi(e,t,n){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==n?n:0,this}function ai(e,t,n){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==n?n:0,this}function si(e,t){Pe.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length,r=n-1,i=n/1;this.createAnimation("__default",0,r,i),this.setAnimationWeight("__default",1)}function ci(e){le.call(this),this.material=e,this.render=function(e){}}function ui(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16711680,o=void 0!==r?r:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=3*s.faces.length:s&&s.isBufferGeometry&&(a=s.attributes.normal.count);var c=new Re,u=new Ee(2*a*3,3);c.addAttribute("position",u),Ct.call(this,c,new St({color:i,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}function li(e){le.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;for(var t=new Re,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,i=1;r<32;r++,i++){var o=r/32*Math.PI*2,a=i/32*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(a),Math.sin(a),1)}t.addAttribute("position",new Ee(n,3));var s=new St({fog:!1});this.cone=new Ct(t,s),this.add(this.cone),this.update()}function hi(e){this.bones=this.getBoneList(e);for(var t=new Re,n=[],r=[],i=new Y(0,0,1),o=new Y(0,1,0),a=0;a<this.bones.length;a++){var s=this.bones[a];s.parent&&s.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(i.r,i.g,i.b),r.push(o.r,o.g,o.b))}t.addAttribute("position",new Ee(n,3)),t.addAttribute("color",new Ee(r,3));var c=new St({vertexColors:Mo,depthTest:!1,depthWrite:!1,transparent:!0});Ct.call(this,t,c),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function pi(e,t){this.light=e,this.light.updateMatrixWorld();var n=new cn(t,4,2),r=new fe({wireframe:!0,fog:!1});r.color.copy(this.light.color),Pe.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1}function di(e){le.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new St({color:e.color}),n=new Re;n.addAttribute("position",new me(new Float32Array(15),3)),this.add(new At(n,t)),this.update()}function fi(e,t){le.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var n=new Wt(t);n.rotateY(.5*Math.PI);var r=new fe({vertexColors:Mo,wireframe:!0}),i=n.getAttribute("position"),o=new Float32Array(3*i.count);n.addAttribute("color",new me(o,3)),this.add(new Pe(n,r)),this.update()}function mi(e,t,n,r){e=e||10,t=t||10,n=new Y(void 0!==n?n:4473924),r=new Y(void 0!==r?r:8947848);for(var i=t/2,o=e/t,a=e/2,s=[],c=[],u=0,l=0,h=-a;u<=t;u++,h+=o){s.push(-a,0,h,a,0,h),s.push(h,0,-a,h,0,a);var p=u===i?n:r;p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3}var d=new Re;d.addAttribute("position",new Ee(s,3)),d.addAttribute("color",new Ee(c,3));var f=new St({vertexColors:Mo});Ct.call(this,d,f)}function gi(e,t,n,r,i,o){e=e||10,t=t||16,n=n||8,r=r||64,i=new Y(void 0!==i?i:4473924),o=new Y(void 0!==o?o:8947848);var a,s,c,u,l,h,p,d=[],f=[];for(u=0;u<=t;u++)c=u/t*(2*Math.PI),a=Math.sin(c)*e,s=Math.cos(c)*e,d.push(0,0,0),d.push(a,0,s),p=1&u?i:o,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(u=0;u<=n;u++)for(p=1&u?i:o,h=e-e/n*u,l=0;l<r;l++)c=l/r*(2*Math.PI),a=Math.sin(c)*h,s=Math.cos(c)*h,d.push(a,0,s),f.push(p.r,p.g,p.b),c=(l+1)/r*(2*Math.PI),a=Math.sin(c)*h,s=Math.cos(c)*h,d.push(a,0,s),f.push(p.r,p.g,p.b);var m=new Re;m.addAttribute("position",new Ee(d,3)),m.addAttribute("color",new Ee(f,3));var g=new St({vertexColors:Mo});Ct.call(this,m,g)}function vi(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16776960,o=void 0!==r?r:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var c=new Re,u=new Ee(2*a*3,3);c.addAttribute("position",u),Ct.call(this,c,new St({color:i,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}function yi(e,t){le.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,void 0===t&&(t=1);var n=new Re;n.addAttribute("position",new Ee([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var r=new St({fog:!1});this.add(new At(n,r)),n=new Re,n.addAttribute("position",new Ee([0,0,0,0,0,1],3)),this.add(new At(n,r)),this.update()}function bi(e){function t(e,t,r){n(e,r),n(t,r)}function n(e,t){o.push(0,0,0),a.push(t.r,t.g,t.b),void 0===s[e]&&(s[e]=[]),s[e].push(o.length/3-1)}var r=new Re,i=new St({color:16777215,vertexColors:Eo}),o=[],a=[],s={},c=new Y(16755200),u=new Y(16711680),l=new Y(43775),h=new Y(16777215),p=new Y(3355443);t("n1","n2",c),t("n2","n4",c),t("n4","n3",c),t("n3","n1",c),t("f1","f2",c),t("f2","f4",c),t("f4","f3",c),t("f3","f1",c),t("n1","f1",c),t("n2","f2",c),t("n3","f3",c),t("n4","f4",c),t("p","n1",u),t("p","n2",u),t("p","n3",u),t("p","n4",u),t("u1","u2",l),t("u2","u3",l),t("u3","u1",l),t("c","t",h),t("p","c",p),t("cn1","cn2",p),t("cn3","cn4",p),t("cf1","cf2",p),t("cf3","cf4",p),r.addAttribute("position",new Ee(o,3)),r.addAttribute("color",new Ee(a,3)),Ct.call(this,r,i),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function xi(e,t){this.object=e,void 0===t&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new Re;i.setIndex(new me(n,1)),i.addAttribute("position",new me(r,3)),Ct.call(this,i,new St({color:t})),this.matrixAutoUpdate=!1,this.update()}function _i(e,t,n,r,i,o){le.call(this),void 0===r&&(r=16776960),void 0===n&&(n=1),void 0===i&&(i=.2*n),void 0===o&&(o=.2*i),void 0===tc&&(tc=new Re,tc.addAttribute("position",new Ee([0,0,0,0,1,0],3)),nc=new vn(0,.5,1,5,1),nc.translate(0,-.5,0)),this.position.copy(t),this.line=new At(tc,new St({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Pe(nc,new fe({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,o)}function wi(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Re;r.addAttribute("position",new Ee(t,3)),r.addAttribute("color",new Ee(n,3));var i=new St({vertexColors:Mo});Ct.call(this,r,i)}function Ei(){function e(e,o,a,s){t=e,n=a,r=-3*e+3*o-2*a-s,i=2*e-2*o+a+s}var t=0,n=0,r=0,i=0;return{initCatmullRom:function(t,n,r,i,o){e(n,r,o*(r-t),o*(i-n))},initNonuniformCatmullRom:function(t,n,r,i,o,a,s){var c=(n-t)/o-(r-t)/(o+a)+(r-n)/a,u=(r-n)/a-(i-n)/(a+s)+(i-r)/s;c*=a,u*=a,e(n,r,c,u)},calc:function(e){var o=e*e;return t+n*e+r*o+i*(o*e)}}}function Mi(e){Er.call(this),this.points=e||[],this.closed=!1}function Ti(e,t,n,r){Er.call(this),this.v0=e,this.v1=t,this.v2=n,this.v3=r}function Si(e,t,n){Er.call(this),this.v0=e,this.v1=t,this.v2=n}function Ai(e,t){Er.call(this),this.v1=e,this.v2=t}function Ci(e,t,n,r,i,o){Sr.call(this,e,t,n,n,r,i,o)}function Ri(e,t,n,r,i,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new de(e,t,n,i,o,a)}function Pi(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function Li(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function Ni(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Lt(e,t)}function Ii(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new _t(e)}function Di(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Lt(e,t)}function Oi(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Pt(e)}function Ui(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Pt(e)}function Bi(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Pt(e)}function Fi(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new l(e,t,n)}function ki(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new me(e,t).setDynamic(!0)}function zi(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new ge(e,t)}function ji(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new ve(e,t)}function Gi(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ye(e,t)}function Vi(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new be(e,t)}function Hi(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new xe(e,t)}function Wi(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new _e(e,t)}function Xi(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new we(e,t)}function qi(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Ee(e,t)}function Yi(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Me(e,t)}function Zi(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Mi.call(this,e),this.type="catmullrom",this.closed=!0}function Ki(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Mi.call(this,e),this.type="catmullrom"}function Ji(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Mi.call(this,e),this.type="catmullrom"}function Qi(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new xi(e,t)}function $i(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Ct(new mn(e.geometry),new St({color:void 0!==t?t:16777215}))}function eo(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Ct(new Bt(e.geometry),new St({color:void 0!==t?t:16777215}))}function to(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Nn(e)}function no(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Dn(e)}function ro(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}}function io(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"WebGLRenderTargetCube",function(){return c}),n.d(t,"WebGLRenderTarget",function(){return s}),n.d(t,"WebGLRenderer",function(){return mt}),n.d(t,"ShaderLib",function(){return Us}),n.d(t,"UniformsLib",function(){return Is}),n.d(t,"UniformsUtils",function(){return Ds}),n.d(t,"ShaderChunk",function(){return Os}),n.d(t,"FogExp2",function(){return gt}),n.d(t,"Fog",function(){return vt}),n.d(t,"Scene",function(){return yt}),n.d(t,"LensFlare",function(){return bt}),n.d(t,"Sprite",function(){return _t}),n.d(t,"LOD",function(){return wt}),n.d(t,"SkinnedMesh",function(){return Tt}),n.d(t,"Skeleton",function(){return Et}),n.d(t,"Bone",function(){return Mt}),n.d(t,"Mesh",function(){return Pe}),n.d(t,"LineSegments",function(){return Ct}),n.d(t,"LineLoop",function(){return Rt}),n.d(t,"Line",function(){return At}),n.d(t,"Points",function(){return Lt}),n.d(t,"Group",function(){return Nt}),n.d(t,"VideoTexture",function(){return It}),n.d(t,"DataTexture",function(){return p}),n.d(t,"CompressedTexture",function(){return Dt}),n.d(t,"CubeTexture",function(){return d}),n.d(t,"CanvasTexture",function(){return Ot}),n.d(t,"DepthTexture",function(){return Ut}),n.d(t,"Texture",function(){return o}),n.d(t,"CompressedTextureLoader",function(){return In}),n.d(t,"DataTextureLoader",function(){return Dn}),n.d(t,"CubeTextureLoader",function(){return Un}),n.d(t,"TextureLoader",function(){return Bn}),n.d(t,"ObjectLoader",function(){return pr}),n.d(t,"MaterialLoader",function(){return cr}),n.d(t,"BufferGeometryLoader",function(){return ur}),n.d(t,"DefaultLoadingManager",function(){return Ws}),n.d(t,"LoadingManager",function(){return Ln}),n.d(t,"JSONLoader",function(){return hr}),n.d(t,"ImageLoader",function(){return On}),n.d(t,"FontLoader",function(){return Dr}),n.d(t,"FileLoader",function(){return Nn}),n.d(t,"Loader",function(){return lr}),n.d(t,"Cache",function(){return Hs}),n.d(t,"AudioLoader",function(){return Or}),n.d(t,"SpotLightShadow",function(){return jn}),n.d(t,"SpotLight",function(){return Gn}),n.d(t,"PointLight",function(){return Vn}),n.d(t,"RectAreaLight",function(){return qn}),n.d(t,"HemisphereLight",function(){return kn}),n.d(t,"DirectionalLightShadow",function(){return Hn}),n.d(t,"DirectionalLight",function(){return Wn}),n.d(t,"AmbientLight",function(){return Xn}),n.d(t,"LightShadow",function(){return zn}),n.d(t,"Light",function(){return Fn}),n.d(t,"StereoCamera",function(){return Ur}),n.d(t,"PerspectiveCamera",function(){return Ue}),n.d(t,"OrthographicCamera",function(){return Be}),n.d(t,"CubeCamera",function(){return Br}),n.d(t,"ArrayCamera",function(){return Fr}),n.d(t,"Camera",function(){return Oe}),n.d(t,"AudioListener",function(){return kr}),n.d(t,"PositionalAudio",function(){return jr}),n.d(t,"AudioContext",function(){return ec}),n.d(t,"AudioAnalyser",function(){return Gr}),n.d(t,"Audio",function(){return zr}),n.d(t,"VectorKeyframeTrack",function(){return $n}),n.d(t,"StringKeyframeTrack",function(){return rr}),n.d(t,"QuaternionKeyframeTrack",function(){return tr}),n.d(t,"NumberKeyframeTrack",function(){return nr}),n.d(t,"ColorKeyframeTrack",function(){return or}),n.d(t,"BooleanKeyframeTrack",function(){return ir}),n.d(t,"PropertyMixer",function(){return Vr}),n.d(t,"PropertyBinding",function(){return Wr}),n.d(t,"KeyframeTrack",function(){return ar}),n.d(t,"AnimationUtils",function(){return Xs}),n.d(t,"AnimationObjectGroup",function(){return Xr}),n.d(t,"AnimationMixer",function(){return Yr}),n.d(t,"AnimationClip",function(){return sr}),n.d(t,"Uniform",function(){return Zr}),n.d(t,"InstancedBufferGeometry",function(){return Kr}),n.d(t,"BufferGeometry",function(){return Re}),n.d(t,"GeometryIdCount",function(){return Ae}),n.d(t,"Geometry",function(){return Ce}),n.d(t,"InterleavedBufferAttribute",function(){return Jr}),n.d(t,"InstancedInterleavedBuffer",function(){return $r}),n.d(t,"InterleavedBuffer",function(){return Qr}),n.d(t,"InstancedBufferAttribute",function(){return ei}),n.d(t,"Face3",function(){return de}),n.d(t,"Object3D",function(){return le}),n.d(t,"Raycaster",function(){return ti}),n.d(t,"Layers",function(){return ue}),n.d(t,"EventDispatcher",function(){return r}),n.d(t,"Clock",function(){return ii}),n.d(t,"QuaternionLinearInterpolant",function(){return er}),n.d(t,"LinearInterpolant",function(){return Kn}),n.d(t,"DiscreteInterpolant",function(){return Jn}),n.d(t,"CubicInterpolant",function(){return Zn}),n.d(t,"Interpolant",function(){return Yn}),n.d(t,"Triangle",function(){return pe}),n.d(t,"Math",function(){return Es}),n.d(t,"Spherical",function(){return oi}),n.d(t,"Cylindrical",function(){return ai}),n.d(t,"Plane",function(){return ie}),n.d(t,"Frustum",function(){return oe}),n.d(t,"Sphere",function(){return ne}),n.d(t,"Ray",function(){return se}),n.d(t,"Matrix4",function(){return h}),n.d(t,"Matrix3",function(){return re}),n.d(t,"Box3",function(){return te}),n.d(t,"Box2",function(){return Z}),n.d(t,"Line3",function(){return he}),n.d(t,"Euler",function(){return ce}),n.d(t,"Vector4",function(){return a}),n.d(t,"Vector3",function(){return l}),n.d(t,"Vector2",function(){return i}),n.d(t,"Quaternion",function(){return u}),n.d(t,"Color",function(){return Y}),n.d(t,"MorphBlendMesh",function(){return si}),n.d(t,"ImmediateRenderObject",function(){return ci}),n.d(t,"VertexNormalsHelper",function(){return ui}),n.d(t,"SpotLightHelper",function(){return li}),n.d(t,"SkeletonHelper",function(){return hi}),n.d(t,"PointLightHelper",function(){return pi}),n.d(t,"RectAreaLightHelper",function(){return di}),n.d(t,"HemisphereLightHelper",function(){return fi}),n.d(t,"GridHelper",function(){return mi}),n.d(t,"PolarGridHelper",function(){return gi}),n.d(t,"FaceNormalsHelper",function(){return vi}),n.d(t,"DirectionalLightHelper",function(){return yi}),n.d(t,"CameraHelper",function(){return bi}),n.d(t,"BoxHelper",function(){return xi}),n.d(t,"ArrowHelper",function(){return _i}),n.d(t,"AxisHelper",function(){return wi}),n.d(t,"CatmullRomCurve3",function(){return Mi}),n.d(t,"CubicBezierCurve3",function(){return Ti}),n.d(t,"QuadraticBezierCurve3",function(){return Si}),n.d(t,"LineCurve3",function(){return Ai}),n.d(t,"ArcCurve",function(){return Ci}),n.d(t,"EllipseCurve",function(){return Sr}),n.d(t,"SplineCurve",function(){return Ar}),n.d(t,"CubicBezierCurve",function(){return Cr}),n.d(t,"QuadraticBezierCurve",function(){return Rr}),n.d(t,"LineCurve",function(){return Mr}),n.d(t,"Shape",function(){return Lr}),n.d(t,"Path",function(){return Pr}),n.d(t,"ShapePath",function(){return Nr}),n.d(t,"Font",function(){return Ir}),n.d(t,"CurvePath",function(){return Tr}),n.d(t,"Curve",function(){return Er}),n.d(t,"ShapeUtils",function(){return js}),n.d(t,"SceneUtils",function(){return sc}),n.d(t,"WireframeGeometry",function(){return Bt}),n.d(t,"ParametricGeometry",function(){return Ft}),n.d(t,"ParametricBufferGeometry",function(){return kt}),n.d(t,"TetrahedronGeometry",function(){return Gt}),n.d(t,"TetrahedronBufferGeometry",function(){return Vt}),n.d(t,"OctahedronGeometry",function(){return Ht}),n.d(t,"OctahedronBufferGeometry",function(){return Wt}),n.d(t,"IcosahedronGeometry",function(){return Xt}),n.d(t,"IcosahedronBufferGeometry",function(){return qt}),n.d(t,"DodecahedronGeometry",function(){return Yt}),n.d(t,"DodecahedronBufferGeometry",function(){return Zt}),n.d(t,"PolyhedronGeometry",function(){return zt}),n.d(t,"PolyhedronBufferGeometry",function(){return jt}),n.d(t,"TubeGeometry",function(){return Kt}),n.d(t,"TubeBufferGeometry",function(){return Jt}),n.d(t,"TorusKnotGeometry",function(){return Qt}),n.d(t,"TorusKnotBufferGeometry",function(){return $t}),n.d(t,"TorusGeometry",function(){return en}),n.d(t,"TorusBufferGeometry",function(){return tn}),n.d(t,"TextGeometry",function(){return on}),n.d(t,"TextBufferGeometry",function(){return an}),n.d(t,"SphereGeometry",function(){return sn}),n.d(t,"SphereBufferGeometry",function(){return cn}),n.d(t,"RingGeometry",function(){return un}),n.d(t,"RingBufferGeometry",function(){return ln}),n.d(t,"PlaneGeometry",function(){return Ie}),n.d(t,"PlaneBufferGeometry",function(){return De}),n.d(t,"LatheGeometry",function(){return hn}),n.d(t,"LatheBufferGeometry",function(){return pn}),n.d(t,"ShapeGeometry",function(){return dn}),n.d(t,"ShapeBufferGeometry",function(){return fn}),n.d(t,"ExtrudeGeometry",function(){return nn}),n.d(t,"ExtrudeBufferGeometry",function(){return rn}),n.d(t,"EdgesGeometry",function(){return mn}),n.d(t,"ConeGeometry",function(){return yn}),n.d(t,"ConeBufferGeometry",function(){return bn}),n.d(t,"CylinderGeometry",function(){return gn}),n.d(t,"CylinderBufferGeometry",function(){return vn}),n.d(t,"CircleGeometry",function(){return xn}),n.d(t,"CircleBufferGeometry",function(){return _n}),n.d(t,"BoxGeometry",function(){return Le}),n.d(t,"BoxBufferGeometry",function(){return Ne}),n.d(t,"ShadowMaterial",function(){return wn}),n.d(t,"SpriteMaterial",function(){return xt}),n.d(t,"RawShaderMaterial",function(){return En}),n.d(t,"ShaderMaterial",function(){return $}),n.d(t,"PointsMaterial",function(){return Pt});n.d(t,"MeshPhysicalMaterial",function(){return Tn}),n.d(t,"MeshStandardMaterial",function(){return Mn}),n.d(t,"MeshPhongMaterial",function(){return Sn}),n.d(t,"MeshToonMaterial",function(){return An}),n.d(t,"MeshNormalMaterial",function(){return Cn}),n.d(t,"MeshLambertMaterial",function(){return Rn}),n.d(t,"MeshDepthMaterial",function(){return ee}),n.d(t,"MeshBasicMaterial",function(){return fe}),n.d(t,"LineDashedMaterial",function(){return Pn}),n.d(t,"LineBasicMaterial",function(){return St}),n.d(t,"Material",function(){return Q}),n.d(t,"Float64BufferAttribute",function(){return Me}),n.d(t,"Float32BufferAttribute",function(){return Ee}),n.d(t,"Uint32BufferAttribute",function(){return we}),n.d(t,"Int32BufferAttribute",function(){return _e}),n.d(t,"Uint16BufferAttribute",function(){return xe}),n.d(t,"Int16BufferAttribute",function(){return be}),n.d(t,"Uint8ClampedBufferAttribute",function(){return ye}),n.d(t,"Uint8BufferAttribute",function(){return ve}),n.d(t,"Int8BufferAttribute",function(){return ge}),n.d(t,"BufferAttribute",function(){return me}),n.d(t,"REVISION",function(){return oo}),n.d(t,"MOUSE",function(){return ao}),n.d(t,"CullFaceNone",function(){return so}),n.d(t,"CullFaceBack",function(){return co}),n.d(t,"CullFaceFront",function(){return uo}),n.d(t,"CullFaceFrontBack",function(){return lo}),n.d(t,"FrontFaceDirectionCW",function(){return ho}),n.d(t,"FrontFaceDirectionCCW",function(){return po}),n.d(t,"BasicShadowMap",function(){return fo}),n.d(t,"PCFShadowMap",function(){return mo}),n.d(t,"PCFSoftShadowMap",function(){return go}),n.d(t,"FrontSide",function(){return vo}),n.d(t,"BackSide",function(){return yo}),n.d(t,"DoubleSide",function(){return bo}),n.d(t,"FlatShading",function(){return xo}),n.d(t,"SmoothShading",function(){return _o}),n.d(t,"NoColors",function(){return wo}),n.d(t,"FaceColors",function(){return Eo}),n.d(t,"VertexColors",function(){return Mo}),n.d(t,"NoBlending",function(){return To}),n.d(t,"NormalBlending",function(){return So}),n.d(t,"AdditiveBlending",function(){return Ao}),n.d(t,"SubtractiveBlending",function(){return Co}),n.d(t,"MultiplyBlending",function(){return Ro}),n.d(t,"CustomBlending",function(){return Po}),n.d(t,"AddEquation",function(){return Lo}),n.d(t,"SubtractEquation",function(){return No}),n.d(t,"ReverseSubtractEquation",function(){return Io}),n.d(t,"MinEquation",function(){return Do}),n.d(t,"MaxEquation",function(){return Oo}),n.d(t,"ZeroFactor",function(){return Uo}),n.d(t,"OneFactor",function(){return Bo}),n.d(t,"SrcColorFactor",function(){return Fo}),n.d(t,"OneMinusSrcColorFactor",function(){return ko}),n.d(t,"SrcAlphaFactor",function(){return zo}),n.d(t,"OneMinusSrcAlphaFactor",function(){return jo}),n.d(t,"DstAlphaFactor",function(){return Go}),n.d(t,"OneMinusDstAlphaFactor",function(){return Vo}),n.d(t,"DstColorFactor",function(){return Ho}),n.d(t,"OneMinusDstColorFactor",function(){return Wo}),n.d(t,"SrcAlphaSaturateFactor",function(){return Xo}),n.d(t,"NeverDepth",function(){return qo}),n.d(t,"AlwaysDepth",function(){return Yo}),n.d(t,"LessDepth",function(){return Zo}),n.d(t,"LessEqualDepth",function(){return Ko}),n.d(t,"EqualDepth",function(){return Jo}),n.d(t,"GreaterEqualDepth",function(){return Qo}),n.d(t,"GreaterDepth",function(){return $o}),n.d(t,"NotEqualDepth",function(){return ea}),n.d(t,"MultiplyOperation",function(){return ta}),n.d(t,"MixOperation",function(){return na}),n.d(t,"AddOperation",function(){return ra}),n.d(t,"NoToneMapping",function(){return ia}),n.d(t,"LinearToneMapping",function(){return oa}),n.d(t,"ReinhardToneMapping",function(){return aa}),n.d(t,"Uncharted2ToneMapping",function(){return sa}),n.d(t,"CineonToneMapping",function(){return ca}),n.d(t,"UVMapping",function(){return ua}),n.d(t,"CubeReflectionMapping",function(){return la}),n.d(t,"CubeRefractionMapping",function(){return ha}),n.d(t,"EquirectangularReflectionMapping",function(){return pa}),n.d(t,"EquirectangularRefractionMapping",function(){return da}),n.d(t,"SphericalReflectionMapping",function(){return fa}),n.d(t,"CubeUVReflectionMapping",function(){return ma}),n.d(t,"CubeUVRefractionMapping",function(){return ga}),n.d(t,"RepeatWrapping",function(){return va}),n.d(t,"ClampToEdgeWrapping",function(){return ya}),n.d(t,"MirroredRepeatWrapping",function(){return ba}),n.d(t,"NearestFilter",function(){return xa}),n.d(t,"NearestMipMapNearestFilter",function(){return _a}),n.d(t,"NearestMipMapLinearFilter",function(){return wa}),n.d(t,"LinearFilter",function(){return Ea}),n.d(t,"LinearMipMapNearestFilter",function(){return Ma}),n.d(t,"LinearMipMapLinearFilter",function(){return Ta}),n.d(t,"UnsignedByteType",function(){return Sa}),n.d(t,"ByteType",function(){return Aa}),n.d(t,"ShortType",function(){return Ca}),n.d(t,"UnsignedShortType",function(){return Ra}),n.d(t,"IntType",function(){return Pa}),n.d(t,"UnsignedIntType",function(){return La}),n.d(t,"FloatType",function(){return Na}),n.d(t,"HalfFloatType",function(){return Ia}),n.d(t,"UnsignedShort4444Type",function(){return Da}),n.d(t,"UnsignedShort5551Type",function(){return Oa}),n.d(t,"UnsignedShort565Type",function(){return Ua}),n.d(t,"UnsignedInt248Type",function(){return Ba}),n.d(t,"AlphaFormat",function(){return Fa}),n.d(t,"RGBFormat",function(){return ka}),n.d(t,"RGBAFormat",function(){return za}),n.d(t,"LuminanceFormat",function(){return ja}),n.d(t,"LuminanceAlphaFormat",function(){return Ga}),n.d(t,"RGBEFormat",function(){return Va}),n.d(t,"DepthFormat",function(){return Ha}),n.d(t,"DepthStencilFormat",function(){return Wa}),n.d(t,"RGB_S3TC_DXT1_Format",function(){return Xa}),n.d(t,"RGBA_S3TC_DXT1_Format",function(){return qa}),n.d(t,"RGBA_S3TC_DXT3_Format",function(){return Ya}),n.d(t,"RGBA_S3TC_DXT5_Format",function(){return Za}),n.d(t,"RGB_PVRTC_4BPPV1_Format",function(){return Ka}),n.d(t,"RGB_PVRTC_2BPPV1_Format",function(){return Ja}),n.d(t,"RGBA_PVRTC_4BPPV1_Format",function(){return Qa}),n.d(t,"RGBA_PVRTC_2BPPV1_Format",function(){return $a}),n.d(t,"RGB_ETC1_Format",function(){return es}),n.d(t,"LoopOnce",function(){return ts}),n.d(t,"LoopRepeat",function(){return ns}),n.d(t,"LoopPingPong",function(){return rs}),n.d(t,"InterpolateDiscrete",function(){return is}),n.d(t,"InterpolateLinear",function(){return os}),n.d(t,"InterpolateSmooth",function(){return as}),n.d(t,"ZeroCurvatureEnding",function(){return ss}),n.d(t,"ZeroSlopeEnding",function(){return cs}),n.d(t,"WrapAroundEnding",function(){return us}),n.d(t,"TrianglesDrawMode",function(){return ls}),n.d(t,"TriangleStripDrawMode",function(){return hs}),n.d(t,"TriangleFanDrawMode",function(){return ps}),n.d(t,"LinearEncoding",function(){return ds}),n.d(t,"sRGBEncoding",function(){return fs}),n.d(t,"GammaEncoding",function(){return ms}),n.d(t,"RGBEEncoding",function(){return gs}),n.d(t,"LogLuvEncoding",function(){return vs}),n.d(t,"RGBM7Encoding",function(){return ys}),n.d(t,"RGBM16Encoding",function(){return bs}),n.d(t,"RGBDEncoding",function(){return xs}),n.d(t,"BasicDepthPacking",function(){return _s}),n.d(t,"RGBADepthPacking",function(){return ws}),n.d(t,"CubeGeometry",function(){return Le}),n.d(t,"Face4",function(){return Ri}),n.d(t,"LineStrip",function(){return cc}),n.d(t,"LinePieces",function(){return uc}),n.d(t,"MeshFaceMaterial",function(){return Pi}),n.d(t,"MultiMaterial",function(){return Li}),n.d(t,"PointCloud",function(){return Ni}),n.d(t,"Particle",function(){return Ii}),n.d(t,"ParticleSystem",function(){return Di}),n.d(t,"PointCloudMaterial",function(){return Oi}),n.d(t,"ParticleBasicMaterial",function(){return Ui}),n.d(t,"ParticleSystemMaterial",function(){return Bi}),n.d(t,"Vertex",function(){return Fi}),n.d(t,"DynamicBufferAttribute",function(){return ki}),n.d(t,"Int8Attribute",function(){return zi}),n.d(t,"Uint8Attribute",function(){return ji}),n.d(t,"Uint8ClampedAttribute",function(){return Gi}),n.d(t,"Int16Attribute",function(){return Vi}),n.d(t,"Uint16Attribute",function(){return Hi}),n.d(t,"Int32Attribute",function(){return Wi}),n.d(t,"Uint32Attribute",function(){return Xi}),n.d(t,"Float32Attribute",function(){return qi}),n.d(t,"Float64Attribute",function(){return Yi}),n.d(t,"ClosedSplineCurve3",function(){return Zi}),n.d(t,"SplineCurve3",function(){return Ki}),n.d(t,"Spline",function(){return Ji}),n.d(t,"BoundingBoxHelper",function(){return Qi}),n.d(t,"EdgesHelper",function(){return $i}),n.d(t,"WireframeHelper",function(){return eo}),n.d(t,"XHRLoader",function(){return to}),n.d(t,"BinaryTextureLoader",function(){return no}),n.d(t,"GeometryUtils",function(){return lc}),n.d(t,"ImageUtils",function(){return hc}),n.d(t,"Projector",function(){return ro}),n.d(t,"CanvasRenderer",function(){return io}),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return"number"===typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&function(){Object.assign=function(e){if(void 0===e||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(void 0!==r&&null!==r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t}}(),Object.assign(r.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners,r=n[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,n=t[e.type];if(void 0!==n){e.target=this;var r=[],i=0,o=n.length;for(i=0;i<o;i++)r[i]=n[i];for(i=0;i<o;i++)r[i].call(this,e)}}}});var oo="85",ao={LEFT:0,MIDDLE:1,RIGHT:2},so=0,co=1,uo=2,lo=3,ho=0,po=1,fo=0,mo=1,go=2,vo=0,yo=1,bo=2,xo=1,_o=2,wo=0,Eo=1,Mo=2,To=0,So=1,Ao=2,Co=3,Ro=4,Po=5,Lo=100,No=101,Io=102,Do=103,Oo=104,Uo=200,Bo=201,Fo=202,ko=203,zo=204,jo=205,Go=206,Vo=207,Ho=208,Wo=209,Xo=210,qo=0,Yo=1,Zo=2,Ko=3,Jo=4,Qo=5,$o=6,ea=7,ta=0,na=1,ra=2,ia=0,oa=1,aa=2,sa=3,ca=4,ua=300,la=301,ha=302,pa=303,da=304,fa=305,ma=306,ga=307,va=1e3,ya=1001,ba=1002,xa=1003,_a=1004,wa=1005,Ea=1006,Ma=1007,Ta=1008,Sa=1009,Aa=1010,Ca=1011,Ra=1012,Pa=1013,La=1014,Na=1015,Ia=1016,Da=1017,Oa=1018,Ua=1019,Ba=1020,Fa=1021,ka=1022,za=1023,ja=1024,Ga=1025,Va=za,Ha=1026,Wa=1027,Xa=2001,qa=2002,Ya=2003,Za=2004,Ka=2100,Ja=2101,Qa=2102,$a=2103,es=2151,ts=2200,ns=2201,rs=2202,is=2300,os=2301,as=2302,ss=2400,cs=2401,us=2402,ls=0,hs=1,ps=2,ds=3e3,fs=3001,ms=3007,gs=3002,vs=3003,ys=3004,bs=3005,xs=3006,_s=3200,ws=3201,Es={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),r=0;return function(){for(var i=0;i<36;i++)8===i||13===i||18===i||23===i?n[i]="-":14===i?n[i]="4":(r<=2&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,n[i]=t[19===i?3&e|8:e]);return n.join("")}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Es.DEG2RAD},radToDeg:function(e){return e*Es.RAD2DEG},isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}};Object.defineProperties(i.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(i.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e=new i,t=new i;return function(n,r){return e.set(n,n),t.set(r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,o=this.y-e.y;return this.x=i*n-o*r+e.x,this.y=i*r+o*n+e.y,this}});var Ms=0;o.DEFAULT_IMAGE=void 0,o.DEFAULT_MAPPING=ua,Object.defineProperty(o.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(o.prototype,r.prototype,{constructor:o,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var n=this.image;void 0===n.uuid&&(n.uuid=Es.generateUUID()),void 0===e.images[n.uuid]&&(e.images[n.uuid]={uuid:n.uuid,url:function(e){var t;return void 0!==e.toDataURL?t=e:(t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),t.width=e.width,t.height=e.height,t.getContext("2d").drawImage(e,0,0,e.width,e.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}(n)}),t.image=n.uuid}return e.textures[this.uuid]=t,t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping===ua){if(e.multiply(this.repeat),e.add(this.offset),e.x<0||e.x>1)switch(this.wrapS){case va:e.x=e.x-Math.floor(e.x);break;case ya:e.x=e.x<0?0:1;break;case ba:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case va:e.y=e.y-Math.floor(e.y);break;case ya:e.y=e.y<0?0:1;break;case ba:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}}),Object.assign(a.prototype,{isVector4:!0,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*i,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*i,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*i,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,o=e.elements,a=o[0],s=o[4],c=o[8],u=o[1],l=o[5],h=o[9],p=o[2],d=o[6],f=o[10];if(Math.abs(s-u)<.01&&Math.abs(c-p)<.01&&Math.abs(h-d)<.01){if(Math.abs(s+u)<.1&&Math.abs(c+p)<.1&&Math.abs(h+d)<.1&&Math.abs(a+l+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(a+1)/2,g=(l+1)/2,v=(f+1)/2,y=(s+u)/4,b=(c+p)/4,x=(h+d)/4;return m>g&&m>v?m<.01?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(m),r=y/n,i=b/n):g>v?g<.01?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(g),n=y/r,i=x/r):v<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(v),n=b/i,r=x/i),this.set(n,r,i,t),this}var _=Math.sqrt((d-h)*(d-h)+(c-p)*(c-p)+(u-s)*(u-s));return Math.abs(_)<.001&&(_=1),this.x=(d-h)/_,this.y=(c-p)/_,this.z=(u-s)/_,this.w=Math.acos((a+l+f-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e=new a,t=new a;return function(n,r){return e.set(n,n,n,n),t.set(r,r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}}),Object.assign(s.prototype,r.prototype,{isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),c.prototype=Object.create(s.prototype),c.prototype.constructor=c,c.prototype.isWebGLRenderTargetCube=!0,Object.assign(u,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,i,o,a){var s=n[r+0],c=n[r+1],u=n[r+2],l=n[r+3],h=i[o+0],p=i[o+1],d=i[o+2],f=i[o+3];if(l!==f||s!==h||c!==p||u!==d){var m=1-a,g=s*h+c*p+u*d+l*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){var b=Math.sqrt(y),x=Math.atan2(b,g*v);m=Math.sin(m*x)/b,a=Math.sin(a*x)/b}var _=a*v;if(s=s*m+h*_,c=c*m+p*_,u=u*m+d*_,l=l*m+f*_,m===1-a){var w=1/Math.sqrt(s*s+c*c+u*u+l*l);s*=w,c*=w,u*=w,l*=w}}e[t]=s,e[t+1]=c,e[t+2]=u,e[t+3]=l}}),Object.defineProperties(u.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(u.prototype,{set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!1===(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,o=e.order,a=Math.cos,s=Math.sin,c=a(n/2),u=a(r/2),l=a(i/2),h=s(n/2),p=s(r/2),d=s(i/2);return"XYZ"===o?(this._x=h*u*l+c*p*d,this._y=c*p*l-h*u*d,this._z=c*u*d+h*p*l,this._w=c*u*l-h*p*d):"YXZ"===o?(this._x=h*u*l+c*p*d,this._y=c*p*l-h*u*d,this._z=c*u*d-h*p*l,this._w=c*u*l+h*p*d):"ZXY"===o?(this._x=h*u*l-c*p*d,this._y=c*p*l+h*u*d,this._z=c*u*d+h*p*l,this._w=c*u*l-h*p*d):"ZYX"===o?(this._x=h*u*l-c*p*d,this._y=c*p*l+h*u*d,this._z=c*u*d-h*p*l,this._w=c*u*l+h*p*d):"YZX"===o?(this._x=h*u*l+c*p*d,this._y=c*p*l+h*u*d,this._z=c*u*d-h*p*l,this._w=c*u*l-h*p*d):"XZY"===o&&(this._x=h*u*l-c*p*d,this._y=c*p*l-h*u*d,this._z=c*u*d+h*p*l,this._w=c*u*l+h*p*d),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,r=n[0],i=n[4],o=n[8],a=n[1],s=n[5],c=n[9],u=n[2],l=n[6],h=n[10],p=r+s+h;return p>0?(t=.5/Math.sqrt(p+1),this._w=.25/t,this._x=(l-c)*t,this._y=(o-u)*t,this._z=(a-i)*t):r>s&&r>h?(t=2*Math.sqrt(1+r-s-h),this._w=(l-c)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(o+u)/t):s>h?(t=2*Math.sqrt(1+s-r-h),this._w=(o-u)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(c+l)/t):(t=2*Math.sqrt(1+h-r-s),this._w=(a-i)/t,this._x=(o+u)/t,this._y=(c+l)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t=new l;return function(n,r){return void 0===t&&(t=new l),e=n.dot(r)+1,e<1e-6?(e=0,Math.abs(n.x)>Math.abs(n.z)?t.set(-n.y,n.x,0):t.set(0,-n.z,n.y)):t.crossVectors(n,r),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,o=e._w,a=t._x,s=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-i*s,this._y=r*u+o*s+i*a-n*c,this._z=i*u+o*c+n*s-r*a,this._w=o*u-n*a-r*s-i*c,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,o=this._w,a=o*e._w+n*e._x+r*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=i,this;var s=Math.sqrt(1-a*a);if(Math.abs(s)<.001)return this._w=.5*(o+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;var c=Math.atan2(s,a),u=Math.sin((1-t)*c)/s,l=Math.sin(t*c)/s;return this._w=o*u+this._w*l,this._x=n*u+this._x*l,this._y=r*u+this._y*l,this._z=i*u+this._z*l,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(l.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e=new u;return function(t){return!1===(t&&t.isEuler)&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(e.setFromEuler(t))}}(),applyAxisAngle:function(){var e=new u;return function(t,n){return this.applyQuaternion(e.setFromAxisAngle(t,n))}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;this.x=i[0]*t+i[4]*n+i[8]*r+i[12],this.y=i[1]*t+i[5]*n+i[9]*r+i[13],this.z=i[2]*t+i[6]*n+i[10]*r+i[14];var o=i[3]*t+i[7]*n+i[11]*r+i[15];return this.divideScalar(o)},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,o=e.y,a=e.z,s=e.w,c=s*t+o*r-a*n,u=s*n+a*t-i*r,l=s*r+i*n-o*t,h=-i*t-o*n-a*r;return this.x=c*s+h*-i+u*-a-l*-o,this.y=u*s+h*-o+l*-i-c*-a,this.z=l*s+h*-a+c*-o-u*-i,this},project:function(){var e=new h;return function(t){return e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyMatrix4(e)}}(),unproject:function(){var e=new h;return function(t){return e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyMatrix4(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e=new l,t=new l;return function(n,r){return e.set(n,n,n),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,o=t.x,a=t.y,s=t.z;return this.x=r*s-i*a,this.y=i*o-n*s,this.z=n*a-r*o,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e=new l;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new l;return function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(Es.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromCylindrical:function(e){return this.x=e.radius*Math.sin(e.theta),this.y=e.y,this.z=e.radius*Math.cos(e.theta),this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}}),Object.assign(h.prototype,{isMatrix4:!0,set:function(e,t,n,r,i,o,a,s,c,u,l,h,p,d,f,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=o,g[9]=a,g[13]=s,g[2]=c,g[6]=u,g[10]=l,g[14]=h,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new h).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e=new l;return function(t){var n=this.elements,r=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),o=1/e.setFromMatrixColumn(t,1).length(),a=1/e.setFromMatrixColumn(t,2).length();return n[0]=r[0]*i,n[1]=r[1]*i,n[2]=r[2]*i,n[4]=r[4]*o,n[5]=r[5]*o,n[6]=r[6]*o,n[8]=r[8]*a,n[9]=r[9]*a,n[10]=r[10]*a,this}}(),makeRotationFromEuler:function(e){!1===(e&&e.isEuler)&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,i=e.z,o=Math.cos(n),a=Math.sin(n),s=Math.cos(r),c=Math.sin(r),u=Math.cos(i),l=Math.sin(i);if("XYZ"===e.order){var h=o*u,p=o*l,d=a*u,f=a*l;t[0]=s*u,t[4]=-s*l,t[8]=c,t[1]=p+d*c,t[5]=h-f*c,t[9]=-a*s,t[2]=f-h*c,t[6]=d+p*c,t[10]=o*s}else if("YXZ"===e.order){var m=s*u,g=s*l,v=c*u,y=c*l;t[0]=m+y*a,t[4]=v*a-g,t[8]=o*c,t[1]=o*l,t[5]=o*u,t[9]=-a,t[2]=g*a-v,t[6]=y+m*a,t[10]=o*s}else if("ZXY"===e.order){var m=s*u,g=s*l,v=c*u,y=c*l;t[0]=m-y*a,t[4]=-o*l,t[8]=v+g*a,t[1]=g+v*a,t[5]=o*u,t[9]=y-m*a,t[2]=-o*c,t[6]=a,t[10]=o*s}else if("ZYX"===e.order){var h=o*u,p=o*l,d=a*u,f=a*l;t[0]=s*u,t[4]=d*c-p,t[8]=h*c+f,t[1]=s*l,t[5]=f*c+h,t[9]=p*c-d,t[2]=-c,t[6]=a*s,t[10]=o*s}else if("YZX"===e.order){var b=o*s,x=o*c,_=a*s,w=a*c;t[0]=s*u,t[4]=w-b*l,t[8]=_*l+x,t[1]=l,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=x*l+_,t[10]=b-w*l}else if("XZY"===e.order){var b=o*s,x=o*c,_=a*s,w=a*c;t[0]=s*u,t[4]=-l,t[8]=c*u,t[1]=b*l+w,t[5]=o*u,t[9]=x*l-_,t[2]=_*l-x,t[6]=a*u,t[10]=w*l+b}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,n=e._x,r=e._y,i=e._z,o=e._w,a=n+n,s=r+r,c=i+i,u=n*a,l=n*s,h=n*c,p=r*s,d=r*c,f=i*c,m=o*a,g=o*s,v=o*c;return t[0]=1-(p+f),t[4]=l-v,t[8]=h+g,t[1]=l+v,t[5]=1-(u+f),t[9]=d-m,t[2]=h-g,t[6]=d+m,t[10]=1-(u+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new l,t=new l,n=new l;return function(r,i,o){var a=this.elements;return n.subVectors(r,i),0===n.lengthSq()&&(n.z=1),n.normalize(),e.crossVectors(o,n),0===e.lengthSq()&&(n.z+=1e-4,e.crossVectors(o,n)),e.normalize(),t.crossVectors(n,e),a[0]=e.x,a[4]=t.x,a[8]=n.x,a[1]=e.y,a[5]=t.y,a[9]=n.y,a[2]=e.z,a[6]=t.z,a[10]=n.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,o=n[0],a=n[4],s=n[8],c=n[12],u=n[1],l=n[5],h=n[9],p=n[13],d=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],b=n[11],x=n[15],_=r[0],w=r[4],E=r[8],M=r[12],T=r[1],S=r[5],A=r[9],C=r[13],R=r[2],P=r[6],L=r[10],N=r[14],I=r[3],D=r[7],O=r[11],U=r[15];return i[0]=o*_+a*T+s*R+c*I,i[4]=o*w+a*S+s*P+c*D,i[8]=o*E+a*A+s*L+c*O,i[12]=o*M+a*C+s*N+c*U,i[1]=u*_+l*T+h*R+p*I,i[5]=u*w+l*S+h*P+p*D,i[9]=u*E+l*A+h*L+p*O,i[13]=u*M+l*C+h*N+p*U,i[2]=d*_+f*T+m*R+g*I,i[6]=d*w+f*S+m*P+g*D,i[10]=d*E+f*A+m*L+g*O,i[14]=d*M+f*C+m*N+g*U,i[3]=v*_+y*T+b*R+x*I,i[7]=v*w+y*S+b*P+x*D,i[11]=v*E+y*A+b*L+x*O,i[15]=v*M+y*C+b*N+x*U,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e=new l;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix4(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],o=e[1],a=e[5],s=e[9],c=e[13],u=e[2],l=e[6],h=e[10],p=e[14];return e[3]*(+i*s*l-r*c*l-i*a*h+n*c*h+r*a*p-n*s*p)+e[7]*(+t*s*p-t*c*h+i*o*h-r*o*p+r*c*u-i*s*u)+e[11]*(+t*c*l-t*a*p-i*o*l+n*o*p+i*a*u-n*c*u)+e[15]*(-r*a*u-t*s*l+t*a*h+r*o*l-n*o*h+n*s*u)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],o=r[1],a=r[2],s=r[3],c=r[4],u=r[5],l=r[6],h=r[7],p=r[8],d=r[9],f=r[10],m=r[11],g=r[12],v=r[13],y=r[14],b=r[15],x=d*y*h-v*f*h+v*l*m-u*y*m-d*l*b+u*f*b,_=g*f*h-p*y*h-g*l*m+c*y*m+p*l*b-c*f*b,w=p*v*h-g*d*h+g*u*m-c*v*m-p*u*b+c*d*b,E=g*d*l-p*v*l-g*u*f+c*v*f+p*u*y-c*d*y,M=i*x+o*_+a*w+s*E;if(0===M){var T="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(!0===t)throw new Error(T);return console.warn(T),this.identity()}var S=1/M;return n[0]=x*S,n[1]=(v*f*s-d*y*s-v*a*m+o*y*m+d*a*b-o*f*b)*S,n[2]=(u*y*s-v*l*s+v*a*h-o*y*h-u*a*b+o*l*b)*S,n[3]=(d*l*s-u*f*s-d*a*h+o*f*h+u*a*m-o*l*m)*S,n[4]=_*S,n[5]=(p*y*s-g*f*s+g*a*m-i*y*m-p*a*b+i*f*b)*S,n[6]=(g*l*s-c*y*s-g*a*h+i*y*h+c*a*b-i*l*b)*S,n[7]=(c*f*s-p*l*s+p*a*h-i*f*h-c*a*m+i*l*m)*S,n[8]=w*S,n[9]=(g*d*s-p*v*s-g*o*m+i*v*m+p*o*b-i*d*b)*S,n[10]=(c*v*s-g*u*s+g*o*h-i*v*h-c*o*b+i*u*b)*S,n[11]=(p*u*s-c*d*s-p*o*h+i*d*h+c*o*m-i*u*m)*S,n[12]=E*S,n[13]=(p*v*a-g*d*a+g*o*f-i*v*f-p*o*y+i*d*y)*S,n[14]=(g*u*a-c*v*a-g*o*l+i*v*l+c*o*y-i*u*y)*S,n[15]=(c*d*a-p*u*a+p*o*l-i*d*l-c*o*f+i*u*f)*S,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,o=e.x,a=e.y,s=e.z,c=i*o,u=i*a;return this.set(c*o+n,c*a-r*s,c*s+r*a,0,c*a+r*s,u*a+n,u*s-r*o,0,c*s-r*a,u*s+r*o,i*s*s+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){return this.makeRotationFromQuaternion(t),this.scale(n),this.setPosition(e),this},decompose:function(){var e=new l,t=new h;return function(n,r,i){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),c=e.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),n.x=o[12],n.y=o[13],n.z=o[14],t.copy(this);var u=1/a,l=1/s,h=1/c;return t.elements[0]*=u,t.elements[1]*=u,t.elements[2]*=u,t.elements[4]*=l,t.elements[5]*=l,t.elements[6]*=l,t.elements[8]*=h,t.elements[9]*=h,t.elements[10]*=h,r.setFromRotationMatrix(t),i.x=a,i.y=s,i.z=c,this}}(),makePerspective:function(e,t,n,r,i,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var a=this.elements,s=2*i/(t-e),c=2*i/(n-r),u=(t+e)/(t-e),l=(n+r)/(n-r),h=-(o+i)/(o-i),p=-2*o*i/(o-i);return a[0]=s,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=l,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(e,t,n,r,i,o){var a=this.elements,s=1/(t-e),c=1/(n-r),u=1/(o-i),l=(t+e)*s,h=(n+r)*c,p=(o+i)*u;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-l,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}),p.prototype=Object.create(o.prototype),p.prototype.constructor=p,p.prototype.isDataTexture=!0,d.prototype=Object.create(o.prototype),d.prototype.constructor=d,d.prototype.isCubeTexture=!0,Object.defineProperty(d.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});var Ts=new o,Ss=new d,As=[],Cs=[],Rs=new Float32Array(16),Ps=new Float32Array(9);H.prototype.setValue=function(e,t){for(var n=this.seq,r=0,i=n.length;r!==i;++r){var o=n[r];o.setValue(e,t[o.id])}};var Ls=/([\w\d_]+)(\])?(\[|\.)?/g;q.prototype.setValue=function(e,t,n){var r=this.map[t];void 0!==r&&r.setValue(e,n,this.renderer)},q.prototype.setOptional=function(e,t,n){var r=t[n];void 0!==r&&this.setValue(e,n,r)},q.upload=function(e,t,n,r){for(var i=0,o=t.length;i!==o;++i){var a=t[i],s=n[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,r)}},q.seqWithValue=function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var o=e[r];o.id in t&&n.push(o)}return n};var Ns={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(Y.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(t,n,r){if(t=Es.euclideanModulo(t,1),n=Es.clamp(n,0,1),r=Es.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var i=r<=.5?r*(1+n):r+n-r*n,o=2*r-i;this.r=e(o,i,t+1/3),this.g=e(o,i,t),this.b=e(o,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,i=n[1],o=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var a=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(a,s,c)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var u=n[1],l=u.length;if(3===l)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}if(e&&e.length>0){var u=Ns[e];void 0!==u?this.setHex(u):console.warn("THREE.Color: Unknown color "+e)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,n,r=e||{h:0,s:0,l:0},i=this.r,o=this.g,a=this.b,s=Math.max(i,o,a),c=Math.min(i,o,a),u=(c+s)/2;if(c===s)t=0,n=0;else{var l=s-c;switch(n=u<=.5?l/(s+c):l/(2-s-c),s){case i:t=(o-a)/l+(o<a?6:0);break;case o:t=(a-i)/l+2;break;case a:t=(i-o)/l+4}t/=6}return r.h=t,r.s=n,r.l=u,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=n,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}});var Is={common:{diffuse:{value:new Y(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new a(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new i(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Y(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Y(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new a(0,0,1,1)}}},Ds={merge:function(e){for(var t={},n=0;n<e.length;n++){var r=this.clone(e[n]);for(var i in r)t[i]=r[i]}return t},clone:function(e){var t={};for(var n in e){t[n]={};for(var r in e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}},Os={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_flip:"#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",distanceRGBA_vert:"varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n",shadow_vert:"#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n"},Us={basic:{uniforms:Ds.merge([Is.common,Is.aomap,Is.lightmap,Is.fog]),vertexShader:Os.meshbasic_vert,fragmentShader:Os.meshbasic_frag},lambert:{uniforms:Ds.merge([Is.common,Is.aomap,Is.lightmap,Is.emissivemap,Is.fog,Is.lights,{emissive:{value:new Y(0)}}]),vertexShader:Os.meshlambert_vert,fragmentShader:Os.meshlambert_frag},phong:{uniforms:Ds.merge([Is.common,Is.aomap,Is.lightmap,Is.emissivemap,Is.bumpmap,Is.normalmap,Is.displacementmap,Is.gradientmap,Is.fog,Is.lights,{emissive:{value:new Y(0)},specular:{value:new Y(1118481)},shininess:{value:30}}]),vertexShader:Os.meshphong_vert,fragmentShader:Os.meshphong_frag},standard:{uniforms:Ds.merge([Is.common,Is.aomap,Is.lightmap,Is.emissivemap,Is.bumpmap,Is.normalmap,Is.displacementmap,Is.roughnessmap,Is.metalnessmap,Is.fog,Is.lights,{emissive:{value:new Y(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Os.meshphysical_vert,fragmentShader:Os.meshphysical_frag},points:{uniforms:Ds.merge([Is.points,Is.fog]),vertexShader:Os.points_vert,fragmentShader:Os.points_frag},dashed:{uniforms:Ds.merge([Is.common,Is.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Os.linedashed_vert,fragmentShader:Os.linedashed_frag},depth:{uniforms:Ds.merge([Is.common,Is.displacementmap]),vertexShader:Os.depth_vert,fragmentShader:Os.depth_frag},normal:{uniforms:Ds.merge([Is.common,Is.bumpmap,Is.normalmap,Is.displacementmap,{opacity:{value:1}}]),vertexShader:Os.normal_vert,fragmentShader:Os.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Os.cube_vert,fragmentShader:Os.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:Os.equirect_vert,fragmentShader:Os.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new l}},vertexShader:Os.distanceRGBA_vert,fragmentShader:Os.distanceRGBA_frag}};Us.physical={uniforms:Ds.merge([Us.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Os.meshphysical_vert,fragmentShader:Os.meshphysical_frag},Object.assign(Z.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new i;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){var t=e||new i;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){var t=e||new i;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return(t||new i).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new i).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new i;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});var Bs=0;Object.assign(Q.prototype,r.prototype,{isMaterial:!0,setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n){var r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]="overdraw"===t?Number(n):n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(e){function t(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var n=void 0===e;n&&(e={textures:{},images:{}});var r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearCoat&&(r.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(r.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,r.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==So&&(r.blending=this.blending),this.shading!==_o&&(r.shading=this.shading),this.side!==vo&&(r.side=this.side),this.vertexColors!==wo&&(r.vertexColors=this.vertexColors),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),r.skinning=this.skinning,r.morphTargets=this.morphTargets,r.dithering=this.dithering,n){var i=t(e.textures),o=t(e.images);i.length>0&&(r.textures=i),o.length>0&&(r.images=o)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.shading=e.shading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,n=null;if(null!==t){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),$.prototype=Object.create(Q.prototype),$.prototype.constructor=$,$.prototype.isShaderMaterial=!0,$.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ds.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},$.prototype.toJSON=function(e){var t=Q.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},ee.prototype=Object.create(Q.prototype),ee.prototype.constructor=ee,ee.prototype.isMeshDepthMaterial=!0,ee.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Object.assign(te.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,o=-1/0,a=-1/0,s=0,c=e.length;s<c;s+=3){var u=e[s],l=e[s+1],h=e[s+2];u<t&&(t=u),l<n&&(n=l),h<r&&(r=h),u>i&&(i=u),l>o&&(o=l),h>a&&(a=h)}return this.min.set(t,n,r),this.max.set(i,o,a),this},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,o=-1/0,a=-1/0,s=0,c=e.count;s<c;s++){var u=e.getX(s),l=e.getY(s),h=e.getZ(s);u<t&&(t=u),l<n&&(n=l),h<r&&(r=h),u>i&&(i=u),l>o&&(o=l),h>a&&(a=h)}return this.min.set(t,n,r),this.max.set(i,o,a),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new l;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){var t=e||new l;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){var t=e||new l;return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){var e=new l;return function(t){var n=this;return t.updateMatrixWorld(!0),t.traverse(function(t){var r,i,o=t.geometry;if(void 0!==o)if(o.isGeometry){var a=o.vertices;for(r=0,i=a.length;r<i;r++)e.copy(a[r]),e.applyMatrix4(t.matrixWorld),n.expandByPoint(e)}else if(o.isBufferGeometry){var s=o.attributes.position;if(void 0!==s)for(r=0,i=s.count;r<i;r++)e.fromBufferAttribute(s,r).applyMatrix4(t.matrixWorld),n.expandByPoint(e)}}),this}}(),containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return(t||new l).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(){var e=new l;return function(t){return this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=e.constant&&n>=e.constant},clampPoint:function(e,t){return(t||new l).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new l;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new l;return function(t){var n=t||new ne;return this.getCenter(n.center),n.radius=.5*this.getSize(e).length(),n}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new l,new l,new l,new l,new l,new l,new l,new l];return function(t){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this)}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(ne.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new te;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).getCenter(r);for(var i=0,o=0,a=t.length;o<a;o++)i=Math.max(i,r.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new l;return r.copy(e),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new te;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}),Object.assign(re.prototype,{isMatrix3:!0,set:function(e,t,n,r,i,o,a,s,c){var u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=i,u[5]=s,u[6]=n,u[7]=o,u[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var e=new l;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix3(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,o=n[0],a=n[3],s=n[6],c=n[1],u=n[4],l=n[7],h=n[2],p=n[5],d=n[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],b=r[7],x=r[2],_=r[5],w=r[8];return i[0]=o*f+a*v+s*x,i[3]=o*m+a*y+s*_,i[6]=o*g+a*b+s*w,i[1]=c*f+u*v+l*x,i[4]=c*m+u*y+l*_,i[7]=c*g+u*b+l*w,i[2]=h*f+p*v+d*x,i[5]=h*m+p*y+d*_,i[8]=h*g+p*b+d*w,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],o=e[4],a=e[5],s=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*i*u+n*a*s+r*i*c-r*o*s},getInverse:function(e,t){e&&e.isMatrix4&&console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var n=e.elements,r=this.elements,i=n[0],o=n[1],a=n[2],s=n[3],c=n[4],u=n[5],l=n[6],h=n[7],p=n[8],d=p*c-u*h,f=u*l-p*s,m=h*s-c*l,g=i*d+o*f+a*m;if(0===g){var v="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(!0===t)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return r[0]=d*y,r[1]=(a*h-p*o)*y,r[2]=(u*o-a*c)*y,r[3]=f*y,r[4]=(p*i-a*l)*y,r[5]=(a*s-u*i)*y,r[6]=m*y,r[7]=(o*l-h*i)*y,r[8]=(c*i-o*s)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}),Object.assign(ie.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new l,t=new l;return function(n,r,i){var o=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(o,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);return(t||new l).copy(this.normal).multiplyScalar(n)},intersectLine:function(){var e=new l;return function(t,n){var r=n||new l,i=t.delta(e),o=this.normal.dot(i);if(0!==o){var a=-(t.start.dot(this.normal)+this.constant)/o;if(!(a<0||a>1))return r.copy(i).multiplyScalar(a).add(t.start)}else if(0===this.distanceToPoint(t.start))return r.copy(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return(e||new l).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new l,t=new re;return function(n,r){var i=this.coplanarPoint(e).applyMatrix4(n),o=r||t.getNormalMatrix(n),a=this.normal.applyMatrix3(o).normalize();return this.constant=-i.dot(a),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}),Object.assign(oe.prototype,{set:function(e,t,n,r,i,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],o=n[2],a=n[3],s=n[4],c=n[5],u=n[6],l=n[7],h=n[8],p=n[9],d=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(a-r,l-s,f-h,y-m).normalize(),t[1].setComponents(a+r,l+s,f+h,y+m).normalize(),t[2].setComponents(a+i,l+c,f+p,y+g).normalize(),t[3].setComponents(a-i,l-c,f-p,y-g).normalize(),t[4].setComponents(a-o,l-u,f-d,y-v).normalize(),t[5].setComponents(a+o,l+u,f+d,y+v).normalize(),this},intersectsObject:function(){var e=new ne;return function(t){var n=t.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),e.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new ne;return function(t){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:function(){var e=new l,t=new l;return function(n){for(var r=this.planes,i=0;i<6;i++){var o=r[i];e.x=o.normal.x>0?n.min.x:n.max.x,t.x=o.normal.x>0?n.max.x:n.min.x,e.y=o.normal.y>0?n.min.y:n.max.y,t.y=o.normal.y>0?n.max.y:n.min.y,e.z=o.normal.z>0?n.min.z:n.max.z,t.z=o.normal.z>0?n.max.z:n.min.z;var a=o.distanceToPoint(e),s=o.distanceToPoint(t);if(a<0&&s<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}),Object.assign(se.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new l).copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new l;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var n=t||new l;n.subVectors(e,this.origin);var r=n.dot(this.direction);return r<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new l;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new l,t=new l,n=new l;return function(r,i,o,a){e.copy(r).add(i).multiplyScalar(.5),t.copy(i).sub(r).normalize(),n.copy(this.origin).sub(e);var s,c,u,l,h=.5*r.distanceTo(i),p=-this.direction.dot(t),d=n.dot(this.direction),f=-n.dot(t),m=n.lengthSq(),g=Math.abs(1-p*p);if(g>0)if(s=p*f-d,c=p*d-f,l=h*g,s>=0)if(c>=-l)if(c<=l){var v=1/g;s*=v,c*=v,u=s*(s+p*c+2*d)+c*(p*s+c+2*f)+m}else c=h,s=Math.max(0,-(p*c+d)),u=-s*s+c*(c+2*f)+m;else c=-h,s=Math.max(0,-(p*c+d)),u=-s*s+c*(c+2*f)+m;else c<=-l?(s=Math.max(0,-(-p*h+d)),c=s>0?-h:Math.min(Math.max(-h,-f),h),u=-s*s+c*(c+2*f)+m):c<=l?(s=0,c=Math.min(Math.max(-h,-f),h),u=c*(c+2*f)+m):(s=Math.max(0,-(p*h+d)),c=s>0?h:Math.min(Math.max(-h,-f),h),u=-s*s+c*(c+2*f)+m);else c=p>0?-h:h,s=Math.max(0,-(p*c+d)),u=-s*s+c*(c+2*f)+m;return o&&o.copy(this.direction).multiplyScalar(s).add(this.origin),a&&a.copy(t).multiplyScalar(c).add(e),u}}(),intersectSphere:function(){var e=new l;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),i=e.dot(e)-r*r,o=t.radius*t.radius;if(i>o)return null;var a=Math.sqrt(o-i),s=r-a,c=r+a;return s<0&&c<0?null:s<0?this.at(c,n):this.at(s,n)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var n,r,i,o,a,s,c=1/this.direction.x,u=1/this.direction.y,l=1/this.direction.z,h=this.origin;return c>=0?(n=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(n=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(i=(e.min.y-h.y)*u,o=(e.max.y-h.y)*u):(i=(e.max.y-h.y)*u,o=(e.min.y-h.y)*u),n>o||i>r?null:((i>n||n!==n)&&(n=i),(o<r||r!==r)&&(r=o),l>=0?(a=(e.min.z-h.z)*l,s=(e.max.z-h.z)*l):(a=(e.max.z-h.z)*l,s=(e.min.z-h.z)*l),n>s||a>r?null:((a>n||n!==n)&&(n=a),(s<r||r!==r)&&(r=s),r<0?null:this.at(n>=0?n:r,t)))},intersectsBox:function(){var e=new l;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var e=new l,t=new l,n=new l,r=new l;return function(i,o,a,s,c){t.subVectors(o,i),n.subVectors(a,i),r.crossVectors(t,n);var u,l=this.direction.dot(r);if(l>0){if(s)return null;u=1}else{if(!(l<0))return null;u=-1,l=-l}e.subVectors(this.origin,i);var h=u*this.direction.dot(n.crossVectors(e,n));if(h<0)return null;var p=u*this.direction.dot(t.cross(e));if(p<0)return null;if(h+p>l)return null;var d=-u*e.dot(r);return d<0?null:this.at(d/l,c)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}),ce.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ce.DefaultOrder="XYZ",Object.defineProperties(ce.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(ce.prototype,{isEuler:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=Es.clamp,i=e.elements,o=i[0],a=i[4],s=i[8],c=i[1],u=i[5],l=i[9],h=i[2],p=i[6],d=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(p,u),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-h,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(c,o))):"ZYX"===t?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,u))):"YZX"===t?(this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,u),this._y=Math.atan2(-h,o)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===t?(this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(p,u),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var e=new h;return function(t,n,r){return e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new u;return function(t){return e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new l(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(ue.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},test:function(e){return 0!==(this.mask&e.mask)}});var Fs=0;le.DefaultUp=new l(0,1,0),le.DefaultMatrixAutoUpdate=!0,Object.assign(le.prototype,r.prototype,{isObject3D:!0,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new u;return function(t,n){return e.setFromAxisAngle(t,n),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new l(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new l(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new l(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new l;return function(t,n){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(n)),this}}(),translateX:function(){var e=new l(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new l(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new l(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new h;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new h;return function(t){this.isCamera?e.lookAt(this.position,t,this.up):e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var n=this.children.indexOf(e);-1!==n&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1))},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n],o=i.getObjectByProperty(e,t);if(void 0!==o)return o}},getWorldPosition:function(e){var t=e||new l;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new l,t=new l;return function(n){var r=n||new u;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldRotation:function(){var e=new u;return function(t){var n=t||new ce;return this.getWorldQuaternion(e),n.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new l,t=new u;return function(n){var r=n||new l;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new u;return function(t){var n=t||new l;return this.getWorldQuaternion(e),n.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},toJSON:function(e){function t(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}function n(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var r=void 0===e||""===e,i={};r&&(e={geometries:{},materials:{},textures:{},images:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var o={};if(o.uuid=this.uuid,o.type=this.type,""!==this.name&&(o.name=this.name),"{}"!==JSON.stringify(this.userData)&&(o.userData=this.userData),!0===this.castShadow&&(o.castShadow=!0),!0===this.receiveShadow&&(o.receiveShadow=!0),!1===this.visible&&(o.visible=!1),o.matrix=this.matrix.toArray(),void 0!==this.geometry&&(o.geometry=t(e.geometries,this.geometry)),void 0!==this.material)if(Array.isArray(this.material)){for(var a=[],s=0,c=this.material.length;s<c;s++)a.push(t(e.materials,this.material[s]));o.material=a}else o.material=t(e.materials,this.material);if(this.children.length>0){o.children=[];for(var s=0;s<this.children.length;s++)o.children.push(this.children[s].toJSON(e).object)}if(r){var u=n(e.geometries),l=n(e.materials),h=n(e.textures),p=n(e.images);u.length>0&&(i.geometries=u),l.length>0&&(i.materials=l),h.length>0&&(i.textures=h),p.length>0&&(i.images=p)}return i.object=o,i},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}}),Object.assign(he.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return(e||new l).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new l).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new l;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new l,t=new l;return function(n,r){e.subVectors(n,this.start),t.subVectors(this.end,this.start);var i=t.dot(t),o=t.dot(e),a=o/i;return r&&(a=Es.clamp(a,0,1)),a}}(),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t),i=n||new l;return this.delta(i).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),Object.assign(pe,{normal:function(){var e=new l;return function(t,n,r,i){var o=i||new l;o.subVectors(r,n),e.subVectors(t,n),o.cross(e);var a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}}(),barycoordFromPoint:function(){var e=new l,t=new l,n=new l;return function(r,i,o,a,s){e.subVectors(a,i),t.subVectors(o,i),n.subVectors(r,i);var c=e.dot(e),u=e.dot(t),h=e.dot(n),p=t.dot(t),d=t.dot(n),f=c*p-u*u,m=s||new l;if(0===f)return m.set(-2,-1,-1);var g=1/f,v=(p*h-u*d)*g,y=(c*d-u*h)*g;return m.set(1-v-y,y,v)}}(),containsPoint:function(){var e=new l;return function(t,n,r,i){var o=pe.barycoordFromPoint(t,n,r,i,e);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}()}),Object.assign(pe.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new l,t=new l;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new l).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return pe.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new ie).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return pe.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return pe.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e=new ie,t=[new he,new he,new he],n=new l,r=new l;return function(i,o){var a=o||new l,s=1/0;if(e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(i,n),!0===this.containsPoint(n))a.copy(n);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var c=0;c<t.length;c++){t[c].closestPointToPoint(n,!0,r);var u=n.distanceToSquared(r);u<s&&(s=u,a.copy(r))}}return a}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}),Object.assign(de.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}),fe.prototype=Object.create(Q.prototype),fe.prototype.constructor=fe,fe.prototype.isMeshBasicMaterial=!0,fe.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},Object.defineProperty(me.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(me.prototype,{isBufferAttribute:!0,setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==e?e.length/this.itemSize:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new Y),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this},copyIndicesArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var o=e[r];t[n++]=o.a,t[n++]=o.b,t[n++]=o.c}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,o=e.length;r<o;r++){var a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new i),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new l),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new a),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),ge.prototype=Object.create(me.prototype),ge.prototype.constructor=ge,ve.prototype=Object.create(me.prototype),ve.prototype.constructor=ve,ye.prototype=Object.create(me.prototype),ye.prototype.constructor=ye,be.prototype=Object.create(me.prototype),be.prototype.constructor=be,xe.prototype=Object.create(me.prototype),xe.prototype.constructor=xe,_e.prototype=Object.create(me.prototype),_e.prototype.constructor=_e,we.prototype=Object.create(me.prototype),we.prototype.constructor=we,Ee.prototype=Object.create(me.prototype),Ee.prototype.constructor=Ee,Me.prototype=Object.create(me.prototype),Me.prototype.constructor=Me,Object.assign(Te.prototype,{computeGroups:function(e){for(var t,n=[],r=void 0,i=e.faces,o=0;o<i.length;o++){var a=i[o];a.materialIndex!==r&&(r=a.materialIndex,void 0!==t&&(t.count=3*o-t.start,n.push(t)),t={start:3*o,materialIndex:r})}void 0!==t&&(t.count=3*o-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t,n=e.faces,r=e.vertices,o=e.faceVertexUvs,a=o[0]&&o[0].length>0,s=o[1]&&o[1].length>0,c=e.morphTargets,u=c.length;if(u>0){t=[];for(var l=0;l<u;l++)t[l]=[];this.morphTargets.position=t}var h,p=e.morphNormals,d=p.length;if(d>0){h=[];for(var l=0;l<d;l++)h[l]=[];this.morphTargets.normal=h}for(var f=e.skinIndices,m=e.skinWeights,g=f.length===r.length,v=m.length===r.length,l=0;l<n.length;l++){var y=n[l];this.vertices.push(r[y.a],r[y.b],r[y.c]);var b=y.vertexNormals;if(3===b.length)this.normals.push(b[0],b[1],b[2]);else{var x=y.normal;this.normals.push(x,x,x)}var _=y.vertexColors;if(3===_.length)this.colors.push(_[0],_[1],_[2]);else{var w=y.color;this.colors.push(w,w,w)}if(!0===a){var E=o[0][l];void 0!==E?this.uvs.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new i,new i,new i))}if(!0===s){var E=o[1][l];void 0!==E?this.uvs2.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new i,new i,new i))}for(var M=0;M<u;M++){var T=c[M].vertices;t[M].push(T[y.a],T[y.b],T[y.c])}for(var M=0;M<d;M++){var S=p[M].vertexNormals[l];h[M].push(S.a,S.b,S.c)}g&&this.skinIndices.push(f[y.a],f[y.b],f[y.c]),v&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}});var ks=0;Object.assign(Ce.prototype,r.prototype,{isGeometry:!0,applyMatrix:function(e){for(var t=(new re).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++){this.vertices[n].applyMatrix4(e)}for(var n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(t).normalize();for(var o=0,a=i.vertexNormals.length;o<a;o++)i.vertexNormals[o].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e=new h;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new h;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new h;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new h;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e=new h;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new le;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function t(e,t,r,i){var o=void 0!==s?[p[e].clone(),p[t].clone(),p[r].clone()]:[],a=void 0!==c?[n.colors[e].clone(),n.colors[t].clone(),n.colors[r].clone()]:[],l=new de(e,t,r,o,a,i);n.faces.push(l),void 0!==u&&n.faceVertexUvs[0].push([d[e].clone(),d[t].clone(),d[r].clone()]),void 0!==h&&n.faceVertexUvs[1].push([f[e].clone(),f[t].clone(),f[r].clone()])}var n=this,r=null!==e.index?e.index.array:void 0,o=e.attributes,a=o.position.array,s=void 0!==o.normal?o.normal.array:void 0,c=void 0!==o.color?o.color.array:void 0,u=void 0!==o.uv?o.uv.array:void 0,h=void 0!==o.uv2?o.uv2.array:void 0;void 0!==h&&(this.faceVertexUvs[1]=[]);for(var p=[],d=[],f=[],m=0,g=0;m<a.length;m+=3,g+=2)n.vertices.push(new l(a[m],a[m+1],a[m+2])),void 0!==s&&p.push(new l(s[m],s[m+1],s[m+2])),void 0!==c&&n.colors.push(new Y(c[m],c[m+1],c[m+2])),void 0!==u&&d.push(new i(u[g],u[g+1])),void 0!==h&&f.push(new i(h[g],h[g+1]));var v=e.groups;if(v.length>0)for(var m=0;m<v.length;m++)for(var y=v[m],b=y.start,x=y.count,g=b,_=b+x;g<_;g+=3)void 0!==r?t(r[g],r[g+1],r[g+2],y.materialIndex):t(g,g+1,g+2,y.materialIndex);else if(void 0!==r)for(var m=0;m<r.length;m+=3)t(r[m],r[m+1],r[m+2]);else for(var m=0;m<a.length/3;m+=3)t(m,m+1,m+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new h;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var e=new l,t=new l,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],o=this.vertices[i.a],a=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,a),t.subVectors(o,a),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);var t,n,r,i,o,a;for(a=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)a[t]=new l;if(e){var s,c,u,h=new l,p=new l;for(r=0,i=this.faces.length;r<i;r++)o=this.faces[r],s=this.vertices[o.a],c=this.vertices[o.b],u=this.vertices[o.c],h.subVectors(u,c),p.subVectors(s,c),h.cross(p),a[o.a].add(h),a[o.b].add(h),a[o.c].add(h)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)o=this.faces[r],a[o.a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(t=0,n=this.vertices.length;t<n;t++)a[t].normalize();for(r=0,i=this.faces.length;r<i;r++){o=this.faces[r];var d=o.vertexNormals;3===d.length?(d[0].copy(a[o.a]),d[1].copy(a[o.b]),d[2].copy(a[o.c])):(d[0]=a[o.a].clone(),d[1]=a[o.b].clone(),d[2]=a[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){n=this.faces[e];var r=n.vertexNormals;3===r.length?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for(i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var o=new Ce;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a,s,c=this.morphNormals[e].faceNormals,u=this.morphNormals[e].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)a=new l,s={a:new l,b:new l,c:new l},c.push(a),u.push(s)}var h=this.morphNormals[e];o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();var a,s;for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],a=h.faceNormals[n],s=h.vertexNormals[n],a.copy(i.normal),s.a.copy(i.vertexNormals[0]),s.b.copy(i.vertexNormals[1]),s.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new te),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new ne),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!1===(e&&e.isGeometry))return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var r,i=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,c=e.faces,u=this.faceVertexUvs[0],l=e.faceVertexUvs[0],h=this.colors,p=e.colors;void 0===n&&(n=0),void 0!==t&&(r=(new re).getNormalMatrix(t));for(var d=0,f=a.length;d<f;d++){var m=a[d],g=m.clone();void 0!==t&&g.applyMatrix4(t),o.push(g)}for(var d=0,f=p.length;d<f;d++)h.push(p[d].clone());for(d=0,f=c.length;d<f;d++){var v,y,b,x=c[d],_=x.vertexNormals,w=x.vertexColors;v=new de(x.a+i,x.b+i,x.c+i),v.normal.copy(x.normal),void 0!==r&&v.normal.applyMatrix3(r).normalize();for(var E=0,M=_.length;E<M;E++)y=_[E].clone(),void 0!==r&&y.applyMatrix3(r).normalize(),v.vertexNormals.push(y);v.color.copy(x.color);for(var E=0,M=w.length;E<M;E++)b=w[E],v.vertexColors.push(b.clone());v.materialIndex=x.materialIndex+n,s.push(v)}for(d=0,f=l.length;d<f;d++){var T=l[d],S=[];if(void 0!==T){for(var E=0,M=T.length;E<M;E++)S.push(T[E].clone());u.push(S)}}},mergeMesh:function(e){if(!1===(e&&e.isMesh))return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e,t,n,r,i,o,a,s,c={},u=[],l=[],h=Math.pow(10,4);for(n=0,r=this.vertices.length;n<r;n++)e=this.vertices[n],t=Math.round(e.x*h)+"_"+Math.round(e.y*h)+"_"+Math.round(e.z*h),void 0===c[t]?(c[t]=n,u.push(this.vertices[n]),l[n]=u.length-1):l[n]=l[c[t]];var p=[];for(n=0,r=this.faces.length;n<r;n++){i=this.faces[n],i.a=l[i.a],i.b=l[i.b],i.c=l[i.c],o=[i.a,i.b,i.c];for(var d=0;d<3;d++)if(o[d]===o[(d+1)%3]){p.push(n);break}}for(n=p.length-1;n>=0;n--){var f=p[n];for(this.faces.splice(f,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(f,1)}var m=this.vertices.length-u.length;return this.vertices=u,m},sortFacesByMaterialIndex:function(){function e(e,t){return e.materialIndex-t.materialIndex}for(var t=this.faces,n=t.length,r=0;r<n;r++)t[r]._id=r;t.sort(e);var i,o,a=this.faceVertexUvs[0],s=this.faceVertexUvs[1];a&&a.length===n&&(i=[]),s&&s.length===n&&(o=[]);for(var r=0;r<n;r++){var c=t[r]._id;i&&i.push(a[c]),o&&o.push(s[c])}i&&(this.faceVertexUvs[0]=i),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){function e(e,t,n){return n?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==p[t]?p[t]:(p[t]=h.length/3,h.push(e.x,e.y,e.z),p[t])}function n(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==f[t]?f[t]:(f[t]=d.length,d.push(e.getHex()),f[t])}function r(e){var t=e.x.toString()+e.y.toString();return void 0!==g[t]?g[t]:(g[t]=m.length/2,m.push(e.x,e.y),g[t])}var i={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),void 0!==this.parameters){var o=this.parameters;for(var a in o)void 0!==o[a]&&(i[a]=o[a]);return i}for(var s=[],c=0;c<this.vertices.length;c++){var u=this.vertices[c];s.push(u.x,u.y,u.z)}for(var l=[],h=[],p={},d=[],f={},m=[],g={},c=0;c<this.faces.length;c++){var v=this.faces[c],y=void 0!==this.faceVertexUvs[0][c],b=v.normal.length()>0,x=v.vertexNormals.length>0,_=1!==v.color.r||1!==v.color.g||1!==v.color.b,w=v.vertexColors.length>0,E=0;if(E=e(E,0,0),E=e(E,1,!0),E=e(E,2,!1),E=e(E,3,y),E=e(E,4,b),E=e(E,5,x),E=e(E,6,_),E=e(E,7,w),l.push(E),l.push(v.a,v.b,v.c),l.push(v.materialIndex),y){var M=this.faceVertexUvs[0][c];l.push(r(M[0]),r(M[1]),r(M[2]))}if(b&&l.push(t(v.normal)),x){var T=v.vertexNormals;l.push(t(T[0]),t(T[1]),t(T[2]))}if(_&&l.push(n(v.color)),w){var S=v.vertexColors;l.push(n(S[0]),n(S[1]),n(S[2]))}}return i.data={},i.data.vertices=s,i.data.normals=h,d.length>0&&(i.data.colors=d),m.length>0&&(i.data.uvs=[m]),i.data.faces=l,i},clone:function(){return(new Ce).copy(this)},copy:function(e){var t,n,r,i,o,a;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,n=s.length;t<n;t++)this.vertices.push(s[t].clone());var c=e.colors;for(t=0,n=c.length;t<n;t++)this.colors.push(c[t].clone());var u=e.faces;for(t=0,n=u.length;t<n;t++)this.faces.push(u[t].clone());for(t=0,n=e.faceVertexUvs.length;t<n;t++){var l=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),r=0,i=l.length;r<i;r++){var h=l[r],p=[];for(o=0,a=h.length;o<a;o++){var d=h[o];p.push(d.clone())}this.faceVertexUvs[t].push(p)}}var f=e.morphTargets;for(t=0,n=f.length;t<n;t++){var m={};if(m.name=f[t].name,void 0!==f[t].vertices)for(m.vertices=[],r=0,i=f[t].vertices.length;r<i;r++)m.vertices.push(f[t].vertices[r].clone());if(void 0!==f[t].normals)for(m.normals=[],r=0,i=f[t].normals.length;r<i;r++)m.normals.push(f[t].normals[r].clone());this.morphTargets.push(m)}var g=e.morphNormals;for(t=0,n=g.length;t<n;t++){var v={};if(void 0!==g[t].vertexNormals)for(v.vertexNormals=[],r=0,i=g[t].vertexNormals.length;r<i;r++){var y=g[t].vertexNormals[r],b={};b.a=y.a.clone(),b.b=y.b.clone(),b.c=y.c.clone(),v.vertexNormals.push(b)}if(void 0!==g[t].faceNormals)for(v.faceNormals=[],r=0,i=g[t].faceNormals.length;r<i;r++)v.faceNormals.push(g[t].faceNormals[r].clone());this.morphNormals.push(v)}var x=e.skinWeights;for(t=0,n=x.length;t<n;t++)this.skinWeights.push(x[t].clone());var _=e.skinIndices;for(t=0,n=_.length;t<n;t++)this.skinIndices.push(_[t].clone());var w=e.lineDistances;for(t=0,n=w.length;t<n;t++)this.lineDistances.push(w[t]);var E=e.boundingBox;null!==E&&(this.boundingBox=E.clone());var M=e.boundingSphere;return null!==M&&(this.boundingSphere=M.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Re.MaxIndex=65535,Object.assign(Re.prototype,r.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Se(e)>65535?we:xe)(e,1):this.index=e},addAttribute:function(e,t){return!1===(t&&t.isBufferAttribute)&&!1===(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(e,new me(arguments[1],arguments[2]))):"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(t)):(this.attributes[e]=t,this)},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToBufferAttribute(t),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){(new re).getNormalMatrix(e).applyToBufferAttribute(n),n.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e=new h;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new h;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new h;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new h;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e=new h;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new le;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var n=new Ee(3*t.vertices.length,3),r=new Ee(3*t.colors.length,3);if(this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Ee(t.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var n=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(n=void 0,t.elementsNeedUpdate=!1),void 0===n)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}var r;return!0===t.verticesNeedUpdate&&(r=this.attributes.position,void 0!==r&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(r=this.attributes.normal,void 0!==r&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(r=this.attributes.color,void 0!==r&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(r=this.attributes.uv,void 0!==r&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,void 0!==r&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Te).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute("position",new me(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute("normal",new me(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(3*e.colors.length);this.addAttribute("color",new me(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(2*e.uvs.length);this.addAttribute("uv",new me(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var o=new Float32Array(2*e.uvs2.length);this.addAttribute("uv2",new me(o,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var a=Se(e.indices)>65535?Uint32Array:Uint16Array,s=new a(3*e.indices.length);this.setIndex(new me(s,1).copyIndicesArray(e.indices))}this.groups=e.groups;for(var c in e.morphTargets){for(var u=[],l=e.morphTargets[c],h=0,p=l.length;h<p;h++){var d=l[h],f=new Ee(3*d.length,3);u.push(f.copyVector3sArray(d))}this.morphAttributes[c]=u}if(e.skinIndices.length>0){var m=new Ee(4*e.skinIndices.length,4);this.addAttribute("skinIndex",m.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var g=new Ee(4*e.skinWeights.length,4);this.addAttribute("skinWeight",g.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new te);var e=this.attributes.position;void 0!==e?this.boundingBox.setFromBufferAttribute(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new te,t=new l;return function(){null===this.boundingSphere&&(this.boundingSphere=new ne);var n=this.attributes.position;if(n){var r=this.boundingSphere.center;e.setFromBufferAttribute(n),e.getCenter(r);for(var i=0,o=0,a=n.count;o<a;o++)t.x=n.getX(o),t.y=n.getY(o),t.z=n.getZ(o),i=Math.max(i,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var r=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new me(new Float32Array(r.length),3));else for(var i=t.normal.array,o=0,a=i.length;o<a;o++)i[o]=0;var s,c,u,h=t.normal.array,p=new l,d=new l,f=new l,m=new l,g=new l;if(e){var v=e.array;0===n.length&&this.addGroup(0,v.length);for(var y=0,b=n.length;y<b;++y)for(var x=n[y],_=x.start,w=x.count,o=_,a=_+w;o<a;o+=3)s=3*v[o+0],c=3*v[o+1],u=3*v[o+2],p.fromArray(r,s),d.fromArray(r,c),f.fromArray(r,u),m.subVectors(f,d),g.subVectors(p,d),m.cross(g),h[s]+=m.x,h[s+1]+=m.y,h[s+2]+=m.z,h[c]+=m.x,h[c+1]+=m.y,h[c+2]+=m.z,h[u]+=m.x,h[u+1]+=m.y,h[u+2]+=m.z}else for(var o=0,a=r.length;o<a;o+=9)p.fromArray(r,o),d.fromArray(r,o+3),f.fromArray(r,o+6),m.subVectors(f,d),g.subVectors(p,d),m.cross(g),h[o]=m.x,h[o+1]=m.y,h[o+2]=m.z,h[o+3]=m.x,h[o+4]=m.y,h[o+5]=m.z,h[o+6]=m.x,h[o+7]=m.y,h[o+8]=m.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!1===(e&&e.isBufferGeometry))return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0);var n=this.attributes;for(var r in n)if(void 0!==e.attributes[r])for(var i=n[r],o=i.array,a=e.attributes[r],s=a.array,c=a.itemSize,u=0,l=c*t;u<s.length;u++,l++)o[l]=s[u];return this},normalizeNormals:function(){for(var e,t,n,r,i=this.attributes.normal,o=0,a=i.count;o<a;o++)e=i.getX(o),t=i.getY(o),n=i.getZ(o),r=1/Math.sqrt(e*e+t*t+n*n),i.setXYZ(o,e*r,t*r,n*r)},toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new Re,t=this.index.array,n=this.attributes;for(var r in n){for(var i=n[r],o=i.array,a=i.itemSize,s=new o.constructor(t.length*a),c=0,u=0,l=0,h=t.length;l<h;l++){c=t[l]*a;for(var p=0;p<a;p++)s[u++]=o[c++]}e.addAttribute(r,new me(s,a))}return e},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;if(null!==r){var i=Array.prototype.slice.call(r.array);e.data.index={type:r.array.constructor.name,array:i}}var o=this.attributes;for(var n in o){var a=o[n],i=Array.prototype.slice.call(a.array);e.data.attributes[n]={itemSize:a.itemSize,type:a.array.constructor.name,array:i,normalized:a.normalized}}var s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e},clone:function(){return(new Re).copy(this)},copy:function(e){var t,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var i=e.index;null!==i&&this.setIndex(i.clone());var o=e.attributes;for(t in o){var a=o[t];this.addAttribute(t,a.clone())}var s=e.morphAttributes;for(t in s){var c=[],u=s[t];for(n=0,r=u.length;n<r;n++)c.push(u[n].clone());this.morphAttributes[t]=c}var l=e.groups;for(n=0,r=l.length;n<r;n++){var h=l[n];this.addGroup(h.start,h.count,h.materialIndex)}var p=e.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=e.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Pe.prototype=Object.assign(Object.create(le.prototype),{constructor:Pe,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return le.prototype.copy.call(this,e),this.drawMode=e.drawMode,this},updateMorphTargets:function(){var e=this.geometry.morphTargets;if(void 0!==e&&e.length>0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,n=e.length;t<n;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[e[t].name]=t}},raycast:function(){function e(e,t,n,r,i,o,a){return pe.barycoordFromPoint(e,t,n,r,y),i.multiplyScalar(y.x),o.multiplyScalar(y.y),a.multiplyScalar(y.z),i.add(o).add(a),i.clone()}function t(e,t,n,r,i,o,a){var s=e.material;if(null===(s.side===yo?n.intersectTriangle(o,i,r,!0,a):n.intersectTriangle(r,i,o,s.side!==bo,a)))return null;x.copy(a),x.applyMatrix4(e.matrixWorld);var c=t.ray.origin.distanceTo(x);return c<t.near||c>t.far?null:{distance:c,point:x.clone(),object:e}}function n(n,r,i,o,a,l,h,p){s.fromBufferAttribute(o,l),c.fromBufferAttribute(o,h),u.fromBufferAttribute(o,p);var d=t(n,r,i,s,c,u,b);return d&&(a&&(m.fromBufferAttribute(a,l),g.fromBufferAttribute(a,h),v.fromBufferAttribute(a,p),d.uv=e(b,s,c,u,m,g,v)),d.face=new de(l,h,p,pe.normal(s,c,u)),d.faceIndex=l),d}var r=new h,o=new se,a=new ne,s=new l,c=new l,u=new l,p=new l,d=new l,f=new l,m=new i,g=new i,v=new i,y=new l,b=new l,x=new l;return function(i,l){var h=this.geometry,y=this.material,x=this.matrixWorld;if(void 0!==y&&(null===h.boundingSphere&&h.computeBoundingSphere(),a.copy(h.boundingSphere),a.applyMatrix4(x),!1!==i.ray.intersectsSphere(a)&&(r.getInverse(x),o.copy(i.ray).applyMatrix4(r),null===h.boundingBox||!1!==o.intersectsBox(h.boundingBox)))){var _;if(h.isBufferGeometry){var w,E,M,T,S,A=h.index,C=h.attributes.position,R=h.attributes.uv;if(null!==A)for(T=0,S=A.count;T<S;T+=3)w=A.getX(T),E=A.getX(T+1),M=A.getX(T+2),(_=n(this,i,o,C,R,w,E,M))&&(_.faceIndex=Math.floor(T/3),l.push(_));else for(T=0,S=C.count;T<S;T+=3)w=T,E=T+1,M=T+2,(_=n(this,i,o,C,R,w,E,M))&&(_.index=w,l.push(_))}else if(h.isGeometry){var P,L,N,I,D=Array.isArray(y),O=h.vertices,U=h.faces,B=h.faceVertexUvs[0];B.length>0&&(I=B);for(var F=0,k=U.length;F<k;F++){var z=U[F],j=D?y[z.materialIndex]:y;if(void 0!==j){if(P=O[z.a],L=O[z.b],N=O[z.c],!0===j.morphTargets){var G=h.morphTargets,V=this.morphTargetInfluences;s.set(0,0,0),c.set(0,0,0),u.set(0,0,0);for(var H=0,W=G.length;H<W;H++){var X=V[H];if(0!==X){var q=G[H].vertices;s.addScaledVector(p.subVectors(q[z.a],P),X),c.addScaledVector(d.subVectors(q[z.b],L),X),u.addScaledVector(f.subVectors(q[z.c],N),X)}}s.add(P),c.add(L),u.add(N),P=s,L=c,N=u}if(_=t(this,i,o,P,L,N,b)){if(I&&I[F]){var Y=I[F];m.copy(Y[0]),g.copy(Y[1]),v.copy(Y[2]),_.uv=e(b,P,L,N,m,g,v)}_.face=z,_.faceIndex=F,l.push(_)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Le.prototype=Object.create(Ce.prototype),Le.prototype.constructor=Le,Ne.prototype=Object.create(Re.prototype),Ne.prototype.constructor=Ne,Ie.prototype=Object.create(Ce.prototype),Ie.prototype.constructor=Ie,De.prototype=Object.create(Re.prototype),De.prototype.constructor=De,Oe.prototype=Object.assign(Object.create(le.prototype),{constructor:Oe,isCamera:!0,copy:function(e){return le.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},getWorldDirection:function(){var e=new u;return function(t){var n=t||new l;return this.getWorldQuaternion(e),n.set(0,0,-1).applyQuaternion(e)}}(),clone:function(){return(new this.constructor).copy(this)}}),Ue.prototype=Object.assign(Object.create(Oe.prototype),{constructor:Ue,isPerspectiveCamera:!0,copy:function(e){return Oe.prototype.copy.call(this,e),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*Es.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Es.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Es.RAD2DEG*Math.atan(Math.tan(.5*Es.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,o){this.aspect=e/t,this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:r,width:i,height:o},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*Es.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,o=this.view;if(null!==o){var a=o.fullWidth,s=o.fullHeight;i+=o.offsetX*r/a,t-=o.offsetY*n/s,r*=o.width/a,n*=o.height/s}var c=this.filmOffset;0!==c&&(i+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far)},toJSON:function(e){var t=le.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),Be.prototype=Object.assign(Object.create(Oe.prototype),{constructor:Be,isOrthographicCamera:!0,copy:function(e){return Oe.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,o){this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:r,width:i,height:o},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,o=n+e,a=r+t,s=r-t;if(null!==this.view){var c=this.zoom/(this.view.width/this.view.fullWidth),u=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;i+=l*(this.view.offsetX/c),o=i+l*(this.view.width/c),a-=h*(this.view.offsetY/u),s=a-h*(this.view.height/u)}this.projectionMatrix.makeOrthographic(i,o,a,s,this.near,this.far)},toJSON:function(e){var t=le.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}});var zs=0;gt.prototype.isFogExp2=!0,gt.prototype.clone=function(){return new gt(this.color.getHex(),this.density)},gt.prototype.toJSON=function(e){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},vt.prototype.isFog=!0,vt.prototype.clone=function(){return new vt(this.color.getHex(),this.near,this.far)},vt.prototype.toJSON=function(e){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},yt.prototype=Object.assign(Object.create(le.prototype),{constructor:yt,copy:function(e,t){return le.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=le.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}),bt.prototype=Object.assign(Object.create(le.prototype),{constructor:bt,isLensFlare:!0,copy:function(e){le.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,n=e.lensFlares.length;t<n;t++)this.lensFlares.push(e.lensFlares[t]);return this},add:function(e,t,n,r,i,o){void 0===t&&(t=-1),void 0===n&&(n=0),void 0===o&&(o=1),void 0===i&&(i=new Y(16777215)),void 0===r&&(r=So),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:i,blending:r})},updateLensFlares:function(){var e,t,n=this.lensFlares.length,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<n;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+i*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)}}),xt.prototype=Object.create(Q.prototype),xt.prototype.constructor=xt,xt.prototype.isSpriteMaterial=!0,xt.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this},_t.prototype=Object.assign(Object.create(le.prototype),{constructor:_t,isSprite:!0,raycast:function(){var e=new l,t=new l,n=new l;return function(r,i){t.setFromMatrixPosition(this.matrixWorld),r.ray.closestPointToPoint(t,e),n.setFromMatrixScale(this.matrixWorld);var o=n.x*n.y/4;if(!(t.distanceToSquared(e)>o)){var a=r.ray.origin.distanceTo(e);a<r.near||a>r.far||i.push({distance:a,point:e.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),wt.prototype=Object.assign(Object.create(le.prototype),{constructor:wt,copy:function(e){le.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);n.splice(r,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){for(var t=this.levels,n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object},raycast:function(){var e=new l;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(t,n)}}(),update:function(){var e=new l,t=new l;return function(n){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);r[0].object.visible=!0;for(var o=1,a=r.length;o<a&&i>=r[o].distance;o++)r[o-1].object.visible=!1,r[o].object.visible=!0;for(;o<a;o++)r[o].object.visible=!1}}}(),toJSON:function(e){var t=le.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var o=n[r];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}),Object.assign(Et.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new h;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){var e,t,n;for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){var e=new h,t=new h;return function(){for(var n=this.bones,r=this.boneInverses,i=this.boneMatrices,o=this.boneTexture,a=0,s=n.length;a<s;a++){var c=n[a]?n[a].matrixWorld:t;e.multiplyMatrices(c,r[a]),e.toArray(i,16*a)}void 0!==o&&(o.needsUpdate=!0)}}(),clone:function(){return new Et(this.bones,this.boneInverses)}}),Mt.prototype=Object.assign(Object.create(le.prototype),{constructor:Mt,isBone:!0}),Tt.prototype=Object.assign(Object.create(Pe.prototype),{constructor:Tt,isSkinnedMesh:!0,initBones:function(){var e,t,n,r,i=[];if(this.geometry&&void 0!==this.geometry.bones){for(n=0,r=this.geometry.bones.length;n<r;n++)t=this.geometry.bones[n],e=new Mt,i.push(e),e.name=t.name,e.position.fromArray(t.pos),e.quaternion.fromArray(t.rotq),void 0!==t.scl&&e.scale.fromArray(t.scl);for(n=0,r=this.geometry.bones.length;n<r;n++)t=this.geometry.bones[n],-1!==t.parent&&null!==t.parent&&void 0!==i[t.parent]?i[t.parent].add(i[n]):this.add(i[n])}return this.updateMatrixWorld(!0),i},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var e,t;if(this.geometry&&this.geometry.isGeometry)for(t=0;t<this.geometry.skinWeights.length;t++){var n=this.geometry.skinWeights[t];e=1/n.lengthManhattan(),e!==1/0?n.multiplyScalar(e):n.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var r=new a,i=this.geometry.attributes.skinWeight;for(t=0;t<i.count;t++)r.x=i.getX(t),r.y=i.getY(t),r.z=i.getZ(t),r.w=i.getW(t),e=1/r.lengthManhattan(),e!==1/0?r.multiplyScalar(e):r.set(1,0,0,0),i.setXYZW(t,r.x,r.y,r.z,r.w)}},updateMatrixWorld:function(e){Pe.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),St.prototype=Object.create(Q.prototype),St.prototype.constructor=St,St.prototype.isLineBasicMaterial=!0,St.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},At.prototype=Object.assign(Object.create(le.prototype),{constructor:At,isLine:!0,raycast:function(){var e=new h,t=new se,n=new ne;return function(r,i){var o=r.linePrecision,a=o*o,s=this.geometry,c=this.matrixWorld;if(null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere),n.applyMatrix4(c),!1!==r.ray.intersectsSphere(n)){e.getInverse(c),t.copy(r.ray).applyMatrix4(e);var u=new l,h=new l,p=new l,d=new l,f=this&&this.isLineSegments?2:1;if(s.isBufferGeometry){var m=s.index,g=s.attributes,v=g.position.array;if(null!==m)for(var y=m.array,b=0,x=y.length-1;b<x;b+=f){var _=y[b],w=y[b+1];u.fromArray(v,3*_),h.fromArray(v,3*w);var E=t.distanceSqToSegment(u,h,d,p);if(!(E>a)){d.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(d);M<r.near||M>r.far||i.push({distance:M,point:p.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else for(var b=0,x=v.length/3-1;b<x;b+=f){u.fromArray(v,3*b),h.fromArray(v,3*b+3);var E=t.distanceSqToSegment(u,h,d,p);if(!(E>a)){d.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(d);M<r.near||M>r.far||i.push({distance:M,point:p.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}else if(s.isGeometry)for(var T=s.vertices,S=T.length,b=0;b<S-1;b+=f){var E=t.distanceSqToSegment(T[b],T[b+1],d,p);if(!(E>a)){d.applyMatrix4(this.matrixWorld);var M=r.ray.origin.distanceTo(d);M<r.near||M>r.far||i.push({distance:M,point:p.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ct.prototype=Object.assign(Object.create(At.prototype),{constructor:Ct,isLineSegments:!0}),Rt.prototype=Object.assign(Object.create(At.prototype),{constructor:Rt,isLineLoop:!0}),Pt.prototype=Object.create(Q.prototype),Pt.prototype.constructor=Pt,Pt.prototype.isPointsMaterial=!0,Pt.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this},Lt.prototype=Object.assign(Object.create(le.prototype),{constructor:Lt,isPoints:!0,raycast:function(){var e=new h,t=new se,n=new ne;return function(r,i){function o(e,n){var o=t.distanceSqToPoint(e);if(o<p){var s=t.closestPointToPoint(e);s.applyMatrix4(c);var u=r.ray.origin.distanceTo(s);if(u<r.near||u>r.far)return;i.push({distance:u,distanceToRay:Math.sqrt(o),point:s.clone(),index:n,face:null,object:a})}}var a=this,s=this.geometry,c=this.matrixWorld,u=r.params.Points.threshold;if(null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere),n.applyMatrix4(c),n.radius+=u,!1!==r.ray.intersectsSphere(n)){e.getInverse(c),t.copy(r.ray).applyMatrix4(e);var h=u/((this.scale.x+this.scale.y+this.scale.z)/3),p=h*h,d=new l;if(s.isBufferGeometry){var f=s.index,m=s.attributes,g=m.position.array;if(null!==f)for(var v=f.array,y=0,b=v.length;y<b;y++){var x=v[y];d.fromArray(g,3*x),o(d,x)}else for(var y=0,_=g.length/3;y<_;y++)d.fromArray(g,3*y),o(d,y)}else for(var w=s.vertices,y=0,_=w.length;y<_;y++)o(w[y],y)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Nt.prototype=Object.assign(Object.create(le.prototype),{constructor:Nt}),It.prototype=Object.create(o.prototype),It.prototype.constructor=It,Dt.prototype=Object.create(o.prototype),Dt.prototype.constructor=Dt,Dt.prototype.isCompressedTexture=!0,Ot.prototype=Object.create(o.prototype),Ot.prototype.constructor=Ot,Ut.prototype=Object.create(o.prototype),Ut.prototype.constructor=Ut,Ut.prototype.isDepthTexture=!0,Bt.prototype=Object.create(Re.prototype),Bt.prototype.constructor=Bt,Ft.prototype=Object.create(Ce.prototype),Ft.prototype.constructor=Ft,kt.prototype=Object.create(Re.prototype),kt.prototype.constructor=kt,zt.prototype=Object.create(Ce.prototype),zt.prototype.constructor=zt,jt.prototype=Object.create(Re.prototype),jt.prototype.constructor=jt,Gt.prototype=Object.create(Ce.prototype),Gt.prototype.constructor=Gt,Vt.prototype=Object.create(jt.prototype),Vt.prototype.constructor=Vt,Ht.prototype=Object.create(Ce.prototype),Ht.prototype.constructor=Ht,Wt.prototype=Object.create(jt.prototype),Wt.prototype.constructor=Wt,Xt.prototype=Object.create(Ce.prototype),Xt.prototype.constructor=Xt,qt.prototype=Object.create(jt.prototype),qt.prototype.constructor=qt,Yt.prototype=Object.create(Ce.prototype),Yt.prototype.constructor=Yt,Zt.prototype=Object.create(jt.prototype),Zt.prototype.constructor=Zt,Kt.prototype=Object.create(Ce.prototype),Kt.prototype.constructor=Kt,Jt.prototype=Object.create(Re.prototype),Jt.prototype.constructor=Jt,Qt.prototype=Object.create(Ce.prototype),Qt.prototype.constructor=Qt,$t.prototype=Object.create(Re.prototype),$t.prototype.constructor=$t,en.prototype=Object.create(Ce.prototype),en.prototype.constructor=en,tn.prototype=Object.create(Re.prototype),tn.prototype.constructor=tn;var js={area:function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n},triangulate:function(){function e(e,t,n,r,i,o){var a,s,c,u,l,h,p,d,f;if(s=e[o[t]].x,c=e[o[t]].y,u=e[o[n]].x,l=e[o[n]].y,h=e[o[r]].x,p=e[o[r]].y,(u-s)*(p-c)-(l-c)*(h-s)<=0)return!1;var m,g,v,y,b,x,_,w,E,M,T,S,A,C,R;for(m=h-u,g=p-l,v=s-h,y=c-p,b=u-s,x=l-c,a=0;a<i;a++)if(d=e[o[a]].x,f=e[o[a]].y,!(d===s&&f===c||d===u&&f===l||d===h&&f===p)&&(_=d-s,w=f-c,E=d-u,M=f-l,T=d-h,S=f-p,R=m*M-g*E,A=b*w-x*_,C=v*S-y*T,R>=-Number.EPSILON&&C>=-Number.EPSILON&&A>=-Number.EPSILON))return!1;return!0}return function(t,n){var r=t.length;if(r<3)return null;var i,o,a,s=[],c=[],u=[];if(js.area(t)>0)for(o=0;o<r;o++)c[o]=o;else for(o=0;o<r;o++)c[o]=r-1-o;var l=r,h=2*l;for(o=l-1;l>2;){if(h--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),n?u:s;if(i=o,l<=i&&(i=0),o=i+1,l<=o&&(o=0),a=o+1,l<=a&&(a=0),e(t,i,o,a,l,c)){var p,d,f,m,g;for(p=c[i],d=c[o],f=c[a],s.push([t[p],t[d],t[f]]),u.push([c[i],c[o],c[a]]),m=o,g=o+1;g<l;m++,g++)c[m]=c[g];l--,h=2*l}}return n?u:s}}(),triangulateShape:function(e,t){function n(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function r(e,t,n){return e.x!==t.x?e.x<t.x?e.x<=n.x&&n.x<=t.x:t.x<=n.x&&n.x<=e.x:e.y<t.y?e.y<=n.y&&n.y<=t.y:t.y<=n.y&&n.y<=e.y}function i(e,t,n,i,o){var a=t.x-e.x,s=t.y-e.y,c=i.x-n.x,u=i.y-n.y,l=e.x-n.x,h=e.y-n.y,p=s*c-a*u,d=s*l-a*h;if(Math.abs(p)>Number.EPSILON){var f;if(p>0){if(d<0||d>p)return[];if((f=u*l-c*h)<0||f>p)return[]}else{if(d>0||d<p)return[];if((f=u*l-c*h)>0||f<p)return[]}if(0===f)return!o||0!==d&&d!==p?[e]:[];if(f===p)return!o||0!==d&&d!==p?[t]:[];if(0===d)return[n];if(d===p)return[i];var m=f/p;return[{x:e.x+m*a,y:e.y+m*s}]}if(0!==d||u*l!==c*h)return[];var g=0===a&&0===s,v=0===c&&0===u;if(g&&v)return e.x!==n.x||e.y!==n.y?[]:[e];if(g)return r(n,i,e)?[e]:[];if(v)return r(e,t,n)?[n]:[];var y,b,x,_,w,E,M,T;return 0!==a?(e.x<t.x?(y=e,x=e.x,b=t,_=t.x):(y=t,x=t.x,b=e,_=e.x),n.x<i.x?(w=n,M=n.x,E=i,T=i.x):(w=i,M=i.x,E=n,T=n.x)):(e.y<t.y?(y=e,x=e.y,b=t,_=t.y):(y=t,x=t.y,b=e,_=e.y),n.y<i.y?(w=n,M=n.y,E=i,T=i.y):(w=i,M=i.y,E=n,T=n.y)),x<=M?_<M?[]:_===M?o?[]:[w]:_<=T?[w,b]:[w,E]:x>T?[]:x===T?o?[]:[y]:_<=T?[y,b]:[y,E]}function o(e,t,n,r){var i=t.x-e.x,o=t.y-e.y,a=n.x-e.x,s=n.y-e.y,c=r.x-e.x,u=r.y-e.y,l=i*s-o*a,h=i*u-o*c;if(Math.abs(l)>Number.EPSILON){var p=c*s-u*a;return l>0?h>=0&&p>=0:h>=0||p>=0}return h>0}n(e),t.forEach(n);for(var a,s,c,u,l,h,p={},d=e.concat(),f=0,m=t.length;f<m;f++)Array.prototype.push.apply(d,t[f]);for(a=0,s=d.length;a<s;a++)l=d[a].x+":"+d[a].y,void 0!==p[l]&&console.warn("THREE.ShapeUtils: Duplicate point",l,a),p[l]=a;var g=function(e,t){for(var n,r,a,s,c,u,l,h,p,d,f,m=e.concat(),g=[],v=[],y=0,b=t.length;y<b;y++)g.push(y);for(var x=0,_=2*g.length;g.length>0;){if(--_<0){console.log("Infinite Loop! Holes left:"+g.length+", Probably Hole outside Shape!");break}for(a=x;a<m.length;a++){s=m[a],r=-1;for(var y=0;y<g.length;y++)if(u=g[y],l=s.x+":"+s.y+":"+u,void 0===v[l]){n=t[u];for(var w=0;w<n.length;w++)if(c=n[w],function(e,t){var r=m.length-1,i=e-1;i<0&&(i=r);var a=e+1;a>r&&(a=0);var s=o(m[e],m[i],m[a],n[t]);if(!s)return!1;var c=n.length-1,u=t-1;u<0&&(u=c);var l=t+1;return l>c&&(l=0),!!(s=o(n[t],n[u],n[l],m[e]))}(a,w)&&!function(e,t){var n,r,o;for(n=0;n<m.length;n++)if(r=n+1,r%=m.length,o=i(e,t,m[n],m[r],!0),o.length>0)return!0;return!1}(s,c)&&!function(e,n){var r,o,a,s,c;for(r=0;r<g.length;r++)for(o=t[g[r]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,c=i(e,n,o[a],o[s],!0),c.length>0)return!0;return!1}(s,c)){r=w,g.splice(y,1),h=m.slice(0,a+1),p=m.slice(a),d=n.slice(r),f=n.slice(0,r+1),m=h.concat(d).concat(f).concat(p),x=a;break}if(r>=0)break;v[l]=!0}if(r>=0)break}}return m}(e,t),v=js.triangulate(g,!1);for(a=0,s=v.length;a<s;a++)for(u=v[a],c=0;c<3;c++)l=u[c].x+":"+u[c].y,void 0!==(h=p[l])&&(u[c]=h);return v.concat()},isClockWise:function(e){return js.area(e)<0}};nn.prototype=Object.create(Ce.prototype),nn.prototype.constructor=nn,rn.prototype=Object.create(Re.prototype),rn.prototype.constructor=rn,rn.prototype.getArrays=function(){var e=this.getAttribute("position"),t=e?Array.prototype.slice.call(e.array):[],n=this.getAttribute("uv"),r=n?Array.prototype.slice.call(n.array):[],i=this.index;return{position:t,uv:r,index:i?Array.prototype.slice.call(i.array):[]}},rn.prototype.addShapeList=function(e,t){var n=e.length;t.arrays=this.getArrays();for(var r=0;r<n;r++){var i=e[r];this.addShape(i,t)}this.setIndex(t.arrays.index),this.addAttribute("position",new Ee(t.arrays.position,3)),this.addAttribute("uv",new Ee(t.arrays.uv,2))},rn.prototype.addShape=function(e,t){function n(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}function r(e,t,n){var r,o,a=1,s=e.x-t.x,c=e.y-t.y,u=n.x-e.x,l=n.y-e.y,h=s*s+c*c,p=s*l-c*u;if(Math.abs(p)>Number.EPSILON){var d=Math.sqrt(h),f=Math.sqrt(u*u+l*l),m=t.x-c/d,g=t.y+s/d,v=n.x-l/f,y=n.y+u/f,b=((v-m)*l-(y-g)*u)/(s*l-c*u);r=m+s*b-e.x,o=g+c*b-e.y;var x=r*r+o*o;if(x<=2)return new i(r,o);a=Math.sqrt(x/2)}else{var _=!1;s>Number.EPSILON?u>Number.EPSILON&&(_=!0):s<-Number.EPSILON?u<-Number.EPSILON&&(_=!0):Math.sign(c)===Math.sign(l)&&(_=!0),_?(r=-c,o=s,a=Math.sqrt(h)):(r=s,o=c,a=Math.sqrt(h/2))}return new i(r/a,o/a)}function o(e,t){var n,r;for(J=e.length;--J>=0;){n=J,r=J-1,r<0&&(r=e.length-1);var i=0,o=C+2*T;for(i=0;i<o;i++){var a=Y*i,s=Y*(i+1);c(t+n+a,t+r+a,t+r+s,t+n+s,e,i,o,n,r)}}}function a(e,t,n){_.push(e),_.push(t),_.push(n)}function s(e,t,n){u(e),u(t),u(n);var r=y.length/3,i=L.generateTopUV(O,y,r-3,r-2,r-1);h(i[0]),h(i[1]),h(i[2])}function c(e,t,n,r,i,o,a,s,c){u(e),u(t),u(r),u(t),u(n),u(r);var l=y.length/3,p=L.generateSideWallUV(O,y,l-6,l-3,l-2,l-1);h(p[0]),h(p[1]),h(p[3]),h(p[1]),h(p[2]),h(p[3])}function u(e){b.push(y.length/3),y.push(_[3*e+0]),y.push(_[3*e+1]),y.push(_[3*e+2])}function h(e){x.push(e.x),x.push(e.y)}var p,d,f,m,g,v=t.arrays?t.arrays:this.getArrays(),y=v.position,b=v.index,x=v.uv,_=[],w=void 0!==t.amount?t.amount:100,E=void 0!==t.bevelThickness?t.bevelThickness:6,M=void 0!==t.bevelSize?t.bevelSize:E-2,T=void 0!==t.bevelSegments?t.bevelSegments:3,S=void 0===t.bevelEnabled||t.bevelEnabled,A=void 0!==t.curveSegments?t.curveSegments:12,C=void 0!==t.steps?t.steps:1,R=t.extrudePath,P=!1,L=void 0!==t.UVGenerator?t.UVGenerator:nn.WorldUVGenerator;R&&(p=R.getSpacedPoints(C),P=!0,S=!1,d=void 0!==t.frames?t.frames:R.computeFrenetFrames(C,!1),f=new l,m=new l,g=new l),S||(T=0,E=0,M=0);var N,I,D,O=this,U=e.extractPoints(A),B=U.shape,F=U.holes,k=!js.isClockWise(B);if(k){for(B=B.reverse(),I=0,D=F.length;I<D;I++)N=F[I],js.isClockWise(N)&&(F[I]=N.reverse());k=!1}var z=js.triangulateShape(B,F),j=B;for(I=0,D=F.length;I<D;I++)N=F[I],B=B.concat(N);for(var G,V,H,W,X,q,Y=B.length,Z=z.length,K=[],J=0,Q=j.length,$=Q-1,ee=J+1;J<Q;J++,$++,ee++)$===Q&&($=0),ee===Q&&(ee=0),K[J]=r(j[J],j[$],j[ee]);var te,ne=[],re=K.concat();for(I=0,D=F.length;I<D;I++){for(N=F[I],te=[],J=0,Q=N.length,$=Q-1,ee=J+1;J<Q;J++,$++,ee++)$===Q&&($=0),ee===Q&&(ee=0),te[J]=r(N[J],N[$],N[ee]);ne.push(te),re=re.concat(te)}for(G=0;G<T;G++){for(H=G/T,W=E*Math.cos(H*Math.PI/2),V=M*Math.sin(H*Math.PI/2),J=0,Q=j.length;J<Q;J++)X=n(j[J],K[J],V),a(X.x,X.y,-W);for(I=0,D=F.length;I<D;I++)for(N=F[I],te=ne[I],J=0,Q=N.length;J<Q;J++)X=n(N[J],te[J],V),a(X.x,X.y,-W)}for(V=M,J=0;J<Y;J++)X=S?n(B[J],re[J],V):B[J],P?(m.copy(d.normals[0]).multiplyScalar(X.x),f.copy(d.binormals[0]).multiplyScalar(X.y),g.copy(p[0]).add(m).add(f),a(g.x,g.y,g.z)):a(X.x,X.y,0);var ie;for(ie=1;ie<=C;ie++)for(J=0;J<Y;J++)X=S?n(B[J],re[J],V):B[J],P?(m.copy(d.normals[ie]).multiplyScalar(X.x),f.copy(d.binormals[ie]).multiplyScalar(X.y),g.copy(p[ie]).add(m).add(f),a(g.x,g.y,g.z)):a(X.x,X.y,w/C*ie);for(G=T-1;G>=0;G--){for(H=G/T,W=E*Math.cos(H*Math.PI/2),V=M*Math.sin(H*Math.PI/2),J=0,Q=j.length;J<Q;J++)X=n(j[J],K[J],V),a(X.x,X.y,w+W);for(I=0,D=F.length;I<D;I++)for(N=F[I],te=ne[I],J=0,Q=N.length;J<Q;J++)X=n(N[J],te[J],V),P?a(X.x,X.y+p[C-1].y,p[C-1].x+W):a(X.x,X.y,w+W)}!function(){var e=y.length/3;if(S){var n=0,r=Y*n;for(J=0;J<Z;J++)q=z[J],s(q[2]+r,q[1]+r,q[0]+r);for(n=C+2*T,r=Y*n,J=0;J<Z;J++)q=z[J],s(q[0]+r,q[1]+r,q[2]+r)}else{for(J=0;J<Z;J++)q=z[J],s(q[2],q[1],q[0]);for(J=0;J<Z;J++)q=z[J],s(q[0]+Y*C,q[1]+Y*C,q[2]+Y*C)}O.addGroup(e,y.length/3-e,void 0!==t.material?t.material:0)}(),function(){var e=y.length/3,n=0;for(o(j,n),n+=j.length,I=0,D=F.length;I<D;I++)N=F[I],o(N,n),n+=N.length;O.addGroup(e,y.length/3-e,void 0!==t.extrudeMaterial?t.extrudeMaterial:1)}(),t.arrays||(this.setIndex(b),this.addAttribute("position",new Ee(y,3)),this.addAttribute("uv",new Ee(t.arrays.uv,2)))},nn.WorldUVGenerator={generateTopUV:function(e,t,n,r,o){var a=t[3*n],s=t[3*n+1],c=t[3*r],u=t[3*r+1],l=t[3*o],h=t[3*o+1];return[new i(a,s),new i(c,u),new i(l,h)]},generateSideWallUV:function(e,t,n,r,o,a){var s=t[3*n],c=t[3*n+1],u=t[3*n+2],l=t[3*r],h=t[3*r+1],p=t[3*r+2],d=t[3*o],f=t[3*o+1],m=t[3*o+2],g=t[3*a],v=t[3*a+1],y=t[3*a+2];return Math.abs(c-h)<.01?[new i(s,1-u),new i(l,1-p),new i(d,1-m),new i(g,1-y)]:[new i(c,1-u),new i(h,1-p),new i(f,1-m),new i(v,1-y)]}},on.prototype=Object.create(Ce.prototype),on.prototype.constructor=on,an.prototype=Object.create(rn.prototype),an.prototype.constructor=an,sn.prototype=Object.create(Ce.prototype),sn.prototype.constructor=sn,cn.prototype=Object.create(Re.prototype),cn.prototype.constructor=cn,un.prototype=Object.create(Ce.prototype),un.prototype.constructor=un,ln.prototype=Object.create(Re.prototype),ln.prototype.constructor=ln,hn.prototype=Object.create(Ce.prototype),hn.prototype.constructor=hn,pn.prototype=Object.create(Re.prototype),pn.prototype.constructor=pn,dn.prototype=Object.create(Ce.prototype),dn.prototype.constructor=dn,fn.prototype=Object.create(Re.prototype),fn.prototype.constructor=fn,mn.prototype=Object.create(Re.prototype),mn.prototype.constructor=mn,gn.prototype=Object.create(Ce.prototype),gn.prototype.constructor=gn,vn.prototype=Object.create(Re.prototype),vn.prototype.constructor=vn,yn.prototype=Object.create(gn.prototype),yn.prototype.constructor=yn,bn.prototype=Object.create(vn.prototype),bn.prototype.constructor=bn,xn.prototype=Object.create(Ce.prototype),xn.prototype.constructor=xn,_n.prototype=Object.create(Re.prototype),_n.prototype.constructor=_n;var Gs=Object.freeze({WireframeGeometry:Bt,ParametricGeometry:Ft,ParametricBufferGeometry:kt,TetrahedronGeometry:Gt,TetrahedronBufferGeometry:Vt,OctahedronGeometry:Ht,OctahedronBufferGeometry:Wt,IcosahedronGeometry:Xt,IcosahedronBufferGeometry:qt,DodecahedronGeometry:Yt,DodecahedronBufferGeometry:Zt,PolyhedronGeometry:zt,PolyhedronBufferGeometry:jt,TubeGeometry:Kt,TubeBufferGeometry:Jt,TorusKnotGeometry:Qt,TorusKnotBufferGeometry:$t,TorusGeometry:en,TorusBufferGeometry:tn,TextGeometry:on,TextBufferGeometry:an,SphereGeometry:sn,SphereBufferGeometry:cn,RingGeometry:un,RingBufferGeometry:ln,PlaneGeometry:Ie,PlaneBufferGeometry:De,LatheGeometry:hn,LatheBufferGeometry:pn,ShapeGeometry:dn,ShapeBufferGeometry:fn,ExtrudeGeometry:nn,ExtrudeBufferGeometry:rn,EdgesGeometry:mn,ConeGeometry:yn,ConeBufferGeometry:bn,CylinderGeometry:gn,CylinderBufferGeometry:vn,CircleGeometry:xn,CircleBufferGeometry:_n,BoxGeometry:Le,BoxBufferGeometry:Ne});wn.prototype=Object.create($.prototype),wn.prototype.constructor=wn,wn.prototype.isShadowMaterial=!0,En.prototype=Object.create($.prototype),En.prototype.constructor=En,En.prototype.isRawShaderMaterial=!0,Mn.prototype=Object.create(Q.prototype),Mn.prototype.constructor=Mn,Mn.prototype.isMeshStandardMaterial=!0,Mn.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Tn.prototype=Object.create(Mn.prototype),Tn.prototype.constructor=Tn,Tn.prototype.isMeshPhysicalMaterial=!0,Tn.prototype.copy=function(e){return Mn.prototype.copy.call(this,e),this.defines={PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},Sn.prototype=Object.create(Q.prototype),Sn.prototype.constructor=Sn,Sn.prototype.isMeshPhongMaterial=!0,Sn.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},An.prototype=Object.create(Sn.prototype),An.prototype.constructor=An,An.prototype.isMeshToonMaterial=!0,An.prototype.copy=function(e){return Sn.prototype.copy.call(this,e),this.gradientMap=e.gradientMap,this},Cn.prototype=Object.create(Q.prototype),Cn.prototype.constructor=Cn,Cn.prototype.isMeshNormalMaterial=!0,Cn.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Rn.prototype=Object.create(Q.prototype),Rn.prototype.constructor=Rn,Rn.prototype.isMeshLambertMaterial=!0,Rn.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Pn.prototype=Object.create(Q.prototype),Pn.prototype.constructor=Pn,Pn.prototype.isLineDashedMaterial=!0,Pn.prototype.copy=function(e){return Q.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Vs=Object.freeze({ShadowMaterial:wn,SpriteMaterial:xt,RawShaderMaterial:En,ShaderMaterial:$,PointsMaterial:Pt,MeshPhysicalMaterial:Tn,MeshStandardMaterial:Mn,MeshPhongMaterial:Sn,MeshToonMaterial:An,MeshNormalMaterial:Cn,MeshLambertMaterial:Rn,MeshDepthMaterial:ee,MeshBasicMaterial:fe,LineDashedMaterial:Pn,LineBasicMaterial:St,Material:Q}),Hs={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},Ws=new Ln;Object.assign(Nn.prototype,{load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var i=this,o=Hs.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout(function(){t&&t(o),i.manager.itemEnd(e)},0),o;var a=/^data:(.*?)(;base64)?,(.*)$/,s=e.match(a);if(s){var c=s[1],u=!!s[2],l=s[3];l=window.decodeURIComponent(l),u&&(l=window.atob(l));try{var h,p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":h=new ArrayBuffer(l.length);for(var d=new Uint8Array(h),f=0;f<l.length;f++)d[f]=l.charCodeAt(f);"blob"===p&&(h=new Blob([h],{type:c}));break;case"document":var m=new DOMParser;h=m.parseFromString(l,c);break;case"json":h=JSON.parse(l);break;default:h=l}window.setTimeout(function(){t&&t(h),i.manager.itemEnd(e)},0)}catch(t){window.setTimeout(function(){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},0)}}else{var g=new XMLHttpRequest;g.open("GET",e,!0),g.addEventListener("load",function(n){var o=n.target.response;Hs.add(e,o),200===this.status?(t&&t(o),i.manager.itemEnd(e)):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),t&&t(o),i.manager.itemEnd(e)):(r&&r(n),i.manager.itemEnd(e),i.manager.itemError(e))},!1),void 0!==n&&g.addEventListener("progress",function(e){n(e)},!1),g.addEventListener("error",function(t){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},!1),void 0!==this.responseType&&(g.responseType=this.responseType),void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials),g.overrideMimeType&&g.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var v in this.requestHeader)g.setRequestHeader(v,this.requestHeader[v]);g.send(null)}return i.manager.itemStart(e),g},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(In.prototype,{load:function(e,t,n,r){var i=this,o=[],a=new Dt;a.image=o;var s=new Nn(this.manager);if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(e))for(var c=0,u=0,l=e.length;u<l;++u)!function(u){s.load(e[u],function(e){var n=i._parser(e,!0);o[u]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(c+=1)&&(1===n.mipmapCount&&(a.minFilter=Ea),a.format=n.format,a.needsUpdate=!0,t&&t(a))},n,r)}(u);else s.load(e,function(e){var n=i._parser(e,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,s=0;s<r;s++){o[s]={mipmaps:[]};for(var c=0;c<n.mipmapCount;c++)o[s].mipmaps.push(n.mipmaps[s*n.mipmapCount+c]),o[s].format=n.format,o[s].width=n.width,o[s].height=n.height}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=Ea),a.format=n.format,a.needsUpdate=!0,t&&t(a)},n,r);return a},setPath:function(e){return this.path=e,this}}),Object.assign(Dn.prototype,{load:function(e,t,n,r){var i=this,o=new p,a=new Nn(this.manager);return a.setResponseType("arraybuffer"),a.load(e,function(e){var n=i._parser(e);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:ya,o.wrapT=void 0!==n.wrapT?n.wrapT:ya,o.magFilter=void 0!==n.magFilter?n.magFilter:Ea,o.minFilter=void 0!==n.minFilter?n.minFilter:Ta,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps),1===n.mipmapCount&&(o.minFilter=Ea),o.needsUpdate=!0,t&&t(o,n))},n,r),o}}),Object.assign(On.prototype,{load:function(e,t,n,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var i=this,o=Hs.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout(function(){t&&t(o),i.manager.itemEnd(e)},0),o;var a=document.createElementNS("http://www.w3.org/1999/xhtml","img");return a.addEventListener("load",function(){Hs.add(e,this),t&&t(this),i.manager.itemEnd(e)},!1),a.addEventListener("error",function(t){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(e),a.src=e,a},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Un.prototype,{load:function(e,t,n,r){var i=new d,o=new On(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);for(var a=0,s=0;s<e.length;++s)!function(n){o.load(e[n],function(e){i.images[n]=e,6===++a&&(i.needsUpdate=!0,t&&t(i))},void 0,r)}(s);return i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Bn.prototype,{load:function(e,t,n,r){var i=new On(this.manager);i.setCrossOrigin(this.crossOrigin),i.setPath(this.path);var a=new o;return a.image=i.load(e,function(){var n=e.search(/\.(jpg|jpeg)$/)>0||0===e.search(/^data\:image\/jpeg/);a.format=n?ka:za,a.needsUpdate=!0,void 0!==t&&t(a)},n,r),a},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Fn.prototype=Object.assign(Object.create(le.prototype),{constructor:Fn,isLight:!0,copy:function(e){return le.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=le.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),kn.prototype=Object.assign(Object.create(Fn.prototype),{constructor:kn,isHemisphereLight:!0,copy:function(e){return Fn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(zn.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),jn.prototype=Object.assign(Object.create(zn.prototype),{constructor:jn,isSpotLightShadow:!0,update:function(e){var t=this.camera,n=2*Es.RAD2DEG*e.angle,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix())}}),Gn.prototype=Object.assign(Object.create(Fn.prototype),{constructor:Gn,isSpotLight:!0,copy:function(e){return Fn.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Vn.prototype=Object.assign(Object.create(Fn.prototype),{constructor:Vn,isPointLight:!0,copy:function(e){return Fn.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),Hn.prototype=Object.assign(Object.create(zn.prototype),{constructor:Hn}),Wn.prototype=Object.assign(Object.create(Fn.prototype),{constructor:Wn,isDirectionalLight:!0,copy:function(e){return Fn.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Xn.prototype=Object.assign(Object.create(Fn.prototype),{constructor:Xn,isAmbientLight:!0}),qn.prototype=Object.assign(Object.create(Fn.prototype),{constructor:qn,isRectAreaLight:!0,copy:function(e){return Fn.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Fn.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});var Xs={arraySlice:function(e,t,n){return Xs.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"===typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,n){return e[t]-e[n]}for(var n=e.length,r=new Array(n),i=0;i!==n;++i)r[i]=i;return r.sort(t),r},sortedArray:function(e,t,n){for(var r=e.length,i=new e.constructor(r),o=0,a=0;a!==r;++o)for(var s=n[o]*t,c=0;c!==t;++c)i[a++]=e[s+c];return i},flattenJSON:function(e,t,n,r){for(var i=1,o=e[0];void 0!==o&&void 0===o[r];)o=e[i++];if(void 0!==o){var a=o[r];if(void 0!==a)if(Array.isArray(a))do{a=o[r],void 0!==a&&(t.push(o.time),n.push.apply(n,a)),o=e[i++]}while(void 0!==o);else if(void 0!==a.toArray)do{a=o[r],void 0!==a&&(t.push(o.time),a.toArray(n,n.length)),o=e[i++]}while(void 0!==o);else do{a=o[r],void 0!==a&&(t.push(o.time),n.push(a)),o=e[i++]}while(void 0!==o)}}};Object.assign(Yn.prototype,{evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var o;n:{r:if(!(e<r)){for(var a=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===a)break;if(i=r,r=t[++n],e<r)break t}o=t.length;break n}{if(e>=i)break e;var s=t[1];e<s&&(n=2,i=s);for(var a=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===a)break;if(r=i,i=t[--n-1],e>=i)break t}o=n,n=0}}for(;n<o;){var c=n+o>>>1;e<t[c]?o=c:n=c+1}if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,o=0;o!==r;++o)t[o]=n[i+o];return t},interpolate_:function(e,t,n,r){throw new Error("call to abstract method")},intervalChanged_:function(e,t,n){}}),Object.assign(Yn.prototype,{beforeStart_:Yn.prototype.copySampleValue_,afterEnd_:Yn.prototype.copySampleValue_}),Zn.prototype=Object.assign(Object.create(Yn.prototype),{constructor:Zn,DefaultSettings_:{endingStart:ss,endingEnd:ss},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,o=e+1,a=r[i],s=r[o];if(void 0===a)switch(this.getSettings_().endingStart){case cs:i=e,a=2*t-n;break;case us:i=r.length-2,a=t+r[i]-r[i+1];break;default:i=e,a=n}if(void 0===s)switch(this.getSettings_().endingEnd){case cs:o=e,s=2*n-t;break;case us:o=1,s=n+r[1]-r[0];break;default:o=e-1,s=t}var c=.5*(n-t),u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(s-n),this._offsetPrev=i*u,this._offsetNext=o*u},interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,c=s-a,u=this._offsetPrev,l=this._offsetNext,h=this._weightPrev,p=this._weightNext,d=(n-t)/(r-t),f=d*d,m=f*d,g=-h*m+2*h*f-h*d,v=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,b=p*m-p*f,x=0;x!==a;++x)i[x]=g*o[u+x]+v*o[c+x]+y*o[s+x]+b*o[l+x];return i}}),Kn.prototype=Object.assign(Object.create(Yn.prototype),{constructor:Kn,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,c=s-a,u=(n-t)/(r-t),l=1-u,h=0;h!==a;++h)i[h]=o[c+h]*l+o[s+h]*u;return i}}),Jn.prototype=Object.assign(Object.create(Yn.prototype),{constructor:Jn,interpolate_:function(e,t,n,r){return this.copySampleValue_(e-1)}});var qs;qs={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:os,InterpolantFactoryMethodDiscrete:function(e){return new Jn(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Kn(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new Zn(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case is:t=this.InterpolantFactoryMethodDiscrete;break;case os:t=this.InterpolantFactoryMethodLinear;break;case as:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return void console.warn(n)}this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return is;case this.InterpolantFactoryMethodLinear:return os;case this.InterpolantFactoryMethodSmooth:return as}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this},trim:function(e,t){for(var n=this.times,r=n.length,i=0,o=r-1;i!==r&&n[i]<e;)++i;for(;-1!==o&&n[o]>t;)--o;if(++o,0!==i||o!==r){i>=o&&(o=Math.max(o,1),i=o-1);var a=this.getValueSize();this.times=Xs.arraySlice(n,i,o),this.values=Xs.arraySlice(this.values,i*a,o*a)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("invalid value size in track",this),e=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error("track is empty",this),e=!1);for(var o=null,a=0;a!==i;a++){var s=n[a];if("number"===typeof s&&isNaN(s)){console.error("time is not a valid number",this,a,s),e=!1;break}if(null!==o&&o>s){console.error("out of order keys",this,a,s,o),e=!1;break}o=s}if(void 0!==r&&Xs.isTypedArray(r))for(var a=0,c=r.length;a!==c;++a){var u=r[a];if(isNaN(u)){console.error("value is not a valid number",this,a,u),e=!1;break}}return e},optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),r=this.getInterpolation()===as,i=1,o=e.length-1,a=1;a<o;++a){var s=!1,c=e[a];if(c!==e[a+1]&&(1!==a||c!==c[0]))if(r)s=!0;else for(var u=a*n,l=u-n,h=u+n,p=0;p!==n;++p){var d=t[u+p];if(d!==t[l+p]||d!==t[h+p]){s=!0;break}}if(s){if(a!==i){e[i]=e[a];for(var f=a*n,m=i*n,p=0;p!==n;++p)t[m+p]=t[f+p]}++i}}if(o>0){e[i]=e[o];for(var f=o*n,m=i*n,p=0;p!==n;++p)t[m+p]=t[f+p];++i}return i!==e.length&&(this.times=Xs.arraySlice(e,0,i),this.values=Xs.arraySlice(t,0,i*n)),this}},$n.prototype=Object.assign(Object.create(qs),{constructor:$n,ValueTypeName:"vector"}),er.prototype=Object.assign(Object.create(Yn.prototype),{constructor:er,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,c=(n-t)/(r-t),l=s+a;s!==l;s+=4)u.slerpFlat(i,0,o,s-a,o,s,c);return i}}),tr.prototype=Object.assign(Object.create(qs),{constructor:tr,ValueTypeName:"quaternion",DefaultInterpolation:os,InterpolantFactoryMethodLinear:function(e){return new er(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),nr.prototype=Object.assign(Object.create(qs),{constructor:nr,ValueTypeName:"number"}),rr.prototype=Object.assign(Object.create(qs),{constructor:rr,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:is,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ir.prototype=Object.assign(Object.create(qs),{constructor:ir,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:is,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),or.prototype=Object.assign(Object.create(qs),{constructor:or,ValueTypeName:"color"}),ar.prototype=qs,qs.constructor=ar,Object.assign(ar,{parse:function(e){if(void 0===e.type)throw new Error("track type undefined, can not parse");var t=ar._getTrackTypeForValueTypeName(e.type);if(void 0===e.times){var n=[],r=[];Xs.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t,n=e.constructor;if(void 0!==n.toJSON)t=n.toJSON(e);else{t={name:e.name,times:Xs.convertArray(e.times,Array),values:Xs.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return nr;case"vector":case"vector2":case"vector3":case"vector4":return $n;case"color":return or;case"quaternion":return tr;case"bool":case"boolean":return ir;case"string":return rr}throw new Error("Unsupported typeName: "+e)}}),Object.assign(sr,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),i=0,o=n.length;i!==o;++i)t.push(ar.parse(n[i]).scale(r));return new sr(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t},i=0,o=n.length;i!==o;++i)t.push(ar.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){for(var i=t.length,o=[],a=0;a<i;a++){var s=[],c=[];s.push((a+i-1)%i,a,(a+1)%i),c.push(0,1,0);var u=Xs.getKeyframeOrder(s);s=Xs.sortedArray(s,1,u),c=Xs.sortedArray(c,1,u),r||0!==s[0]||(s.push(i),c.push(c[0])),o.push(new nr(".morphTargetInfluences["+t[a].name+"]",s,c).scale(1/n))}return new sr(e,-1,o)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){for(var r={},i=/^([\w-]*?)([\d]+)$/,o=0,a=e.length;o<a;o++){var s=e[o],c=s.name.match(i);if(c&&c.length>1){var u=c[1],l=r[u];l||(r[u]=l=[]),l.push(s)}}var h=[];for(var u in r)h.push(sr.CreateFromMorphTargetSequence(u,r[u],t,n));return h},parseAnimation:function(e,t){if(!e)return console.error("  no animation in JSONLoader data"),null;for(var n=function(e,t,n,r,i){if(0!==n.length){var o=[],a=[];Xs.flattenJSON(n,o,a,r),0!==o.length&&i.push(new e(t,o,a))}},r=[],i=e.name||"default",o=e.length||-1,a=e.fps||30,s=e.hierarchy||[],c=0;c<s.length;c++){var u=s[c].keys;if(u&&0!==u.length)if(u[0].morphTargets){for(var l={},h=0;h<u.length;h++)if(u[h].morphTargets)for(var p=0;p<u[h].morphTargets.length;p++)l[u[h].morphTargets[p]]=-1;for(var d in l){for(var f=[],m=[],p=0;p!==u[h].morphTargets.length;++p){var g=u[h];f.push(g.time),m.push(g.morphTarget===d?1:0)}r.push(new nr(".morphTargetInfluence["+d+"]",f,m))}o=l.length*(a||1)}else{var v=".bones["+t[c].name+"]";n($n,v+".position",u,"pos",r),n(tr,v+".quaternion",u,"rot",r),n($n,v+".scale",u,"scl",r)}}return 0===r.length?null:new sr(i,o,r)}}),Object.assign(sr.prototype,{resetDuration:function(){for(var e=this.tracks,t=0,n=0,r=e.length;n!==r;++n){var i=this.tracks[n];t=Math.max(t,i.times[i.times.length-1])}this.duration=t},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}}),Object.assign(cr.prototype,{load:function(e,t,n,r){var i=this,o=new Nn(i.manager);o.setResponseType("json"),o.load(e,function(e){t(i.parse(e))},n,r)},setTextures:function(e){this.textures=e},parse:function(e){function t(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}var n=this.textures,r=new Vs[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearCoat&&(r.clearCoat=e.clearCoat),void 0!==e.clearCoatRoughness&&(r.clearCoatRoughness=e.clearCoatRoughness),void 0!==e.uniforms&&(r.uniforms=e.uniforms),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(r.vertexColors=e.vertexColors),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.shading&&(r.shading=e.shading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=t(e.map)),void 0!==e.alphaMap&&(r.alphaMap=t(e.alphaMap),r.transparent=!0),void 0!==e.bumpMap&&(r.bumpMap=t(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=t(e.normalMap)),void 0!==e.normalScale){var o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),r.normalScale=(new i).fromArray(o)}return void 0!==e.displacementMap&&(r.displacementMap=t(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=t(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=t(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=t(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=t(e.specularMap)),void 0!==e.envMap&&(r.envMap=t(e.envMap)),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.lightMap&&(r.lightMap=t(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=t(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=t(e.gradientMap)),r}}),Object.assign(ur.prototype,{load:function(e,t,n,r){var i=this,o=new Nn(i.manager);o.setResponseType("json"),o.load(e,function(e){t(i.parse(e))},n,r)},parse:function(e){var t=new Re,n=e.data.index;if(void 0!==n){var r=new Ys[n.type](n.array);t.setIndex(new me(r,1))}var i=e.data.attributes;for(var o in i){var a=i[o],r=new Ys[a.type](a.array);t.addAttribute(o,new me(r,a.itemSize,a.normalized))}var s=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==s)for(var c=0,u=s.length;c!==u;++c){var h=s[c];t.addGroup(h.start,h.count,h.materialIndex)}var p=e.data.boundingSphere;if(void 0!==p){var d=new l;void 0!==p.center&&d.fromArray(p.center),t.boundingSphere=new ne(d,p.radius)}return t}});var Ys={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};lr.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,r=t.length;n<r;n+=2){var i=t[n],o=t[n+1];if(i.test(e))return o}return null}},Object.assign(lr.prototype,{crossOrigin:void 0,extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t,n){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t,n);return r},createMaterial:function(){var e={NoBlending:To,NormalBlending:So,AdditiveBlending:Ao,SubtractiveBlending:Co,MultiplyBlending:Ro,CustomBlending:Po},t=new Y,n=new Bn,r=new cr;return function(i,o,a){function s(e,t,r,i,s){var u,l=o+e,h=lr.Handlers.get(l);null!==h?u=h.load(l):(n.setCrossOrigin(a),u=n.load(l)),void 0!==t&&(u.repeat.fromArray(t),1!==t[0]&&(u.wrapS=va),1!==t[1]&&(u.wrapT=va)),void 0!==r&&u.offset.fromArray(r),void 0!==i&&("repeat"===i[0]&&(u.wrapS=va),"mirror"===i[0]&&(u.wrapS=ba),"repeat"===i[1]&&(u.wrapT=va),"mirror"===i[1]&&(u.wrapT=ba)),void 0!==s&&(u.anisotropy=s);var p=Es.generateUUID();return c[p]=u,p}var c={},u={uuid:Es.generateUUID(),type:"MeshLambertMaterial"};for(var l in i){var h=i[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":u.name=h;break;case"blending":u.blending=e[h];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":u.color=t.fromArray(h).getHex();break;case"colorSpecular":u.specular=t.fromArray(h).getHex();break;case"colorEmissive":u.emissive=t.fromArray(h).getHex();break;case"specularCoef":u.shininess=h;break;case"shading":"basic"===h.toLowerCase()&&(u.type="MeshBasicMaterial"),"phong"===h.toLowerCase()&&(u.type="MeshPhongMaterial"),"standard"===h.toLowerCase()&&(u.type="MeshStandardMaterial");break;case"mapDiffuse":u.map=s(h,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":u.emissiveMap=s(h,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":u.lightMap=s(h,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":u.aoMap=s(h,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":u.bumpMap=s(h,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case"mapBumpScale":u.bumpScale=h;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":u.normalMap=s(h,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case"mapNormalFactor":u.normalScale=[h,h];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":u.specularMap=s(h,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":u.metalnessMap=s(h,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":u.roughnessMap=s(h,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":u.alphaMap=s(h,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":u.side=yo;break;case"doubleSided":u.side=bo;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),u.opacity=h;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":u[l]=h;break;case"vertexColors":!0===h&&(u.vertexColors=Mo),"face"===h&&(u.vertexColors=Eo);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,h)}}return"MeshBasicMaterial"===u.type&&delete u.emissive,"MeshPhongMaterial"!==u.type&&delete u.specular,u.opacity<1&&(u.transparent=!0),r.setTextures(c),r.parse(u)}}()}),Object.assign(hr.prototype,{load:function(e,t,n,r){var i=this,o=this.texturePath&&"string"===typeof this.texturePath?this.texturePath:lr.prototype.extractUrlBase(e),a=new Nn(this.manager);a.setResponseType("json"),a.setWithCredentials(this.withCredentials),a.load(e,function(n){var r=n.metadata;if(void 0!==r){var a=r.type;if(void 0!==a){if("object"===a.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");if("scene"===a.toLowerCase())return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.")}}var s=i.parse(n,o);t(s.geometry,s.materials)},n,r)},setTexturePath:function(e){this.texturePath=e},parse:function(){function e(e,t){function n(e,t){return e&1<<t}var r,o,a,s,c,u,h,p,d,f,m,g,v,y,b,x,_,w,E,M,T,S,A,C,R,P,L,N=e.faces,I=e.vertices,D=e.normals,O=e.colors,U=e.scale,B=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&B++;for(r=0;r<B;r++)t.faceVertexUvs[r]=[]}for(s=0,c=I.length;s<c;)w=new l,w.x=I[s++]*U,w.y=I[s++]*U,w.z=I[s++]*U,t.vertices.push(w);for(s=0,c=N.length;s<c;)if(f=N[s++],m=n(f,0),g=n(f,1),v=n(f,3),y=n(f,4),b=n(f,5),x=n(f,6),_=n(f,7),m){if(M=new de,M.a=N[s],M.b=N[s+1],M.c=N[s+3],T=new de,T.a=N[s+1],T.b=N[s+2],T.c=N[s+3],s+=4,g&&(d=N[s++],M.materialIndex=d,T.materialIndex=d),a=t.faces.length,v)for(r=0;r<B;r++)for(C=e.uvs[r],t.faceVertexUvs[r][a]=[],t.faceVertexUvs[r][a+1]=[],o=0;o<4;o++)p=N[s++],P=C[2*p],L=C[2*p+1],R=new i(P,L),2!==o&&t.faceVertexUvs[r][a].push(R),0!==o&&t.faceVertexUvs[r][a+1].push(R);if(y&&(h=3*N[s++],M.normal.set(D[h++],D[h++],D[h]),T.normal.copy(M.normal)),b)for(r=0;r<4;r++)h=3*N[s++],A=new l(D[h++],D[h++],D[h]),2!==r&&M.vertexNormals.push(A),0!==r&&T.vertexNormals.push(A);if(x&&(u=N[s++],S=O[u],M.color.setHex(S),T.color.setHex(S)),_)for(r=0;r<4;r++)u=N[s++],S=O[u],2!==r&&M.vertexColors.push(new Y(S)),0!==r&&T.vertexColors.push(new Y(S));t.faces.push(M),t.faces.push(T)}else{if(E=new de,E.a=N[s++],E.b=N[s++],E.c=N[s++],g&&(d=N[s++],E.materialIndex=d),a=t.faces.length,v)for(r=0;r<B;r++)for(C=e.uvs[r],t.faceVertexUvs[r][a]=[],o=0;o<3;o++)p=N[s++],P=C[2*p],L=C[2*p+1],R=new i(P,L),t.faceVertexUvs[r][a].push(R);if(y&&(h=3*N[s++],E.normal.set(D[h++],D[h++],D[h])),b)for(r=0;r<3;r++)h=3*N[s++],A=new l(D[h++],D[h++],D[h]),E.vertexNormals.push(A);if(x&&(u=N[s++],E.color.setHex(O[u])),_)for(r=0;r<3;r++)u=N[s++],E.vertexColors.push(new Y(O[u]));t.faces.push(E)}}function t(e,t){var n=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,i=e.skinWeights.length;r<i;r+=n){var o=e.skinWeights[r],s=n>1?e.skinWeights[r+1]:0,c=n>2?e.skinWeights[r+2]:0,u=n>3?e.skinWeights[r+3]:0;t.skinWeights.push(new a(o,s,c,u))}if(e.skinIndices)for(var r=0,i=e.skinIndices.length;r<i;r+=n){var l=e.skinIndices[r],h=n>1?e.skinIndices[r+1]:0,p=n>2?e.skinIndices[r+2]:0,d=n>3?e.skinIndices[r+3]:0;t.skinIndices.push(new a(l,h,p,d))}t.bones=e.bones,t.bones&&t.bones.length>0&&(t.skinWeights.length!==t.skinIndices.length||t.skinIndices.length!==t.vertices.length)&&console.warn("When skinning, number of vertices ("+t.vertices.length+"), skinIndices ("+t.skinIndices.length+"), and skinWeights ("+t.skinWeights.length+") should match.")}function n(e,t){var n=e.scale;if(void 0!==e.morphTargets)for(var r=0,i=e.morphTargets.length;r<i;r++){t.morphTargets[r]={},t.morphTargets[r].name=e.morphTargets[r].name,t.morphTargets[r].vertices=[];for(var o=t.morphTargets[r].vertices,a=e.morphTargets[r].vertices,s=0,c=a.length;s<c;s+=3){var u=new l;u.x=a[s]*n,u.y=a[s+1]*n,u.z=a[s+2]*n,o.push(u)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var h=t.faces,p=e.morphColors[0].colors,r=0,i=h.length;r<i;r++)h[r].color.fromArray(p,3*r)}}function r(e,t){var n=[],r=[];void 0!==e.animation&&r.push(e.animation),void 0!==e.animations&&(e.animations.length?r=r.concat(e.animations):r.push(e.animations));for(var i=0;i<r.length;i++){var o=sr.parseAnimation(r[i],t.bones);o&&n.push(o)}if(t.morphTargets){var a=sr.CreateClipsFromMorphTargetSequences(t.morphTargets,10);n=n.concat(a)}n.length>0&&(t.animations=n)}return function(i,o){void 0!==i.data&&(i=i.data),void 0!==i.scale?i.scale=1/i.scale:i.scale=1;var a=new Ce;return e(i,a),t(i,a),n(i,a),r(i,a),a.computeFaceNormals(),a.computeBoundingSphere(),void 0===i.materials||0===i.materials.length?{geometry:a}:{geometry:a,materials:lr.prototype.initMaterials(i.materials,o,this.crossOrigin)}}}()}),Object.assign(pr.prototype,{load:function(e,t,n,r){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var i=this;new Nn(i.manager).load(e,function(n){var o=null;try{o=JSON.parse(n)}catch(t){return void 0!==r&&r(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}var a=o.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())return void console.error("THREE.ObjectLoader: Can't load "+e+". Use THREE.JSONLoader instead.");i.parse(o,t)},n,r)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var n=this.parseGeometries(e.geometries),r=this.parseImages(e.images,function(){void 0!==t&&t(a)}),i=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,i),a=this.parseObject(e.object,n,o);return e.animations&&(a.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(a),a},parseGeometries:function(e){var t={};if(void 0!==e)for(var n=new hr,r=new ur,i=0,o=e.length;i<o;i++){var a,s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new Gs[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new Gs[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new Gs[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new Gs[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new Gs[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new Gs[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":a=new Gs[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new Gs[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new Gs[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new Gs[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":a=new Gs[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":a=r.parse(s);break;case"Geometry":a=n.parse(s,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e,t){var n={};if(void 0!==e){var r=new cr;r.setTextures(t);for(var i=0,o=e.length;i<o;i++){var a=e[i];if("MultiMaterial"===a.type){for(var s=[],c=0;c<a.materials.length;c++)s.push(r.parse(a.materials[c]));n[a.uuid]=s}else n[a.uuid]=r.parse(a)}}return n},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=sr.parse(e[n]);t.push(r)}return t},parseImages:function(e,t){var n=this,r={};if(void 0!==e&&e.length>0){var i=new Ln(t),o=new On(i);o.setCrossOrigin(this.crossOrigin);for(var a=0,s=e.length;a<s;a++){var c=e[a],u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.texturePath+c.url;r[c.uuid]=function(e){return n.manager.itemStart(e),o.load(e,function(){n.manager.itemEnd(e)},void 0,function(){n.manager.itemEnd(e),n.manager.itemError(e)})}(u)}}return r},parseTextures:function(e,t){function n(e,t){return"number"===typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}var r={};if(void 0!==e)for(var i=0,a=e.length;i<a;i++){var s=e[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var c=new o(t[s.image]);c.needsUpdate=!0,c.uuid=s.uuid,void 0!==s.name&&(c.name=s.name),void 0!==s.mapping&&(c.mapping=n(s.mapping,Zs)),void 0!==s.offset&&c.offset.fromArray(s.offset),void 0!==s.repeat&&c.repeat.fromArray(s.repeat),void 0!==s.wrap&&(c.wrapS=n(s.wrap[0],Ks),c.wrapT=n(s.wrap[1],Ks)),void 0!==s.minFilter&&(c.minFilter=n(s.minFilter,Js)),void 0!==s.magFilter&&(c.magFilter=n(s.magFilter,Js)),void 0!==s.anisotropy&&(c.anisotropy=s.anisotropy),void 0!==s.flipY&&(c.flipY=s.flipY),r[s.uuid]=c}return r},parseObject:function(){var e=new h;return function(t,n,r){function i(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),n[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],n=0,i=e.length;n<i;n++){var o=e[n];void 0===r[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),t.push(r[o])}return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}var a;switch(t.type){case"Scene":a=new yt,void 0!==t.background&&Number.isInteger(t.background)&&(a.background=new Y(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?a.fog=new vt(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(a.fog=new gt(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":a=new Ue(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(a.focus=t.focus),void 0!==t.zoom&&(a.zoom=t.zoom),void 0!==t.filmGauge&&(a.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(a.filmOffset=t.filmOffset),void 0!==t.view&&(a.view=Object.assign({},t.view));break;case"OrthographicCamera":a=new Be(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":a=new Xn(t.color,t.intensity);break;case"DirectionalLight":a=new Wn(t.color,t.intensity);break;case"PointLight":a=new Vn(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":a=new qn(t.color,t.intensity,t.width,t.height);break;case"SpotLight":a=new Gn(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":a=new kn(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=i(t.geometry),c=o(t.material);a=s.bones&&s.bones.length>0?new Tt(s,c):new Pe(s,c);break;case"LOD":a=new wt;break;case"Line":a=new At(i(t.geometry),o(t.material),t.mode);break;case"LineLoop":a=new Rt(i(t.geometry),o(t.material));break;case"LineSegments":a=new Ct(i(t.geometry),o(t.material));break;case"PointCloud":case"Points":a=new Lt(i(t.geometry),o(t.material));break;case"Sprite":a=new _t(o(t.material));break;case"Group":a=new Nt;break;default:a=new le}if(a.uuid=t.uuid,void 0!==t.name&&(a.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(a.position,a.quaternion,a.scale)):(void 0!==t.position&&a.position.fromArray(t.position),void 0!==t.rotation&&a.rotation.fromArray(t.rotation),void 0!==t.quaternion&&a.quaternion.fromArray(t.quaternion),void 0!==t.scale&&a.scale.fromArray(t.scale)),void 0!==t.castShadow&&(a.castShadow=t.castShadow),void 0!==t.receiveShadow&&(a.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(a.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(a.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&a.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(a.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(a.visible=t.visible),void 0!==t.userData&&(a.userData=t.userData),void 0!==t.children)for(var u in t.children)a.add(this.parseObject(t.children[u],n,r));if("LOD"===t.type)for(var l=t.levels,h=0;h<l.length;h++){var p=l[h],u=a.getObjectByProperty("uuid",p.object);void 0!==u&&a.addLevel(u,p.distance)}return a}}()});var Zs={UVMapping:ua,CubeReflectionMapping:la,CubeRefractionMapping:ha,EquirectangularReflectionMapping:pa,EquirectangularRefractionMapping:da,SphericalReflectionMapping:fa,CubeUVReflectionMapping:ma,CubeUVRefractionMapping:ga},Ks={RepeatWrapping:va,ClampToEdgeWrapping:ya,MirroredRepeatWrapping:ba},Js={NearestFilter:xa,NearestMipMapNearestFilter:_a,NearestMipMapLinearFilter:wa,LinearFilter:Ea,LinearMipMapNearestFilter:Ma,LinearMipMapLinearFilter:Ta};Object.assign(Er.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n,r=[],i=this.getPoint(0),o=0;for(r.push(0),n=1;n<=e;n++)t=this.getPoint(n/e),o+=t.distanceTo(i),r.push(o),i=t;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n,r=this.getLengths(),i=0,o=r.length;n=t||e*r[o-1];for(var a,s=0,c=o-1;s<=c;)if(i=Math.floor(s+(c-s)/2),(a=r[i]-n)<0)s=i+1;else{if(!(a>0)){c=i;break}c=i-1}if(i=c,r[i]===n)return i/(o-1);var u=r[i];return(i+(n-u)/(r[i+1]-u))/(o-1)},getTangent:function(e){var t=e-1e-4,n=e+1e-4;t<0&&(t=0),n>1&&(n=1);var r=this.getPoint(t);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var n,r,i,o=new l,a=[],s=[],c=[],u=new l,p=new h;for(n=0;n<=e;n++)r=n/e,a[n]=this.getTangentAt(r),a[n].normalize();s[0]=new l,c[0]=new l;var d=Number.MAX_VALUE,f=Math.abs(a[0].x),m=Math.abs(a[0].y),g=Math.abs(a[0].z);for(f<=d&&(d=f,o.set(1,0,0)),m<=d&&(d=m,o.set(0,1,0)),g<=d&&o.set(0,0,1),u.crossVectors(a[0],o).normalize(),s[0].crossVectors(a[0],u),c[0].crossVectors(a[0],s[0]),n=1;n<=e;n++)s[n]=s[n-1].clone(),c[n]=c[n-1].clone(),u.crossVectors(a[n-1],a[n]),u.length()>Number.EPSILON&&(u.normalize(),i=Math.acos(Es.clamp(a[n-1].dot(a[n]),-1,1)),s[n].applyMatrix4(p.makeRotationAxis(u,i))),c[n].crossVectors(a[n],s[n]);if(!0===t)for(i=Math.acos(Es.clamp(s[0].dot(s[e]),-1,1)),i/=e,a[0].dot(u.crossVectors(s[0],s[e]))>0&&(i=-i),n=1;n<=e;n++)s[n].applyMatrix4(p.makeRotationAxis(a[n],i*n)),c[n].crossVectors(a[n],s[n]);return{tangents:a,normals:s,binormals:c}}}),Mr.prototype=Object.create(Er.prototype),Mr.prototype.constructor=Mr,Mr.prototype.isLineCurve=!0,Mr.prototype.getPoint=function(e){if(1===e)return this.v2.clone();var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},Mr.prototype.getPointAt=function(e){return this.getPoint(e)},Mr.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},Tr.prototype=Object.assign(Object.create(Er.prototype),{constructor:Tr,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Mr(t,e))},getPoint:function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,o=this.curves[r],a=o.getLength(),s=0===a?0:1-i/a;return o.getPointAt(s)}r++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t,n=[],r=0,i=this.curves;r<i.length;r++)for(var o=i[r],a=o&&o.isEllipseCurve?2*e:o&&o.isLineCurve?1:o&&o.isSplineCurve?e*o.points.length:e,s=o.getPoints(a),c=0;c<s.length;c++){var u=s[c];t&&t.equals(u)||(n.push(u),t=u)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},createPointsGeometry:function(e){var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){for(var t=new Ce,n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new l(i.x,i.y,i.z||0))}return t}}),Sr.prototype=Object.create(Er.prototype),Sr.prototype.constructor=Sr,Sr.prototype.isEllipseCurve=!0,Sr.prototype.getPoint=function(e){for(var t=2*Math.PI,n=this.aEndAngle-this.aStartAngle,r=Math.abs(n)<Number.EPSILON;n<0;)n+=t;for(;n>t;)n-=t;n<Number.EPSILON&&(n=r?0:t),!0!==this.aClockwise||r||(n===t?n=-t:n-=t);var o=this.aStartAngle+e*n,a=this.aX+this.xRadius*Math.cos(o),s=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),l=a-this.aX,h=s-this.aY;a=l*c-h*u+this.aX,s=l*u+h*c+this.aY}return new i(a,s)},Ar.prototype=Object.create(Er.prototype),Ar.prototype.constructor=Ar,Ar.prototype.isSplineCurve=!0,Ar.prototype.getPoint=function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),o=n-r,a=t[0===r?r:r-1],s=t[r],c=t[r>t.length-2?t.length-1:r+1],u=t[r>t.length-3?t.length-1:r+2];return new i(dr(o,a.x,s.x,c.x,u.x),dr(o,a.y,s.y,c.y,u.y))},Cr.prototype=Object.create(Er.prototype),Cr.prototype.constructor=Cr,Cr.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2,o=this.v3;return new i(wr(e,t.x,n.x,r.x,o.x),wr(e,t.y,n.y,r.y,o.y))},Rr.prototype=Object.create(Er.prototype),Rr.prototype.constructor=Rr,Rr.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2;return new i(vr(e,t.x,n.x,r.x),vr(e,t.y,n.y,r.y))};var Qs=Object.assign(Object.create(Tr.prototype),{fromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var n=new Mr(this.currentPoint.clone(),new i(e,t));this.curves.push(n),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,n,r){var o=new Rr(this.currentPoint.clone(),new i(e,t),new i(n,r));this.curves.push(o),this.currentPoint.set(n,r)},bezierCurveTo:function(e,t,n,r,o,a){var s=new Cr(this.currentPoint.clone(),new i(e,t),new i(n,r),new i(o,a));this.curves.push(s),this.currentPoint.set(o,a)},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new Ar(t);this.curves.push(n),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,n,r,i,o){var a=this.currentPoint.x,s=this.currentPoint.y;this.absarc(e+a,t+s,n,r,i,o)},absarc:function(e,t,n,r,i,o){this.absellipse(e,t,n,n,r,i,o)},ellipse:function(e,t,n,r,i,o,a,s){var c=this.currentPoint.x,u=this.currentPoint.y;this.absellipse(e+c,t+u,n,r,i,o,a,s)},absellipse:function(e,t,n,r,i,o,a,s){var c=new Sr(e,t,n,r,i,o,a,s);if(this.curves.length>0){var u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)}});Pr.prototype=Qs,Qs.constructor=Pr,Lr.prototype=Object.assign(Object.create(Qs),{constructor:Lr,getPointsHoles:function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractAllPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},extractPoints:function(e){return this.extractAllPoints(e)}}),Object.assign(Nr.prototype,{moveTo:function(e,t){this.currentPath=new Pr,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,n,r){this.currentPath.quadraticCurveTo(e,t,n,r)},bezierCurveTo:function(e,t,n,r,i,o){this.currentPath.bezierCurveTo(e,t,n,r,i,o)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function n(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n],o=new Lr;o.curves=i.curves,t.push(o)}return t}var r=js.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===t)return n(i);var o,a,s,c=[];if(1===i.length)return a=i[0],s=new Lr,s.curves=a.curves,c.push(s),c;var u=!r(i[0].getPoints());u=e?!u:u;var l,h=[],p=[],d=[],f=0;p[f]=void 0,d[f]=[];for(var m=0,g=i.length;m<g;m++)a=i[m],l=a.getPoints(),o=r(l),o=e?!o:o,o?(!u&&p[f]&&f++,p[f]={s:new Lr,p:l},p[f].s.curves=a.curves,u&&f++,d[f]=[]):d[f].push({h:a,p:l[0]});if(!p[0])return n(i);if(p.length>1){for(var v=!1,y=[],b=0,x=p.length;b<x;b++)h[b]=[];for(var b=0,x=p.length;b<x;b++)for(var _=d[b],w=0;w<_.length;w++){for(var E=_[w],M=!0,T=0;T<p.length;T++)(function(e,t){for(var n=t.length,r=!1,i=n-1,o=0;o<n;i=o++){var a=t[i],s=t[o],c=s.x-a.x,u=s.y-a.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(a=t[o],c=-c,s=t[i],u=-u),e.y<a.y||e.y>s.y)continue;if(e.y===a.y){if(e.x===a.x)return!0}else{var l=u*(e.x-a.x)-c*(e.y-a.y);if(0===l)return!0;if(l<0)continue;r=!r}}else{if(e.y!==a.y)continue;if(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x)return!0}}return r})(E.p,p[T].p)&&(b!==T&&y.push({froms:b,tos:T,hole:w}),M?(M=!1,h[T].push(E)):v=!0);M&&h[b].push(E)}y.length>0&&(v||(d=h))}for(var S,m=0,A=p.length;m<A;m++){s=p[m].s,c.push(s),S=d[m];for(var C=0,R=S.length;C<R;C++)s.holes.push(S[C].h)}return c}}),Object.assign(Ir.prototype,{isFont:!0,generateShapes:function(e,t,n){function r(e,t,r,o){var a=i.glyphs[e]||i.glyphs["?"];if(a){var s,c,u,l,h,p,d,f,m,g,v,y=new Nr,b=[];if(a.o)for(var x=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),_=0,w=x.length;_<w;){var E=x[_++];switch(E){case"m":s=x[_++]*t+r,c=x[_++]*t+o,y.moveTo(s,c);break;case"l":s=x[_++]*t+r,c=x[_++]*t+o,y.lineTo(s,c);break;case"q":if(u=x[_++]*t+r,l=x[_++]*t+o,d=x[_++]*t+r,f=x[_++]*t+o,y.quadraticCurveTo(d,f,u,l),v=b[b.length-1]){h=v.x,p=v.y;for(var M=1;M<=n;M++){var T=M/n;vr(T,h,d,u),vr(T,p,f,l)}}break;case"b":if(u=x[_++]*t+r,l=x[_++]*t+o,d=x[_++]*t+r,f=x[_++]*t+o,m=x[_++]*t+r,g=x[_++]*t+o,y.bezierCurveTo(d,f,m,g,u,l),v=b[b.length-1]){h=v.x,p=v.y;for(var M=1;M<=n;M++){var T=M/n;wr(T,h,d,m,u),wr(T,p,f,g,l)}}}}return{offsetX:a.ha*t,path:y}}}void 0===t&&(t=100),void 0===n&&(n=4);for(var i=this.data,o=function(e){for(var n=String(e).split(""),o=t/i.resolution,a=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*o,s=0,c=0,u=[],l=0;l<n.length;l++){var h=n[l];if("\n"===h)s=0,c-=a;else{var p=r(h,o,s,c);s+=p.offsetX,u.push(p.path)}}return u}(e),a=[],s=0,c=o.length;s<c;s++)Array.prototype.push.apply(a,o[s].toShapes());return a}}),Object.assign(Dr.prototype,{load:function(e,t,n,r){var i=this;new Nn(this.manager).load(e,function(e){var n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}var r=i.parse(n);t&&t(r)},n,r)},parse:function(e){return new Ir(e)}});var $s,ec={getContext:function(){return void 0===$s&&($s=new(window.AudioContext||window.webkitAudioContext)),$s},setContext:function(e){$s=e}};Object.assign(Or.prototype,{load:function(e,t,n,r){var i=new Nn(this.manager);i.setResponseType("arraybuffer"),i.load(e,function(e){ec.getContext().decodeAudioData(e,function(e){t(e)})},n,r)}}),Object.assign(Ur.prototype,{update:function(){var e,t,n,r,i,o,a,s,c=new h,u=new h;return function(l){if(e!==this||t!==l.focus||n!==l.fov||r!==l.aspect*this.aspect||i!==l.near||o!==l.far||a!==l.zoom||s!==this.eyeSep){e=this,t=l.focus,n=l.fov,r=l.aspect*this.aspect,i=l.near,o=l.far,a=l.zoom;var h=l.projectionMatrix.clone();s=this.eyeSep/2;var p,d,f=s*i/t,m=i*Math.tan(Es.DEG2RAD*n*.5)/a;u.elements[12]=-s,c.elements[12]=s,p=-m*r+f,d=m*r+f,h.elements[0]=2*i/(d-p),h.elements[8]=(d+p)/(d-p),this.cameraL.projectionMatrix.copy(h),p=-m*r-f,d=m*r-f,h.elements[0]=2*i/(d-p),h.elements[8]=(d+p)/(d-p),this.cameraR.projectionMatrix.copy(h)}this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(u),this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(c)}}()}),Br.prototype=Object.create(le.prototype),Br.prototype.constructor=Br,Fr.prototype=Object.assign(Object.create(Ue.prototype),{constructor:Fr,isArrayCamera:!0}),kr.prototype=Object.assign(Object.create(le.prototype),{constructor:kr,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(e){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){this.gain.gain.value=e},updateMatrixWorld:function(){var e=new l,t=new u,n=new l,r=new l;return function(i){le.prototype.updateMatrixWorld.call(this,i);var o=this.context.listener,a=this.up;this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),o.positionX?(o.positionX.setValueAtTime(e.x,this.context.currentTime),o.positionY.setValueAtTime(e.y,this.context.currentTime),o.positionZ.setValueAtTime(e.z,this.context.currentTime),o.forwardX.setValueAtTime(r.x,this.context.currentTime),o.forwardY.setValueAtTime(r.y,this.context.currentTime),o.forwardZ.setValueAtTime(r.z,this.context.currentTime),o.upX.setValueAtTime(a.x,this.context.currentTime),o.upY.setValueAtTime(a.y,this.context.currentTime),o.upZ.setValueAtTime(a.z,this.context.currentTime)):(o.setPosition(e.x,e.y,e.z),o.setOrientation(r.x,r.y,r.z,a.x,a.y,a.z))}}()}),zr.prototype=Object.assign(Object.create(le.prototype),{constructor:zr,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.onended=this.onEnded.bind(this),e.playbackRate.setValueAtTime(this.playbackRate,this.startTime),e.start(0,this.startTime),this.isPlaying=!0,this.source=e,this.connect()},pause:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this)},stop:function(){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.startTime=0,this.isPlaying=!1,this)},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this)},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){return!1===this.hasPlaybackControl?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this)},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.value=e,this}}),jr.prototype=Object.assign(Object.create(zr.prototype),{constructor:jr,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){this.panner.refDistance=e},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){this.panner.rolloffFactor=e},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){this.panner.distanceModel=e},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){this.panner.maxDistance=e},updateMatrixWorld:function(){var e=new l;return function(t){le.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}()}),Object.assign(Gr.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}}),Object.assign(Vr.prototype,{accumulate:function(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r,o=this.cumulativeWeight;if(0===o){for(var a=0;a!==r;++a)n[i+a]=n[a];o=t}else{o+=t;var s=t/o;this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=o},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,i<1){var a=3*t;this._mixBufferRegion(n,r,a,1-i,t)}for(var s=t,c=t+t;s!==c;++s)if(n[s]!==n[s+t]){o.setValue(n,r);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=3*n;e.getValue(t,r);for(var i=n,o=r;i!==o;++i)t[i]=t[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,r,i){if(r>=.5)for(var o=0;o!==i;++o)e[t+o]=e[n+o]},_slerp:function(e,t,n,r){u.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,i){for(var o=1-r,a=0;a!==i;++a){var s=t+a;e[s]=e[s]*o+e[n+a]*r}}}),Object.assign(Hr.prototype,{getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}),Object.assign(Wr,{Composite:Hr,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Wr.Composite(e,t,n):new Wr(e,t,n)},parseTrackName:function(){var e=/((?:[\w-]+[\/:])*)/,t=/([\w-\.]+)?/,n=/(?:\.([\w-]+)(?:\[(.+)\])?)?/,r=/\.([\w-]+)(?:\[(.+)\])?/,i=new RegExp("^"+e.source+t.source+n.source+r.source+"$"),o=["material","materials","bones"];return function(e){var t=i.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var a=n.nodeName.substring(r+1);-1!==o.indexOf(a)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=a)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}}(),findNode:function(e,t){if(!t||""===t||"root"===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=function(e){for(var n=0;n<e.bones.length;n++){var r=e.bones[n];if(r.name===t)return r}return null}(e.skeleton);if(n)return n}if(e.children){var r=function(e){for(var n=0;n<e.length;n++){var i=e[n];if(i.name===t||i.uuid===t)return i;var o=r(i.children);if(o)return o}return null},i=r(e.children);if(i)return i}return null}}),Object.assign(Wr.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.node[this.propertyName]=e[t]},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;if(e||(e=Wr.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("  trying to update node for track: "+this.path+" but it wasn't found.");if(n){var o=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("  can not bind to material as node does not have a material",this);if(!e.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);e=e.skeleton.bones;for(var a=0;a<e.length;a++)if(e[a].name===o){o=a;break}break;default:if(void 0===e[n])return void console.error("  can not bind to objectName of node, undefined",this);e=e[n]}if(void 0!==o){if(void 0===e[o])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);e=e[o]}}var s=e[r];if(void 0===s){var c=t.nodeName;return void console.error("  trying to update property for track: "+c+"."+r+" but it wasn't found.",e)}var u=this.Versioning.None;void 0!==e.needsUpdate?(u=this.Versioning.NeedsUpdate,this.targetObject=e):void 0!==e.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var l=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);if(!e.geometry.morphTargets)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(var a=0;a<this.node.geometry.morphTargets.length;a++)if(e.geometry.morphTargets[a].name===i){i=a;break}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][u]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Wr.prototype,{_getValue_unbound:Wr.prototype.getValue,_setValue_unbound:Wr.prototype.setValue}),Object.assign(Xr.prototype,{isAnimationObjectGroup:!0,add:function(e){for(var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,o=this._paths,a=this._parsedPaths,s=this._bindings,c=s.length,u=0,l=arguments.length;u!==l;++u){var h=arguments[u],p=h.uuid,d=i[p],f=void 0;if(void 0===d){d=n++,i[p]=d,t.push(h);for(var m=0,g=c;m!==g;++m)s[m].push(new Wr(h,o[m],a[m]))}else if(d<r){f=t[d];var v=--r,y=t[v];i[y.uuid]=d,t[d]=y,i[p]=v,t[v]=h;for(var m=0,g=c;m!==g;++m){var b=s[m],x=b[v],_=b[d];b[d]=x,void 0===_&&(_=new Wr(h,o[m],a[m])),b[v]=_}}else t[d]!==f&&console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=r},remove:function(e){for(var t=this._objects,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,o=i.length,a=0,s=arguments.length;a!==s;++a){var c=arguments[a],u=c.uuid,l=r[u];if(void 0!==l&&l>=n){var h=n++,p=t[h];r[p.uuid]=l,t[l]=p,r[u]=h,t[h]=c;for(var d=0,f=o;d!==f;++d){var m=i[d],g=m[h],v=m[l];m[l]=g,m[h]=v}}}this.nCachedObjects_=n},uncache:function(e){for(var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,o=this._bindings,a=o.length,s=0,c=arguments.length;s!==c;++s){var u=arguments[s],l=u.uuid,h=i[l];if(void 0!==h)if(delete i[l],h<r){var p=--r,d=t[p],f=--n,m=t[f];i[d.uuid]=h,t[h]=d,i[m.uuid]=p,t[p]=m,t.pop();for(var g=0,v=a;g!==v;++g){var y=o[g],b=y[p],x=y[f];y[h]=b,y[p]=x,y.pop()}}else{var f=--n,m=t[f];i[m.uuid]=h,t[h]=m,t.pop();for(var g=0,v=a;g!==v;++g){var y=o[g];y[h]=y[f],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(void 0!==r)return i[r];var o=this._paths,a=this._parsedPaths,s=this._objects,c=s.length,u=this.nCachedObjects_,l=new Array(c);r=i.length,n[e]=r,o.push(e),a.push(t),i.push(l);for(var h=u,p=s.length;h!==p;++h){var d=s[h];l[h]=new Wr(d,e,t)}return l},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var r=this._paths,i=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];t[e[a]]=n,o[n]=s,o.pop(),i[n]=i[a],i.pop(),r[n]=r[a],r.pop()}}}),Object.assign(qr.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,i=e._clip.duration,o=i/r,a=r/i;e.warp(1,o,t),this.warp(a,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,i=r.time,o=this._timeScaleInterpolant,a=this.timeScale;null===o&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);var s=o.parameterPositions,c=o.sampleValues;return s[0]=i,s[1]=i+n,c[0]=e/a,c[1]=t/a,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,r){if(!this.enabled)return void this._updateWeight(e);var i=this._startTime;if(null!==i){var o=(e-i)*n;if(o<0||0===n)return;this._startTime=null,t=n*o}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(s>0)for(var c=this._interpolants,u=this._propertyBindings,l=0,h=c.length;l!==h;++l)c[l].evaluate(a),u[l].accumulate(r,s)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n){t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e;if(0===e)return t;var n=this._clip.duration,r=this.loop,i=this._loopCount;if(r===ts){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else{if(!(t<0))break e;t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{var o=r===rs;if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),t>=n||t<0){var a=Math.floor(t/n);t-=n*a,i+=Math.abs(a);var s=this.repetitions-i;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(0===s){var c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}if(o&&1===(1&i))return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=cs,r.endingEnd=cs):(r.endingStart=e?this.zeroSlopeAtStart?cs:ss:us,r.endingEnd=t?this.zeroSlopeAtEnd?cs:ss:us)},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,o=this._weightInterpolant;null===o&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);var a=o.parameterPositions,s=o.sampleValues;return a[0]=i,s[0]=t,a[1]=i+e,s[1]=n,this}}),Object.assign(Yr.prototype,r.prototype,{_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,o=e._propertyBindings,a=e._interpolants,s=n.uuid,c=this._bindingsByRootAndName,u=c[s];void 0===u&&(u={},c[s]=u);for(var l=0;l!==i;++l){var h=r[l],p=h.name,d=u[p];if(void 0!==d)o[l]=d;else{if(void 0!==(d=o[l])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=t&&t._propertyBindings[l].binding.parsedPath;d=new Vr(Wr.create(n,p,f),h.ValueTypeName,h.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,s,p),o[l]=d}a[l].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}for(var i=e._propertyBindings,o=0,a=i.length;o!==a;++o){var s=i[o];0===s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0===--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,o=i[t];if(void 0===o)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=o;else{var a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),o.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,o=this._actionsByClip,a=o[i],s=a.knownActions,c=s[s.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,s[u]=c,s.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete o[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0===--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],o=this._bindings;void 0===i&&(i={},r[t]=i),i[n]=e,e._cacheIndex=o.length,o.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,o=this._bindingsByRootAndName,a=o[r],s=t[t.length-1],c=e._cacheIndex;s._cacheIndex=c,t[c]=s,t.pop(),delete a[i];e:{for(var u in a)break e;delete o[r]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&(n=new Kn(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var n=t||this._root,r=n.uuid,i="string"===typeof e?sr.findByName(n,e):e,o=null!==i?i.uuid:e,a=this._actionsByClip[o],s=null;if(void 0!==a){var c=a.actionByRoot[r];if(void 0!==c)return c;s=a.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var u=new qr(this,i,t);return this._bindAction(u,s),this._addInactiveAction(u,o,r),u},existingAction:function(e,t){var n=t||this._root,r=n.uuid,i="string"===typeof e?sr.findByName(n,e):e,o=i?i.uuid:e,a=this._actionsByClip[o];return void 0!==a?a.actionByRoot[r]||null:null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(var i=0;i!==r;++i)n[i].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),o=this._accuIndex^=1,a=0;a!==n;++a){t[a]._update(r,e,i,o)}for(var s=this._bindings,c=this._nActiveBindings,a=0;a!==c;++a)s[a].apply(o);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){for(var o=i.knownActions,a=0,s=o.length;a!==s;++a){var c=o[a];this._deactivateAction(c);var u=c._cacheIndex,l=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=u,t[u]=l,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot,o=i[t];void 0!==o&&(this._deactivateAction(o),this._removeInactiveAction(o))}var a=this._bindingsByRootAndName,s=a[t];if(void 0!==s)for(var c in s){var u=s[c];u.restoreOriginalState(),this._removeInactiveBinding(u)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),Zr.prototype.clone=function(){return new Zr(void 0===this.value.clone?this.value:this.value.clone())},Kr.prototype=Object.assign(Object.create(Re.prototype),{constructor:Kr,isInstancedBufferGeometry:!0,addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n})},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var i=n[r];this.addAttribute(r,i.clone())}for(var o=e.groups,a=0,s=o.length;a<s;a++){var c=o[a];this.addGroup(c.start,c.count,c.materialIndex)}return this}}),Object.defineProperties(Jr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Jr.prototype,{isInterleavedBufferAttribute:!0,setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}}),Object.defineProperty(Qr.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Qr.prototype,{isInterleavedBuffer:!0,setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==e?e.length/this.stride:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}}),$r.prototype=Object.assign(Object.create(Qr.prototype),{constructor:$r,isInstancedInterleavedBuffer:!0,copy:function(e){return Qr.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),ei.prototype=Object.assign(Object.create(me.prototype),{constructor:ei,isInstancedBufferAttribute:!0,copy:function(e){return me.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Object.assign(ti.prototype,{linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t){var n=[];return ri(e,this,n,t),n.sort(ni),n},intersectObjects:function(e,t){var n=[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var r=0,i=e.length;r<i;r++)ri(e[r],this,n,t);return n.sort(ni),n}}),Object.assign(ii.prototype,{start:function(){this.startTime=("undefined"===typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=("undefined"===typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}),Object.assign(oi.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Es.clamp(e.y/this.radius,-1,1))),this}}),Object.assign(ai.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.radius=Math.sqrt(e.x*e.x+e.z*e.z),this.theta=Math.atan2(e.x,e.z),this.y=e.y,this}}),si.prototype=Object.create(Pe.prototype),si.prototype.constructor=si,si.prototype.createAnimation=function(e,t,n,r){var i={start:t,end:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=i,this.animationsList.push(i)},si.prototype.autoCreateAnimations=function(e){for(var t,n=/([a-z]+)_?(\d+)/i,r={},i=this.geometry,o=0,a=i.morphTargets.length;o<a;o++){var s=i.morphTargets[o],c=s.name.match(n);if(c&&c.length>1){var u=c[1];r[u]||(r[u]={start:1/0,end:-1/0});var l=r[u];o<l.start&&(l.start=o),o>l.end&&(l.end=o),t||(t=u)}}for(var u in r){var l=r[u];this.createAnimation(u,l.start,l.end,e)}this.firstAnimation=t},si.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},si.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},si.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},si.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},si.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},si.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},si.prototype.getAnimationTime=function(e){var t=0,n=this.animationsMap[e];return n&&(t=n.time),t},si.prototype.getAnimationDuration=function(e){var t=-1,n=this.animationsMap[e];return n&&(t=n.duration),t},si.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},si.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},si.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration));var o=r.start+Es.clamp(Math.floor(r.time/i),0,r.length-1),a=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o);var s=r.time%i/i;r.directionBackwards&&(s=1-s),r.currentFrame!==r.lastFrame?(this.morphTargetInfluences[r.currentFrame]=s*a,this.morphTargetInfluences[r.lastFrame]=(1-s)*a):this.morphTargetInfluences[r.currentFrame]=a}}},ci.prototype=Object.create(le.prototype),ci.prototype.constructor=ci,ci.prototype.isImmediateRenderObject=!0,ui.prototype=Object.create(Ct.prototype),ui.prototype.constructor=ui,ui.prototype.update=function(){var e=new l,t=new l,n=new re;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,o=this.geometry.attributes.position,a=this.object.geometry;if(a&&a.isGeometry)for(var s=a.vertices,c=a.faces,u=0,l=0,h=c.length;l<h;l++)for(var p=c[l],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[r[d]]],g=p.vertexNormals[d];e.copy(m).applyMatrix4(i),t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(u,e.x,e.y,e.z),u+=1,o.setXYZ(u,t.x,t.y,t.z),u+=1}else if(a&&a.isBufferGeometry)for(var v=a.attributes.position,y=a.attributes.normal,u=0,d=0,f=v.count;d<f;d++)e.set(v.getX(d),v.getY(d),v.getZ(d)).applyMatrix4(i),t.set(y.getX(d),y.getY(d),y.getZ(d)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(u,e.x,e.y,e.z),u+=1,o.setXYZ(u,t.x,t.y,t.z),u+=1;o.needsUpdate=!0}}(),li.prototype=Object.create(le.prototype),li.prototype.constructor=li,li.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},li.prototype.update=function(){var e=new l,t=new l;return function(){var n=this.light.distance?this.light.distance:1e3,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color)}}(),hi.prototype=Object.create(Ct.prototype),hi.prototype.constructor=hi,hi.prototype.getBoneList=function(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,this.getBoneList(e.children[n]));return t},hi.prototype.update=function(){var e=new l,t=new h,n=new h;return function(){var r=this.geometry,i=r.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var o=0,a=0;o<this.bones.length;o++){var s=this.bones[o];s.parent&&s.parent.isBone&&(t.multiplyMatrices(n,s.matrixWorld),e.setFromMatrixPosition(t),i.setXYZ(a,e.x,e.y,e.z),t.multiplyMatrices(n,s.parent.matrixWorld),e.setFromMatrixPosition(t),i.setXYZ(a+1,e.x,e.y,e.z),a+=2)}r.getAttribute("position").needsUpdate=!0}}(),pi.prototype=Object.create(Pe.prototype),pi.prototype.constructor=pi,pi.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},pi.prototype.update=function(){this.material.color.copy(this.light.color)},di.prototype=Object.create(le.prototype),di.prototype.constructor=di,di.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},di.prototype.update=function(){var e=this.children[0];e.material.color.copy(this.light.color);var t=.5*this.light.width,n=.5*this.light.height,r=e.geometry.attributes.position,i=r.array;i[0]=t,i[1]=-n,i[2]=0,i[3]=t,i[4]=n,i[5]=0,i[6]=-t,i[7]=n,i[8]=0,i[9]=-t,i[10]=-n,i[11]=0,i[12]=t,i[13]=-n,i[14]=0,r.needsUpdate=!0},fi.prototype=Object.create(le.prototype),fi.prototype.constructor=fi,fi.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},fi.prototype.update=function(){var e=new l,t=new Y,n=new Y;return function(){var r=this.children[0],i=r.geometry.getAttribute("color");t.copy(this.light.color),n.copy(this.light.groundColor);for(var o=0,a=i.count;o<a;o++){var s=o<a/2?t:n;i.setXYZ(o,s.r,s.g,s.b)}r.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),i.needsUpdate=!0}}(),mi.prototype=Object.create(Ct.prototype),mi.prototype.constructor=mi,gi.prototype=Object.create(Ct.prototype),gi.prototype.constructor=gi,vi.prototype=Object.create(Ct.prototype),vi.prototype.constructor=vi,vi.prototype.update=function(){var e=new l,t=new l,n=new re;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,i=this.geometry.attributes.position,o=this.object.geometry,a=o.vertices,s=o.faces,c=0,u=0,l=s.length;u<l;u++){var h=s[u],p=h.normal;e.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(r),t.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(c,e.x,e.y,e.z),c+=1,i.setXYZ(c,t.x,t.y,t.z),c+=1}i.needsUpdate=!0}}(),yi.prototype=Object.create(le.prototype),yi.prototype.constructor=yi,yi.prototype.dispose=function(){var e=this.children[0],t=this.children[1];e.geometry.dispose(),e.material.dispose(),t.geometry.dispose(),t.material.dispose()},yi.prototype.update=function(){var e=new l,t=new l,n=new l;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e);var r=this.children[0],i=this.children[1];r.lookAt(n),r.material.color.copy(this.light.color),i.lookAt(n),i.scale.z=n.length()}}(),bi.prototype=Object.create(Ct.prototype),bi.prototype.constructor=bi,bi.prototype.update=function(){function e(e,o,a,s){r.set(o,a,s).unproject(i);var c=n[e];if(void 0!==c)for(var u=t.getAttribute("position"),l=0,h=c.length;l<h;l++)u.setXYZ(c[l],r.x,r.y,r.z)}var t,n,r=new l,i=new Oe;return function(){t=this.geometry,n=this.pointMap;i.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),t.getAttribute("position").needsUpdate=!0}}(),xi.prototype=Object.create(Ct.prototype),xi.prototype.constructor=xi,xi.prototype.update=function(){var e=new te;return function(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&e.setFromObject(this.object),!e.isEmpty()){var n=e.min,r=e.max,i=this.geometry.attributes.position,o=i.array;o[0]=r.x,o[1]=r.y,o[2]=r.z,o[3]=n.x,o[4]=r.y,o[5]=r.z,o[6]=n.x,o[7]=n.y,o[8]=r.z,o[9]=r.x,o[10]=n.y,o[11]=r.z,o[12]=r.x,o[13]=r.y,o[14]=n.z,o[15]=n.x,o[16]=r.y,o[17]=n.z,o[18]=n.x,o[19]=n.y,o[20]=n.z,o[21]=r.x,o[22]=n.y,o[23]=n.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),xi.prototype.setFromObject=function(e){return this.object=e,this.update(),this};var tc,nc;_i.prototype=Object.create(le.prototype),_i.prototype.constructor=_i,_i.prototype.setDirection=function(){var e,t=new l;return function(n){n.y>.99999?this.quaternion.set(0,0,0,1):n.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(n.z,0,-n.x).normalize(),e=Math.acos(n.y),this.quaternion.setFromAxisAngle(t,e))}}(),_i.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},_i.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)},wi.prototype=Object.create(Ct.prototype),wi.prototype.constructor=wi;var rc=new l,ic=new Ei,oc=new Ei,ac=new Ei;Mi.prototype=Object.create(Er.prototype),Mi.prototype.constructor=Mi,Mi.prototype.getPoint=function(e){var t=this.points,n=t.length;n<2&&console.log("duh, you need at least 2 points");var r=(n-(this.closed?0:1))*e,i=Math.floor(r),o=r-i;this.closed?i+=i>0?0:(Math.floor(Math.abs(i)/t.length)+1)*t.length:0===o&&i===n-1&&(i=n-2,o=1);var a,s,c,u;if(this.closed||i>0?a=t[(i-1)%n]:(rc.subVectors(t[0],t[1]).add(t[0]),a=rc),s=t[i%n],c=t[(i+1)%n],this.closed||i+2<n?u=t[(i+2)%n]:(rc.subVectors(t[n-1],t[n-2]).add(t[n-1]),u=rc),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var h="chordal"===this.type?.5:.25,p=Math.pow(a.distanceToSquared(s),h),d=Math.pow(s.distanceToSquared(c),h),f=Math.pow(c.distanceToSquared(u),h);d<1e-4&&(d=1),p<1e-4&&(p=d),f<1e-4&&(f=d),ic.initNonuniformCatmullRom(a.x,s.x,c.x,u.x,p,d,f),oc.initNonuniformCatmullRom(a.y,s.y,c.y,u.y,p,d,f),ac.initNonuniformCatmullRom(a.z,s.z,c.z,u.z,p,d,f)}else if("catmullrom"===this.type){var m=void 0!==this.tension?this.tension:.5;ic.initCatmullRom(a.x,s.x,c.x,u.x,m),oc.initCatmullRom(a.y,s.y,c.y,u.y,m),ac.initCatmullRom(a.z,s.z,c.z,u.z,m)}return new l(ic.calc(o),oc.calc(o),ac.calc(o))},Ti.prototype=Object.create(Er.prototype),Ti.prototype.constructor=Ti,Ti.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2,i=this.v3;return new l(wr(e,t.x,n.x,r.x,i.x),wr(e,t.y,n.y,r.y,i.y),wr(e,t.z,n.z,r.z,i.z))},Si.prototype=Object.create(Er.prototype),Si.prototype.constructor=Si,Si.prototype.getPoint=function(e){var t=this.v0,n=this.v1,r=this.v2;return new l(vr(e,t.x,n.x,r.x),vr(e,t.y,n.y,r.y),vr(e,t.z,n.z,r.z))},Ai.prototype=Object.create(Er.prototype),Ai.prototype.constructor=Ai,Ai.prototype.getPoint=function(e){if(1===e)return this.v2.clone();var t=new l;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t},Ci.prototype=Object.create(Sr.prototype),Ci.prototype.constructor=Ci;var sc={createMultiMaterialObject:function(e,t){for(var n=new Nt,r=0,i=t.length;r<i;r++)n.add(new Pe(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var r=new h;r.getInverse(n.matrixWorld),e.applyMatrix(r),t.remove(e),n.add(e)}},cc=0,uc=1;Er.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Er.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Zi.prototype=Object.create(Mi.prototype),Ki.prototype=Object.create(Mi.prototype),Ji.prototype=Object.create(Mi.prototype),Object.assign(Ji.prototype,{initFromArray:function(e){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(e){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(e){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),mi.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Object.assign(Z.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(te.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),he.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Es.random16=function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},Object.assign(re.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToBuffer:function(e,t,n){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)},applyToVector3Array:function(e,t,n){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(h.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){var e;return function(){return void 0===e&&(e=new l),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),e.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(e,t,n){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)},applyToVector3Array:function(e,t,n){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,r,i,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,o)}}),ie.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},u.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(se.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Lr.prototype,{extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new nn(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new dn(this,e)}}),Object.assign(i.prototype,{fromAttribute:function(e,t,n){return console.error("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)}}),Object.assign(l.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.error("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)}}),Object.assign(a.prototype,{fromAttribute:function(e,t,n){return console.error("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)}}),Ce.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(le.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)}}),Object.defineProperties(le.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(wt.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Et.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Object.defineProperty(Er.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),Ue.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Fn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(me.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(Re.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addDrawCall:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(Re.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Zr.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Q.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Y}}}),Object.defineProperties(Sn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties($.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(mt.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(mt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=e}}}),Object.defineProperties(ae.prototype,{cullFace:{get:function(){return this.renderReverseSided?uo:co},set:function(e){var t=e!==co;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+t+"."),this.renderReverseSided=t}}}),Object.defineProperties(s.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),zr.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;return(new Or).load(e,function(e){t.setBuffer(e)}),this},Gr.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};var lc={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},hc={crossOrigin:void 0,loadTexture:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new Bn;i.setCrossOrigin(this.crossOrigin);var o=i.load(e,n,void 0,r);return t&&(o.mapping=t),o},loadTextureCube:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new Un;i.setCrossOrigin(this.crossOrigin);var o=i.load(e,n,void 0,r);return t&&(o.mapping=t),o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}}},function(e,t,n){"use strict";function r(){}function i(e){try{return e.then}catch(e){return v=e,y}}function o(e,t){try{return e(t)}catch(e){return v=e,y}}function a(e,t,n){try{e(t,n)}catch(e){return v=e,y}}function s(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor's argument is not a function");this._75=0,this._83=0,this._18=null,this._38=null,e!==r&&m(e,this)}function c(e,t,n){return new e.constructor(function(i,o){var a=new s(r);a.then(i,o),u(e,new f(t,n,a))})}function u(e,t){for(;3===e._83;)e=e._18;if(s._47&&s._47(e),0===e._83)return 0===e._75?(e._75=1,void(e._38=t)):1===e._75?(e._75=2,void(e._38=[e._38,t])):void e._38.push(t);l(e,t)}function l(e,t){g(function(){var n=1===e._83?t.onFulfilled:t.onRejected;if(null===n)return void(1===e._83?h(t.promise,e._18):p(t.promise,e._18));var r=o(n,e._18);r===y?p(t.promise,v):h(t.promise,r)})}function h(e,t){if(t===e)return p(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var n=i(t);if(n===y)return p(e,v);if(n===e.then&&t instanceof s)return e._83=3,e._18=t,void d(e);if("function"===typeof n)return void m(n.bind(t),e)}e._83=1,e._18=t,d(e)}function p(e,t){e._83=2,e._18=t,s._71&&s._71(e,t),d(e)}function d(e){if(1===e._75&&(u(e,e._38),e._38=null),2===e._75){for(var t=0;t<e._38.length;t++)u(e,e._38[t]);e._38=null}}function f(e,t,n){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=n}function m(e,t){var n=!1,r=a(e,function(e){n||(n=!0,h(t,e))},function(e){n||(n=!0,p(t,e))});n||r!==y||(n=!0,p(t,v))}var g=n(87),v=null,y={};e.exports=s,s._47=null,s._71=null,s._44=r,s.prototype.then=function(e,t){if(this.constructor!==s)return c(this,e,t);var n=new s(r);return u(this,new f(e,t,n)),n}},function(e,t,n){"use strict";function r(e,t,n){this.props=e,this.context=t,this.refs=u,this.updater=n||c}function i(e,t,n){this.props=e,this.context=t,this.refs=u,this.updater=n||c}function o(){}var a=n(17),s=n(3),c=n(49),u=(n(50),n(23));n(0),n(92);r.prototype.isReactComponent={},r.prototype.setState=function(e,t){"object"!==typeof e&&"function"!==typeof e&&null!=e&&a("85"),this.updater.enqueueSetState(this,e),t&&this.updater.enqueueCallback(this,t,"setState")},r.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this),e&&this.updater.enqueueCallback(this,e,"forceUpdate")};o.prototype=r.prototype,i.prototype=new o,i.prototype.constructor=i,s(i.prototype,r.prototype),i.prototype.isPureReactComponent=!0,e.exports={Component:r,PureComponent:i}},function(e,t,n){"use strict";var r=(n(1),{isMounted:function(e){return!1},enqueueCallback:function(e,t){},enqueueForceUpdate:function(e){},enqueueReplaceState:function(e,t){},enqueueSetState:function(e,t){}});e.exports=r},function(e,t,n){"use strict";var r=!1;e.exports=r},function(e,t,n){"use strict";var r="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103;e.exports=r},function(e,t,n){"use strict";var r=n(100);e.exports=function(e){return r(e,!1)}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";var r={hasCachedChildNodes:1};e.exports=r},function(e,t,n){"use strict";function r(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}var i=n(2);n(0);e.exports=r},function(e,t,n){"use strict";function r(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}e.exports=r},function(e,t,n){"use strict";function r(){return!o&&i.canUseDOM&&(o="textContent"in document.documentElement?"textContent":"innerText"),o}var i=n(5),o=null;e.exports=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=n(2),o=n(11),a=(n(0),function(){function e(t){r(this,e),this._callbacks=null,this._contexts=null,this._arg=t}return e.prototype.enqueue=function(e,t){this._callbacks=this._callbacks||[],this._callbacks.push(e),this._contexts=this._contexts||[],this._contexts.push(t)},e.prototype.notifyAll=function(){var e=this._callbacks,t=this._contexts,n=this._arg;if(e&&t){e.length!==t.length&&i("24"),this._callbacks=null,this._contexts=null;for(var r=0;r<e.length;r++)e[r].call(t[r],n);e.length=0,t.length=0}},e.prototype.checkpoint=function(){return this._callbacks?this._callbacks.length:0},e.prototype.rollback=function(e){this._callbacks&&this._contexts&&(this._callbacks.length=e,this._contexts.length=e)},e.prototype.reset=function(){this._callbacks=null,this._contexts=null},e.prototype.destructor=function(){this.reset()},e}());e.exports=o.addPoolingTo(a)},function(e,t,n){"use strict";var r={logTopLevelRenders:!1};e.exports=r},function(e,t,n){"use strict";function r(e){var t=e.type,n=e.nodeName;return n&&"input"===n.toLowerCase()&&("checkbox"===t||"radio"===t)}function i(e){return e._wrapperState.valueTracker}function o(e,t){e._wrapperState.valueTracker=t}function a(e){delete e._wrapperState.valueTracker}function s(e){var t;return e&&(t=r(e)?""+e.checked:e.value),t}var c=n(4),u={_getTrackerFromNode:function(e){return i(c.getInstanceFromNode(e))},track:function(e){if(!i(e)){var t=c.getNodeFromInstance(e),n=r(t)?"checked":"value",s=Object.getOwnPropertyDescriptor(t.constructor.prototype,n),u=""+t[n];t.hasOwnProperty(n)||"function"!==typeof s.get||"function"!==typeof s.set||(Object.defineProperty(t,n,{enumerable:s.enumerable,configurable:!0,get:function(){return s.get.call(this)},set:function(e){u=""+e,s.set.call(this,e)}}),o(e,{getValue:function(){return u},setValue:function(e){u=""+e},stopTracking:function(){a(e),delete t[n]}}))}},updateValueIfChanged:function(e){if(!e)return!1;var t=i(e);if(!t)return u.track(e),!0;var n=t.getValue(),r=s(c.getNodeFromInstance(e));return r!==n&&(t.setValue(r),!0)},stopTracking:function(e){var t=i(e);t&&t.stopTracking()}};e.exports=u},function(e,t,n){"use strict";function r(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!i[e.type]:"textarea"===t}var i={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};e.exports=r},function(e,t,n){"use strict";var r={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(e){r.currentScrollLeft=e.x,r.currentScrollTop=e.y}};e.exports=r},function(e,t,n){"use strict";var r=n(5),i=n(27),o=n(26),a=function(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t};r.canUseDOM&&("textContent"in document.documentElement||(a=function(e,t){if(3===e.nodeType)return void(e.nodeValue=t);o(e,i(t))})),e.exports=a},function(e,t,n){"use strict";function r(e){try{e.focus()}catch(e){}}e.exports=r},function(e,t,n){"use strict";function r(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}var i={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},o=["Webkit","ms","Moz","O"];Object.keys(i).forEach(function(e){o.forEach(function(t){i[r(t,e)]=i[e]})});var a={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},s={isUnitlessNumber:i,shorthandPropertyExpansions:a};e.exports=s},function(e,t,n){"use strict";function r(e){return!!u.hasOwnProperty(e)||!c.hasOwnProperty(e)&&(s.test(e)?(u[e]=!0,!0):(c[e]=!0,!1))}function i(e,t){return null==t||e.hasBooleanValue&&!t||e.hasNumericValue&&isNaN(t)||e.hasPositiveNumericValue&&t<1||e.hasOverloadedBooleanValue&&!1===t}var o=n(14),a=(n(4),n(7),n(135)),s=(n(1),new RegExp("^["+o.ATTRIBUTE_NAME_START_CHAR+"]["+o.ATTRIBUTE_NAME_CHAR+"]*$")),c={},u={},l={createMarkupForID:function(e){return o.ID_ATTRIBUTE_NAME+"="+a(e)},setAttributeForID:function(e,t){e.setAttribute(o.ID_ATTRIBUTE_NAME,t)},createMarkupForRoot:function(){return o.ROOT_ATTRIBUTE_NAME+'=""'},setAttributeForRoot:function(e){e.setAttribute(o.ROOT_ATTRIBUTE_NAME,"")},createMarkupForProperty:function(e,t){var n=o.properties.hasOwnProperty(e)?o.properties[e]:null;if(n){if(i(n,t))return"";var r=n.attributeName;return n.hasBooleanValue||n.hasOverloadedBooleanValue&&!0===t?r+'=""':r+"="+a(t)}return o.isCustomAttribute(e)?null==t?"":e+"="+a(t):null},createMarkupForCustomAttribute:function(e,t){return r(e)&&null!=t?e+"="+a(t):""},setValueForProperty:function(e,t,n){var r=o.properties.hasOwnProperty(t)?o.properties[t]:null;if(r){var a=r.mutationMethod;if(a)a(e,n);else{if(i(r,n))return void this.deleteValueForProperty(e,t);if(r.mustUseProperty)e[r.propertyName]=n;else{var s=r.attributeName,c=r.attributeNamespace;c?e.setAttributeNS(c,s,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(s,""):e.setAttribute(s,""+n)}}}else if(o.isCustomAttribute(t))return void l.setValueForAttribute(e,t,n)},setValueForAttribute:function(e,t,n){if(r(t)){null==n?e.removeAttribute(t):e.setAttribute(t,""+n)}},deleteValueForAttribute:function(e,t){e.removeAttribute(t)},deleteValueForProperty:function(e,t){var n=o.properties.hasOwnProperty(t)?o.properties[t]:null;if(n){var r=n.mutationMethod;if(r)r(e,void 0);else if(n.mustUseProperty){var i=n.propertyName;n.hasBooleanValue?e[i]=!1:e[i]=""}else e.removeAttribute(n.attributeName)}else o.isCustomAttribute(t)&&e.removeAttribute(t)}};e.exports=l},function(e,t,n){"use strict";function r(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var e=this._currentElement.props,t=s.getValue(e);null!=t&&i(this,Boolean(e.multiple),t)}}function i(e,t,n){var r,i,o=c.getNodeFromInstance(e).options;if(t){for(r={},i=0;i<n.length;i++)r[""+n[i]]=!0;for(i=0;i<o.length;i++){var a=r.hasOwnProperty(o[i].value);o[i].selected!==a&&(o[i].selected=a)}}else{for(r=""+n,i=0;i<o.length;i++)if(o[i].value===r)return void(o[i].selected=!0);o.length&&(o[0].selected=!0)}}function o(e){var t=this._currentElement.props,n=s.executeOnChange(t,e);return this._rootNodeID&&(this._wrapperState.pendingUpdate=!0),u.asap(r,this),n}var a=n(3),s=n(38),c=n(4),u=n(8),l=(n(1),!1),h={getHostProps:function(e,t){return a({},t,{onChange:e._wrapperState.onChange,value:void 0})},mountWrapper:function(e,t){var n=s.getValue(t);e._wrapperState={pendingUpdate:!1,initialValue:null!=n?n:t.defaultValue,listeners:null,onChange:o.bind(e),wasMultiple:Boolean(t.multiple)},void 0===t.value||void 0===t.defaultValue||l||(l=!0)},getSelectValueContext:function(e){return e._wrapperState.initialValue},postUpdateWrapper:function(e){var t=e._currentElement.props;e._wrapperState.initialValue=void 0;var n=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=Boolean(t.multiple);var r=s.getValue(t);null!=r?(e._wrapperState.pendingUpdate=!1,i(e,Boolean(t.multiple),r)):n!==Boolean(t.multiple)&&(null!=t.defaultValue?i(e,Boolean(t.multiple),t.defaultValue):i(e,Boolean(t.multiple),t.multiple?[]:""))}};e.exports=h},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(e){if(l===setTimeout)return setTimeout(e,0);if((l===n||!l)&&setTimeout)return l=setTimeout,setTimeout(e,0);try{return l(e,0)}catch(t){try{return l.call(null,e,0)}catch(t){return l.call(this,e,0)}}}function o(e){if(h===clearTimeout)return clearTimeout(e);if((h===r||!h)&&clearTimeout)return h=clearTimeout,clearTimeout(e);try{return h(e)}catch(t){try{return h.call(null,e)}catch(t){return h.call(this,e)}}}function a(){m&&d&&(m=!1,d.length?f=d.concat(f):g=-1,f.length&&s())}function s(){if(!m){var e=i(a);m=!0;for(var t=f.length;t;){for(d=f,f=[];++g<t;)d&&d[g].run();g=-1,t=f.length}d=null,m=!1,o(e)}}function c(e,t){this.fun=e,this.array=t}function u(){}var l,h,p=e.exports={};!function(){try{l="function"===typeof setTimeout?setTimeout:n}catch(e){l=n}try{h="function"===typeof clearTimeout?clearTimeout:r}catch(e){h=r}}();var d,f=[],m=!1,g=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];f.push(new c(e,t)),1!==f.length||m||i(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=u,p.addListener=u,p.once=u,p.off=u,p.removeListener=u,p.removeAllListeners=u,p.emit=u,p.prependListener=u,p.prependOnceListener=u,p.listeners=function(e){return[]},p.binding=function(e){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(e){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(e,t,n){"use strict";function r(e){if(e){var t=e.getName();if(t)return" Check the render method of `"+t+"`."}return""}function i(e){return"function"===typeof e&&"undefined"!==typeof e.prototype&&"function"===typeof e.prototype.mountComponent&&"function"===typeof e.prototype.receiveComponent}function o(e,t){var n;if(null===e||!1===e)n=u.create(o);else if("object"===typeof e){var s=e,c=s.type;if("function"!==typeof c&&"string"!==typeof c){var p="";p+=r(s._owner),a("130",null==c?c:typeof c,p)}"string"===typeof s.type?n=l.createInternalComponent(s):i(s.type)?(n=new s.type(s),n.getHostNode||(n.getHostNode=n.getNativeNode)):n=new h(s)}else"string"===typeof e||"number"===typeof e?n=l.createInstanceForText(e):a("131",typeof e);return n._mountIndex=0,n._mountImage=null,n}var a=n(2),s=n(3),c=n(144),u=n(71),l=n(72),h=(n(145),n(0),n(1),function(e){this.construct(e)});s(h.prototype,c,{_instantiateReactComponent:o}),e.exports=o},function(e,t,n){"use strict";var r=n(2),i=n(12),o=(n(0),{HOST:0,COMPOSITE:1,EMPTY:2,getType:function(e){return null===e||!1===e?o.EMPTY:i.isValidElement(e)?"function"===typeof e.type?o.COMPOSITE:o.HOST:void r("26",e)}});e.exports=o},function(e,t,n){"use strict";var r,i={injectEmptyComponentFactory:function(e){r=e}},o={create:function(e){return r(e)}};o.injection=i,e.exports=o},function(e,t,n){"use strict";function r(e){return s||a("111",e.type),new s(e)}function i(e){return new c(e)}function o(e){return e instanceof c}var a=n(2),s=(n(0),null),c=null,u={injectGenericComponentClass:function(e){s=e},injectTextComponentClass:function(e){c=e}},l={createInternalComponent:r,createInstanceForText:i,isTextComponent:o,injection:u};e.exports=l},function(e,t,n){"use strict";function r(e,t){return e&&"object"===typeof e&&null!=e.key?u.escape(e.key):t.toString(36)}function i(e,t,n,o){var p=typeof e;if("undefined"!==p&&"boolean"!==p||(e=null),null===e||"string"===p||"number"===p||"object"===p&&e.$$typeof===s)return n(o,e,""===t?l+r(e,0):t),1;var d,f,m=0,g=""===t?l:t+h;if(Array.isArray(e))for(var v=0;v<e.length;v++)d=e[v],f=g+r(d,v),m+=i(d,f,n,o);else{var y=c(e);if(y){var b,x=y.call(e);if(y!==e.entries)for(var _=0;!(b=x.next()).done;)d=b.value,f=g+r(d,_++),m+=i(d,f,n,o);else for(;!(b=x.next()).done;){var w=b.value;w&&(d=w[1],f=g+u.escape(w[0])+h+r(d,0),m+=i(d,f,n,o))}}else if("object"===p){var E="",M=String(e);a("31","[object Object]"===M?"object with keys {"+Object.keys(e).join(", ")+"}":M,E)}}return m}function o(e,t,n){return null==e?0:i(e,"",t,n)}var a=n(2),s=(n(9),n(146)),c=n(147),u=(n(0),n(42)),l=(n(1),"."),h=":";e.exports=o},function(e,t,n){"use strict";function r(e){var t=Function.prototype.toString,n=Object.prototype.hasOwnProperty,r=RegExp("^"+t.call(n).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");try{var i=t.call(e);return r.test(i)}catch(e){return!1}}function i(e){var t=u(e);if(t){var n=t.childIDs;l(e),n.forEach(i)}}function o(e,t,n){return"\n    in "+(e||"Unknown")+(t?" (at "+t.fileName.replace(/^.*[\\\/]/,"")+":"+t.lineNumber+")":n?" (created by "+n+")":"")}function a(e){return null==e?"#empty":"string"===typeof e||"number"===typeof e?"#text":"string"===typeof e.type?e.type:e.type.displayName||e.type.name||"Unknown"}function s(e){var t,n=T.getDisplayName(e),r=T.getElement(e),i=T.getOwnerID(e);return i&&(t=T.getDisplayName(i)),o(n,r&&r._source,t)}var c,u,l,h,p,d,f,m=n(17),g=n(9),v=(n(0),n(1),"function"===typeof Array.from&&"function"===typeof Map&&r(Map)&&null!=Map.prototype&&"function"===typeof Map.prototype.keys&&r(Map.prototype.keys)&&"function"===typeof Set&&r(Set)&&null!=Set.prototype&&"function"===typeof Set.prototype.keys&&r(Set.prototype.keys));if(v){var y=new Map,b=new Set;c=function(e,t){y.set(e,t)},u=function(e){return y.get(e)},l=function(e){y.delete(e)},h=function(){return Array.from(y.keys())},p=function(e){b.add(e)},d=function(e){b.delete(e)},f=function(){return Array.from(b.keys())}}else{var x={},_={},w=function(e){return"."+e},E=function(e){return parseInt(e.substr(1),10)};c=function(e,t){var n=w(e);x[n]=t},u=function(e){var t=w(e);return x[t]},l=function(e){var t=w(e);delete x[t]},h=function(){return Object.keys(x).map(E)},p=function(e){var t=w(e);_[t]=!0},d=function(e){var t=w(e);delete _[t]},f=function(){return Object.keys(_).map(E)}}var M=[],T={onSetChildren:function(e,t){var n=u(e);n||m("144"),n.childIDs=t;for(var r=0;r<t.length;r++){var i=t[r],o=u(i);o||m("140"),null==o.childIDs&&"object"===typeof o.element&&null!=o.element&&m("141"),o.isMounted||m("71"),null==o.parentID&&(o.parentID=e),o.parentID!==e&&m("142",i,o.parentID,e)}},onBeforeMountComponent:function(e,t,n){c(e,{element:t,parentID:n,text:null,childIDs:[],isMounted:!1,updateCount:0})},onBeforeUpdateComponent:function(e,t){var n=u(e);n&&n.isMounted&&(n.element=t)},onMountComponent:function(e){var t=u(e);t||m("144"),t.isMounted=!0,0===t.parentID&&p(e)},onUpdateComponent:function(e){var t=u(e);t&&t.isMounted&&t.updateCount++},onUnmountComponent:function(e){var t=u(e);if(t){t.isMounted=!1;0===t.parentID&&d(e)}M.push(e)},purgeUnmountedComponents:function(){if(!T._preventPurging){for(var e=0;e<M.length;e++){i(M[e])}M.length=0}},isMounted:function(e){var t=u(e);return!!t&&t.isMounted},getCurrentStackAddendum:function(e){var t="";if(e){var n=a(e),r=e._owner;t+=o(n,e._source,r&&r.getName())}var i=g.current,s=i&&i._debugID;return t+=T.getStackAddendumByID(s)},getStackAddendumByID:function(e){for(var t="";e;)t+=s(e),e=T.getParentID(e);return t},getChildIDs:function(e){var t=u(e);return t?t.childIDs:[]},getDisplayName:function(e){var t=T.getElement(e);return t?a(t):null},getElement:function(e){var t=u(e);return t?t.element:null},getOwnerID:function(e){var t=T.getElement(e);return t&&t._owner?t._owner._debugID:null},getParentID:function(e){var t=u(e);return t?t.parentID:null},getSource:function(e){var t=u(e),n=t?t.element:null;return null!=n?n._source:null},getText:function(e){var t=T.getElement(e);return"string"===typeof t?t:"number"===typeof t?""+t:null},getUpdateCount:function(e){var t=u(e);return t?t.updateCount:0},getRootIDs:f,getRegisteredIDs:h,pushNonStandardWarningStack:function(e,t){if("function"===typeof console.reactStack){var n=[],r=g.current,i=r&&r._debugID;try{for(e&&n.push({name:i?T.getDisplayName(i):null,fileName:t?t.fileName:null,lineNumber:t?t.lineNumber:null});i;){var o=T.getElement(i),a=T.getParentID(i),s=T.getOwnerID(i),c=s?T.getDisplayName(s):null,u=o&&o._source;n.push({name:c,fileName:u?u.fileName:null,lineNumber:u?u.lineNumber:null}),i=a}}catch(e){}console.reactStack(n)}},popNonStandardWarningStack:function(){"function"===typeof console.reactStackEnd&&console.reactStackEnd()}};e.exports=T},function(e,t,n){"use strict";var r=n(6),i={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=i},function(e,t,n){"use strict";function r(e){return o(document.documentElement,e)}var i=n(159),o=n(161),a=n(64),s=n(77),c={hasSelectionCapabilities:function(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)},getSelectionInformation:function(){var e=s();return{focusedElem:e,selectionRange:c.hasSelectionCapabilities(e)?c.getSelection(e):null}},restoreSelection:function(e){var t=s(),n=e.focusedElem,i=e.selectionRange;t!==n&&r(n)&&(c.hasSelectionCapabilities(n)&&c.setSelection(n,i),a(n))},getSelection:function(e){var t;if("selectionStart"in e)t={start:e.selectionStart,end:e.selectionEnd};else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var n=document.selection.createRange();n.parentElement()===e&&(t={start:-n.moveStart("character",-e.value.length),end:-n.moveEnd("character",-e.value.length)})}else t=i.getOffsets(e);return t||{start:0,end:0}},setSelection:function(e,t){var n=t.start,r=t.end;if(void 0===r&&(r=n),"selectionStart"in e)e.selectionStart=n,e.selectionEnd=Math.min(r,e.value.length);else if(document.selection&&e.nodeName&&"input"===e.nodeName.toLowerCase()){var o=e.createTextRange();o.collapse(!0),o.moveStart("character",n),o.moveEnd("character",r-n),o.select()}else i.setOffsets(e,t)}};e.exports=c},function(e,t,n){"use strict";function r(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=r},function(e,t,n){"use strict";function r(e,t){for(var n=Math.min(e.length,t.length),r=0;r<n;r++)if(e.charAt(r)!==t.charAt(r))return r;return e.length===t.length?-1:n}function i(e){return e?e.nodeType===D?e.documentElement:e.firstChild:null}function o(e){return e.getAttribute&&e.getAttribute(L)||""}function a(e,t,n,r,i){var o;if(_.logTopLevelRenders){var a=e._currentElement.props.child,s=a.type;o="React mount: "+("string"===typeof s?s:s.displayName||s.name),console.time(o)}var c=M.mountComponent(e,n,null,b(e,t),i,0);o&&console.timeEnd(o),e._renderedComponent._topLevelWrapper=e,k._mountImageIntoNode(c,t,e,r,n)}function s(e,t,n,r){var i=S.ReactReconcileTransaction.getPooled(!n&&x.useCreateElement);i.perform(a,null,e,t,i,n,r),S.ReactReconcileTransaction.release(i)}function c(e,t,n){for(M.unmountComponent(e,n),t.nodeType===D&&(t=t.documentElement);t.lastChild;)t.removeChild(t.lastChild)}function u(e){var t=i(e);if(t){var n=y.getInstanceFromNode(t);return!(!n||!n._hostParent)}}function l(e){return!(!e||e.nodeType!==I&&e.nodeType!==D&&e.nodeType!==O)}function h(e){var t=i(e),n=t&&y.getInstanceFromNode(t);return n&&!n._hostParent?n:null}function p(e){var t=h(e);return t?t._hostContainerInfo._topLevelWrapper:null}var d=n(2),f=n(16),m=n(14),g=n(12),v=n(28),y=(n(9),n(4)),b=n(176),x=n(177),_=n(59),w=n(21),E=(n(7),n(178)),M=n(15),T=n(43),S=n(8),A=n(23),C=n(69),R=(n(0),n(26)),P=n(41),L=(n(1),m.ID_ATTRIBUTE_NAME),N=m.ROOT_ATTRIBUTE_NAME,I=1,D=9,O=11,U={},B=1,F=function(){this.rootID=B++};F.prototype.isReactComponent={},F.prototype.render=function(){return this.props.child},F.isReactTopLevelWrapper=!0;var k={TopLevelWrapper:F,_instancesByReactRootID:U,scrollMonitor:function(e,t){t()},_updateRootComponent:function(e,t,n,r,i){return k.scrollMonitor(r,function(){T.enqueueElementInternal(e,t,n),i&&T.enqueueCallbackInternal(e,i)}),e},_renderNewRootComponent:function(e,t,n,r){l(t)||d("37"),v.ensureScrollValueMonitoring();var i=C(e,!1);S.batchedUpdates(s,i,t,n,r);var o=i._instance.rootID;return U[o]=i,i},renderSubtreeIntoContainer:function(e,t,n,r){return null!=e&&w.has(e)||d("38"),k._renderSubtreeIntoContainer(e,t,n,r)},_renderSubtreeIntoContainer:function(e,t,n,r){T.validateCallback(r,"ReactDOM.render"),g.isValidElement(t)||d("39","string"===typeof t?" Instead of passing a string like 'div', pass React.createElement('div') or <div />.":"function"===typeof t?" Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />.":null!=t&&void 0!==t.props?" This may be caused by unintentionally loading two independent copies of React.":"");var a,s=g.createElement(F,{child:t});if(e){var c=w.get(e);a=c._processChildContext(c._context)}else a=A;var l=p(n);if(l){var h=l._currentElement,f=h.props.child;if(P(f,t)){var m=l._renderedComponent.getPublicInstance(),v=r&&function(){r.call(m)};return k._updateRootComponent(l,s,a,n,v),m}k.unmountComponentAtNode(n)}var y=i(n),b=y&&!!o(y),x=u(n),_=b&&!l&&!x,E=k._renderNewRootComponent(s,n,_,a)._renderedComponent.getPublicInstance();return r&&r.call(E),E},render:function(e,t,n){return k._renderSubtreeIntoContainer(null,e,t,n)},unmountComponentAtNode:function(e){l(e)||d("40");var t=p(e);if(!t){u(e),1===e.nodeType&&e.hasAttribute(N);return!1}return delete U[t._instance.rootID],S.batchedUpdates(c,t,e,!1),!0},_mountImageIntoNode:function(e,t,n,o,a){if(l(t)||d("41"),o){var s=i(t);if(E.canReuseMarkup(e,s))return void y.precacheNode(n,s);var c=s.getAttribute(E.CHECKSUM_ATTR_NAME);s.removeAttribute(E.CHECKSUM_ATTR_NAME);var u=s.outerHTML;s.setAttribute(E.CHECKSUM_ATTR_NAME,c);var h=e,p=r(h,u),m=" (client) "+h.substring(p-20,p+20)+"\n (server) "+u.substring(p-20,p+20);t.nodeType===D&&d("42",m)}if(t.nodeType===D&&d("43"),a.useCreateElement){for(;t.lastChild;)t.removeChild(t.lastChild);f.insertTreeBefore(t,e,null)}else R(t,e),y.precacheNode(n,t.firstChild)}};e.exports=k},function(e,t,n){"use strict";function r(e){for(var t;(t=e._renderedNodeType)===i.COMPOSITE;)e=e._renderedComponent;return t===i.HOST?e._renderedComponent:t===i.EMPTY?null:void 0}var i=n(70);e.exports=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(22),s=n.n(a),c=n(184),u=n.n(c),l=n(185),h=n.n(l),p=n(186),d=n.n(p),f=n(81),m=n(82),g="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),y=n(188),b=n(46);d()(b);var x=function(e){function t(){var e,n,o,a;r(this,t);for(var s=arguments.length,c=Array(s),u=0;u<s;u++)c[u]=arguments[u];return n=o=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(c))),o.scene=null,o.camera=null,o.renderer=null,o.geometry=null,o.material=null,o.mesh=null,o.productModel=null,o.state={productLoaded:!1},o.onWindowResize=function(){var e=o.container.clientWidth,t=o.container.clientHeight;o.camera.aspect=e/t,o.camera.updateProjectionMatrix(),o.renderer.setSize(e,t)},o.onMouseWheel=function(e){e.preventDefault(),e.wheelDeltaY?o.camera.fov-=.05*e.wheelDeltaY:e.wheelDelta?o.camera.fov-=.05*e.wheelDelta:e.detail&&(o.camera.fov+=1*e.detail),o.camera.fov=Math.max(40,Math.min(100,o.camera.fov)),o.camera.updateProjectionMatrix()},a=n,i(o,a)}return o(t,e),v(t,[{key:"componentDidMount",value:function(){this.initialize(),this.animate(),f.a.on("resize",this.onWindowResize)}},{key:"componentWillUnmount",value:function(){f.a.remove("resize",this.onWindowResize)}},{key:"componentWillUpdate",value:function(e){e.product.id,this.props.product.id}},{key:"componentDidUpdate",value:function(e){e.product.id!==this.props.product.id&&(console.log("going to init"),this.setState({productLoaded:!1}),this.scene.remove.apply(this.scene,this.scene.children),this.productEnvironment())}},{key:"initialize",value:function(){var e=this.el,t=this.container.clientWidth,n=this.container.clientHeight;this.scene=new b.Scene,this.camera=new b.PerspectiveCamera(75,t/n,1,1100),this.camera.target=new b.Vector3(0,0,0),this.camera.position.z=10,this.camera.position.x=10*Math.random(),this.renderer=new b.WebGLRenderer,this.renderer.setSize(t,n),this.productEnvironment();var r=new u.a(this.camera);r.enablePan=!1,r.enableZoom=!1,r.autoRotate=!1,r.rotateSpeed=1*Math.random(),e.addEventListener("mousewheel",this.onMouseWheel,!1),e.addEventListener("DOMMouseScroll",this.onMouseWheel,!1),e.appendChild(this.renderer.domElement)}},{key:"productEnvironment",value:function(){var e=this.props.product,t=e.image,n=e.model,r=(new b.TextureLoader).load(t);this.geometry=new b.SphereGeometry(500,60,40),this.material=new b.MeshBasicMaterial({map:r,side:b.BackSide}),this.mesh=new b.Mesh(this.geometry,this.material),this.scene.add(this.mesh),"object"===("undefined"===typeof n?"undefined":g(n))?this.loadJson():"string"===typeof n&&this.loadCollada()}},{key:"loadCollada",value:function(){var e=this,t=this.props.product,n=t.model,r=t.scale;(new h.a).load(n,function(t){e.productModel=t.scene,e.productModel.scale.set(r.x,r.y,r.z),e.productModel.rotation.z=Math.random()*Math.PI/2,e.scene.add(e.productModel),e.setState({productLoaded:!0})},void 0)}},{key:"loadJson",value:function(){var e=this,t=this.props.product,n=t.model,r=t.scale;(new b.ObjectLoader).parse(n,function(t){e.productModel=t,e.productModel.scale.set(r.x,r.y,r.z),e.productModel.position.x+=3,e.productModel.rotation.z=Math.random()*Math.PI/2,e.scene.add(e.productModel),e.setState({productLoaded:!0})},void 0)}},{key:"animate",value:function(){requestAnimationFrame(this.animate.bind(this)),this.state.productLoaded&&(this.productModel.rotation.z+=.001,this.productModel.rotation.x+=.005),this.renderer.render(this.scene,this.camera)}},{key:"render",value:function(){var e=this,t=this.props.product.description;return s.a.createElement("div",{className:y.container,ref:function(t){e.container=t}},s.a.createElement("div",{className:y.threeHolder,ref:function(t){return e.el=t}}),s.a.createElement("div",{className:y.description},s.a.createElement("span",null,t),s.a.createElement("a",{className:y.cartLink},"Add to cart")))}}]),t}(s.a.Component);x.propTypes={product:m.a},t.a=x},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var o,a=this,s=Symbol("MONITORING_SCROLL"),c=Symbol("HANDLE_DEBOUNCE_SCROLL"),u=Symbol("HANDLE_THROTTLE_SCROLL"),l=Symbol("HANDLE_SCROLL"),h=Symbol("MONITORING_RESIZE"),p=Symbol("HANDLE_DEBOUNCE_RESIZE"),d=Symbol("MONITORING_IMAGES_LOAD"),f=Symbol("HANDLE_IMAGES_LOAD"),m=Symbol("IMAGES_TRACKED"),g=Symbol("IMAGES_LOADED"),v=Symbol("AD_REFRESH_INTERVAL"),y=Symbol("AD_REFRESH_TIMER"),b=Symbol("AD_REFRESH_COUNT"),x=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a,r=null,i=function(){return e.apply(n,null)};return function(){clearTimeout(r),r=setTimeout(i,t)}},_={ticking:!1,request:function(e){var t=this;return function(){t.ticking||requestAnimationFrame(function(){return t.update(e)}),t.ticking=!0}},update:function(e){e(),this.ticking=!1}},w={},E=(o={},r(o,s,!1),r(o,h,!1),r(o,d,!1),r(o,c,x(function(){E.trigger("scroll",window.pageYOffset,"debounce")},100)),r(o,u,_.request(function(){E.trigger("scroll",window.pageYOffset,"throttle")})),r(o,l,function(){return E.trigger("scroll",window.pageYOffset,"none")}),r(o,"monitorScroll",function(){this[s]||(window.addEventListener("scroll",this[c],!1),window.addEventListener("scroll",this[u],!1),window.addEventListener("scroll",this[l],!1),this[s]=!0)}),r(o,"deregisterScroll",function(){this[s]&&(window.removeEventListener("scroll",this[c]),window.removeEventListener("scroll",this[u]),window.removeEventListener("scroll",this[l]),this[s]=!1)}),r(o,p,x(function(){var e=E.getBreakpoints();E.trigger("resize",{breakpoints:e,width:window.innerWidth,height:window.innerHeight},"debounce")})),r(o,"monitorResize",function(){this[h]||(window.addEventListener("resize",this[p],!1),this[h]=!0)}),r(o,"deregisterResize",function(){this[h]&&(window.removeEventListener("resize",this[p]),this[h]=!1)}),r(o,"getBreakpoints",function(){if(window){return{s:window.matchMedia("(max-width: 759px)").matches,m:window.matchMedia("(min-width: 760px) and (max-width: 999px)").matches,l:window.matchMedia("(min-width: 1000px) and (max-width: 1239px)").matches,xl:window.matchMedia("(min-width: 1240px)").matches}}return{s:!1,m:!1,l:!1,xl:!1}}),r(o,g,0),r(o,m,[]),r(o,f,function(){E.trigger("imagesLoaded",void 0,"throttle"),E[d]=!1}),r(o,"monitorImagesLoad",function(){var e=Array.from(document.getElementsByTagName("picture")).map(function(e){return e.querySelector("img")}),t=e.filter(function(e){return e.complete});this[m]=e,this[g]=t.length,this[d]=!0,this.triggerImagesLoaded()}),r(o,"oneImageLoaded",function(){if(this[d]){var e=this[m],t=e.filter(function(e){return e.complete});this[g]=t.length,this.triggerImagesLoaded()}}),r(o,"triggerImagesLoaded",function(){this[g]===this[m].length&&this[f]()}),r(o,v,null),r(o,y,null),r(o,b,null),r(o,"monitorAdRefresh",function(e,t){this[v]&&(this.clearAdRefreshInterval(),document.removeEventListener("visibilitychange",this.toggleAdRefreshInterval)),this[y]=e,this[b]=t,this.setAdRefreshInterval(),document.addEventListener("visibilitychange",this.toggleAdRefreshInterval)}),r(o,"toggleAdRefreshInterval",function(){document.hidden?E.clearAdRefreshInterval():E.setAdRefreshInterval()}),r(o,"setAdRefreshInterval",function(){var e=this;this[v]=setInterval(function(){e[b]?(E.trigger("adRefresh"),e[b]-=1):e.clearAdRefreshInterval()},this[y])}),r(o,"clearAdRefreshInterval",function(){clearInterval(this[v])}),r(o,"deregisterAdRefresh",function(){this[v]&&(this.clearAdRefreshInterval(),document.removeEventListener("visibilitychange",this.toggleAdRefreshInterval))}),r(o,"on",function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"throttle",r="resize"!==e?e+"_"+n:e+"_debounce";w[r]||(w[r]=[]),w[r]=[].concat(i(w[r]),[t])}),r(o,"remove",function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"throttle",r="resize"!==e?e+"_"+n:e+"_debounce";w[r]&&(w[r]=w[r].filter(function(e){return e!==t}))}),r(o,"trigger",function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"throttle",r="resize"!==e?e+"_"+n:e+"_debounce";w[r]&&w[r].forEach(function(e){return e(t)})}),r(o,"once",function(e,t,n){var r=function r(){t.apply(void 0,arguments),E.remove(e,r,n)};E.on(e,r,n)}),o);t.a=E},function(e,t,n){"use strict";var r=n(83),i=n.n(r);t.a=i.a.shape({image:i.a.string.isRequired,model:i.a.oneOfType([i.a.string,i.a.object]).isRequired,description:i.a.String})},function(e,t,n){e.exports=n(187)()},function(e,t,n){n(85),e.exports=n(91)},function(e,t,n){"use strict";"undefined"===typeof Promise&&(n(86).enable(),window.Promise=n(89)),n(90),Object.assign=n(3)},function(e,t,n){"use strict";function r(){u=!1,s._47=null,s._71=null}function i(e){function t(t){(e.allRejections||a(h[t].error,e.whitelist||c))&&(h[t].displayId=l++,e.onUnhandled?(h[t].logged=!0,e.onUnhandled(h[t].displayId,h[t].error)):(h[t].logged=!0,o(h[t].displayId,h[t].error)))}function n(t){h[t].logged&&(e.onHandled?e.onHandled(h[t].displayId,h[t].error):h[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+h[t].displayId+"):"),console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id '+h[t].displayId+".")))}e=e||{},u&&r(),u=!0;var i=0,l=0,h={};s._47=function(e){2===e._83&&h[e._56]&&(h[e._56].logged?n(e._56):clearTimeout(h[e._56].timeout),delete h[e._56])},s._71=function(e,n){0===e._75&&(e._56=i++,h[e._56]={displayId:null,error:n,timeout:setTimeout(t.bind(null,e._56),a(n,c)?100:2e3),logged:!1})}}function o(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\n").forEach(function(e){console.warn("  "+e)})}function a(e,t){return t.some(function(t){return e instanceof t})}var s=n(47),c=[ReferenceError,TypeError,RangeError],u=!1;t.disable=r,t.enable=i},function(e,t,n){"use strict";(function(t){function n(e){a.length||(o(),s=!0),a[a.length]=e}function r(){for(;c<a.length;){var e=c;if(c+=1,a[e].call(),c>u){for(var t=0,n=a.length-c;t<n;t++)a[t]=a[t+c];a.length-=c,c=0}}a.length=0,c=0,s=!1}function i(e){return function(){function t(){clearTimeout(n),clearInterval(r),e()}var n=setTimeout(t,0),r=setInterval(t,50)}}e.exports=n;var o,a=[],s=!1,c=0,u=1024,l="undefined"!==typeof t?t:self,h=l.MutationObserver||l.WebKitMutationObserver;o="function"===typeof h?function(e){var t=1,n=new h(e),r=document.createTextNode("");return n.observe(r,{characterData:!0}),function(){t=-t,r.data=t}}(r):i(r),n.requestFlush=o,n.makeRequestCallFromTimer=i}).call(t,n(88))},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"===typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function r(e){var t=new i(i._44);return t._83=1,t._18=e,t}var i=n(47);e.exports=i;var o=r(!0),a=r(!1),s=r(null),c=r(void 0),u=r(0),l=r("");i.resolve=function(e){if(e instanceof i)return e;if(null===e)return s;if(void 0===e)return c;if(!0===e)return o;if(!1===e)return a;if(0===e)return u;if(""===e)return l;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new i(t.bind(e))}catch(e){return new i(function(t,n){n(e)})}return r(e)},i.all=function(e){var t=Array.prototype.slice.call(e);return new i(function(e,n){function r(a,s){if(s&&("object"===typeof s||"function"===typeof s)){if(s instanceof i&&s.then===i.prototype.then){for(;3===s._83;)s=s._18;return 1===s._83?r(a,s._18):(2===s._83&&n(s._18),void s.then(function(e){r(a,e)},n))}var c=s.then;if("function"===typeof c){return void new i(c.bind(s)).then(function(e){r(a,e)},n)}}t[a]=s,0===--o&&e(t)}if(0===t.length)return e([]);for(var o=t.length,a=0;a<t.length;a++)r(a,t[a])})},i.reject=function(e){return new i(function(t,n){n(e)})},i.race=function(e){return new i(function(t,n){e.forEach(function(e){i.resolve(e).then(t,n)})})},i.prototype.catch=function(e){return this.then(null,e)}},function(e,t){!function(e){"use strict";function t(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function n(e){return"string"!==typeof e&&(e=String(e)),e}function r(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return v.iterable&&(t[Symbol.iterator]=function(){return t}),t}function i(e){this.map={},e instanceof i?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function o(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function a(e){return new Promise(function(t,n){e.onload=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function s(e){var t=new FileReader,n=a(t);return t.readAsArrayBuffer(e),n}function c(e){var t=new FileReader,n=a(t);return t.readAsText(e),n}function u(e){for(var t=new Uint8Array(e),n=new Array(t.length),r=0;r<t.length;r++)n[r]=String.fromCharCode(t[r]);return n.join("")}function l(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function h(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,e)if("string"===typeof e)this._bodyText=e;else if(v.blob&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(v.formData&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(v.searchParams&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(v.arrayBuffer&&v.blob&&b(e))this._bodyArrayBuffer=l(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!v.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(e)&&!x(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=l(e)}else this._bodyText="";this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):v.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},v.blob&&(this.blob=function(){var e=o(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?o(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(s)}),this.text=function(){var e=o(this);if(e)return e;if(this._bodyBlob)return c(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(u(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},v.formData&&(this.formData=function(){return this.text().then(f)}),this.json=function(){return this.text().then(JSON.parse)},this}function p(e){var t=e.toUpperCase();return _.indexOf(t)>-1?t:e}function d(e,t){t=t||{};var n=t.body;if(e instanceof d){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new i(e.headers)),this.method=e.method,this.mode=e.mode,n||null==e._bodyInit||(n=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new i(t.headers)),this.method=p(t.method||this.method||"GET"),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function f(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var n=e.split("="),r=n.shift().replace(/\+/g," "),i=n.join("=").replace(/\+/g," ");t.append(decodeURIComponent(r),decodeURIComponent(i))}}),t}function m(e){var t=new i;return e.split(/\r?\n/).forEach(function(e){var n=e.split(":"),r=n.shift().trim();if(r){var i=n.join(":").trim();t.append(r,i)}}),t}function g(e,t){t||(t={}),this.type="default",this.status="status"in t?t.status:200,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new i(t.headers),this.url=t.url||"",this._initBody(e)}if(!e.fetch){var v={searchParams:"URLSearchParams"in e,iterable:"Symbol"in e&&"iterator"in Symbol,blob:"FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in e,arrayBuffer:"ArrayBuffer"in e};if(v.arrayBuffer)var y=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],b=function(e){return e&&DataView.prototype.isPrototypeOf(e)},x=ArrayBuffer.isView||function(e){return e&&y.indexOf(Object.prototype.toString.call(e))>-1};i.prototype.append=function(e,r){e=t(e),r=n(r);var i=this.map[e];this.map[e]=i?i+","+r:r},i.prototype.delete=function(e){delete this.map[t(e)]},i.prototype.get=function(e){return e=t(e),this.has(e)?this.map[e]:null},i.prototype.has=function(e){return this.map.hasOwnProperty(t(e))},i.prototype.set=function(e,r){this.map[t(e)]=n(r)},i.prototype.forEach=function(e,t){for(var n in this.map)this.map.hasOwnProperty(n)&&e.call(t,this.map[n],n,this)},i.prototype.keys=function(){var e=[];return this.forEach(function(t,n){e.push(n)}),r(e)},i.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),r(e)},i.prototype.entries=function(){var e=[];return this.forEach(function(t,n){e.push([n,t])}),r(e)},v.iterable&&(i.prototype[Symbol.iterator]=i.prototype.entries);var _=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];d.prototype.clone=function(){return new d(this,{body:this._bodyInit})},h.call(d.prototype),h.call(g.prototype),g.prototype.clone=function(){return new g(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new i(this.headers),url:this.url})},g.error=function(){var e=new g(null,{status:0,statusText:""});return e.type="error",e};var w=[301,302,303,307,308];g.redirect=function(e,t){if(-1===w.indexOf(t))throw new RangeError("Invalid status code");return new g(null,{status:t,headers:{location:e}})},e.Headers=i,e.Request=d,e.Response=g,e.fetch=function(e,t){return new Promise(function(n,r){var i=new d(e,t),o=new XMLHttpRequest;o.onload=function(){var e={status:o.status,statusText:o.statusText,headers:m(o.getAllResponseHeaders()||"")};e.url="responseURL"in o?o.responseURL:e.headers.get("X-Request-URL");var t="response"in o?o.response:o.responseText;n(new g(t,e))},o.onerror=function(){r(new TypeError("Network request failed"))},o.ontimeout=function(){r(new TypeError("Network request failed"))},o.open(i.method,i.url,!0),"include"===i.credentials&&(o.withCredentials=!0),"responseType"in o&&v.blob&&(o.responseType="blob"),i.headers.forEach(function(e,t){o.setRequestHeader(t,e)}),o.send("undefined"===typeof i._bodyInit?null:i._bodyInit)})},e.fetch.polyfill=!0}}("undefined"!==typeof self?self:this)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(22),i=n.n(r),o=n(106),a=n.n(o),s=n(183),c=n(200),u=n(201);n.n(u);a.a.render(i.a.createElement(s.a,null),document.getElementById("root")),Object(c.a)()},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){"use strict";function r(e){return(""+e).replace(x,"$&/")}function i(e,t){this.func=e,this.context=t,this.count=0}function o(e,t,n){var r=e.func,i=e.context;r.call(i,t,e.count++)}function a(e,t,n){if(null==e)return e;var r=i.getPooled(t,n);v(e,o,r),i.release(r)}function s(e,t,n,r){this.result=e,this.keyPrefix=t,this.func=n,this.context=r,this.count=0}function c(e,t,n){var i=e.result,o=e.keyPrefix,a=e.func,s=e.context,c=a.call(s,t,e.count++);Array.isArray(c)?u(c,i,n,g.thatReturnsArgument):null!=c&&(m.isValidElement(c)&&(c=m.cloneAndReplaceKey(c,o+(!c.key||t&&t.key===c.key?"":r(c.key)+"/")+n)),i.push(c))}function u(e,t,n,i,o){var a="";null!=n&&(a=r(n)+"/");var u=s.getPooled(t,a,i,o);v(e,c,u),s.release(u)}function l(e,t,n){if(null==e)return e;var r=[];return u(e,r,null,t,n),r}function h(e,t,n){return null}function p(e,t){return v(e,h,null)}function d(e){var t=[];return u(e,t,null,g.thatReturnsArgument),t}var f=n(94),m=n(13),g=n(6),v=n(95),y=f.twoArgumentPooler,b=f.fourArgumentPooler,x=/\/+/g;i.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},f.addPoolingTo(i,y),s.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},f.addPoolingTo(s,b);var _={forEach:a,map:l,mapIntoWithKeyPrefixInternal:u,count:p,toArray:d};e.exports=_},function(e,t,n){"use strict";var r=n(17),i=(n(0),function(e){var t=this;if(t.instancePool.length){var n=t.instancePool.pop();return t.call(n,e),n}return new t(e)}),o=function(e,t){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,e,t),r}return new n(e,t)},a=function(e,t,n){var r=this;if(r.instancePool.length){var i=r.instancePool.pop();return r.call(i,e,t,n),i}return new r(e,t,n)},s=function(e,t,n,r){var i=this;if(i.instancePool.length){var o=i.instancePool.pop();return i.call(o,e,t,n,r),o}return new i(e,t,n,r)},c=function(e){var t=this;e instanceof t||r("25"),e.destructor(),t.instancePool.length<t.poolSize&&t.instancePool.push(e)},u=i,l=function(e,t){var n=e;return n.instancePool=[],n.getPooled=t||u,n.poolSize||(n.poolSize=10),n.release=c,n},h={addPoolingTo:l,oneArgumentPooler:i,twoArgumentPooler:o,threeArgumentPooler:a,fourArgumentPooler:s};e.exports=h},function(e,t,n){"use strict";function r(e,t){return e&&"object"===typeof e&&null!=e.key?u.escape(e.key):t.toString(36)}function i(e,t,n,o){var p=typeof e;if("undefined"!==p&&"boolean"!==p||(e=null),null===e||"string"===p||"number"===p||"object"===p&&e.$$typeof===s)return n(o,e,""===t?l+r(e,0):t),1;var d,f,m=0,g=""===t?l:t+h;if(Array.isArray(e))for(var v=0;v<e.length;v++)d=e[v],f=g+r(d,v),m+=i(d,f,n,o);else{var y=c(e);if(y){var b,x=y.call(e);if(y!==e.entries)for(var _=0;!(b=x.next()).done;)d=b.value,f=g+r(d,_++),m+=i(d,f,n,o);else for(;!(b=x.next()).done;){var w=b.value;w&&(d=w[1],f=g+u.escape(w[0])+h+r(d,0),m+=i(d,f,n,o))}}else if("object"===p){var E="",M=String(e);a("31","[object Object]"===M?"object with keys {"+Object.keys(e).join(", ")+"}":M,E)}}return m}function o(e,t,n){return null==e?0:i(e,"",t,n)}var a=n(17),s=(n(9),n(51)),c=n(96),u=(n(0),n(97)),l=(n(1),"."),h=":";e.exports=o},function(e,t,n){"use strict";function r(e){var t=e&&(i&&e[i]||e[o]);if("function"===typeof t)return t}var i="function"===typeof Symbol&&Symbol.iterator,o="@@iterator";e.exports=r},function(e,t,n){"use strict";function r(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function i(e){var t=/(=0|=2)/g,n={"=0":"=","=2":":"};return(""+("."===e[0]&&"$"===e[1]?e.substring(2):e.substring(1))).replace(t,function(e){return n[e]})}var o={escape:r,unescape:i};e.exports=o},function(e,t,n){"use strict";var r=n(13),i=r.createFactory,o={a:i("a"),abbr:i("abbr"),address:i("address"),area:i("area"),article:i("article"),aside:i("aside"),audio:i("audio"),b:i("b"),base:i("base"),bdi:i("bdi"),bdo:i("bdo"),big:i("big"),blockquote:i("blockquote"),body:i("body"),br:i("br"),button:i("button"),canvas:i("canvas"),caption:i("caption"),cite:i("cite"),code:i("code"),col:i("col"),colgroup:i("colgroup"),data:i("data"),datalist:i("datalist"),dd:i("dd"),del:i("del"),details:i("details"),dfn:i("dfn"),dialog:i("dialog"),div:i("div"),dl:i("dl"),dt:i("dt"),em:i("em"),embed:i("embed"),fieldset:i("fieldset"),figcaption:i("figcaption"),figure:i("figure"),footer:i("footer"),form:i("form"),h1:i("h1"),h2:i("h2"),h3:i("h3"),h4:i("h4"),h5:i("h5"),h6:i("h6"),head:i("head"),header:i("header"),hgroup:i("hgroup"),hr:i("hr"),html:i("html"),i:i("i"),iframe:i("iframe"),img:i("img"),input:i("input"),ins:i("ins"),kbd:i("kbd"),keygen:i("keygen"),label:i("label"),legend:i("legend"),li:i("li"),link:i("link"),main:i("main"),map:i("map"),mark:i("mark"),menu:i("menu"),menuitem:i("menuitem"),meta:i("meta"),meter:i("meter"),nav:i("nav"),noscript:i("noscript"),object:i("object"),ol:i("ol"),optgroup:i("optgroup"),option:i("option"),output:i("output"),p:i("p"),param:i("param"),picture:i("picture"),pre:i("pre"),progress:i("progress"),q:i("q"),rp:i("rp"),rt:i("rt"),ruby:i("ruby"),s:i("s"),samp:i("samp"),script:i("script"),section:i("section"),select:i("select"),small:i("small"),source:i("source"),span:i("span"),strong:i("strong"),style:i("style"),sub:i("sub"),summary:i("summary"),sup:i("sup"),table:i("table"),tbody:i("tbody"),td:i("td"),textarea:i("textarea"),tfoot:i("tfoot"),th:i("th"),thead:i("thead"),time:i("time"),title:i("title"),tr:i("tr"),track:i("track"),u:i("u"),ul:i("ul"),var:i("var"),video:i("video"),wbr:i("wbr"),circle:i("circle"),clipPath:i("clipPath"),defs:i("defs"),ellipse:i("ellipse"),g:i("g"),image:i("image"),line:i("line"),linearGradient:i("linearGradient"),mask:i("mask"),path:i("path"),pattern:i("pattern"),polygon:i("polygon"),polyline:i("polyline"),radialGradient:i("radialGradient"),rect:i("rect"),stop:i("stop"),svg:i("svg"),text:i("text"),tspan:i("tspan")};e.exports=o},function(e,t,n){"use strict";var r=n(13),i=r.isValidElement,o=n(52);e.exports=o(i)},function(e,t,n){"use strict";var r=n(6),i=n(0),o=n(1),a=n(53),s=n(101);e.exports=function(e,t){function n(e){var t=e&&(M&&e[M]||e[T]);if("function"===typeof t)return t}function c(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}function u(e){this.message=e,this.stack=""}function l(e){function n(n,r,o,s,c,l,h){if(s=s||S,l=l||o,h!==a)if(t)i(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");else;return null==r[o]?n?new u(null===r[o]?"The "+c+" `"+l+"` is marked as required in `"+s+"`, but its value is `null`.":"The "+c+" `"+l+"` is marked as required in `"+s+"`, but its value is `undefined`."):null:e(r,o,s,c,l)}var r=n.bind(null,!1);return r.isRequired=n.bind(null,!0),r}function h(e){function t(t,n,r,i,o,a){var s=t[n];if(x(s)!==e)return new u("Invalid "+i+" `"+o+"` of type `"+_(s)+"` supplied to `"+r+"`, expected `"+e+"`.");return null}return l(t)}function p(e){function t(t,n,r,i,o){if("function"!==typeof e)return new u("Property `"+o+"` of component `"+r+"` has invalid PropType notation inside arrayOf.");var s=t[n];if(!Array.isArray(s)){return new u("Invalid "+i+" `"+o+"` of type `"+x(s)+"` supplied to `"+r+"`, expected an array.")}for(var c=0;c<s.length;c++){var l=e(s,c,r,i,o+"["+c+"]",a);if(l instanceof Error)return l}return null}return l(t)}function d(e){function t(t,n,r,i,o){if(!(t[n]instanceof e)){var a=e.name||S;return new u("Invalid "+i+" `"+o+"` of type `"+E(t[n])+"` supplied to `"+r+"`, expected instance of `"+a+"`.")}return null}return l(t)}function f(e){function t(t,n,r,i,o){for(var a=t[n],s=0;s<e.length;s++)if(c(a,e[s]))return null;return new u("Invalid "+i+" `"+o+"` of value `"+a+"` supplied to `"+r+"`, expected one of "+JSON.stringify(e)+".")}return Array.isArray(e)?l(t):r.thatReturnsNull}function m(e){function t(t,n,r,i,o){if("function"!==typeof e)return new u("Property `"+o+"` of component `"+r+"` has invalid PropType notation inside objectOf.");var s=t[n],c=x(s);if("object"!==c)return new u("Invalid "+i+" `"+o+"` of type `"+c+"` supplied to `"+r+"`, expected an object.");for(var l in s)if(s.hasOwnProperty(l)){var h=e(s,l,r,i,o+"."+l,a);if(h instanceof Error)return h}return null}return l(t)}function g(e){function t(t,n,r,i,o){for(var s=0;s<e.length;s++){if(null==(0,e[s])(t,n,r,i,o,a))return null}return new u("Invalid "+i+" `"+o+"` supplied to `"+r+"`.")}if(!Array.isArray(e))return r.thatReturnsNull;for(var n=0;n<e.length;n++){var i=e[n];if("function"!==typeof i)return o(!1,"Invalid argument supplid to oneOfType. Expected an array of check functions, but received %s at index %s.",w(i),n),r.thatReturnsNull}return l(t)}function v(e){function t(t,n,r,i,o){var s=t[n],c=x(s);if("object"!==c)return new u("Invalid "+i+" `"+o+"` of type `"+c+"` supplied to `"+r+"`, expected `object`.");for(var l in e){var h=e[l];if(h){var p=h(s,l,r,i,o+"."+l,a);if(p)return p}}return null}return l(t)}function y(t){switch(typeof t){case"number":case"string":case"undefined":return!0;case"boolean":return!t;case"object":if(Array.isArray(t))return t.every(y);if(null===t||e(t))return!0;var r=n(t);if(!r)return!1;var i,o=r.call(t);if(r!==t.entries){for(;!(i=o.next()).done;)if(!y(i.value))return!1}else for(;!(i=o.next()).done;){var a=i.value;if(a&&!y(a[1]))return!1}return!0;default:return!1}}function b(e,t){return"symbol"===e||("Symbol"===t["@@toStringTag"]||"function"===typeof Symbol&&t instanceof Symbol)}function x(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":b(t,e)?"symbol":t}function _(e){if("undefined"===typeof e||null===e)return""+e;var t=x(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}function w(e){var t=_(e);switch(t){case"array":case"object":return"an "+t;case"boolean":case"date":case"regexp":return"a "+t;default:return t}}function E(e){return e.constructor&&e.constructor.name?e.constructor.name:S}var M="function"===typeof Symbol&&Symbol.iterator,T="@@iterator",S="<<anonymous>>",A={array:h("array"),bool:h("boolean"),func:h("function"),number:h("number"),object:h("object"),string:h("string"),symbol:h("symbol"),any:function(){return l(r.thatReturnsNull)}(),arrayOf:p,element:function(){function t(t,n,r,i,o){var a=t[n];if(!e(a)){return new u("Invalid "+i+" `"+o+"` of type `"+x(a)+"` supplied to `"+r+"`, expected a single ReactElement.")}return null}return l(t)}(),instanceOf:d,node:function(){function e(e,t,n,r,i){return y(e[t])?null:new u("Invalid "+r+" `"+i+"` supplied to `"+n+"`, expected a ReactNode.")}return l(e)}(),objectOf:m,oneOf:f,oneOfType:g,shape:v};return u.prototype=Error.prototype,A.checkPropTypes=s,A.PropTypes=A,A}},function(e,t,n){"use strict";function r(e,t,n,r,i){}e.exports=r},function(e,t,n){"use strict";e.exports="15.6.1"},function(e,t,n){"use strict";var r=n(48),i=r.Component,o=n(13),a=o.isValidElement,s=n(49),c=n(104);e.exports=c(i,a,s)},function(e,t,n){"use strict";function r(e){return e}function i(e,t,n){function i(e,t){var n=y.hasOwnProperty(t)?y[t]:null;w.hasOwnProperty(t)&&s("OVERRIDE_BASE"===n,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",t),e&&s("DEFINE_MANY"===n||"DEFINE_MANY_MERGED"===n,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",t)}function u(e,n){if(n){s("function"!==typeof n,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."),s(!t(n),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var r=e.prototype,o=r.__reactAutoBindPairs;n.hasOwnProperty(c)&&b.mixins(e,n.mixins);for(var a in n)if(n.hasOwnProperty(a)&&a!==c){var u=n[a],l=r.hasOwnProperty(a);if(i(l,a),b.hasOwnProperty(a))b[a](e,u);else{var h=y.hasOwnProperty(a),f="function"===typeof u,m=f&&!h&&!l&&!1!==n.autobind;if(m)o.push(a,u),r[a]=u;else if(l){var g=y[a];s(h&&("DEFINE_MANY_MERGED"===g||"DEFINE_MANY"===g),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",g,a),"DEFINE_MANY_MERGED"===g?r[a]=p(r[a],u):"DEFINE_MANY"===g&&(r[a]=d(r[a],u))}else r[a]=u}}}else;}function l(e,t){if(t)for(var n in t){var r=t[n];if(t.hasOwnProperty(n)){var i=n in b;s(!i,'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',n);var o=n in e;s(!o,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",n),e[n]=r}}}function h(e,t){s(e&&t&&"object"===typeof e&&"object"===typeof t,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");for(var n in t)t.hasOwnProperty(n)&&(s(void 0===e[n],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",n),e[n]=t[n]);return e}function p(e,t){return function(){var n=e.apply(this,arguments),r=t.apply(this,arguments);if(null==n)return r;if(null==r)return n;var i={};return h(i,n),h(i,r),i}}function d(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function f(e,t){var n=t.bind(e);return n}function m(e){for(var t=e.__reactAutoBindPairs,n=0;n<t.length;n+=2){var r=t[n],i=t[n+1];e[r]=f(e,i)}}function g(e){var t=r(function(e,r,i){this.__reactAutoBindPairs.length&&m(this),this.props=e,this.context=r,this.refs=a,this.updater=i||n,this.state=null;var o=this.getInitialState?this.getInitialState():null;s("object"===typeof o&&!Array.isArray(o),"%s.getInitialState(): must return an object or null",t.displayName||"ReactCompositeComponent"),this.state=o});t.prototype=new E,t.prototype.constructor=t,t.prototype.__reactAutoBindPairs=[],v.forEach(u.bind(null,t)),u(t,x),u(t,e),u(t,_),t.getDefaultProps&&(t.defaultProps=t.getDefaultProps()),s(t.prototype.render,"createClass(...): Class specification must implement a `render` method.");for(var i in y)t.prototype[i]||(t.prototype[i]=null);return t}var v=[],y={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",updateComponent:"OVERRIDE_BASE"},b={displayName:function(e,t){e.displayName=t},mixins:function(e,t){if(t)for(var n=0;n<t.length;n++)u(e,t[n])},childContextTypes:function(e,t){e.childContextTypes=o({},e.childContextTypes,t)},contextTypes:function(e,t){e.contextTypes=o({},e.contextTypes,t)},getDefaultProps:function(e,t){e.getDefaultProps?e.getDefaultProps=p(e.getDefaultProps,t):e.getDefaultProps=t},propTypes:function(e,t){e.propTypes=o({},e.propTypes,t)},statics:function(e,t){l(e,t)},autobind:function(){}},x={componentDidMount:function(){this.__isMounted=!0}},_={componentWillUnmount:function(){this.__isMounted=!1}},w={replaceState:function(e,t){this.updater.enqueueReplaceState(this,e,t)},isMounted:function(){return!!this.__isMounted}},E=function(){};return o(E.prototype,e.prototype,w),g}var o=n(3),a=n(23),s=n(0),c="mixins";e.exports=i},function(e,t,n){"use strict";function r(e){return o.isValidElement(e)||i("143"),e}var i=n(17),o=n(13);n(0);e.exports=r},function(e,t,n){"use strict";e.exports=n(107)},function(e,t,n){"use strict";var r=n(4),i=n(108),o=n(78),a=n(15),s=n(8),c=n(180),u=n(181),l=n(79),h=n(182);n(1);i.inject();var p={findDOMNode:u,render:o.render,unmountComponentAtNode:o.unmountComponentAtNode,version:c,unstable_batchedUpdates:s.batchedUpdates,unstable_renderSubtreeIntoContainer:h};"undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({ComponentTree:{getClosestInstanceFromNode:r.getClosestInstanceFromNode,getNodeFromInstance:function(e){return e._renderedComponent&&(e=l(e)),e?r.getNodeFromInstance(e):null}},Mount:o,Reconciler:a});e.exports=p},function(e,t,n){"use strict";function r(){E||(E=!0,y.EventEmitter.injectReactEventListener(v),y.EventPluginHub.injectEventPluginOrder(s),y.EventPluginUtils.injectComponentTree(p),y.EventPluginUtils.injectTreeTraversal(f),y.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:w,EnterLeaveEventPlugin:c,ChangeEventPlugin:a,SelectEventPlugin:_,BeforeInputEventPlugin:o}),y.HostComponent.injectGenericComponentClass(h),y.HostComponent.injectTextComponentClass(m),y.DOMProperty.injectDOMPropertyConfig(i),y.DOMProperty.injectDOMPropertyConfig(u),y.DOMProperty.injectDOMPropertyConfig(x),y.EmptyComponent.injectEmptyComponentFactory(function(e){return new d(e)}),y.Updates.injectReconcileTransaction(b),y.Updates.injectBatchingStrategy(g),y.Component.injectEnvironment(l))}var i=n(109),o=n(110),a=n(114),s=n(117),c=n(118),u=n(119),l=n(120),h=n(126),p=n(4),d=n(151),f=n(152),m=n(153),g=n(154),v=n(155),y=n(157),b=n(158),x=n(164),_=n(165),w=n(166),E=!1;e.exports={inject:r}},function(e,t,n){"use strict";var r={Properties:{"aria-current":0,"aria-details":0,"aria-disabled":0,"aria-hidden":0,"aria-invalid":0,"aria-keyshortcuts":0,"aria-label":0,"aria-roledescription":0,"aria-autocomplete":0,"aria-checked":0,"aria-expanded":0,"aria-haspopup":0,"aria-level":0,"aria-modal":0,"aria-multiline":0,"aria-multiselectable":0,"aria-orientation":0,"aria-placeholder":0,"aria-pressed":0,"aria-readonly":0,"aria-required":0,"aria-selected":0,"aria-sort":0,"aria-valuemax":0,"aria-valuemin":0,"aria-valuenow":0,"aria-valuetext":0,"aria-atomic":0,"aria-busy":0,"aria-live":0,"aria-relevant":0,"aria-dropeffect":0,"aria-grabbed":0,"aria-activedescendant":0,"aria-colcount":0,"aria-colindex":0,"aria-colspan":0,"aria-controls":0,"aria-describedby":0,"aria-errormessage":0,"aria-flowto":0,"aria-labelledby":0,"aria-owns":0,"aria-posinset":0,"aria-rowcount":0,"aria-rowindex":0,"aria-rowspan":0,"aria-setsize":0},DOMAttributeNames:{},DOMPropertyNames:{}};e.exports=r},function(e,t,n){"use strict";function r(e){return(e.ctrlKey||e.altKey||e.metaKey)&&!(e.ctrlKey&&e.altKey)}function i(e){switch(e){case"topCompositionStart":return T.compositionStart;case"topCompositionEnd":return T.compositionEnd;case"topCompositionUpdate":return T.compositionUpdate}}function o(e,t){return"topKeyDown"===e&&t.keyCode===y}function a(e,t){switch(e){case"topKeyUp":return-1!==v.indexOf(t.keyCode);case"topKeyDown":return t.keyCode!==y;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function s(e){var t=e.detail;return"object"===typeof t&&"data"in t?t.data:null}function c(e,t,n,r){var c,u;if(b?c=i(e):A?a(e,n)&&(c=T.compositionEnd):o(e,n)&&(c=T.compositionStart),!c)return null;w&&(A||c!==T.compositionStart?c===T.compositionEnd&&A&&(u=A.getData()):A=f.getPooled(r));var l=m.getPooled(c,t,n,r);if(u)l.data=u;else{var h=s(n);null!==h&&(l.data=h)}return p.accumulateTwoPhaseDispatches(l),l}function u(e,t){switch(e){case"topCompositionEnd":return s(t);case"topKeyPress":return t.which!==E?null:(S=!0,M);case"topTextInput":var n=t.data;return n===M&&S?null:n;default:return null}}function l(e,t){if(A){if("topCompositionEnd"===e||!b&&a(e,t)){var n=A.getData();return f.release(A),A=null,n}return null}switch(e){case"topPaste":return null;case"topKeyPress":return t.which&&!r(t)?String.fromCharCode(t.which):null;case"topCompositionEnd":return w?null:t.data;default:return null}}function h(e,t,n,r){var i;if(!(i=_?u(e,n):l(e,n)))return null;var o=g.getPooled(T.beforeInput,t,n,r);return o.data=i,p.accumulateTwoPhaseDispatches(o),o}var p=n(18),d=n(5),f=n(111),m=n(112),g=n(113),v=[9,13,27,32],y=229,b=d.canUseDOM&&"CompositionEvent"in window,x=null;d.canUseDOM&&"documentMode"in document&&(x=document.documentMode);var _=d.canUseDOM&&"TextEvent"in window&&!x&&!function(){var e=window.opera;return"object"===typeof e&&"function"===typeof e.version&&parseInt(e.version(),10)<=12}(),w=d.canUseDOM&&(!b||x&&x>8&&x<=11),E=32,M=String.fromCharCode(E),T={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:["topBlur","topCompositionEnd","topKeyDown","topKeyPress","topKeyUp","topMouseDown"]},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:["topBlur","topCompositionStart","topKeyDown","topKeyPress","topKeyUp","topMouseDown"]},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:["topBlur","topCompositionUpdate","topKeyDown","topKeyPress","topKeyUp","topMouseDown"]}},S=!1,A=null,C={eventTypes:T,extractEvents:function(e,t,n,r){return[c(e,t,n,r),h(e,t,n,r)]}};e.exports=C},function(e,t,n){"use strict";function r(e){this._root=e,this._startText=this.getText(),this._fallbackText=null}var i=n(3),o=n(11),a=n(57);i(r.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[a()]},getData:function(){if(this._fallbackText)return this._fallbackText;var e,t,n=this._startText,r=n.length,i=this.getText(),o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);var s=t>1?1-t:void 0;return this._fallbackText=i.slice(e,s),this._fallbackText}}),o.addPoolingTo(r),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(10),o={data:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(10),o={data:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n){var r=S.getPooled(L.change,e,t,n);return r.type="change",w.accumulateTwoPhaseDispatches(r),r}function i(e){var t=e.nodeName&&e.nodeName.toLowerCase();return"select"===t||"input"===t&&"file"===e.type}function o(e){var t=r(I,e,C(e));T.batchedUpdates(a,t)}function a(e){_.enqueueEvents(e),_.processEventQueue(!1)}function s(e,t){N=e,I=t,N.attachEvent("onchange",o)}function c(){N&&(N.detachEvent("onchange",o),N=null,I=null)}function u(e,t){var n=A.updateValueIfChanged(e),r=!0===t.simulated&&U._allowSimulatedPassThrough;if(n||r)return e}function l(e,t){if("topChange"===e)return t}function h(e,t,n){"topFocus"===e?(c(),s(t,n)):"topBlur"===e&&c()}function p(e,t){N=e,I=t,N.attachEvent("onpropertychange",f)}function d(){N&&(N.detachEvent("onpropertychange",f),N=null,I=null)}function f(e){"value"===e.propertyName&&u(I,e)&&o(e)}function m(e,t,n){"topFocus"===e?(d(),p(t,n)):"topBlur"===e&&d()}function g(e,t,n){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return u(I,n)}function v(e){var t=e.nodeName;return t&&"input"===t.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)}function y(e,t,n){if("topClick"===e)return u(t,n)}function b(e,t,n){if("topInput"===e||"topChange"===e)return u(t,n)}function x(e,t){if(null!=e){var n=e._wrapperState||t._wrapperState;if(n&&n.controlled&&"number"===t.type){var r=""+t.value;t.getAttribute("value")!==r&&t.setAttribute("value",r)}}}var _=n(19),w=n(18),E=n(5),M=n(4),T=n(8),S=n(10),A=n(60),C=n(32),R=n(33),P=n(61),L={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:["topBlur","topChange","topClick","topFocus","topInput","topKeyDown","topKeyUp","topSelectionChange"]}},N=null,I=null,D=!1;E.canUseDOM&&(D=R("change")&&(!document.documentMode||document.documentMode>8));var O=!1;E.canUseDOM&&(O=R("input")&&(!("documentMode"in document)||document.documentMode>9));var U={eventTypes:L,_allowSimulatedPassThrough:!0,_isInputEventSupported:O,extractEvents:function(e,t,n,o){var a,s,c=t?M.getNodeFromInstance(t):window;if(i(c)?D?a=l:s=h:P(c)?O?a=b:(a=g,s=m):v(c)&&(a=y),a){var u=a(e,t,n);if(u){return r(u,n,o)}}s&&s(e,c,t),"topBlur"===e&&x(t,c)}};e.exports=U},function(e,t,n){"use strict";function r(e,t,n){"function"===typeof e?e(t.getPublicInstance()):o.addComponentAsRefTo(t,e,n)}function i(e,t,n){"function"===typeof e?e(null):o.removeComponentAsRefFrom(t,e,n)}var o=n(116),a={};a.attachRefs=function(e,t){if(null!==t&&"object"===typeof t){var n=t.ref;null!=n&&r(n,e,t._owner)}},a.shouldUpdateRefs=function(e,t){var n=null,r=null;null!==e&&"object"===typeof e&&(n=e.ref,r=e._owner);var i=null,o=null;return null!==t&&"object"===typeof t&&(i=t.ref,o=t._owner),n!==i||"string"===typeof i&&o!==r},a.detachRefs=function(e,t){if(null!==t&&"object"===typeof t){var n=t.ref;null!=n&&i(n,e,t._owner)}},e.exports=a},function(e,t,n){"use strict";function r(e){return!(!e||"function"!==typeof e.attachRef||"function"!==typeof e.detachRef)}var i=n(2),o=(n(0),{addComponentAsRefTo:function(e,t,n){r(n)||i("119"),n.attachRef(t,e)},removeComponentAsRefFrom:function(e,t,n){r(n)||i("120");var o=n.getPublicInstance();o&&o.refs[t]===e.getPublicInstance()&&n.detachRef(t)}});e.exports=o},function(e,t,n){"use strict";var r=["ResponderEventPlugin","SimpleEventPlugin","TapEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin"];e.exports=r},function(e,t,n){"use strict";var r=n(18),i=n(4),o=n(25),a={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},s={eventTypes:a,extractEvents:function(e,t,n,s){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement))return null;if("topMouseOut"!==e&&"topMouseOver"!==e)return null;var c;if(s.window===s)c=s;else{var u=s.ownerDocument;c=u?u.defaultView||u.parentWindow:window}var l,h;if("topMouseOut"===e){l=t;var p=n.relatedTarget||n.toElement;h=p?i.getClosestInstanceFromNode(p):null}else l=null,h=t;if(l===h)return null;var d=null==l?c:i.getNodeFromInstance(l),f=null==h?c:i.getNodeFromInstance(h),m=o.getPooled(a.mouseLeave,l,n,s);m.type="mouseleave",m.target=d,m.relatedTarget=f;var g=o.getPooled(a.mouseEnter,h,n,s);return g.type="mouseenter",g.target=f,g.relatedTarget=d,r.accumulateEnterLeaveDispatches(m,g,l,h),[m,g]}};e.exports=s},function(e,t,n){"use strict";var r=n(14),i=r.injection.MUST_USE_PROPERTY,o=r.injection.HAS_BOOLEAN_VALUE,a=r.injection.HAS_NUMERIC_VALUE,s=r.injection.HAS_POSITIVE_NUMERIC_VALUE,c=r.injection.HAS_OVERLOADED_BOOLEAN_VALUE,u={isCustomAttribute:RegExp.prototype.test.bind(new RegExp("^(data|aria)-["+r.ATTRIBUTE_NAME_CHAR+"]*$")),Properties:{accept:0,acceptCharset:0,accessKey:0,action:0,allowFullScreen:o,allowTransparency:0,alt:0,as:0,async:o,autoComplete:0,autoPlay:o,capture:o,cellPadding:0,cellSpacing:0,charSet:0,challenge:0,checked:i|o,cite:0,classID:0,className:0,cols:s,colSpan:0,content:0,contentEditable:0,contextMenu:0,controls:o,coords:0,crossOrigin:0,data:0,dateTime:0,default:o,defer:o,dir:0,disabled:o,download:c,draggable:0,encType:0,form:0,formAction:0,formEncType:0,formMethod:0,formNoValidate:o,formTarget:0,frameBorder:0,headers:0,height:0,hidden:o,high:0,href:0,hrefLang:0,htmlFor:0,httpEquiv:0,icon:0,id:0,inputMode:0,integrity:0,is:0,keyParams:0,keyType:0,kind:0,label:0,lang:0,list:0,loop:o,low:0,manifest:0,marginHeight:0,marginWidth:0,max:0,maxLength:0,media:0,mediaGroup:0,method:0,min:0,minLength:0,multiple:i|o,muted:i|o,name:0,nonce:0,noValidate:o,open:o,optimum:0,pattern:0,placeholder:0,playsInline:o,poster:0,preload:0,profile:0,radioGroup:0,readOnly:o,referrerPolicy:0,rel:0,required:o,reversed:o,role:0,rows:s,rowSpan:a,sandbox:0,scope:0,scoped:o,scrolling:0,seamless:o,selected:i|o,shape:0,size:s,sizes:0,span:s,spellCheck:0,src:0,srcDoc:0,srcLang:0,srcSet:0,start:a,step:0,style:0,summary:0,tabIndex:0,target:0,title:0,type:0,useMap:0,value:0,width:0,wmode:0,wrap:0,about:0,datatype:0,inlist:0,prefix:0,property:0,resource:0,typeof:0,vocab:0,autoCapitalize:0,autoCorrect:0,autoSave:0,color:0,itemProp:0,itemScope:o,itemType:0,itemID:0,itemRef:0,results:0,security:0,unselectable:0},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}};e.exports=u},function(e,t,n){"use strict";var r=n(35),i=n(125),o={processChildrenUpdates:i.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkup:r.dangerouslyReplaceNodeWithMarkup};e.exports=o},function(e,t,n){"use strict";var r=n(2),i=n(16),o=n(5),a=n(122),s=n(6),c=(n(0),{dangerouslyReplaceNodeWithMarkup:function(e,t){if(o.canUseDOM||r("56"),t||r("57"),"HTML"===e.nodeName&&r("58"),"string"===typeof t){var n=a(t,s)[0];e.parentNode.replaceChild(n,e)}else i.replaceChildWithTree(e,t)}});e.exports=c},function(e,t,n){"use strict";function r(e){var t=e.match(l);return t&&t[1].toLowerCase()}function i(e,t){var n=u;u||c(!1);var i=r(e),o=i&&s(i);if(o){n.innerHTML=o[1]+e+o[2];for(var l=o[0];l--;)n=n.lastChild}else n.innerHTML=e;var h=n.getElementsByTagName("script");h.length&&(t||c(!1),a(h).forEach(t));for(var p=Array.from(n.childNodes);n.lastChild;)n.removeChild(n.lastChild);return p}var o=n(5),a=n(123),s=n(124),c=n(0),u=o.canUseDOM?document.createElement("div"):null,l=/^\s*<(\w+)/;e.exports=i},function(e,t,n){"use strict";function r(e){var t=e.length;if((Array.isArray(e)||"object"!==typeof e&&"function"!==typeof e)&&a(!1),"number"!==typeof t&&a(!1),0===t||t-1 in e||a(!1),"function"===typeof e.callee&&a(!1),e.hasOwnProperty)try{return Array.prototype.slice.call(e)}catch(e){}for(var n=Array(t),r=0;r<t;r++)n[r]=e[r];return n}function i(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"length"in e&&!("setInterval"in e)&&"number"!=typeof e.nodeType&&(Array.isArray(e)||"callee"in e||"item"in e)}function o(e){return i(e)?Array.isArray(e)?e.slice():r(e):[e]}var a=n(0);e.exports=o},function(e,t,n){"use strict";function r(e){return a||o(!1),p.hasOwnProperty(e)||(e="*"),s.hasOwnProperty(e)||(a.innerHTML="*"===e?"<link />":"<"+e+"></"+e+">",s[e]=!a.firstChild),s[e]?p[e]:null}var i=n(5),o=n(0),a=i.canUseDOM?document.createElement("div"):null,s={},c=[1,'<select multiple="true">',"</select>"],u=[1,"<table>","</table>"],l=[3,"<table><tbody><tr>","</tr></tbody></table>"],h=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],p={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:c,option:c,caption:u,colgroup:u,tbody:u,tfoot:u,thead:u,td:l,th:l};["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"].forEach(function(e){p[e]=h,s[e]=!0}),e.exports=r},function(e,t,n){"use strict";var r=n(35),i=n(4),o={dangerouslyProcessChildrenUpdates:function(e,t){var n=i.getNodeFromInstance(e);r.processUpdates(n,t)}};e.exports=o},function(e,t,n){"use strict";function r(e){if(e){var t=e._currentElement._owner||null;if(t){var n=t.getName();if(n)return" This DOM node was rendered by `"+n+"`."}}return""}function i(e,t){t&&(Z[e._tag]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&g("137",e._tag,e._currentElement._owner?" Check the render method of "+e._currentElement._owner.getName()+".":""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&g("60"),"object"===typeof t.dangerouslySetInnerHTML&&V in t.dangerouslySetInnerHTML||g("61")),null!=t.style&&"object"!==typeof t.style&&g("62",r(e)))}function o(e,t,n,r){if(!(r instanceof D)){var i=e._hostContainerInfo,o=i._node&&i._node.nodeType===W,s=o?i._node:i._ownerDocument;z(t,s),r.getReactMountReady().enqueue(a,{inst:e,registrationName:t,listener:n})}}function a(){var e=this;M.putListener(e.inst,e.registrationName,e.listener)}function s(){var e=this;R.postMountWrapper(e)}function c(){var e=this;N.postMountWrapper(e)}function u(){var e=this;P.postMountWrapper(e)}function l(){U.track(this)}function h(){var e=this;e._rootNodeID||g("63");var t=k(e);switch(t||g("64"),e._tag){case"iframe":case"object":e._wrapperState.listeners=[S.trapBubbledEvent("topLoad","load",t)];break;case"video":case"audio":e._wrapperState.listeners=[];for(var n in X)X.hasOwnProperty(n)&&e._wrapperState.listeners.push(S.trapBubbledEvent(n,X[n],t));break;case"source":e._wrapperState.listeners=[S.trapBubbledEvent("topError","error",t)];break;case"img":e._wrapperState.listeners=[S.trapBubbledEvent("topError","error",t),S.trapBubbledEvent("topLoad","load",t)];break;case"form":e._wrapperState.listeners=[S.trapBubbledEvent("topReset","reset",t),S.trapBubbledEvent("topSubmit","submit",t)];break;case"input":case"select":case"textarea":e._wrapperState.listeners=[S.trapBubbledEvent("topInvalid","invalid",t)]}}function p(){L.postUpdateWrapper(this)}function d(e){Q.call(J,e)||(K.test(e)||g("65",e),J[e]=!0)}function f(e,t){return e.indexOf("-")>=0||null!=t.is}function m(e){var t=e.type;d(t),this._currentElement=e,this._tag=t.toLowerCase(),this._namespaceURI=null,this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._hostNode=null,this._hostParent=null,this._rootNodeID=0,this._domID=0,this._hostContainerInfo=null,this._wrapperState=null,this._topLevelWrapper=null,this._flags=0}var g=n(2),v=n(3),y=n(127),b=n(128),x=n(16),_=n(36),w=n(14),E=n(66),M=n(19),T=n(29),S=n(28),A=n(54),C=n(4),R=n(138),P=n(140),L=n(67),N=n(141),I=(n(7),n(142)),D=n(149),O=(n(6),n(27)),U=(n(0),n(33),n(40),n(60)),B=(n(44),n(1),A),F=M.deleteListener,k=C.getNodeFromInstance,z=S.listenTo,j=T.registrationNameModules,G={string:!0,number:!0},V="__html",H={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null},W=11,X={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},q={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Y={listing:!0,pre:!0,textarea:!0},Z=v({menuitem:!0},q),K=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,J={},Q={}.hasOwnProperty,$=1;m.displayName="ReactDOMComponent",m.Mixin={mountComponent:function(e,t,n,r){this._rootNodeID=$++,this._domID=n._idCounter++,this._hostParent=t,this._hostContainerInfo=n;var o=this._currentElement.props;switch(this._tag){case"audio":case"form":case"iframe":case"img":case"link":case"object":case"source":case"video":this._wrapperState={listeners:null},e.getReactMountReady().enqueue(h,this);break;case"input":R.mountWrapper(this,o,t),o=R.getHostProps(this,o),e.getReactMountReady().enqueue(l,this),e.getReactMountReady().enqueue(h,this);break;case"option":P.mountWrapper(this,o,t),o=P.getHostProps(this,o);break;case"select":L.mountWrapper(this,o,t),o=L.getHostProps(this,o),e.getReactMountReady().enqueue(h,this);break;case"textarea":N.mountWrapper(this,o,t),o=N.getHostProps(this,o),e.getReactMountReady().enqueue(l,this),e.getReactMountReady().enqueue(h,this)}i(this,o);var a,p;null!=t?(a=t._namespaceURI,p=t._tag):n._tag&&(a=n._namespaceURI,p=n._tag),(null==a||a===_.svg&&"foreignobject"===p)&&(a=_.html),a===_.html&&("svg"===this._tag?a=_.svg:"math"===this._tag&&(a=_.mathml)),this._namespaceURI=a;var d;if(e.useCreateElement){var f,m=n._ownerDocument;if(a===_.html)if("script"===this._tag){var g=m.createElement("div"),v=this._currentElement.type;g.innerHTML="<"+v+"></"+v+">",f=g.removeChild(g.firstChild)}else f=o.is?m.createElement(this._currentElement.type,o.is):m.createElement(this._currentElement.type);else f=m.createElementNS(a,this._currentElement.type);C.precacheNode(this,f),this._flags|=B.hasCachedChildNodes,this._hostParent||E.setAttributeForRoot(f),this._updateDOMProperties(null,o,e);var b=x(f);this._createInitialChildren(e,o,r,b),d=b}else{var w=this._createOpenTagMarkupAndPutListeners(e,o),M=this._createContentMarkup(e,o,r);d=!M&&q[this._tag]?w+"/>":w+">"+M+"</"+this._currentElement.type+">"}switch(this._tag){case"input":e.getReactMountReady().enqueue(s,this),o.autoFocus&&e.getReactMountReady().enqueue(y.focusDOMComponent,this);break;case"textarea":e.getReactMountReady().enqueue(c,this),o.autoFocus&&e.getReactMountReady().enqueue(y.focusDOMComponent,this);break;case"select":case"button":o.autoFocus&&e.getReactMountReady().enqueue(y.focusDOMComponent,this);break;case"option":e.getReactMountReady().enqueue(u,this)}return d},_createOpenTagMarkupAndPutListeners:function(e,t){var n="<"+this._currentElement.type;for(var r in t)if(t.hasOwnProperty(r)){var i=t[r];if(null!=i)if(j.hasOwnProperty(r))i&&o(this,r,i,e);else{"style"===r&&(i&&(i=this._previousStyleCopy=v({},t.style)),i=b.createMarkupForStyles(i,this));var a=null;null!=this._tag&&f(this._tag,t)?H.hasOwnProperty(r)||(a=E.createMarkupForCustomAttribute(r,i)):a=E.createMarkupForProperty(r,i),a&&(n+=" "+a)}}return e.renderToStaticMarkup?n:(this._hostParent||(n+=" "+E.createMarkupForRoot()),n+=" "+E.createMarkupForID(this._domID))},_createContentMarkup:function(e,t,n){var r="",i=t.dangerouslySetInnerHTML;if(null!=i)null!=i.__html&&(r=i.__html);else{var o=G[typeof t.children]?t.children:null,a=null!=o?null:t.children;if(null!=o)r=O(o);else if(null!=a){var s=this.mountChildren(a,e,n);r=s.join("")}}return Y[this._tag]&&"\n"===r.charAt(0)?"\n"+r:r},_createInitialChildren:function(e,t,n,r){var i=t.dangerouslySetInnerHTML;if(null!=i)null!=i.__html&&x.queueHTML(r,i.__html);else{var o=G[typeof t.children]?t.children:null,a=null!=o?null:t.children;if(null!=o)""!==o&&x.queueText(r,o);else if(null!=a)for(var s=this.mountChildren(a,e,n),c=0;c<s.length;c++)x.queueChild(r,s[c])}},receiveComponent:function(e,t,n){var r=this._currentElement;this._currentElement=e,this.updateComponent(t,r,e,n)},updateComponent:function(e,t,n,r){var o=t.props,a=this._currentElement.props;switch(this._tag){case"input":o=R.getHostProps(this,o),a=R.getHostProps(this,a);break;case"option":o=P.getHostProps(this,o),a=P.getHostProps(this,a);break;case"select":o=L.getHostProps(this,o),a=L.getHostProps(this,a);break;case"textarea":o=N.getHostProps(this,o),a=N.getHostProps(this,a)}switch(i(this,a),this._updateDOMProperties(o,a,e),this._updateDOMChildren(o,a,e,r),this._tag){case"input":R.updateWrapper(this);break;case"textarea":N.updateWrapper(this);break;case"select":e.getReactMountReady().enqueue(p,this)}},_updateDOMProperties:function(e,t,n){var r,i,a;for(r in e)if(!t.hasOwnProperty(r)&&e.hasOwnProperty(r)&&null!=e[r])if("style"===r){var s=this._previousStyleCopy;for(i in s)s.hasOwnProperty(i)&&(a=a||{},a[i]="");this._previousStyleCopy=null}else j.hasOwnProperty(r)?e[r]&&F(this,r):f(this._tag,e)?H.hasOwnProperty(r)||E.deleteValueForAttribute(k(this),r):(w.properties[r]||w.isCustomAttribute(r))&&E.deleteValueForProperty(k(this),r);for(r in t){var c=t[r],u="style"===r?this._previousStyleCopy:null!=e?e[r]:void 0;if(t.hasOwnProperty(r)&&c!==u&&(null!=c||null!=u))if("style"===r)if(c?c=this._previousStyleCopy=v({},c):this._previousStyleCopy=null,u){for(i in u)!u.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(a=a||{},a[i]="");for(i in c)c.hasOwnProperty(i)&&u[i]!==c[i]&&(a=a||{},a[i]=c[i])}else a=c;else if(j.hasOwnProperty(r))c?o(this,r,c,n):u&&F(this,r);else if(f(this._tag,t))H.hasOwnProperty(r)||E.setValueForAttribute(k(this),r,c);else if(w.properties[r]||w.isCustomAttribute(r)){var l=k(this);null!=c?E.setValueForProperty(l,r,c):E.deleteValueForProperty(l,r)}}a&&b.setValueForStyles(k(this),a,this)},_updateDOMChildren:function(e,t,n,r){var i=G[typeof e.children]?e.children:null,o=G[typeof t.children]?t.children:null,a=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,s=t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html,c=null!=i?null:e.children,u=null!=o?null:t.children,l=null!=i||null!=a,h=null!=o||null!=s;null!=c&&null==u?this.updateChildren(null,n,r):l&&!h&&this.updateTextContent(""),null!=o?i!==o&&this.updateTextContent(""+o):null!=s?a!==s&&this.updateMarkup(""+s):null!=u&&this.updateChildren(u,n,r)},getHostNode:function(){return k(this)},unmountComponent:function(e){switch(this._tag){case"audio":case"form":case"iframe":case"img":case"link":case"object":case"source":case"video":var t=this._wrapperState.listeners;if(t)for(var n=0;n<t.length;n++)t[n].remove();break;case"input":case"textarea":U.stopTracking(this);break;case"html":case"head":case"body":g("66",this._tag)}this.unmountChildren(e),C.uncacheNode(this),M.deleteAllListeners(this),this._rootNodeID=0,this._domID=0,this._wrapperState=null},getPublicInstance:function(){return k(this)}},v(m.prototype,m.Mixin,I.Mixin),e.exports=m},function(e,t,n){"use strict";var r=n(4),i=n(64),o={focusDOMComponent:function(){i(r.getNodeFromInstance(this))}};e.exports=o},function(e,t,n){"use strict";var r=n(65),i=n(5),o=(n(7),n(129),n(131)),a=n(132),s=n(134),c=(n(1),s(function(e){return a(e)})),u=!1,l="cssFloat";if(i.canUseDOM){var h=document.createElement("div").style;try{h.font=""}catch(e){u=!0}void 0===document.documentElement.style.cssFloat&&(l="styleFloat")}var p={createMarkupForStyles:function(e,t){var n="";for(var r in e)if(e.hasOwnProperty(r)){var i=0===r.indexOf("--"),a=e[r];null!=a&&(n+=c(r)+":",n+=o(r,a,t,i)+";")}return n||null},setValueForStyles:function(e,t,n){var i=e.style;for(var a in t)if(t.hasOwnProperty(a)){var s=0===a.indexOf("--"),c=o(a,t[a],n,s);if("float"!==a&&"cssFloat"!==a||(a=l),s)i.setProperty(a,c);else if(c)i[a]=c;else{var h=u&&r.shorthandPropertyExpansions[a];if(h)for(var p in h)i[p]="";else i[a]=""}}}};e.exports=p},function(e,t,n){"use strict";function r(e){return i(e.replace(o,"ms-"))}var i=n(130),o=/^-ms-/;e.exports=r},function(e,t,n){"use strict";function r(e){return e.replace(i,function(e,t){return t.toUpperCase()})}var i=/-(.)/g;e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){if(null==t||"boolean"===typeof t||""===t)return"";var i=isNaN(t);if(r||i||0===t||o.hasOwnProperty(e)&&o[e])return""+t;if("string"===typeof t){t=t.trim()}return t+"px"}var i=n(65),o=(n(1),i.isUnitlessNumber);e.exports=r},function(e,t,n){"use strict";function r(e){return i(e).replace(o,"-ms-")}var i=n(133),o=/^ms-/;e.exports=r},function(e,t,n){"use strict";function r(e){return e.replace(i,"-$1").toLowerCase()}var i=/([A-Z])/g;e.exports=r},function(e,t,n){"use strict";function r(e){var t={};return function(n){return t.hasOwnProperty(n)||(t[n]=e.call(this,n)),t[n]}}e.exports=r},function(e,t,n){"use strict";function r(e){return'"'+i(e)+'"'}var i=n(27);e.exports=r},function(e,t,n){"use strict";function r(e){i.enqueueEvents(e),i.processEventQueue(!1)}var i=n(19),o={handleTopLevel:function(e,t,n,o){r(i.extractEvents(e,t,n,o))}};e.exports=o},function(e,t,n){"use strict";function r(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function i(e){if(s[e])return s[e];if(!a[e])return e;var t=a[e];for(var n in t)if(t.hasOwnProperty(n)&&n in c)return s[e]=t[n];return""}var o=n(5),a={animationend:r("Animation","AnimationEnd"),animationiteration:r("Animation","AnimationIteration"),animationstart:r("Animation","AnimationStart"),transitionend:r("Transition","TransitionEnd")},s={},c={};o.canUseDOM&&(c=document.createElement("div").style,"AnimationEvent"in window||(delete a.animationend.animation,delete a.animationiteration.animation,delete a.animationstart.animation),"TransitionEvent"in window||delete a.transitionend.transition),e.exports=i},function(e,t,n){"use strict";function r(){this._rootNodeID&&p.updateWrapper(this)}function i(e){return"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}function o(e){var t=this._currentElement.props,n=u.executeOnChange(t,e);h.asap(r,this);var i=t.name;if("radio"===t.type&&null!=i){for(var o=l.getNodeFromInstance(this),s=o;s.parentNode;)s=s.parentNode;for(var c=s.querySelectorAll("input[name="+JSON.stringify(""+i)+'][type="radio"]'),p=0;p<c.length;p++){var d=c[p];if(d!==o&&d.form===o.form){var f=l.getInstanceFromNode(d);f||a("90"),h.asap(r,f)}}}return n}var a=n(2),s=n(3),c=n(66),u=n(38),l=n(4),h=n(8),p=(n(0),n(1),{getHostProps:function(e,t){var n=u.getValue(t),r=u.getChecked(t);return s({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked,onChange:e._wrapperState.onChange})},mountWrapper:function(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,listeners:null,onChange:o.bind(e),controlled:i(t)}},updateWrapper:function(e){var t=e._currentElement.props,n=t.checked;null!=n&&c.setValueForProperty(l.getNodeFromInstance(e),"checked",n||!1);var r=l.getNodeFromInstance(e),i=u.getValue(t);if(null!=i)if(0===i&&""===r.value)r.value="0";else if("number"===t.type){var o=parseFloat(r.value,10)||0;(i!=o||i==o&&r.value!=i)&&(r.value=""+i)}else r.value!==""+i&&(r.value=""+i);else null==t.value&&null!=t.defaultValue&&r.defaultValue!==""+t.defaultValue&&(r.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(r.defaultChecked=!!t.defaultChecked)},postMountWrapper:function(e){var t=e._currentElement.props,n=l.getNodeFromInstance(e);switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":n.value="",n.value=n.defaultValue;break;default:n.value=n.value}var r=n.name;""!==r&&(n.name=""),n.defaultChecked=!n.defaultChecked,n.defaultChecked=!n.defaultChecked,""!==r&&(n.name=r)}});e.exports=p},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";function r(e){var t="";return o.Children.forEach(e,function(e){null!=e&&("string"===typeof e||"number"===typeof e?t+=e:c||(c=!0))}),t}var i=n(3),o=n(12),a=n(4),s=n(67),c=(n(1),!1),u={mountWrapper:function(e,t,n){var i=null;if(null!=n){var o=n;"optgroup"===o._tag&&(o=o._hostParent),null!=o&&"select"===o._tag&&(i=s.getSelectValueContext(o))}var a=null;if(null!=i){var c;if(c=null!=t.value?t.value+"":r(t.children),a=!1,Array.isArray(i)){for(var u=0;u<i.length;u++)if(""+i[u]===c){a=!0;break}}else a=""+i===c}e._wrapperState={selected:a}},postMountWrapper:function(e){var t=e._currentElement.props;if(null!=t.value){a.getNodeFromInstance(e).setAttribute("value",t.value)}},getHostProps:function(e,t){var n=i({selected:void 0,children:void 0},t);null!=e._wrapperState.selected&&(n.selected=e._wrapperState.selected);var o=r(t.children);return o&&(n.children=o),n}};e.exports=u},function(e,t,n){"use strict";function r(){this._rootNodeID&&l.updateWrapper(this)}function i(e){var t=this._currentElement.props,n=s.executeOnChange(t,e);return u.asap(r,this),n}var o=n(2),a=n(3),s=n(38),c=n(4),u=n(8),l=(n(0),n(1),{getHostProps:function(e,t){return null!=t.dangerouslySetInnerHTML&&o("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue,onChange:e._wrapperState.onChange})},mountWrapper:function(e,t){var n=s.getValue(t),r=n;if(null==n){var a=t.defaultValue,c=t.children;null!=c&&(null!=a&&o("92"),Array.isArray(c)&&(c.length<=1||o("93"),c=c[0]),a=""+c),null==a&&(a=""),r=a}e._wrapperState={initialValue:""+r,listeners:null,onChange:i.bind(e)}},updateWrapper:function(e){var t=e._currentElement.props,n=c.getNodeFromInstance(e),r=s.getValue(t);if(null!=r){var i=""+r;i!==n.value&&(n.value=i),null==t.defaultValue&&(n.defaultValue=i)}null!=t.defaultValue&&(n.defaultValue=t.defaultValue)},postMountWrapper:function(e){var t=c.getNodeFromInstance(e),n=t.textContent;n===e._wrapperState.initialValue&&(t.value=n)}});e.exports=l},function(e,t,n){"use strict";function r(e,t,n){return{type:"INSERT_MARKUP",content:e,fromIndex:null,fromNode:null,toIndex:n,afterNode:t}}function i(e,t,n){return{type:"MOVE_EXISTING",content:null,fromIndex:e._mountIndex,fromNode:p.getHostNode(e),toIndex:n,afterNode:t}}function o(e,t){return{type:"REMOVE_NODE",content:null,fromIndex:e._mountIndex,fromNode:t,toIndex:null,afterNode:null}}function a(e){return{type:"SET_MARKUP",content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function s(e){return{type:"TEXT_CONTENT",content:e,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function c(e,t){return t&&(e=e||[],e.push(t)),e}function u(e,t){h.processChildrenUpdates(e,t)}var l=n(2),h=n(39),p=(n(21),n(7),n(9),n(15)),d=n(143),f=(n(6),n(148)),m=(n(0),{Mixin:{_reconcilerInstantiateChildren:function(e,t,n){return d.instantiateChildren(e,t,n)},_reconcilerUpdateChildren:function(e,t,n,r,i,o){var a,s=0;return a=f(t,s),d.updateChildren(e,a,n,r,i,this,this._hostContainerInfo,o,s),a},mountChildren:function(e,t,n){var r=this._reconcilerInstantiateChildren(e,t,n);this._renderedChildren=r;var i=[],o=0;for(var a in r)if(r.hasOwnProperty(a)){var s=r[a],c=0,u=p.mountComponent(s,t,this,this._hostContainerInfo,n,c);s._mountIndex=o++,i.push(u)}return i},updateTextContent:function(e){var t=this._renderedChildren;d.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&l("118");u(this,[s(e)])},updateMarkup:function(e){var t=this._renderedChildren;d.unmountChildren(t,!1);for(var n in t)t.hasOwnProperty(n)&&l("118");u(this,[a(e)])},updateChildren:function(e,t,n){this._updateChildren(e,t,n)},_updateChildren:function(e,t,n){var r=this._renderedChildren,i={},o=[],a=this._reconcilerUpdateChildren(r,e,o,i,t,n);if(a||r){var s,l=null,h=0,d=0,f=0,m=null;for(s in a)if(a.hasOwnProperty(s)){var g=r&&r[s],v=a[s];g===v?(l=c(l,this.moveChild(g,m,h,d)),d=Math.max(g._mountIndex,d),g._mountIndex=h):(g&&(d=Math.max(g._mountIndex,d)),l=c(l,this._mountChildAtIndex(v,o[f],m,h,t,n)),f++),h++,m=p.getHostNode(v)}for(s in i)i.hasOwnProperty(s)&&(l=c(l,this._unmountChild(r[s],i[s])));l&&u(this,l),this._renderedChildren=a}},unmountChildren:function(e){var t=this._renderedChildren;d.unmountChildren(t,e),this._renderedChildren=null},moveChild:function(e,t,n,r){if(e._mountIndex<r)return i(e,t,n)},createChild:function(e,t,n){return r(n,t,e._mountIndex)},removeChild:function(e,t){return o(e,t)},_mountChildAtIndex:function(e,t,n,r,i,o){return e._mountIndex=r,this.createChild(e,n,t)},_unmountChild:function(e,t){var n=this.removeChild(e,t);return e._mountIndex=null,n}}});e.exports=m},function(e,t,n){"use strict";(function(t){function r(e,t,n,r){var i=void 0===e[n];null!=t&&i&&(e[n]=o(t,!0))}var i=n(15),o=n(69),a=(n(42),n(41)),s=n(73);n(1);"undefined"!==typeof t&&Object({NODE_ENV:"production",PUBLIC_URL:"/three-store"});var c={instantiateChildren:function(e,t,n,i){if(null==e)return null;var o={};return s(e,r,o),o},updateChildren:function(e,t,n,r,s,c,u,l,h){if(t||e){var p,d;for(p in t)if(t.hasOwnProperty(p)){d=e&&e[p];var f=d&&d._currentElement,m=t[p];if(null!=d&&a(f,m))i.receiveComponent(d,m,s,l),t[p]=d;else{d&&(r[p]=i.getHostNode(d),i.unmountComponent(d,!1));var g=o(m,!0);t[p]=g;var v=i.mountComponent(g,s,c,u,l,h);n.push(v)}}for(p in e)!e.hasOwnProperty(p)||t&&t.hasOwnProperty(p)||(d=e[p],r[p]=i.getHostNode(d),i.unmountComponent(d,!1))}},unmountChildren:function(e,t){for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];i.unmountComponent(r,t)}}};e.exports=c}).call(t,n(68))},function(e,t,n){"use strict";function r(e){}function i(e){return!(!e.prototype||!e.prototype.isReactComponent)}function o(e){return!(!e.prototype||!e.prototype.isPureReactComponent)}var a=n(2),s=n(3),c=n(12),u=n(39),l=n(9),h=n(31),p=n(21),d=(n(7),n(70)),f=n(15),m=n(23),g=(n(0),n(40)),v=n(41),y=(n(1),{ImpureClass:0,PureClass:1,StatelessFunctional:2});r.prototype.render=function(){var e=p.get(this)._currentElement.type,t=e(this.props,this.context,this.updater);return t};var b=1,x={construct:function(e){this._currentElement=e,this._rootNodeID=0,this._compositeType=null,this._instance=null,this._hostParent=null,this._hostContainerInfo=null,this._updateBatchNumber=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedNodeType=null,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null,this._calledComponentWillUnmount=!1},mountComponent:function(e,t,n,s){this._context=s,this._mountOrder=b++,this._hostParent=t,this._hostContainerInfo=n;var u,l=this._currentElement.props,h=this._processContext(s),d=this._currentElement.type,f=e.getUpdateQueue(),g=i(d),v=this._constructComponent(g,l,h,f);g||null!=v&&null!=v.render?o(d)?this._compositeType=y.PureClass:this._compositeType=y.ImpureClass:(u=v,null===v||!1===v||c.isValidElement(v)||a("105",d.displayName||d.name||"Component"),v=new r(d),this._compositeType=y.StatelessFunctional);v.props=l,v.context=h,v.refs=m,v.updater=f,this._instance=v,p.set(v,this);var x=v.state;void 0===x&&(v.state=x=null),("object"!==typeof x||Array.isArray(x))&&a("106",this.getName()||"ReactCompositeComponent"),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1;var _;return _=v.unstable_handleError?this.performInitialMountWithErrorHandling(u,t,n,e,s):this.performInitialMount(u,t,n,e,s),v.componentDidMount&&e.getReactMountReady().enqueue(v.componentDidMount,v),_},_constructComponent:function(e,t,n,r){return this._constructComponentWithoutOwner(e,t,n,r)},_constructComponentWithoutOwner:function(e,t,n,r){var i=this._currentElement.type;return e?new i(t,n,r):i(t,n,r)},performInitialMountWithErrorHandling:function(e,t,n,r,i){var o,a=r.checkpoint();try{o=this.performInitialMount(e,t,n,r,i)}catch(s){r.rollback(a),this._instance.unstable_handleError(s),this._pendingStateQueue&&(this._instance.state=this._processPendingState(this._instance.props,this._instance.context)),a=r.checkpoint(),this._renderedComponent.unmountComponent(!0),r.rollback(a),o=this.performInitialMount(e,t,n,r,i)}return o},performInitialMount:function(e,t,n,r,i){var o=this._instance,a=0;o.componentWillMount&&(o.componentWillMount(),this._pendingStateQueue&&(o.state=this._processPendingState(o.props,o.context))),void 0===e&&(e=this._renderValidatedComponent());var s=d.getType(e);this._renderedNodeType=s;var c=this._instantiateReactComponent(e,s!==d.EMPTY);this._renderedComponent=c;var u=f.mountComponent(c,r,t,n,this._processChildContext(i),a);return u},getHostNode:function(){return f.getHostNode(this._renderedComponent)},unmountComponent:function(e){if(this._renderedComponent){var t=this._instance;if(t.componentWillUnmount&&!t._calledComponentWillUnmount)if(t._calledComponentWillUnmount=!0,e){var n=this.getName()+".componentWillUnmount()";h.invokeGuardedCallback(n,t.componentWillUnmount.bind(t))}else t.componentWillUnmount();this._renderedComponent&&(f.unmountComponent(this._renderedComponent,e),this._renderedNodeType=null,this._renderedComponent=null,this._instance=null),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=0,this._topLevelWrapper=null,p.remove(t)}},_maskContext:function(e){var t=this._currentElement.type,n=t.contextTypes;if(!n)return m;var r={};for(var i in n)r[i]=e[i];return r},_processContext:function(e){var t=this._maskContext(e);return t},_processChildContext:function(e){var t,n=this._currentElement.type,r=this._instance;if(r.getChildContext&&(t=r.getChildContext()),t){"object"!==typeof n.childContextTypes&&a("107",this.getName()||"ReactCompositeComponent");for(var i in t)i in n.childContextTypes||a("108",this.getName()||"ReactCompositeComponent",i);return s({},e,t)}return e},_checkContextTypes:function(e,t,n){},receiveComponent:function(e,t,n){var r=this._currentElement,i=this._context;this._pendingElement=null,this.updateComponent(t,r,e,i,n)},performUpdateIfNecessary:function(e){null!=this._pendingElement?f.receiveComponent(this,this._pendingElement,e,this._context):null!==this._pendingStateQueue||this._pendingForceUpdate?this.updateComponent(e,this._currentElement,this._currentElement,this._context,this._context):this._updateBatchNumber=null},updateComponent:function(e,t,n,r,i){var o=this._instance;null==o&&a("136",this.getName()||"ReactCompositeComponent");var s,c=!1;this._context===i?s=o.context:(s=this._processContext(i),c=!0);var u=t.props,l=n.props;t!==n&&(c=!0),c&&o.componentWillReceiveProps&&o.componentWillReceiveProps(l,s);var h=this._processPendingState(l,s),p=!0;this._pendingForceUpdate||(o.shouldComponentUpdate?p=o.shouldComponentUpdate(l,h,s):this._compositeType===y.PureClass&&(p=!g(u,l)||!g(o.state,h))),this._updateBatchNumber=null,p?(this._pendingForceUpdate=!1,this._performComponentUpdate(n,l,h,s,e,i)):(this._currentElement=n,this._context=i,o.props=l,o.state=h,o.context=s)},_processPendingState:function(e,t){var n=this._instance,r=this._pendingStateQueue,i=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!r)return n.state;if(i&&1===r.length)return r[0];for(var o=s({},i?r[0]:n.state),a=i?1:0;a<r.length;a++){var c=r[a];s(o,"function"===typeof c?c.call(n,o,e,t):c)}return o},_performComponentUpdate:function(e,t,n,r,i,o){var a,s,c,u=this._instance,l=Boolean(u.componentDidUpdate);l&&(a=u.props,s=u.state,c=u.context),u.componentWillUpdate&&u.componentWillUpdate(t,n,r),this._currentElement=e,this._context=o,u.props=t,u.state=n,u.context=r,this._updateRenderedComponent(i,o),l&&i.getReactMountReady().enqueue(u.componentDidUpdate.bind(u,a,s,c),u)},_updateRenderedComponent:function(e,t){var n=this._renderedComponent,r=n._currentElement,i=this._renderValidatedComponent(),o=0;if(v(r,i))f.receiveComponent(n,i,e,this._processChildContext(t));else{var a=f.getHostNode(n);f.unmountComponent(n,!1);var s=d.getType(i);this._renderedNodeType=s;var c=this._instantiateReactComponent(i,s!==d.EMPTY);this._renderedComponent=c;var u=f.mountComponent(c,e,this._hostParent,this._hostContainerInfo,this._processChildContext(t),o);this._replaceNodeWithMarkup(a,u,n)}},_replaceNodeWithMarkup:function(e,t,n){u.replaceNodeWithMarkup(e,t,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var e=this._instance;return e.render()},_renderValidatedComponent:function(){var e;if(this._compositeType!==y.StatelessFunctional){l.current=this;try{e=this._renderValidatedComponentWithoutOwnerOrContext()}finally{l.current=null}}else e=this._renderValidatedComponentWithoutOwnerOrContext();return null===e||!1===e||c.isValidElement(e)||a("109",this.getName()||"ReactCompositeComponent"),e},attachRef:function(e,t){var n=this.getPublicInstance();null==n&&a("110");var r=t.getPublicInstance();(n.refs===m?n.refs={}:n.refs)[e]=r},detachRef:function(e){delete this.getPublicInstance().refs[e]},getName:function(){var e=this._currentElement.type,t=this._instance&&this._instance.constructor;return e.displayName||t&&t.displayName||e.name||t&&t.name||null},getPublicInstance:function(){var e=this._instance;return this._compositeType===y.StatelessFunctional?null:e},_instantiateReactComponent:null};e.exports=x},function(e,t,n){"use strict";function r(){return i++}var i=1;e.exports=r},function(e,t,n){"use strict";var r="function"===typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103;e.exports=r},function(e,t,n){"use strict";function r(e){var t=e&&(i&&e[i]||e[o]);if("function"===typeof t)return t}var i="function"===typeof Symbol&&Symbol.iterator,o="@@iterator";e.exports=r},function(e,t,n){"use strict";(function(t){function r(e,t,n,r){if(e&&"object"===typeof e){var i=e,o=void 0===i[n];o&&null!=t&&(i[n]=t)}}function i(e,t){if(null==e)return e;var n={};return o(e,r,n),n}var o=(n(42),n(73));n(1);"undefined"!==typeof t&&Object({NODE_ENV:"production",PUBLIC_URL:"/three-store"}),e.exports=i}).call(t,n(68))},function(e,t,n){"use strict";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup=e,this.useCreateElement=!1,this.updateQueue=new s(this)}var i=n(3),o=n(11),a=n(24),s=(n(7),n(150)),c=[],u={enqueue:function(){}},l={getTransactionWrappers:function(){return c},getReactMountReady:function(){return u},getUpdateQueue:function(){return this.updateQueue},destructor:function(){},checkpoint:function(){},rollback:function(){}};i(r.prototype,a,l),o.addPoolingTo(r),e.exports=r},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=n(43),o=(n(1),function(){function e(t){r(this,e),this.transaction=t}return e.prototype.isMounted=function(e){return!1},e.prototype.enqueueCallback=function(e,t,n){this.transaction.isInTransaction()&&i.enqueueCallback(e,t,n)},e.prototype.enqueueForceUpdate=function(e){this.transaction.isInTransaction()&&i.enqueueForceUpdate(e)},e.prototype.enqueueReplaceState=function(e,t){this.transaction.isInTransaction()&&i.enqueueReplaceState(e,t)},e.prototype.enqueueSetState=function(e,t){this.transaction.isInTransaction()&&i.enqueueSetState(e,t)},e}());e.exports=o},function(e,t,n){"use strict";var r=n(3),i=n(16),o=n(4),a=function(e){this._currentElement=null,this._hostNode=null,this._hostParent=null,this._hostContainerInfo=null,this._domID=0};r(a.prototype,{mountComponent:function(e,t,n,r){var a=n._idCounter++;this._domID=a,this._hostParent=t,this._hostContainerInfo=n;var s=" react-empty: "+this._domID+" ";if(e.useCreateElement){var c=n._ownerDocument,u=c.createComment(s);return o.precacheNode(this,u),i(u)}return e.renderToStaticMarkup?"":"\x3c!--"+s+"--\x3e"},receiveComponent:function(){},getHostNode:function(){return o.getNodeFromInstance(this)},unmountComponent:function(){o.uncacheNode(this)}}),e.exports=a},function(e,t,n){"use strict";function r(e,t){"_hostNode"in e||c("33"),"_hostNode"in t||c("33");for(var n=0,r=e;r;r=r._hostParent)n++;for(var i=0,o=t;o;o=o._hostParent)i++;for(;n-i>0;)e=e._hostParent,n--;for(;i-n>0;)t=t._hostParent,i--;for(var a=n;a--;){if(e===t)return e;e=e._hostParent,t=t._hostParent}return null}function i(e,t){"_hostNode"in e||c("35"),"_hostNode"in t||c("35");for(;t;){if(t===e)return!0;t=t._hostParent}return!1}function o(e){return"_hostNode"in e||c("36"),e._hostParent}function a(e,t,n){for(var r=[];e;)r.push(e),e=e._hostParent;var i;for(i=r.length;i-- >0;)t(r[i],"captured",n);for(i=0;i<r.length;i++)t(r[i],"bubbled",n)}function s(e,t,n,i,o){for(var a=e&&t?r(e,t):null,s=[];e&&e!==a;)s.push(e),e=e._hostParent;for(var c=[];t&&t!==a;)c.push(t),t=t._hostParent;var u;for(u=0;u<s.length;u++)n(s[u],"bubbled",i);for(u=c.length;u-- >0;)n(c[u],"captured",o)}var c=n(2);n(0);e.exports={isAncestor:i,getLowestCommonAncestor:r,getParentInstance:o,traverseTwoPhase:a,traverseEnterLeave:s}},function(e,t,n){"use strict";var r=n(2),i=n(3),o=n(35),a=n(16),s=n(4),c=n(27),u=(n(0),n(44),function(e){this._currentElement=e,this._stringText=""+e,this._hostNode=null,this._hostParent=null,this._domID=0,this._mountIndex=0,this._closingComment=null,this._commentNodes=null});i(u.prototype,{mountComponent:function(e,t,n,r){var i=n._idCounter++,o=" react-text: "+i+" ";if(this._domID=i,this._hostParent=t,e.useCreateElement){var u=n._ownerDocument,l=u.createComment(o),h=u.createComment(" /react-text "),p=a(u.createDocumentFragment());return a.queueChild(p,a(l)),this._stringText&&a.queueChild(p,a(u.createTextNode(this._stringText))),a.queueChild(p,a(h)),s.precacheNode(this,l),this._closingComment=h,p}var d=c(this._stringText);return e.renderToStaticMarkup?d:"\x3c!--"+o+"--\x3e"+d+"\x3c!-- /react-text --\x3e"},receiveComponent:function(e,t){if(e!==this._currentElement){this._currentElement=e;var n=""+e;if(n!==this._stringText){this._stringText=n;var r=this.getHostNode();o.replaceDelimitedText(r[0],r[1],n)}}},getHostNode:function(){var e=this._commentNodes;if(e)return e;if(!this._closingComment)for(var t=s.getNodeFromInstance(this),n=t.nextSibling;;){if(null==n&&r("67",this._domID),8===n.nodeType&&" /react-text "===n.nodeValue){this._closingComment=n;break}n=n.nextSibling}return e=[this._hostNode,this._closingComment],this._commentNodes=e,e},unmountComponent:function(){this._closingComment=null,this._commentNodes=null,s.uncacheNode(this)}}),e.exports=u},function(e,t,n){"use strict";function r(){this.reinitializeTransaction()}var i=n(3),o=n(8),a=n(24),s=n(6),c={initialize:s,close:function(){p.isBatchingUpdates=!1}},u={initialize:s,close:o.flushBatchedUpdates.bind(o)},l=[u,c];i(r.prototype,a,{getTransactionWrappers:function(){return l}});var h=new r,p={isBatchingUpdates:!1,batchedUpdates:function(e,t,n,r,i,o){var a=p.isBatchingUpdates;return p.isBatchingUpdates=!0,a?e(t,n,r,i,o):h.perform(e,null,t,n,r,i,o)}};e.exports=p},function(e,t,n){"use strict";function r(e){for(;e._hostParent;)e=e._hostParent;var t=h.getNodeFromInstance(e),n=t.parentNode;return h.getClosestInstanceFromNode(n)}function i(e,t){this.topLevelType=e,this.nativeEvent=t,this.ancestors=[]}function o(e){var t=d(e.nativeEvent),n=h.getClosestInstanceFromNode(t),i=n;do{e.ancestors.push(i),i=i&&r(i)}while(i);for(var o=0;o<e.ancestors.length;o++)n=e.ancestors[o],m._handleTopLevel(e.topLevelType,n,e.nativeEvent,d(e.nativeEvent))}function a(e){e(f(window))}var s=n(3),c=n(75),u=n(5),l=n(11),h=n(4),p=n(8),d=n(32),f=n(156);s(i.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),l.addPoolingTo(i,l.twoArgumentPooler);var m={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:u.canUseDOM?window:null,setHandleTopLevel:function(e){m._handleTopLevel=e},setEnabled:function(e){m._enabled=!!e},isEnabled:function(){return m._enabled},trapBubbledEvent:function(e,t,n){return n?c.listen(n,t,m.dispatchEvent.bind(null,e)):null},trapCapturedEvent:function(e,t,n){return n?c.capture(n,t,m.dispatchEvent.bind(null,e)):null},monitorScrollValue:function(e){var t=a.bind(null,e);c.listen(window,"scroll",t)},dispatchEvent:function(e,t){if(m._enabled){var n=i.getPooled(e,t);try{p.batchedUpdates(o,n)}finally{i.release(n)}}}};e.exports=m},function(e,t,n){"use strict";function r(e){return e.Window&&e instanceof e.Window?{x:e.pageXOffset||e.document.documentElement.scrollLeft,y:e.pageYOffset||e.document.documentElement.scrollTop}:{x:e.scrollLeft,y:e.scrollTop}}e.exports=r},function(e,t,n){"use strict";var r=n(14),i=n(19),o=n(30),a=n(39),s=n(71),c=n(28),u=n(72),l=n(8),h={Component:a.injection,DOMProperty:r.injection,EmptyComponent:s.injection,EventPluginHub:i.injection,EventPluginUtils:o.injection,EventEmitter:c.injection,HostComponent:u.injection,Updates:l.injection};e.exports=h},function(e,t,n){"use strict";function r(e){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=o.getPooled(null),this.useCreateElement=e}var i=n(3),o=n(58),a=n(11),s=n(28),c=n(76),u=(n(7),n(24)),l=n(43),h={initialize:c.getSelectionInformation,close:c.restoreSelection},p={initialize:function(){var e=s.isEnabled();return s.setEnabled(!1),e},close:function(e){s.setEnabled(e)}},d={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},f=[h,p,d],m={getTransactionWrappers:function(){return f},getReactMountReady:function(){return this.reactMountReady},getUpdateQueue:function(){return l},checkpoint:function(){return this.reactMountReady.checkpoint()},rollback:function(e){this.reactMountReady.rollback(e)},destructor:function(){o.release(this.reactMountReady),this.reactMountReady=null}};i(r.prototype,u,m),a.addPoolingTo(r),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return e===n&&t===r}function i(e){var t=document.selection,n=t.createRange(),r=n.text.length,i=n.duplicate();i.moveToElementText(e),i.setEndPoint("EndToStart",n);var o=i.text.length;return{start:o,end:o+r}}function o(e){var t=window.getSelection&&window.getSelection();if(!t||0===t.rangeCount)return null;var n=t.anchorNode,i=t.anchorOffset,o=t.focusNode,a=t.focusOffset,s=t.getRangeAt(0);try{s.startContainer.nodeType,s.endContainer.nodeType}catch(e){return null}var c=r(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset),u=c?0:s.toString().length,l=s.cloneRange();l.selectNodeContents(e),l.setEnd(s.startContainer,s.startOffset);var h=r(l.startContainer,l.startOffset,l.endContainer,l.endOffset),p=h?0:l.toString().length,d=p+u,f=document.createRange();f.setStart(n,i),f.setEnd(o,a);var m=f.collapsed;return{start:m?d:p,end:m?p:d}}function a(e,t){var n,r,i=document.selection.createRange().duplicate();void 0===t.end?(n=t.start,r=n):t.start>t.end?(n=t.end,r=t.start):(n=t.start,r=t.end),i.moveToElementText(e),i.moveStart("character",n),i.setEndPoint("EndToStart",i),i.moveEnd("character",r-n),i.select()}function s(e,t){if(window.getSelection){var n=window.getSelection(),r=e[l()].length,i=Math.min(t.start,r),o=void 0===t.end?i:Math.min(t.end,r);if(!n.extend&&i>o){var a=o;o=i,i=a}var s=u(e,i),c=u(e,o);if(s&&c){var h=document.createRange();h.setStart(s.node,s.offset),n.removeAllRanges(),i>o?(n.addRange(h),n.extend(c.node,c.offset)):(h.setEnd(c.node,c.offset),n.addRange(h))}}}var c=n(5),u=n(160),l=n(57),h=c.canUseDOM&&"selection"in document&&!("getSelection"in window),p={getOffsets:h?i:o,setOffsets:h?a:s};e.exports=p},function(e,t,n){"use strict";function r(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function i(e){for(;e;){if(e.nextSibling)return e.nextSibling;e=e.parentNode}}function o(e,t){for(var n=r(e),o=0,a=0;n;){if(3===n.nodeType){if(a=o+n.textContent.length,o<=t&&a>=t)return{node:n,offset:t-o};o=a}n=r(i(n))}}e.exports=o},function(e,t,n){"use strict";function r(e,t){return!(!e||!t)&&(e===t||!i(e)&&(i(t)?r(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var i=n(162);e.exports=r},function(e,t,n){"use strict";function r(e){return i(e)&&3==e.nodeType}var i=n(163);e.exports=r},function(e,t,n){"use strict";function r(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"===typeof n.Node?e instanceof n.Node:"object"===typeof e&&"number"===typeof e.nodeType&&"string"===typeof e.nodeName))}e.exports=r},function(e,t,n){"use strict";var r={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},i={accentHeight:"accent-height",accumulate:0,additive:0,alignmentBaseline:"alignment-baseline",allowReorder:"allowReorder",alphabetic:0,amplitude:0,arabicForm:"arabic-form",ascent:0,attributeName:"attributeName",attributeType:"attributeType",autoReverse:"autoReverse",azimuth:0,baseFrequency:"baseFrequency",baseProfile:"baseProfile",baselineShift:"baseline-shift",bbox:0,begin:0,bias:0,by:0,calcMode:"calcMode",capHeight:"cap-height",clip:0,clipPath:"clip-path",clipRule:"clip-rule",clipPathUnits:"clipPathUnits",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",contentScriptType:"contentScriptType",contentStyleType:"contentStyleType",cursor:0,cx:0,cy:0,d:0,decelerate:0,descent:0,diffuseConstant:"diffuseConstant",direction:0,display:0,divisor:0,dominantBaseline:"dominant-baseline",dur:0,dx:0,dy:0,edgeMode:"edgeMode",elevation:0,enableBackground:"enable-background",end:0,exponent:0,externalResourcesRequired:"externalResourcesRequired",fill:0,fillOpacity:"fill-opacity",fillRule:"fill-rule",filter:0,filterRes:"filterRes",filterUnits:"filterUnits",floodColor:"flood-color",floodOpacity:"flood-opacity",focusable:0,fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",glyphRef:"glyphRef",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",hanging:0,horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",ideographic:0,imageRendering:"image-rendering",in:0,in2:0,intercept:0,k:0,k1:0,k2:0,k3:0,k4:0,kernelMatrix:"kernelMatrix",kernelUnitLength:"kernelUnitLength",kerning:0,keyPoints:"keyPoints",keySplines:"keySplines",keyTimes:"keyTimes",lengthAdjust:"lengthAdjust",letterSpacing:"letter-spacing",lightingColor:"lighting-color",limitingConeAngle:"limitingConeAngle",local:0,markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",markerHeight:"markerHeight",markerUnits:"markerUnits",markerWidth:"markerWidth",mask:0,maskContentUnits:"maskContentUnits",maskUnits:"maskUnits",mathematical:0,mode:0,numOctaves:"numOctaves",offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pathLength:"pathLength",patternContentUnits:"patternContentUnits",patternTransform:"patternTransform",patternUnits:"patternUnits",pointerEvents:"pointer-events",points:0,pointsAtX:"pointsAtX",pointsAtY:"pointsAtY",pointsAtZ:"pointsAtZ",preserveAlpha:"preserveAlpha",preserveAspectRatio:"preserveAspectRatio",primitiveUnits:"primitiveUnits",r:0,radius:0,refX:"refX",refY:"refY",renderingIntent:"rendering-intent",repeatCount:"repeatCount",repeatDur:"repeatDur",requiredExtensions:"requiredExtensions",requiredFeatures:"requiredFeatures",restart:0,result:0,rotate:0,rx:0,ry:0,scale:0,seed:0,shapeRendering:"shape-rendering",slope:0,spacing:0,specularConstant:"specularConstant",specularExponent:"specularExponent",speed:0,spreadMethod:"spreadMethod",startOffset:"startOffset",stdDeviation:"stdDeviation",stemh:0,stemv:0,stitchTiles:"stitchTiles",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",string:0,stroke:0,strokeDasharray:"stroke-dasharray",strokeDashoffset:"stroke-dashoffset",strokeLinecap:"stroke-linecap",strokeLinejoin:"stroke-linejoin",strokeMiterlimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",surfaceScale:"surfaceScale",systemLanguage:"systemLanguage",tableValues:"tableValues",targetX:"targetX",targetY:"targetY",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",textLength:"textLength",to:0,transform:0,u1:0,u2:0,underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicode:0,unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",values:0,vectorEffect:"vector-effect",version:0,vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",viewBox:"viewBox",viewTarget:"viewTarget",visibility:0,widths:0,wordSpacing:"word-spacing",writingMode:"writing-mode",x:0,xHeight:"x-height",x1:0,x2:0,xChannelSelector:"xChannelSelector",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlns:0,xmlnsXlink:"xmlns:xlink",xmlLang:"xml:lang",xmlSpace:"xml:space",y:0,y1:0,y2:0,yChannelSelector:"yChannelSelector",z:0,zoomAndPan:"zoomAndPan"},o={Properties:{},DOMAttributeNamespaces:{xlinkActuate:r.xlink,xlinkArcrole:r.xlink,xlinkHref:r.xlink,xlinkRole:r.xlink,xlinkShow:r.xlink,xlinkTitle:r.xlink,xlinkType:r.xlink,xmlBase:r.xml,xmlLang:r.xml,xmlSpace:r.xml},DOMAttributeNames:{}};Object.keys(i).forEach(function(e){o.Properties[e]=0,i[e]&&(o.DOMAttributeNames[e]=i[e])}),e.exports=o},function(e,t,n){"use strict";function r(e){if("selectionStart"in e&&c.hasSelectionCapabilities(e))return{start:e.selectionStart,end:e.selectionEnd};if(window.getSelection){var t=window.getSelection();return{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function i(e,t){if(y||null==m||m!==l())return null;var n=r(m);if(!v||!p(v,n)){v=n;var i=u.getPooled(f.select,g,e,t);return i.type="select",i.target=m,o.accumulateTwoPhaseDispatches(i),i}return null}var o=n(18),a=n(5),s=n(4),c=n(76),u=n(10),l=n(77),h=n(61),p=n(40),d=a.canUseDOM&&"documentMode"in document&&document.documentMode<=11,f={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:["topBlur","topContextMenu","topFocus","topKeyDown","topKeyUp","topMouseDown","topMouseUp","topSelectionChange"]}},m=null,g=null,v=null,y=!1,b=!1,x={eventTypes:f,extractEvents:function(e,t,n,r){if(!b)return null;var o=t?s.getNodeFromInstance(t):window;switch(e){case"topFocus":(h(o)||"true"===o.contentEditable)&&(m=o,g=t,v=null);break;case"topBlur":m=null,g=null,v=null;break;case"topMouseDown":y=!0;break;case"topContextMenu":case"topMouseUp":return y=!1,i(n,r);case"topSelectionChange":if(d)break;case"topKeyDown":case"topKeyUp":return i(n,r)}return null},didPutListener:function(e,t,n){"onSelect"===t&&(b=!0)}};e.exports=x},function(e,t,n){"use strict";function r(e){return"."+e._rootNodeID}function i(e){return"button"===e||"input"===e||"select"===e||"textarea"===e}var o=n(2),a=n(75),s=n(18),c=n(4),u=n(167),l=n(168),h=n(10),p=n(169),d=n(170),f=n(25),m=n(172),g=n(173),v=n(174),y=n(20),b=n(175),x=n(6),_=n(45),w=(n(0),{}),E={};["abort","animationEnd","animationIteration","animationStart","blur","canPlay","canPlayThrough","click","contextMenu","copy","cut","doubleClick","drag","dragEnd","dragEnter","dragExit","dragLeave","dragOver","dragStart","drop","durationChange","emptied","encrypted","ended","error","focus","input","invalid","keyDown","keyPress","keyUp","load","loadedData","loadedMetadata","loadStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","paste","pause","play","playing","progress","rateChange","reset","scroll","seeked","seeking","stalled","submit","suspend","timeUpdate","touchCancel","touchEnd","touchMove","touchStart","transitionEnd","volumeChange","waiting","wheel"].forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t,r="top"+t,i={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[r]};w[e]=i,E[r]=i});var M={},T={eventTypes:w,extractEvents:function(e,t,n,r){var i=E[e];if(!i)return null;var a;switch(e){case"topAbort":case"topCanPlay":case"topCanPlayThrough":case"topDurationChange":case"topEmptied":case"topEncrypted":case"topEnded":case"topError":case"topInput":case"topInvalid":case"topLoad":case"topLoadedData":case"topLoadedMetadata":case"topLoadStart":case"topPause":case"topPlay":case"topPlaying":case"topProgress":case"topRateChange":case"topReset":case"topSeeked":case"topSeeking":case"topStalled":case"topSubmit":case"topSuspend":case"topTimeUpdate":case"topVolumeChange":case"topWaiting":a=h;break;case"topKeyPress":if(0===_(n))return null;case"topKeyDown":case"topKeyUp":a=d;break;case"topBlur":case"topFocus":a=p;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":a=f;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":a=m;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":a=g;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":a=u;break;case"topTransitionEnd":a=v;break;case"topScroll":a=y;break;case"topWheel":a=b;break;case"topCopy":case"topCut":case"topPaste":a=l}a||o("86",e);var c=a.getPooled(i,t,n,r);return s.accumulateTwoPhaseDispatches(c),c},didPutListener:function(e,t,n){if("onClick"===t&&!i(e._tag)){var o=r(e),s=c.getNodeFromInstance(e);M[o]||(M[o]=a.listen(s,"click",x))}},willDeleteListener:function(e,t){if("onClick"===t&&!i(e._tag)){var n=r(e);M[n].remove(),delete M[n]}}};e.exports=T},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(10),o={animationName:null,elapsedTime:null,pseudoElement:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(10),o={clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(20),o={relatedTarget:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(20),o=n(45),a=n(171),s=n(34),c={key:a,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:s,charCode:function(e){return"keypress"===e.type?o(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?o(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}};i.augmentClass(r,c),e.exports=r},function(e,t,n){"use strict";function r(e){if(e.key){var t=o[e.key]||e.key;if("Unidentified"!==t)return t}if("keypress"===e.type){var n=i(e);return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===e.type||"keyup"===e.type?a[e.keyCode]||"Unidentified":""}var i=n(45),o={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},a={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(25),o={dataTransfer:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(20),o=n(34),a={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:o};i.augmentClass(r,a),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(10),o={propertyName:null,elapsedTime:null,pseudoElement:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r){return i.call(this,e,t,n,r)}var i=n(25),o={deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null};i.augmentClass(r,o),e.exports=r},function(e,t,n){"use strict";function r(e,t){var n={_topLevelWrapper:e,_idCounter:1,_ownerDocument:t?t.nodeType===i?t:t.ownerDocument:null,_node:t,_tag:t?t.nodeName.toLowerCase():null,_namespaceURI:t?t.namespaceURI:null};return n}var i=(n(44),9);e.exports=r},function(e,t,n){"use strict";var r={useCreateElement:!0,useFiber:!1};e.exports=r},function(e,t,n){"use strict";var r=n(179),i=/\/?>/,o=/^<\!\-\-/,a={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(e){var t=r(e);return o.test(e)?e:e.replace(i," "+a.CHECKSUM_ATTR_NAME+'="'+t+'"$&')},canReuseMarkup:function(e,t){var n=t.getAttribute(a.CHECKSUM_ATTR_NAME);return n=n&&parseInt(n,10),r(e)===n}};e.exports=a},function(e,t,n){"use strict";function r(e){for(var t=1,n=0,r=0,o=e.length,a=-4&o;r<a;){for(var s=Math.min(r+4096,a);r<s;r+=4)n+=(t+=e.charCodeAt(r))+(t+=e.charCodeAt(r+1))+(t+=e.charCodeAt(r+2))+(t+=e.charCodeAt(r+3));t%=i,n%=i}for(;r<o;r++)n+=t+=e.charCodeAt(r);return t%=i,n%=i,t|n<<16}var i=65521;e.exports=r},function(e,t,n){"use strict";e.exports="15.6.1"},function(e,t,n){"use strict";function r(e){if(null==e)return null;if(1===e.nodeType)return e;var t=a.get(e);if(t)return t=s(t),t?o.getNodeFromInstance(t):null;"function"===typeof e.render?i("44"):i("45",Object.keys(e))}var i=n(2),o=(n(9),n(4)),a=n(21),s=n(79);n(0),n(1);e.exports=r},function(e,t,n){"use strict";var r=n(78);e.exports=r.renderSubtreeIntoContainer},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(22),s=n.n(a),c=n(80),u=n(189),l=n(81),h=n(191),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=n(199),f=function(e){function t(){var e,n,o,a;r(this,t);for(var s=arguments.length,c=Array(s),u=0;u<s;u++)c[u]=arguments[u];return n=o=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(c))),o.state={activeProduct:Object(h.a)()[0]},o.setActiveProduct=function(e){console.log("changing the product to",e),o.setState({activeProduct:e})},a=n,i(o,a)}return o(t,e),p(t,[{key:"componentDidMount",value:function(){l.a.monitorResize()}},{key:"render",value:function(){return s.a.createElement("div",{className:d.container},s.a.createElement(u.a,{setActiveProduct:this.setActiveProduct,products:Object(h.a)()}),s.a.createElement(c.a,{product:this.state.activeProduct}))}}]),t}(a.Component);t.a=f},function(e,t,n){function r(e,t){function n(){return 2*Math.PI/60/60*D.autoRotateSpeed}function r(){return Math.pow(.95,D.zoomSpeed)}function o(e){G.theta-=e}function a(e){G.phi-=e}function s(e){D.object instanceof i.PerspectiveCamera?V/=e:D.object instanceof i.OrthographicCamera?(D.object.zoom=Math.max(D.minZoom,Math.min(D.maxZoom,D.object.zoom*e)),D.object.updateProjectionMatrix(),W=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),D.enableZoom=!1)}function c(e){D.object instanceof i.PerspectiveCamera?V*=e:D.object instanceof i.OrthographicCamera?(D.object.zoom=Math.max(D.minZoom,Math.min(D.maxZoom,D.object.zoom/e)),D.object.updateProjectionMatrix(),W=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),D.enableZoom=!1)}function u(e){X.set(e.clientX,e.clientY)}function l(e){Q.set(e.clientX,e.clientY)}function h(e){Z.set(e.clientX,e.clientY)}function p(e){q.set(e.clientX,e.clientY),Y.subVectors(q,X);var t=D.domElement===document?D.domElement.body:D.domElement;o(2*Math.PI*Y.x/t.clientWidth*D.rotateSpeed),a(2*Math.PI*Y.y/t.clientHeight*D.rotateSpeed),X.copy(q),D.update()}function d(e){$.set(e.clientX,e.clientY),ee.subVectors($,Q),ee.y>0?s(r()):ee.y<0&&c(r()),Q.copy($),D.update()}function f(e){K.set(e.clientX,e.clientY),J.subVectors(K,Z),re(J.x,J.y),Z.copy(K),D.update()}function m(e){}function g(e){e.deltaY<0?c(r()):e.deltaY>0&&s(r()),D.update()}function v(e){switch(e.keyCode){case D.keys.UP:re(0,D.keyPanSpeed),D.update();break;case D.keys.BOTTOM:re(0,-D.keyPanSpeed),D.update();break;case D.keys.LEFT:re(D.keyPanSpeed,0),D.update();break;case D.keys.RIGHT:re(-D.keyPanSpeed,0),D.update()}}function y(e){X.set(e.touches[0].pageX,e.touches[0].pageY)}function b(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);Q.set(0,r)}function x(e){Z.set(e.touches[0].pageX,e.touches[0].pageY)}function _(e){q.set(e.touches[0].pageX,e.touches[0].pageY),Y.subVectors(q,X);var t=D.domElement===document?D.domElement.body:D.domElement;o(2*Math.PI*Y.x/t.clientWidth*D.rotateSpeed),a(2*Math.PI*Y.y/t.clientHeight*D.rotateSpeed),X.copy(q),D.update()}function w(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+n*n);$.set(0,i),ee.subVectors($,Q),ee.y>0?c(r()):ee.y<0&&s(r()),Q.copy($),D.update()}function E(e){K.set(e.touches[0].pageX,e.touches[0].pageY),J.subVectors(K,Z),re(J.x,J.y),Z.copy(K),D.update()}function M(e){}function T(e){if(!1!==D.enabled){switch(e.preventDefault(),e.button){case D.mouseButtons.ORBIT:if(!1===D.enableRotate)return;u(e),k=F.ROTATE;break;case D.mouseButtons.ZOOM:if(!1===D.enableZoom)return;l(e),k=F.DOLLY;break;case D.mouseButtons.PAN:if(!1===D.enablePan)return;h(e),k=F.PAN}k!==F.NONE&&(document.addEventListener("mousemove",S,!1),document.addEventListener("mouseup",A,!1),D.dispatchEvent(U))}}function S(e){if(!1!==D.enabled)switch(e.preventDefault(),k){case F.ROTATE:if(!1===D.enableRotate)return;p(e);break;case F.DOLLY:if(!1===D.enableZoom)return;d(e);break;case F.PAN:if(!1===D.enablePan)return;f(e)}}function A(e){!1!==D.enabled&&(m(e),document.removeEventListener("mousemove",S,!1),document.removeEventListener("mouseup",A,!1),D.dispatchEvent(B),k=F.NONE)}function C(e){!1===D.enabled||!1===D.enableZoom||k!==F.NONE&&k!==F.ROTATE||(e.preventDefault(),e.stopPropagation(),g(e),D.dispatchEvent(U),D.dispatchEvent(B))}function R(e){!1!==D.enabled&&!1!==D.enableKeys&&!1!==D.enablePan&&v(e)}function P(e){if(!1!==D.enabled){switch(e.touches.length){case 1:if(!1===D.enableRotate)return;y(e),k=F.TOUCH_ROTATE;break;case 2:if(!1===D.enableZoom)return;b(e),k=F.TOUCH_DOLLY;break;case 3:if(!1===D.enablePan)return;x(e),k=F.TOUCH_PAN;break;default:k=F.NONE}k!==F.NONE&&D.dispatchEvent(U)}}function L(e){if(!1!==D.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===D.enableRotate)return;if(k!==F.TOUCH_ROTATE)return;_(e);break;case 2:if(!1===D.enableZoom)return;if(k!==F.TOUCH_DOLLY)return;w(e);break;case 3:if(!1===D.enablePan)return;if(k!==F.TOUCH_PAN)return;E(e);break;default:k=F.NONE}}function N(e){!1!==D.enabled&&(M(e),D.dispatchEvent(B),k=F.NONE)}function I(e){!1!==D.enabled&&e.preventDefault()}this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new i.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:i.MOUSE.LEFT,ZOOM:i.MOUSE.MIDDLE,PAN:i.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return j.phi},this.getAzimuthalAngle=function(){return j.theta},this.saveState=function(){D.target0.copy(D.target),D.position0.copy(D.object.position),D.zoom0=D.object.zoom},this.reset=function(){D.target.copy(D.target0),D.object.position.copy(D.position0),D.object.zoom=D.zoom0,D.object.updateProjectionMatrix(),D.dispatchEvent(O),D.update(),k=F.NONE},this.update=function(){var t=new i.Vector3,r=(new i.Quaternion).setFromUnitVectors(e.up,new i.Vector3(0,1,0)),a=r.clone().inverse(),s=new i.Vector3,c=new i.Quaternion;return function(){var e=D.object.position;return t.copy(e).sub(D.target),t.applyQuaternion(r),j.setFromVector3(t),D.autoRotate&&k===F.NONE&&o(n()),j.theta+=G.theta,j.phi+=G.phi,j.theta=Math.max(D.minAzimuthAngle,Math.min(D.maxAzimuthAngle,j.theta)),j.phi=Math.max(D.minPolarAngle,Math.min(D.maxPolarAngle,j.phi)),j.makeSafe(),j.radius*=V,j.radius=Math.max(D.minDistance,Math.min(D.maxDistance,j.radius)),D.target.add(H),t.setFromSpherical(j),t.applyQuaternion(a),e.copy(D.target).add(t),D.object.lookAt(D.target),!0===D.enableDamping?(G.theta*=1-D.dampingFactor,G.phi*=1-D.dampingFactor):G.set(0,0,0),V=1,H.set(0,0,0),!!(W||s.distanceToSquared(D.object.position)>z||8*(1-c.dot(D.object.quaternion))>z)&&(D.dispatchEvent(O),s.copy(D.object.position),c.copy(D.object.quaternion),W=!1,!0)}}(),this.dispose=function(){D.domElement.removeEventListener("contextmenu",I,!1),D.domElement.removeEventListener("mousedown",T,!1),D.domElement.removeEventListener("wheel",C,!1),D.domElement.removeEventListener("touchstart",P,!1),D.domElement.removeEventListener("touchend",N,!1),D.domElement.removeEventListener("touchmove",L,!1),document.removeEventListener("mousemove",S,!1),document.removeEventListener("mouseup",A,!1),window.removeEventListener("keydown",R,!1)};var D=this,O={type:"change"},U={type:"start"},B={type:"end"},F={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},k=F.NONE,z=1e-6,j=new i.Spherical,G=new i.Spherical,V=1,H=new i.Vector3,W=!1,X=new i.Vector2,q=new i.Vector2,Y=new i.Vector2,Z=new i.Vector2,K=new i.Vector2,J=new i.Vector2,Q=new i.Vector2,$=new i.Vector2,ee=new i.Vector2,te=function(){var e=new i.Vector3;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),H.add(e)}}(),ne=function(){var e=new i.Vector3;return function(t,n){e.setFromMatrixColumn(n,1),e.multiplyScalar(t),H.add(e)}}(),re=function(){var e=new i.Vector3;return function(t,n){var r=D.domElement===document?D.domElement.body:D.domElement;if(D.object instanceof i.PerspectiveCamera){var o=D.object.position;e.copy(o).sub(D.target);var a=e.length();a*=Math.tan(D.object.fov/2*Math.PI/180),te(2*t*a/r.clientHeight,D.object.matrix),ne(2*n*a/r.clientHeight,D.object.matrix)}else D.object instanceof i.OrthographicCamera?(te(t*(D.object.right-D.object.left)/D.object.zoom/r.clientWidth,D.object.matrix),ne(n*(D.object.top-D.object.bottom)/D.object.zoom/r.clientHeight,D.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),D.enablePan=!1)}}();D.domElement.addEventListener("contextmenu",I,!1),D.domElement.addEventListener("mousedown",T,!1),D.domElement.addEventListener("wheel",C,!1),D.domElement.addEventListener("touchstart",P,!1),D.domElement.addEventListener("touchend",N,!1),D.domElement.addEventListener("touchmove",L,!1),window.addEventListener("keydown",R,!1),this.update()}var i=n(46);r.prototype=Object.create(i.EventDispatcher.prototype),r.prototype.constructor=r,Object.defineProperties(r.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),e.exports=r},function(e,t,n){var r=n(46),i=function(){function e(e,n,r,i){var o=0;if(document.implementation&&document.implementation.createDocument){var a=new XMLHttpRequest;a.onreadystatechange=function(){4===a.readyState?0!==a.status&&200!==a.status||(a.response?(ke=n,t(a.response,void 0,e)):i?i():console.error("ColladaLoader: Empty or non-existing file ("+e+")")):3===a.readyState&&r&&(0===o&&(o=a.getResponseHeader("Content-Length")),r({total:o,loaded:a.responseText.length}))},a.open("GET",e,!0),a.send(null)}else alert("Don't know how to parse XML!")}function t(e,t,n){if(Be=(new DOMParser).parseFromString(e,"text/xml"),t=t||ke,void 0!==n){var u=n.split("/");u.pop(),De=(u.length<1?".":u.join("/"))+"/"}i(),_e(),je=o("library_images image",A,"image"),We=o("library_materials material",q,"material"),Xe=o("library_effects effect",Q,"effect"),He=o("library_geometries geometry",B,"geometry"),qe=o("library_cameras camera",ie,"camera"),Ye=o("library_lights light",ae,"light"),Ve=o("library_controllers controller",C,"controller"),Ge=o("library_animations animation",ee,"animation"),Ne=o("library_visual_scenes visual_scene",L,"visual_scene"),Ie=o("library_kinematics_models kinematics_model",ce,"kinematics_model"),Oe=[],Ue=[],Ce=a(),Fe=new r.Group;for(var l=0;l<Ce.nodes.length;l++)Fe.add(y(Ce.nodes[l]));Fe.scale.multiplyScalar(Je),c(),Re=s(),v();var h={scene:Fe,morphs:Oe,skins:Ue,animations:Pe,kinematics:Le,dae:{images:je,materials:We,cameras:qe,lights:Ye,effects:Xe,geometries:He,controllers:Ve,animations:Ge,visualScenes:Ne,visualScene:Ce,scene:Ce,kinematicsModels:Ie,kinematicsModel:Re}};return t&&t(h),h}function n(e){Ze=e}function i(){var e=Be.querySelectorAll("asset"),t=e[0];if(t&&t.childNodes)for(var n=0;n<t.childNodes.length;n++){var r=t.childNodes[n];switch(r.nodeName){case"unit":var i=r.getAttribute("meter");i&&(Je=parseFloat(i));break;case"up_axis":Qe=r.textContent.charAt(0)}}}function o(e,t,n){for(var r=Be.querySelectorAll(e),i={},o=0,a=r.length,s=0;s<a;s++){var c=r[s],u=(new t).parse(c);u.id&&0!==u.id.length||(u.id=n+o++),i[u.id]=u}return i}function a(){var e=Be.querySelectorAll("scene instance_visual_scene")[0];if(e){var t=e.getAttribute("url").replace(/^#/,"");return Ne[t.length>0?t:"visual_scene0"]}return null}function s(){var e=Be.querySelectorAll("instance_kinematics_model")[0];if(e){var t=e.getAttribute("url").replace(/^#/,"");return Ie[t.length>0?t:"kinematics_model0"]}return null}function c(){Pe=[],u(Fe)}function u(e){var t=Ce.getChildById(e.colladaId,!0),n=null;if(t&&t.keys){n={fps:60,hierarchy:[{node:t,keys:t.keys,sids:t.sids}],node:e,name:"animation_"+e.name,length:0},Pe.push(n);for(var r=0,i=t.keys.length;r<i;r++)n.length=Math.max(n.length,t.keys[r].time)}else n={hierarchy:[{keys:[],sids:[]}]};for(var r=0,i=e.children.length;r<i;r++)for(var o=u(e.children[r]),a=0,s=o.hierarchy.length;a<s;a++)n.hierarchy.push({keys:[],sids:[]});return n}function l(){var e,t=1e6,n=-t,r=0;for(var i in Ge){var o=Ge[i];e=e||o.id;for(var a=0;a<o.sampler.length;a++){var s=o.sampler[a];s.create(),t=Math.min(t,s.startTime),n=Math.max(n,s.endTime),r=Math.max(r,s.input.length)}}return{start:t,end:n,frames:r,ID:e}}function h(e,t){var n=t instanceof D?Ve[t.url]:t;if(!n||!n.morph)return void console.log("could not find morph controller!");for(var r=n.morph,i=0;i<r.targets.length;i++){var o=r.targets[i],a=He[o];if(a.mesh&&a.mesh.primitives&&a.mesh.primitives.length){var s=a.mesh.primitives[0].geometry;s.vertices.length===e.vertices.length&&e.morphTargets.push({name:"target_1",vertices:s.vertices})}}e.morphTargets.push({name:"target_Z",vertices:e.vertices})}function p(e,t,n,i){if(e.world=e.world||new r.Matrix4,e.localworld=e.localworld||new r.Matrix4,e.world.copy(e.matrix),e.localworld.copy(e.matrix),e.channels&&e.channels.length){var o=e.channels[0],a=o.sampler.output[n];a instanceof r.Matrix4&&(e.world.copy(a),e.localworld.copy(a),0===n&&e.matrix.copy(a))}i&&e.world.multiplyMatrices(i,e.world),t.push(e);for(var s=0;s<e.nodes.length;s++)p(e.nodes[s],t,n,e.world)}function d(e,t){for(var n=0;n<e.length;n++){var i=e[n],o=-1;if("JOINT"==i.type){for(var a=0;a<t.joints.length;a++)if(i.sid===t.joints[a]){o=a;break}if(o>=0){var s=t.invBindMatrices[o];i.invBindMatrix=s,i.skinningMatrix=new r.Matrix4,i.skinningMatrix.multiplyMatrices(i.world,s),i.animatrix=new r.Matrix4,i.animatrix.copy(i.localworld),i.weights=[];for(var a=0;a<t.weights.length;a++)for(var c=0;c<t.weights[a].length;c++){var u=t.weights[a][c];u.joint===o&&i.weights.push(u)}}else console.warn("ColladaLoader: Could not find joint '"+i.sid+"'."),i.skinningMatrix=new r.Matrix4,i.weights=[]}}}function f(e){var t=[],n=function(e,t,i){var o={};o.name=t.sid,o.parent=e,o.matrix=t.matrix;var a=[new r.Vector3,new r.Quaternion,new r.Vector3];o.matrix.decompose(a[0],a[1],a[2]),o.pos=[a[0].x,a[0].y,a[0].z],o.scl=[a[2].x,a[2].y,a[2].z],o.rotq=[a[1].x,a[1].y,a[1].z,a[1].w],i.push(o);for(var s in t.nodes)n(t.sid,t.nodes[s],i)};return n(-1,e,t),t}function m(e,t,n){var i=[];p(t,i,-1),d(i,n.skin);for(var o=new r.Vector3,a=[],s=0;s<e.vertices.length;s++)a.push(new r.Vector3);for(s=0;s<i.length;s++)if("JOINT"==i[s].type)for(var c=0;c<i[s].weights.length;c++){var u=i[s].weights[c],l=u.index,h=u.weight,f=e.vertices[l],m=a[l];o.x=f.x,o.y=f.y,o.z=f.z,o.applyMatrix4(i[s].skinningMatrix),m.x+=o.x*h,m.y+=o.y*h,m.z+=o.z*h}for(var s=0;s<e.vertices.length;s++)e.vertices[s]=a[s]}function g(e,t,n){var i=Ve[t.url];if(n=void 0!==n?n:40,!i||!i.skin)return void console.log("ColladaLoader: Could not find skin controller.");if(!t.skeleton||!t.skeleton.length)return void console.log("ColladaLoader: Could not find the skeleton for the skin. ");for(var o=l(),a=Ce.getChildById(t.skeleton[0],!0)||Ce.getChildBySid(t.skeleton[0],!0),s=f(a),c=i.skin.joints,u=[],h=0;h<c.length;h++)for(var g=0;g<s.length;g++)s[g].name===c[h]&&(u[h]=s[g]);for(var h=0;h<u.length;h++)for(var g=0;g<u.length;g++)u[h].parent===u[g].name&&(u[h].parent=g);var h,g,v;new r.Vector3;for(h=0;h<e.vertices.length;h++)e.vertices[h].applyMatrix4(i.skin.bindShapeMatrix);for(var y=[],b=[],x=i.skin.weights,h=0;h<x.length;h++){var _=new r.Vector4(x[h][0]?x[h][0].joint:0,x[h][1]?x[h][1].joint:0,x[h][2]?x[h][2].joint:0,x[h][3]?x[h][3].joint:0),v=new r.Vector4(x[h][0]?x[h][0].weight:0,x[h][1]?x[h][1].weight:0,x[h][2]?x[h][2].weight:0,x[h][3]?x[h][3].weight:0);y.push(_),b.push(v)}e.skinIndices=y,e.skinWeights=b,e.bones=u;for(var w={name:o.ID,fps:30,length:o.frames/30,hierarchy:[]},g=0;g<u.length;g++)w.hierarchy.push({parent:u[g].parent,name:u[g].name,keys:[]});for(console.log("ColladaLoader:",o.ID+" has "+u.length+" bones."),m(e,a,i),n=0;n<o.frames;n++){var E=[];p(a,E,n),d(E,i.skin);for(var h=0;h<E.length;h++)for(var g=0;g<w.hierarchy.length;g++)if(w.hierarchy[g].name===E[h].sid){var M={};M.time=n/30,M.matrix=E[h].animatrix,0===n&&(E[h].matrix=M.matrix);var T=[new r.Vector3,new r.Quaternion,new r.Vector3];M.matrix.decompose(T[0],T[1],T[2]),M.pos=[T[0].x,T[0].y,T[0].z],M.scl=[T[2].x,T[2].y,T[2].z],M.rot=T[1],w.hierarchy[g].keys.push(M)}e.animation=w}}function v(){if(Re&&0===Re.joints.length)return void(Le=void 0);var e={};Le={joints:Re&&Re.joints,getJointValue:function(t){var n=e[t];if(n)return n.position;console.log("getJointValue: joint "+t+" doesn't exist")},setJointValue:function(t,i){var o=e[t];if(o){var a=o.joint;if(i>a.limits.max||i<a.limits.min)console.log("setJointValue: joint "+t+" value "+i+" outside of limits (min: "+a.limits.min+", max: "+a.limits.max+")");else if(a.static)console.log("setJointValue: joint "+t+" is static");else{var s=o.node,c=a.axis,u=o.transforms,l=new r.Matrix4;for(n=0;n<u.length;n++){var h=u[n];if(h.sid&&-1!==h.sid.indexOf("joint"+t))switch(a.type){case"revolute":l.multiply(p.makeRotationAxis(c,r.Math.degToRad(i)));break;case"prismatic":l.multiply(p.makeTranslation(c.x*i,c.y*i,c.z*i));break;default:console.warn("setJointValue: unknown joint type: "+a.type)}else{var p=new r.Matrix4;switch(h.type){case"matrix":l.multiply(h.obj);break;case"translate":l.multiply(p.makeTranslation(h.obj.x,h.obj.y,h.obj.z));break;case"rotate":l.multiply(p.makeRotationAxis(h.obj,h.angle))}}}var d=l.elements,f=Array.prototype.slice.call(d),m=[f[0],f[4],f[8],f[12],f[1],f[5],f[9],f[13],f[2],f[6],f[10],f[14],f[3],f[7],f[11],f[15]];s.matrix.set.apply(s.matrix,m),s.matrix.decompose(s.position,s.quaternion,s.scale)}}else console.log("setJointValue: joint "+t+" doesn't exist")}};var t=Be.querySelector("scene instance_kinematics_scene");if(t)for(var n=0;n<t.childNodes.length;n++){var i=t.childNodes[n];if(1==i.nodeType)switch(i.nodeName){case"bind_joint_axis":var o=i.getAttribute("target").split("/").pop(),a=i.querySelector("axis param").textContent,s=parseInt(a.split("joint").pop().split(".")[0]),c=Be.querySelector('[sid="'+o+'"]');if(c){var u=c.parentElement;!function(t,n){var r=n.getAttribute("id"),i=Ce.getChildById(r,!0),o=Re.joints[t];Fe.traverse(function(n){n.colladaId==r&&(e[t]={node:n,transforms:i.transforms,joint:o,position:o.zeroPosition})})}(s,u)}}}}function y(e,t){var n,i,o,a,s=new r.Object3D;for(o=0;o<e.controllers.length;o++){var c=Ve[e.controllers[o].url];switch(c.type){case"skin":if(He[c.skin.source]){var u=new U;u.url=c.skin.source,u.instance_material=e.controllers[o].instance_material,e.geometries.push(u),!0,n=e.controllers[o]}else if(Ve[c.skin.source]){var l=Ve[c.skin.source];if(i=l,l.morph&&He[l.morph.source]){var u=new U;u.url=l.morph.source,u.instance_material=e.controllers[o].instance_material,e.geometries.push(u)}}break;case"morph":if(He[c.morph.source]){var u=new U;u.url=c.morph.source,u.instance_material=e.controllers[o].instance_material,e.geometries.push(u),i=e.controllers[o]}console.log("ColladaLoader: Morph-controller partially supported.")}}var p={};for(o=0;o<e.geometries.length;o++){var d,f=e.geometries[o],m=f.instance_material,v=He[f.url],b={},x=[],_=0;if(v){if(!v.mesh||!v.mesh.primitives)continue;if(0===s.name.length&&(s.name=v.id),m)for(a=0;a<m.length;a++){var w=m[a],E=We[w.target],M=E.instance_effect.url,T=Xe[M].shader,S=T.material;if(v.doubleSided){if(!(w.symbol in p)){var A=S.clone();A.side=r.DoubleSide,p[w.symbol]=A}S=p[w.symbol]}S.opacity=S.opacity?S.opacity:1,b[w.symbol]=_,x.push(S),d=S,d.name=null===E.name||""===E.name?E.id:E.name,_++}var C,R=d||new r.MeshLambertMaterial({color:14540253,side:v.doubleSided?r.DoubleSide:r.FrontSide}),P=v.mesh.geometry3js;_>1&&(R=new r.MultiMaterial(x)),void 0!==n?(g(P,n),P.morphTargets.length>0?(R.morphTargets=!0,R.skinning=!1):(R.morphTargets=!1,R.skinning=!0),C=new r.SkinnedMesh(P,R,!1),C.name="skin_"+Ue.length,Ue.push(C)):void 0!==i?(h(P,i),R.morphTargets=!0,C=new r.Mesh(P,R),C.name="morph_"+Oe.length,Oe.push(C)):C=!0===P.isLineStrip?new r.Line(P):new r.Mesh(P,R),s.add(C)}}for(o=0;o<e.cameras.length;o++){var L=e.cameras[o],N=qe[L.url],I=new r.PerspectiveCamera(N.yfov,parseFloat(N.aspect_ratio),parseFloat(N.znear),parseFloat(N.zfar));s.add(I)}for(o=0;o<e.lights.length;o++){var D=null,O=e.lights[o],B=Ye[O.url];if(B&&B.technique){var F=B.color.getHex(),k=B.intensity,z=B.distance,j=B.falloff_angle;switch(B.technique){case"directional":D=new r.DirectionalLight(F,k,z),D.position.set(0,0,1);break;case"point":D=new r.PointLight(F,k,z);break;case"spot":D=new r.SpotLight(F,k,z,j),D.position.set(0,0,1);break;case"ambient":D=new r.AmbientLight(F)}}D&&s.add(D)}if(s.name=e.name||e.id||"",s.colladaId=e.id||"",s.layer=e.layer||"",s.matrix=e.matrix,s.matrix.decompose(s.position,s.quaternion,s.scale),Ke.centerGeometry&&s.geometry){var G=s.geometry.center();G.multiply(s.scale),G.applyQuaternion(s.quaternion),s.position.sub(G)}for(o=0;o<e.nodes.length;o++)s.add(y(e.nodes[o],e));return s}function b(e){for(var t=Be.querySelectorAll("library_nodes node"),n=0;n<t.length;n++){var r=t[n].attributes.getNamedItem("id");if(r&&r.value===e)return t[n]}}function x(e){var t=[],n=1e6,r=-1e6;for(var i in Ge)for(var o=Ge[i],a=0;a<o.channel.length;a++){var s=o.channel[a],c=o.sampler[a],i=s.target.split("/")[0];i==e.id&&(c.create(),s.sampler=c,n=Math.min(n,c.startTime),r=Math.max(r,c.endTime),t.push(s))}return t.length&&(e.startTime=n,e.endTime=r),t}function _(e){if(e.channels&&e.channels.length){for(var t=[],n=[],r=0,i=e.channels.length;r<i;r++){var o,a=e.channels[r],s=a.fullSid,c=a.sampler,u=c.input,l=e.getTransformBySid(a.sid);if(a.arrIndices){o=[];for(var h=0,p=a.arrIndices.length;h<p;h++)o[h]=Se(a.arrIndices[h])}else o=Ae(a.member);if(l){-1===n.indexOf(s)&&n.push(s);for(var h=0,p=u.length;h<p;h++){var d=u[h],f=c.getData(l.type,h,o),m=w(t,d);if(!m){m=new re(d);var g=E(t,d);t.splice(-1===g?t.length:g,0,m)}m.addTarget(s,l,o,f)}}else console.log('Could not find transform "'+a.sid+'" in node '+e.id)}for(var r=0;r<n.length;r++)for(var v=n[r],h=0;h<t.length;h++){var m=t[h];m.hasTarget(v)||M(t,m,h,v)}e.keys=t,e.sids=n}}function w(e,t){for(var n=null,r=0,i=e.length;r<i&&null===n;r++){var o=e[r];if(o.time===t)n=o;else if(o.time>t)break}return n}function E(e,t){for(var n=-1,r=0,i=e.length;r<i&&-1===n;r++){e[r].time>=t&&(n=r)}return n}function M(e,t,n,r){var i=S(e,r,n?n-1:0),o=T(e,r,n+1);if(i&&o){var a,s=(t.time-i.time)/(o.time-i.time),c=i.getTarget(r),u=o.getTarget(r).data,l=c.data;if("matrix"===c.type)a=l;else if(l.length){a=[];for(var h=0;h<l.length;++h)a[h]=l[h]+(u[h]-l[h])*s}else a=l+(u-l)*s;t.addTarget(r,c.transform,c.member,a)}}function T(e,t,n){for(;n<e.length;n++){var r=e[n];if(r.hasTarget(t))return r}return null}function S(e,t,n){for(n=n>=0?n:n+e.length;n>=0;n--){var r=e[n];if(r.hasTarget(t))return r}return null}function A(){this.id="",this.init_from=""}function C(){this.id="",this.name="",this.type="",this.skin=null,this.morph=null}function R(){this.method=null,this.source=null,this.targets=null,this.weights=null}function P(){this.source="",this.bindShapeMatrix=null,this.invBindMatrices=[],this.joints=[],this.weights=[]}function L(){this.id="",this.name="",this.nodes=[],this.scene=new r.Group}function N(){this.id="",this.name="",this.sid="",this.nodes=[],this.controllers=[],this.transforms=[],this.geometries=[],this.channels=[],this.matrix=new r.Matrix4}function I(){this.sid="",this.type="",this.data=[],this.obj=null}function D(){this.url="",this.skeleton=[],this.instance_material=[]}function O(){this.symbol="",this.target=""}function U(){this.url="",this.instance_material=[]}function B(){this.id="",this.mesh=null}function F(e){this.geometry=e.id,this.primitives=[],this.vertices=null,this.geometry3js=null}function k(){this.material="",this.count=0,this.inputs=[],this.vcount=null,this.p=[],this.geometry=new r.Geometry}function z(){k.call(this),this.vcount=[]}function j(){k.call(this),this.vcount=1}function G(){k.call(this),this.vcount=3}function V(){this.source="",this.count=0,this.stride=0,this.params=[]}function H(){this.input={}}function W(){this.semantic="",this.offset=0,this.source="",this.set=0}function X(e){this.id=e,this.type=null}function q(){this.id="",this.name="",this.instance_effect=null}function Y(){this.color=new r.Color,this.color.setRGB(Math.random(),Math.random(),Math.random()),this.color.a=1,this.texture=null,this.texcoord=null,this.texOpts=null}function Z(e,t){this.type=e,this.effect=t,this.material=null}function K(e){this.effect=e,this.init_from=null,this.format=null}function J(e){this.effect=e,this.source=null,this.wrap_s=null,this.wrap_t=null,this.minfilter=null,this.magfilter=null,this.mipfilter=null}function Q(){this.id="",this.name="",this.shader=null,this.surface={},this.sampler={}}function $(){this.url=""}function ee(){this.id="",this.name="",this.source={},this.sampler=[],this.channel=[]}function te(e){this.animation=e,this.source="",this.target="",this.fullSid=null,this.sid=null,this.dotSyntax=null,this.arrSyntax=null,this.arrIndices=null,this.member=null}function ne(e){this.id="",this.animation=e,this.inputs=[],this.input=null,this.output=null,this.strideOut=null,this.interpolation=null,this.startTime=null,this.endTime=null,this.duration=0}function re(e){this.targets=[],this.time=e}function ie(){this.id="",this.name="",this.technique=""}function oe(){this.url=""}function ae(){this.id="",this.name="",this.technique=""}function se(){this.url=""}function ce(){this.id="",this.name="",this.joints=[],this.links=[]}function ue(){this.sid="",this.name="",this.axis=new r.Vector3,this.limits={min:0,max:0},this.type="",this.static=!1,this.zeroPosition=0,this.middlePosition=0}function le(){this.sid="",this.name="",this.transforms=[],this.attachments=[]}function he(){this.joint="",this.transforms=[],this.links=[]}function pe(e){var t=e.getAttribute("id");return void 0!=ze[t]?ze[t]:(ze[t]=new X(t).parse(e),ze[t])}function de(e){for(var t=ge(e),n=[],r=0,i=t.length;r<i;r++)n.push("true"===t[r]||"1"===t[r]);return n}function fe(e){for(var t=ge(e),n=[],r=0,i=t.length;r<i;r++)n.push(parseFloat(t[r]));return n}function me(e){for(var t=ge(e),n=[],r=0,i=t.length;r<i;r++)n.push(parseInt(t[r],10));return n}function ge(e){return e.length>0?ve(e).split(/\s+/):[]}function ve(e){return e.replace(/^\s+/,"").replace(/\s+$/,"")}function ye(e,t,n){return e.hasAttribute(t)?parseInt(e.getAttribute(t),10):n}function be(e,t){(new r.ImageLoader).load(t,function(t){e.image=t,e.needsUpdate=!0})}function xe(e,t){e.doubleSided=!1;var n=t.querySelectorAll("extra double_sided")[0];n&&n&&1===parseInt(n.textContent,10)&&(e.doubleSided=!0)}function _e(){if(!0!==Ke.convertUpAxis||Qe===Ke.upAxis)$e=null;else switch(Qe){case"X":$e="Y"===Ke.upAxis?"XtoY":"XtoZ";break;case"Y":$e="X"===Ke.upAxis?"YtoX":"YtoZ";break;case"Z":$e="X"===Ke.upAxis?"ZtoX":"ZtoY"}}function we(e,t){if(!0===Ke.convertUpAxis&&Qe!==Ke.upAxis)switch($e){case"XtoY":var n=e[0];e[0]=t*e[1],e[1]=n;break;case"XtoZ":var n=e[2];e[2]=e[1],e[1]=e[0],e[0]=n;break;case"YtoX":var n=e[0];e[0]=e[1],e[1]=t*n;break;case"YtoZ":var n=e[1];e[1]=t*e[2],e[2]=n;break;case"ZtoX":var n=e[0];e[0]=e[1],e[1]=e[2],e[2]=n;break;case"ZtoY":var n=e[1];e[1]=e[2],e[2]=t*n}}function Ee(e,t){if(!0!==Ke.convertUpAxis||Qe===Ke.upAxis)return t;switch(e){case"X":t="XtoY"===$e?-1*t:t;break;case"Y":t="YtoZ"===$e||"YtoX"===$e?-1*t:t;break;case"Z":t="ZtoY"===$e?-1*t:t}return t}function Me(e,t){var n=[e[t],e[t+1],e[t+2]];return we(n,-1),new r.Vector3(n[0],n[1],n[2])}function Te(e){if(Ke.convertUpAxis){var t=[e[0],e[4],e[8]];we(t,-1),e[0]=t[0],e[4]=t[1],e[8]=t[2],t=[e[1],e[5],e[9]],we(t,-1),e[1]=t[0],e[5]=t[1],e[9]=t[2],t=[e[2],e[6],e[10]],we(t,-1),e[2]=t[0],e[6]=t[1],e[10]=t[2],t=[e[0],e[1],e[2]],we(t,-1),e[0]=t[0],e[1]=t[1],e[2]=t[2],t=[e[4],e[5],e[6]],we(t,-1),e[4]=t[0],e[5]=t[1],e[6]=t[2],t=[e[8],e[9],e[10]],we(t,-1),e[8]=t[0],e[9]=t[1],e[10]=t[2],t=[e[3],e[7],e[11]],we(t,-1),e[3]=t[0],e[7]=t[1],e[11]=t[2]}return(new r.Matrix4).set(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}function Se(e){if(e>-1&&e<3){var t=["X","Y","Z"],n={X:0,Y:1,Z:2};e=Ae(t[e]),e=n[e]}return e}function Ae(e){if(Ke.convertUpAxis)switch(e){case"X":switch($e){case"XtoY":case"XtoZ":case"YtoX":e="Y";break;case"ZtoX":e="Z"}break;case"Y":switch($e){case"XtoY":case"YtoX":case"ZtoX":e="X";break;case"XtoZ":case"YtoZ":case"ZtoY":e="Z"}break;case"Z":switch($e){case"XtoZ":e="X";break;case"YtoZ":case"ZtoX":case"ZtoY":e="Y"}}return e}var Ce,Re,Pe,Le,Ne,Ie,De,Oe,Ue,Be=null,Fe=null,ke=null,ze={},je={},Ge={},Ve={},He={},We={},Xe={},qe={},Ye={},Ze=r.SmoothShading,Ke={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},Je=1,Qe="Y",$e=null;return A.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];"init_from"===n.nodeName&&(this.init_from=n.textContent)}return this},C.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.type="none";for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"skin":this.skin=(new P).parse(n),this.type=n.nodeName;break;case"morph":this.morph=(new R).parse(n),this.type=n.nodeName}}return this},R.prototype.parse=function(e){var t,n={},r=[];for(this.method=e.getAttribute("method"),this.source=e.getAttribute("source").replace(/^#/,""),t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"source":var o=(new X).parse(i);n[o.id]=o;break;case"targets":r=this.parseInputs(i);break;default:console.log(i.nodeName)}}for(t=0;t<r.length;t++){var a=r[t],o=n[a.source];switch(a.semantic){case"MORPH_TARGET":this.targets=o.read();break;case"MORPH_WEIGHT":this.weights=o.read()}}return this},R.prototype.parseInputs=function(e){for(var t=[],n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType)switch(r.nodeName){case"input":t.push((new W).parse(r))}}return t},P.prototype.parse=function(e){var t,n,r={};this.source=e.getAttribute("source").replace(/^#/,""),this.invBindMatrices=[],this.joints=[],this.weights=[];for(var i=0;i<e.childNodes.length;i++){var o=e.childNodes[i];if(1==o.nodeType)switch(o.nodeName){case"bind_shape_matrix":var a=fe(o.textContent);this.bindShapeMatrix=Te(a);break;case"source":var s=(new X).parse(o);r[s.id]=s;break;case"joints":t=o;break;case"vertex_weights":n=o;break;default:console.log(o.nodeName)}}return this.parseJoints(t,r),this.parseWeights(n,r),this},P.prototype.parseJoints=function(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType)switch(r.nodeName){case"input":var i=(new W).parse(r),o=t[i.source];"JOINT"===i.semantic?this.joints=o.read():"INV_BIND_MATRIX"===i.semantic&&(this.invBindMatrices=o.read())}}},P.prototype.parseWeights=function(e,t){for(var n,r,i=[],o=0;o<e.childNodes.length;o++){var a=e.childNodes[o];if(1==a.nodeType)switch(a.nodeName){case"input":i.push((new W).parse(a));break;case"v":n=me(a.textContent);break;case"vcount":r=me(a.textContent)}}for(var s=0,o=0;o<r.length;o++){for(var c=r[o],u=[],l=0;l<c;l++){for(var h={},p=0;p<i.length;p++){var d=i[p],f=n[s+d.offset];switch(d.semantic){case"JOINT":h.joint=f;break;case"WEIGHT":h.weight=t[d.source].data[f]}}u.push(h),s+=i.length}for(var l=0;l<u.length;l++)u[l].index=o;this.weights.push(u)}},L.prototype.getChildById=function(e,t){for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildById(e,t);if(r)return r}return null},L.prototype.getChildBySid=function(e,t){for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildBySid(e,t);if(r)return r}return null},L.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.nodes=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"node":this.nodes.push((new N).parse(n))}}return this},N.prototype.getChannelForTransform=function(e){for(var t=0;t<this.channels.length;t++){var n,r=this.channels[t],i=r.target.split("/"),o=(i.shift(),i.shift()),a=o.indexOf(".")>=0,s=o.indexOf("(")>=0;if(a)i=o.split("."),o=i.shift(),i.shift();else if(s){n=o.split("("),o=n.shift();for(var c=0;c<n.length;c++)n[c]=parseInt(n[c].replace(/\)/,""))}if(o===e)return r.info={sid:o,dotSyntax:a,arrSyntax:s,arrIndices:n},r}return null},N.prototype.getChildById=function(e,t){if(this.id===e)return this;if(t)for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildById(e,t);if(r)return r}return null},N.prototype.getChildBySid=function(e,t){if(this.sid===e)return this;if(t)for(var n=0;n<this.nodes.length;n++){var r=this.nodes[n].getChildBySid(e,t);if(r)return r}return null},N.prototype.getTransformBySid=function(e){for(var t=0;t<this.transforms.length;t++)if(this.transforms[t].sid===e)return this.transforms[t];return null},N.prototype.parse=function(e){var t;this.id=e.getAttribute("id"),this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.type=e.getAttribute("type"),this.layer=e.getAttribute("layer"),this.type="JOINT"===this.type?this.type:"NODE",this.nodes=[],this.transforms=[],this.geometries=[],this.cameras=[],this.lights=[],this.controllers=[],this.matrix=new r.Matrix4;for(var n=0;n<e.childNodes.length;n++){var i=e.childNodes[n];if(1==i.nodeType)switch(i.nodeName){case"node":this.nodes.push((new N).parse(i));break;case"instance_camera":this.cameras.push((new oe).parse(i));break;case"instance_controller":this.controllers.push((new D).parse(i));break;case"instance_geometry":this.geometries.push((new U).parse(i));break;case"instance_light":this.lights.push((new se).parse(i));break;case"instance_node":t=i.getAttribute("url").replace(/^#/,"");var o=b(t);o&&this.nodes.push((new N).parse(o));break;case"rotate":case"translate":case"scale":case"matrix":case"lookat":case"skew":this.transforms.push((new I).parse(i));break;case"extra":break;default:console.log(i.nodeName)}}return this.channels=x(this),_(this),this.updateMatrix(),this},N.prototype.updateMatrix=function(){this.matrix.identity();for(var e=0;e<this.transforms.length;e++)this.transforms[e].apply(this.matrix)},I.prototype.parse=function(e){return this.sid=e.getAttribute("sid"),this.type=e.nodeName,this.data=fe(e.textContent),this.convert(),this},I.prototype.convert=function(){switch(this.type){case"matrix":this.obj=Te(this.data);break;case"rotate":this.angle=r.Math.degToRad(this.data[3]);case"translate":we(this.data,-1),this.obj=new r.Vector3(this.data[0],this.data[1],this.data[2]);break;case"scale":we(this.data,1),this.obj=new r.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}},I.prototype.apply=function(){var e=new r.Matrix4;return function(t){switch(this.type){case"matrix":t.multiply(this.obj);break;case"translate":t.multiply(e.makeTranslation(this.obj.x,this.obj.y,this.obj.z));break;case"rotate":t.multiply(e.makeRotationAxis(this.obj,this.angle));break;case"scale":t.scale(this.obj)}}}(),I.prototype.update=function(e,t){var n=["X","Y","Z","ANGLE"];switch(this.type){case"matrix":if(t)if(1===t.length)switch(t[0]){case 0:this.obj.n11=e[0],this.obj.n21=e[1],this.obj.n31=e[2],this.obj.n41=e[3];break;case 1:this.obj.n12=e[0],this.obj.n22=e[1],this.obj.n32=e[2],this.obj.n42=e[3];break;case 2:this.obj.n13=e[0],this.obj.n23=e[1],this.obj.n33=e[2],this.obj.n43=e[3];break;case 3:this.obj.n14=e[0],this.obj.n24=e[1],this.obj.n34=e[2],this.obj.n44=e[3]}else if(2===t.length){var i="n"+(t[0]+1)+(t[1]+1);this.obj[i]=e}else console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(e);break;case"translate":case"scale":switch("[object Array]"===Object.prototype.toString.call(t)&&(t=n[t[0]]),t){case"X":this.obj.x=e;break;case"Y":this.obj.y=e;break;case"Z":this.obj.z=e;break;default:this.obj.x=e[0],this.obj.y=e[1],this.obj.z=e[2]}break;case"rotate":switch("[object Array]"===Object.prototype.toString.call(t)&&(t=n[t[0]]),t){case"X":this.obj.x=e;break;case"Y":this.obj.y=e;break;case"Z":this.obj.z=e;break;case"ANGLE":this.angle=r.Math.degToRad(e);break;default:this.obj.x=e[0],this.obj.y=e[1],this.obj.z=e[2],this.angle=r.Math.degToRad(e[3])}}},D.prototype.parse=function(e){this.url=e.getAttribute("url").replace(/^#/,""),this.skeleton=[],this.instance_material=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1===n.nodeType)switch(n.nodeName){case"skeleton":this.skeleton.push(n.textContent.replace(/^#/,""));break;case"bind_material":for(var r=n.querySelectorAll("instance_material"),i=0;i<r.length;i++){var o=r[i];this.instance_material.push((new O).parse(o))}}}return this},O.prototype.parse=function(e){return this.symbol=e.getAttribute("symbol"),this.target=e.getAttribute("target").replace(/^#/,""),this},U.prototype.parse=function(e){this.url=e.getAttribute("url").replace(/^#/,""),this.instance_material=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType&&"bind_material"===n.nodeName){for(var r=n.querySelectorAll("instance_material"),i=0;i<r.length;i++){var o=r[i];this.instance_material.push((new O).parse(o))}break}}return this},B.prototype.parse=function(e){this.id=e.getAttribute("id"),xe(this,e);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"mesh":this.mesh=new F(this).parse(n)}}return this},F.prototype.parse=function(e){this.primitives=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"source":pe(n);break;case"vertices":this.vertices=(new H).parse(n);break;case"linestrips":this.primitives.push((new j).parse(n));break;case"triangles":this.primitives.push((new G).parse(n));break;case"polygons":this.primitives.push((new k).parse(n));break;case"polylist":this.primitives.push((new z).parse(n))}}if(this.geometry3js=new r.Geometry,null===this.vertices)return this;for(var i=ze[this.vertices.input.POSITION.source].data,t=0;t<i.length;t+=3)this.geometry3js.vertices.push(Me(i,t).clone());for(var t=0;t<this.primitives.length;t++){var o=this.primitives[t];o.setVertices(this.vertices),this.handlePrimitive(o,this.geometry3js)}return this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals),this},F.prototype.handlePrimitive=function(e,t){if(e instanceof j)return void(t.isLineStrip=!0);var n,i,o,a,s,c,u,l=e.p,h=e.inputs,p=0,d=3,f=0,m=[];for(n=0;n<h.length;n++){o=h[n];var g=o.offset+1;switch(f=f<g?g:f,o.semantic){case"TEXCOORD":m.push(o.set)}}for(var v=0;v<l.length;++v)for(var y=l[v],b=0;b<y.length;){var x=[],_=[],w=null,E=[];for(d=e.vcount?e.vcount.length?e.vcount[p++]:e.vcount:y.length/f,n=0;n<d;n++)for(i=0;i<h.length;i++)switch(o=h[i],c=ze[o.source],a=y[b+n*f+o.offset],u=c.accessor.params.length,s=a*u,o.semantic){case"VERTEX":x.push(a);break;case"NORMAL":_.push(Me(c.data,s));break;case"TEXCOORD":w=w||{},void 0===w[o.set]&&(w[o.set]=[]),w[o.set].push(new r.Vector2(c.data[s],c.data[s+1]));break;case"COLOR":E.push((new r.Color).setRGB(c.data[s],c.data[s+1],c.data[s+2]))}if(0===_.length)if(o=this.vertices.input.NORMAL){c=ze[o.source],u=c.accessor.params.length;for(var M=0,T=x.length;M<T;M++)_.push(Me(c.data,x[M]*u))}else t.calcNormals=!0;if(!w&&(w={},o=this.vertices.input.TEXCOORD)){m.push(o.set),c=ze[o.source],u=c.accessor.params.length;for(var M=0,T=x.length;M<T;M++)s=x[M]*u,void 0===w[o.set]&&(w[o.set]=[]),w[o.set].push(new r.Vector2(c.data[s],1-c.data[s+1]))}if(0===E.length&&(o=this.vertices.input.COLOR)){c=ze[o.source],u=c.accessor.params.length;for(var M=0,T=x.length;M<T;M++)s=x[M]*u,E.push((new r.Color).setRGB(c.data[s],c.data[s+1],c.data[s+2]))}var S,A,C=null,R=[];if(3===d)R.push(new r.Face3(x[0],x[1],x[2],_,E.length?E:new r.Color));else if(4===d)R.push(new r.Face3(x[0],x[1],x[3],_.length?[_[0].clone(),_[1].clone(),_[3].clone()]:[],E.length?[E[0],E[1],E[3]]:new r.Color)),R.push(new r.Face3(x[1],x[2],x[3],_.length?[_[1].clone(),_[2].clone(),_[3].clone()]:[],E.length?[E[1],E[2],E[3]]:new r.Color));else if(d>4&&Ke.subdivideFaces){var P=E.length?E:new r.Color;for(i=1;i<d-1;)R.push(new r.Face3(x[0],x[i],x[i+1],_.length?[_[0].clone(),_[i++].clone(),_[i].clone()]:[],P))}if(R.length)for(var M=0,T=R.length;M<T;M++)for(C=R[M],C.daeMaterial=e.material,t.faces.push(C),i=0;i<m.length;i++)S=w[m[i]],A=d>4?[S[0],S[M+1],S[M+2]]:4===d?0===M?[S[0],S[1],S[3]]:[S[1].clone(),S[2],S[3].clone()]:[S[0],S[1],S[2]],void 0===t.faceVertexUvs[i]&&(t.faceVertexUvs[i]=[]),t.faceVertexUvs[i].push(A);else console.log("dropped face with vcount "+d+" for geometry with id: "+t.id);b+=f*d}},k.prototype.setVertices=function(e){for(var t=0;t<this.inputs.length;t++)this.inputs[t].source===e.id&&(this.inputs[t].source=e.input.POSITION.source)},k.prototype.parse=function(e){this.material=e.getAttribute("material"),this.count=ye(e,"count",0);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"input":this.inputs.push((new W).parse(e.childNodes[t]));break;case"vcount":this.vcount=me(n.textContent);break;case"p":this.p.push(me(n.textContent));break;case"ph":console.warn("polygon holes not yet supported!")}}return this},z.prototype=Object.create(k.prototype),z.prototype.constructor=z,j.prototype=Object.create(k.prototype),j.prototype.constructor=j,G.prototype=Object.create(k.prototype),G.prototype.constructor=G,V.prototype.parse=function(e){this.params=[],this.source=e.getAttribute("source"),this.count=ye(e,"count",0),this.stride=ye(e,"stride",0);for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if("param"===n.nodeName){var r={};r.name=n.getAttribute("name"),r.type=n.getAttribute("type"),this.params.push(r)}}return this},H.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++)if("input"===e.childNodes[t].nodeName){var n=(new W).parse(e.childNodes[t]);this.input[n.semantic]=n}return this},W.prototype.parse=function(e){return this.semantic=e.getAttribute("semantic"),this.source=e.getAttribute("source").replace(/^#/,""),this.set=ye(e,"set",-1),this.offset=ye(e,"offset",0),"TEXCOORD"===this.semantic&&this.set<0&&(this.set=0),this},X.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"bool_array":this.data=de(n.textContent),this.type=n.nodeName;break;case"float_array":this.data=fe(n.textContent),this.type=n.nodeName;break;case"int_array":this.data=me(n.textContent),this.type=n.nodeName;break;case"IDREF_array":case"Name_array":this.data=ge(n.textContent),this.type=n.nodeName;break;case"technique_common":for(var r=0;r<n.childNodes.length;r++)if("accessor"===n.childNodes[r].nodeName){this.accessor=(new V).parse(n.childNodes[r]);break}}}return this},X.prototype.read=function(){var e=[],t=this.accessor.params[0];switch(t.type){case"IDREF":case"Name":case"name":case"float":return this.data;case"float4x4":for(var n=0;n<this.data.length;n+=16){var r=this.data.slice(n,n+16),i=Te(r);e.push(i)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+t.type+".")}return e},q.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++)if("instance_effect"===e.childNodes[t].nodeName){this.instance_effect=(new $).parse(e.childNodes[t]);break}return this},Y.prototype.isColor=function(){return null===this.texture},Y.prototype.isTexture=function(){return null!=this.texture},Y.prototype.parse=function(e){"transparent"===e.nodeName&&(this.opaque=e.getAttribute("opaque"));for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"color":var i=fe(n.textContent);this.color=new r.Color,this.color.setRGB(i[0],i[1],i[2]),this.color.a=i[3];break;case"texture":this.texture=n.getAttribute("texture"),this.texcoord=n.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(n)}}return this},Y.prototype.parseTexture=function(e){if(!e.childNodes)return this;e.childNodes[1]&&"extra"===e.childNodes[1].nodeName&&(e=e.childNodes[1],e.childNodes[1]&&"technique"===e.childNodes[1].nodeName&&(e=e.childNodes[1]));for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"offsetU":case"offsetV":case"repeatU":case"repeatV":this.texOpts[n.nodeName]=parseFloat(n.textContent);break;case"wrapU":case"wrapV":"TRUE"===n.textContent.toUpperCase()?this.texOpts[n.nodeName]=1:this.texOpts[n.nodeName]=parseInt(n.textContent);break;default:this.texOpts[n.nodeName]=n.textContent}}return this},Z.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"emission":case"diffuse":case"specular":case"transparent":this[n.nodeName]=(new Y).parse(n);break;case"bump":var r=n.getAttribute("bumptype");r?"heightfield"===r.toLowerCase()?this.bump=(new Y).parse(n):"normalmap"===r.toLowerCase()?this.normal=(new Y).parse(n):(console.error("Shader.prototype.parse: Invalid value for attribute 'bumptype' ("+r+") - valid bumptypes are 'HEIGHTFIELD' and 'NORMALMAP' - defaulting to 'HEIGHTFIELD'"),this.bump=(new Y).parse(n)):(console.warn("Shader.prototype.parse: Attribute 'bumptype' missing from bump node - defaulting to 'HEIGHTFIELD'"),this.bump=(new Y).parse(n));break;case"shininess":case"reflectivity":case"index_of_refraction":case"transparency":var i=n.querySelectorAll("float");i.length>0&&(this[n.nodeName]=parseFloat(i[0].textContent))}}return this.create(),this},Z.prototype.create=function(){var e={},t=!1;if(void 0!==this.transparency&&void 0!==this.transparent){var n=(this.transparent,(this.transparent.color.r+this.transparent.color.g+this.transparent.color.b)/3*this.transparency);n>0&&(t=!0,e.transparent=!0,e.opacity=1-n)}var i={diffuse:"map",ambient:"lightMap",specular:"specularMap",emission:"emissionMap",bump:"bumpMap",normal:"normalMap"};for(var o in this)switch(o){case"ambient":case"emission":case"diffuse":case"specular":case"bump":case"normal":var a=this[o];if(a instanceof Y)if(a.isTexture()){var s=a.texture,c=this.effect.sampler[s];if(void 0!==c&&void 0!==c.source){var u=this.effect.surface[c.source];if(void 0!==u){var l=je[u.init_from];if(l){var h,p=De+l.init_from,d=r.Loader.Handlers.get(p);null!==d?h=d.load(p):(h=new r.Texture,be(h,p)),h.wrapS=a.texOpts.wrapU?r.RepeatWrapping:r.ClampToEdgeWrapping,h.wrapT=a.texOpts.wrapV?r.RepeatWrapping:r.ClampToEdgeWrapping,h.offset.x=a.texOpts.offsetU,h.offset.y=a.texOpts.offsetV,h.repeat.x=a.texOpts.repeatU,h.repeat.y=a.texOpts.repeatV,e[i[o]]=h,"emission"===o&&(e.emissive=16777215)}}}}else"diffuse"!==o&&t||("emission"===o?e.emissive=a.color.getHex():e[o]=a.color.getHex());break;case"shininess":e[o]=this[o];break;case"reflectivity":e[o]=this[o],e[o]>0&&(e.envMap=Ke.defaultEnvMap),e.combine=r.MixOperation;break;case"index_of_refraction":e.refractionRatio=this[o],1!==this[o]&&(e.envMap=Ke.defaultEnvMap)}switch(e.shading=Ze,e.side=this.effect.doubleSided?r.DoubleSide:r.FrontSide,void 0!==e.diffuse&&(e.color=e.diffuse,delete e.diffuse),this.type){case"constant":void 0!=e.emissive&&(e.color=e.emissive),this.material=new r.MeshBasicMaterial(e);break;case"phong":case"blinn":this.material=new r.MeshPhongMaterial(e);break;case"lambert":default:this.material=new r.MeshLambertMaterial(e)}return this.material},K.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"init_from":this.init_from=n.textContent;break;case"format":this.format=n.textContent;break;default:console.log("unhandled Surface prop: "+n.nodeName)}}return this},J.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"source":this.source=n.textContent;break;case"minfilter":this.minfilter=n.textContent;break;case"magfilter":this.magfilter=n.textContent;break;case"mipfilter":this.mipfilter=n.textContent;break;case"wrap_s":this.wrap_s=n.textContent;break;case"wrap_t":this.wrap_t=n.textContent;break;default:console.log("unhandled Sampler2D prop: "+n.nodeName)}}return this},Q.prototype.create=function(){if(null===this.shader)return null},Q.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),xe(this,e),this.shader=null;for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(n))}}return this},Q.prototype.parseNewparam=function(e){for(var t=e.getAttribute("sid"),n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType)switch(r.nodeName){case"surface":this.surface[t]=new K(this).parse(r);break;case"sampler2D":this.sampler[t]=new J(this).parse(r);break;case"extra":break;default:console.log(r.nodeName)}}},Q.prototype.parseProfileCOMMON=function(e){for(var t,n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1==r.nodeType)switch(r.nodeName){case"profile_COMMON":this.parseProfileCOMMON(r);break;case"technique":t=r;break;case"newparam":this.parseNewparam(r);break;case"image":var i=(new A).parse(r);je[i.id]=i;break;case"extra":break;default:console.log(r.nodeName)}}return t},Q.prototype.parseTechnique=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"constant":case"lambert":case"blinn":case"phong":this.shader=new Z(n.nodeName,this).parse(n);break;case"extra":this.parseExtra(n)}}},Q.prototype.parseExtra=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"technique":this.parseExtraTechnique(n)}}},Q.prototype.parseExtraTechnique=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"bump":this.shader.parse(e)}}},$.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},ee.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.source={};for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"animation":var r=(new ee).parse(n);for(var i in r.source)this.source[i]=r.source[i];for(var o=0;o<r.channel.length;o++)this.channel.push(r.channel[o]),this.sampler.push(r.sampler[o]);break;case"source":var i=(new X).parse(n);this.source[i.id]=i;break;case"sampler":this.sampler.push(new ne(this).parse(n));break;case"channel":this.channel.push(new te(this).parse(n))}}return this},te.prototype.parse=function(e){this.source=e.getAttribute("source").replace(/^#/,""),this.target=e.getAttribute("target");var t=this.target.split("/"),n=(t.shift(),t.shift()),r=n.indexOf(".")>=0,i=n.indexOf("(")>=0;if(r)t=n.split("."),this.sid=t.shift(),this.member=t.shift();else if(i){var o=n.split("(");this.sid=o.shift();for(var a=0;a<o.length;a++)o[a]=parseInt(o[a].replace(/\)/,""));this.arrIndices=o}else this.sid=n;return this.fullSid=n,this.dotSyntax=r,this.arrSyntax=i,this},ne.prototype.parse=function(e){this.id=e.getAttribute("id"),this.inputs=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"input":this.inputs.push((new W).parse(n))}}return this},ne.prototype.create=function(){for(var e=0;e<this.inputs.length;e++){var t=this.inputs[e],n=this.animation.source[t.source];switch(t.semantic){case"INPUT":this.input=n.read();break;case"OUTPUT":this.output=n.read(),this.strideOut=n.accessor.stride;break;case"INTERPOLATION":this.interpolation=n.read();break;case"IN_TANGENT":case"OUT_TANGENT":break;default:console.log(t.semantic)}}if(this.startTime=0,this.endTime=0,this.duration=0,this.input.length){this.startTime=1e8,this.endTime=-1e8;for(var e=0;e<this.input.length;e++)this.startTime=Math.min(this.startTime,this.input[e]),this.endTime=Math.max(this.endTime,this.input[e]);this.duration=this.endTime-this.startTime}},ne.prototype.getData=function(e,t,n){var r;if("matrix"===e&&16===this.strideOut)r=this.output[t];else if(this.strideOut>1){r=[],t*=this.strideOut;for(var i=0;i<this.strideOut;++i)r[i]=this.output[t+i];if(3===this.strideOut)switch(e){case"rotate":case"translate":we(r,-1);break;case"scale":we(r,1)}else 4===this.strideOut&&"matrix"===e&&we(r,-1)}else r=this.output[t],n&&"translate"===e&&(r=Ee(n,r));return r},re.prototype.addTarget=function(e,t,n,r){this.targets.push({sid:e,member:n,transform:t,data:r})},re.prototype.apply=function(e){for(var t=0;t<this.targets.length;++t){var n=this.targets[t];e&&n.sid!==e||n.transform.update(n.data,n.member)}},re.prototype.getTarget=function(e){for(var t=0;t<this.targets.length;++t)if(this.targets[t].sid===e)return this.targets[t];return null},re.prototype.hasTarget=function(e){for(var t=0;t<this.targets.length;++t)if(this.targets[t].sid===e)return!0;return!1},re.prototype.interpolate=function(e,t){for(var n=0,r=this.targets.length;n<r;n++){var i,o=this.targets[n],a=e.getTarget(o.sid);if("matrix"!==o.transform.type&&a){var s=(t-this.time)/(e.time-this.time),c=a.data,u=o.data;if(s<0&&(s=0),s>1&&(s=1),u.length){i=[];for(var l=0;l<u.length;++l)i[l]=u[l]+(c[l]-u[l])*s}else i=u+(c-u)*s}else i=o.data;o.transform.update(i,o.member)}},ie.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"optics":this.parseOptics(n)}}return this},ie.prototype.parseOptics=function(e){for(var t=0;t<e.childNodes.length;t++)if("technique_common"===e.childNodes[t].nodeName)for(var n=e.childNodes[t],r=0;r<n.childNodes.length;r++)if(this.technique=n.childNodes[r].nodeName,"perspective"===this.technique)for(var i=n.childNodes[r],o=0;o<i.childNodes.length;o++){var a=i.childNodes[o];switch(a.nodeName){case"yfov":this.yfov=a.textContent;break;case"xfov":this.xfov=a.textContent;break;case"znear":this.znear=a.textContent;break;case"zfar":this.zfar=a.textContent;break;case"aspect_ratio":this.aspect_ratio=a.textContent}}else if("orthographic"===this.technique)for(var s=n.childNodes[r],o=0;o<s.childNodes.length;o++){var a=s.childNodes[o];switch(a.nodeName){case"xmag":this.xmag=a.textContent;break;case"ymag":this.ymag=a.textContent;break;case"znear":this.znear=a.textContent;break;case"zfar":this.zfar=a.textContent;break;case"aspect_ratio":this.aspect_ratio=a.textContent}}return this},oe.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},ae.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"technique_common":this.parseCommon(n);break;case"technique":this.parseTechnique(n)}}return this},ae.prototype.parseCommon=function(e){for(var t=0;t<e.childNodes.length;t++)switch(e.childNodes[t].nodeName){case"directional":case"point":case"spot":case"ambient":this.technique=e.childNodes[t].nodeName;for(var n=e.childNodes[t],i=0;i<n.childNodes.length;i++){var o=n.childNodes[i];switch(o.nodeName){case"color":var a=fe(o.textContent);this.color=new r.Color(0),this.color.setRGB(a[0],a[1],a[2]),this.color.a=a[3];break;case"falloff_angle":this.falloff_angle=parseFloat(o.textContent);break;case"quadratic_attenuation":var s=parseFloat(o.textContent);this.distance=s?Math.sqrt(1/s):0}}}return this},ae.prototype.parseTechnique=function(e){this.profile=e.getAttribute("profile");for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case"intensity":this.intensity=parseFloat(n.textContent)}}return this},se.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},ce.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.joints=[],this.links=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"technique_common":this.parseCommon(n)}}return this},ce.prototype.parseCommon=function(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(e.childNodes[t].nodeName){case"joint":this.joints.push((new ue).parse(n));break;case"link":this.links.push((new le).parse(n))}}return this},ue.prototype.parse=function(e){this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.axis=new r.Vector3,this.limits={min:0,max:0},this.type="",this.static=!1,this.zeroPosition=0,this.middlePosition=0;var t=e.querySelector("axis"),n=fe(t.textContent);this.axis=Me(n,0);var i=e.querySelector("limits min")?parseFloat(e.querySelector("limits min").textContent):-360,o=e.querySelector("limits max")?parseFloat(e.querySelector("limits max").textContent):360;this.limits={min:i,max:o};for(var a=["prismatic","revolute"],s=0;s<a.length;s++){var c=a[s];e.querySelector(c)&&(this.type=c)}return this.limits.min>=this.limits.max&&(this.static=!0),this.middlePosition=(this.limits.min+this.limits.max)/2,this},le.prototype.parse=function(e){this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.transforms=[],this.attachments=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"attachment_full":this.attachments.push((new he).parse(n));break;case"rotate":case"translate":case"matrix":this.transforms.push((new I).parse(n))}}return this},he.prototype.parse=function(e){this.joint=e.getAttribute("joint").split("/").pop(),this.links=[];for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];if(1==n.nodeType)switch(n.nodeName){case"link":this.links.push((new le).parse(n));break;case"rotate":case"translate":case"matrix":this.transforms.push((new I).parse(n))}}return this},{load:e,parse:t,setPreferredShading:n,applySkin:g,geometries:He,options:Ke}};e.exports=i},function(e,t,n){"use strict";e.exports=function(e){e.OBJLoader=function(t){this.manager=void 0!==t?t:e.DefaultLoadingManager,this.materials=null,this.regexp={vertex_pattern:/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,normal_pattern:/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,uv_pattern:/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,face_vertex:/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,face_vertex_uv:/^f\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+))?/,face_vertex_uv_normal:/^f\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+)\/(-?\d+))?/,face_vertex_normal:/^f\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)(?:\s+(-?\d+)\/\/(-?\d+))?/,object_pattern:/^[og]\s*(.+)?/,smoothing_pattern:/^s\s+(\d+|on|off)/,material_library_pattern:/^mtllib /,material_use_pattern:/^usemtl /}},e.OBJLoader.prototype={constructor:e.OBJLoader,load:function(t,n,r,i){var o=this,a=new e.FileLoader(o.manager);a.setPath(this.path),a.load(t,function(e){n(o.parse(e))},r,i)},setPath:function(e){this.path=e},setMaterials:function(e){this.materials=e},_createParserState:function(){var e={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var n=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(e,t){var n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);var r={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"===typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var n=this.materials.length-1;n>=0;n--)this.materials[n].groupCount<=0&&this.materials.splice(n,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},n&&n.name&&"function"===typeof n.clone){var r=n.clone(0);r.inherited=!0,this.object.materials.push(r)}this.objects.push(this.object)},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){var n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){var n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){var r=this.vertices,i=this.object.geometry.vertices;i.push(r[e+0]),i.push(r[e+1]),i.push(r[e+2]),i.push(r[t+0]),i.push(r[t+1]),i.push(r[t+2]),i.push(r[n+0]),i.push(r[n+1]),i.push(r[n+2])},addVertexLine:function(e){var t=this.vertices,n=this.object.geometry.vertices;n.push(t[e+0]),n.push(t[e+1]),n.push(t[e+2])},addNormal:function(e,t,n){var r=this.normals,i=this.object.geometry.normals;i.push(r[e+0]),i.push(r[e+1]),i.push(r[e+2]),i.push(r[t+0]),i.push(r[t+1]),i.push(r[t+2]),i.push(r[n+0]),i.push(r[n+1]),i.push(r[n+2])},addUV:function(e,t,n){var r=this.uvs,i=this.object.geometry.uvs;i.push(r[e+0]),i.push(r[e+1]),i.push(r[t+0]),i.push(r[t+1]),i.push(r[n+0]),i.push(r[n+1])},addUVLine:function(e){var t=this.uvs,n=this.object.geometry.uvs;n.push(t[e+0]),n.push(t[e+1])},addFace:function(e,t,n,r,i,o,a,s,c,u,l,h){var p,d=this.vertices.length,f=this.parseVertexIndex(e,d),m=this.parseVertexIndex(t,d),g=this.parseVertexIndex(n,d);if(void 0===r?this.addVertex(f,m,g):(p=this.parseVertexIndex(r,d),this.addVertex(f,m,p),this.addVertex(m,g,p)),void 0!==i){var v=this.uvs.length;f=this.parseUVIndex(i,v),m=this.parseUVIndex(o,v),g=this.parseUVIndex(a,v),void 0===r?this.addUV(f,m,g):(p=this.parseUVIndex(s,v),this.addUV(f,m,p),this.addUV(m,g,p))}if(void 0!==c){var y=this.normals.length;f=this.parseNormalIndex(c,y),m=c===u?f:this.parseNormalIndex(u,y),g=c===l?f:this.parseNormalIndex(l,y),void 0===r?this.addNormal(f,m,g):(p=this.parseNormalIndex(h,y),this.addNormal(f,m,p),this.addNormal(m,g,p))}},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var n=this.vertices.length,r=this.uvs.length,i=0,o=e.length;i<o;i++)this.addVertexLine(this.parseVertexIndex(e[i],n));for(var a=0,o=t.length;a<o;a++)this.addUVLine(this.parseUVIndex(t[a],r))}};return e.startObject("",!1),e},parse:function(t){console.time("OBJLoader");var n=this._createParserState();-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));for(var r=t.split("\n"),i="",o="",a="",s=[],c="function"===typeof"".trimLeft,u=0,l=r.length;u<l;u++)if(i=r[u],i=c?i.trimLeft():i.trim(),0!==i.length&&"#"!==(o=i.charAt(0)))if("v"===o)if(" "===(a=i.charAt(1))&&null!==(s=this.regexp.vertex_pattern.exec(i)))n.vertices.push(parseFloat(s[1]),parseFloat(s[2]),parseFloat(s[3]));else if("n"===a&&null!==(s=this.regexp.normal_pattern.exec(i)))n.normals.push(parseFloat(s[1]),parseFloat(s[2]),parseFloat(s[3]));else{if("t"!==a||null===(s=this.regexp.uv_pattern.exec(i)))throw new Error("Unexpected vertex/normal/uv line: '"+i+"'");n.uvs.push(parseFloat(s[1]),parseFloat(s[2]))}else if("f"===o)if(null!==(s=this.regexp.face_vertex_uv_normal.exec(i)))n.addFace(s[1],s[4],s[7],s[10],s[2],s[5],s[8],s[11],s[3],s[6],s[9],s[12]);else if(null!==(s=this.regexp.face_vertex_uv.exec(i)))n.addFace(s[1],s[3],s[5],s[7],s[2],s[4],s[6],s[8]);else if(null!==(s=this.regexp.face_vertex_normal.exec(i)))n.addFace(s[1],s[3],s[5],s[7],void 0,void 0,void 0,void 0,s[2],s[4],s[6],s[8]);else{if(null===(s=this.regexp.face_vertex.exec(i)))throw new Error("Unexpected face line: '"+i+"'");n.addFace(s[1],s[2],s[3],s[4])}else if("l"===o){var h=i.substring(1).trim().split(" "),p=[],d=[];if(-1===i.indexOf("/"))p=h;else for(var f=0,m=h.length;f<m;f++){var g=h[f].split("/");""!==g[0]&&p.push(g[0]),""!==g[1]&&d.push(g[1])}n.addLineGeometry(p,d)}else if(null!==(s=this.regexp.object_pattern.exec(i))){var v=(" "+s[0].substr(1).trim()).substr(1);n.startObject(v)}else if(this.regexp.material_use_pattern.test(i))n.object.startMaterial(i.substring(7).trim(),n.materialLibraries);else if(this.regexp.material_library_pattern.test(i))n.materialLibraries.push(i.substring(7).trim());else{if(null===(s=this.regexp.smoothing_pattern.exec(i))){if("\0"===i)continue;throw new Error("Unexpected line: '"+i+"'")}var y=s[1].trim().toLowerCase();n.object.smooth="1"===y||"on"===y;var b=n.object.currentMaterial();b&&(b.smooth=n.object.smooth)}n.finalize();var x=new e.Group;x.materialLibraries=[].concat(n.materialLibraries);for(var u=0,l=n.objects.length;u<l;u++){var _=n.objects[u],w=_.geometry,E=_.materials,M="Line"===w.type;if(0!==w.vertices.length){var T=new e.BufferGeometry;T.addAttribute("position",new e.BufferAttribute(new Float32Array(w.vertices),3)),w.normals.length>0?T.addAttribute("normal",new e.BufferAttribute(new Float32Array(w.normals),3)):T.computeVertexNormals(),w.uvs.length>0&&T.addAttribute("uv",new e.BufferAttribute(new Float32Array(w.uvs),2));for(var S=[],A=0,C=E.length;A<C;A++){var R=E[A],b=void 0;if(null!==this.materials&&(b=this.materials.create(R.name),M&&b&&!(b instanceof e.LineBasicMaterial))){var P=new e.LineBasicMaterial;P.copy(b),b=P}b||(b=M?new e.LineBasicMaterial:new e.MeshPhongMaterial,b.name=R.name),b.shading=R.smooth?e.SmoothShading:e.FlatShading,S.push(b)}var L;if(S.length>1){for(var A=0,C=E.length;A<C;A++){var R=E[A];T.addGroup(R.groupStart,R.groupCount,A)}var N=new e.MultiMaterial(S);L=M?new e.LineSegments(T,N):new e.Mesh(T,N)}else L=M?new e.LineSegments(T,S[0]):new e.Mesh(T,S[0]);L.name=_.name,x.add(L)}}return console.timeEnd("OBJLoader"),x}}}},function(e,t,n){"use strict";var r=n(6),i=n(0),o=n(53);e.exports=function(){function e(e,t,n,r,a,s){s!==o&&i(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t){e.exports={container:"src-components-Product-__styles-module___container",description:"src-components-Product-__styles-module___description",cartLink:"src-components-Product-__styles-module___cartLink",threeHolder:"src-components-Product-__styles-module___threeHolder"}},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(22),s=n.n(a),c=n(83),u=n.n(c),l=n(80),h=n(82),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=n(190),f=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"render",value:function(){var e=this.props,t=e.products,n=e.logoUrl,r=e.setActiveProduct;return s.a.createElement("section",{className:d.container},s.a.createElement("img",{className:d.logo,alt:"logo for brand",src:n}),s.a.createElement("div",{className:d.navItems},t.map(function(e){return s.a.createElement("article",{onClick:function(){return r(e)},className:d.navItem,key:e.id},s.a.createElement(l.a,{product:e}))})))}}]),t}(s.a.Component);f.propTypes={logoUrl:u.a.string,products:u.a.arrayOf(h.a).isRequired,setActiveProduct:u.a.func},f.defaultProps={logoUrl:"http://www.stickpng.com/assets/images/580b57fcd9996e24bc43c39a.png",setActiveProduct:Function.prototype},t.a=f},function(e,t){e.exports={container:"src-components-Navigation-__styles-module___container",navItem:"src-components-Navigation-__styles-module___navItem",logo:"src-components-Navigation-__styles-module___logo"}},function(e,t,n){"use strict";var r=n(192),i=n.n(r),o=n(193),a=n.n(o),s=n(194),c=n.n(s),u=n(195),l=n.n(u),h=n(196),p=n.n(h),d=n(197),f=n.n(d),m=n(198),g=n.n(m);t.a=function(){return f.a.geometries[0].materials[0].mapDiffuse=g.a,f.a.images[0].url=g.a,f.a.images[0].name=g.a,[{image:i.a,id:"01",model:l.a,scale:{x:.5,y:.5,z:.5},description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu purus eget massa dapibus gravida. Proin eu quam dui."},{image:a.a,id:"02",model:p.a,scale:{x:.5,y:.5,z:.5},description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu purus eget massa dapibus gravida. Proin eu quam dui."},{image:c.a,id:"03",model:f.a,scale:{x:.1,y:.1,z:.1},description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu purus eget massa dapibus gravida. Proin eu quam dui."}]}},function(e,t,n){e.exports=n.p+"static/media/beaucastle.162601ee.jpg"},function(e,t,n){e.exports=n.p+"static/media/church.ace93313.jpg"},function(e,t,n){e.exports=n.p+"static/media/greenforest.2cd3120e.jpg"},function(e,t,n){e.exports=n.p+"static/media/missile.c58735a0.dae"},function(e,t){e.exports={object:{uuid:"4FA74A39-7B7F-456A-900F-A694BFD2857C",children:[{name:"Box",uuid:"DDA9AE26-14F9-3E6A-9BDD-AF02F6D2F286",matrix:[-2.11519,1.13949,0,0,0,0,.1914,0,.070809,.13144,0,0,-.873,.2776,.0046,1],visible:!0,type:"Mesh",material:"4385125B-DD1E-3025-880F-3311517CC8D5",castShadow:!0,receiveShadow:!0,geometry:"15641190-4052-3871-BF5E-F046F6B1B496"},{name:"Box1",uuid:"13AB8362-B9AF-310A-8509-00DC96972EBC",matrix:[2.23191,1.04774,0,0,0,0,.2001,0,.063402,-.135059,0,0,.8821,.272,.0046,1],visible:!0,type:"Mesh",material:"4385125B-DD1E-3025-880F-3311517CC8D5",castShadow:!0,receiveShadow:!0,geometry:"0813763B-3A95-3717-A405-7EEF112B324A"},{name:"Box10",uuid:"C80DC305-4B7A-395C-897F-E4767BA2D8A6",matrix:[-231e-6,418e-6,-.5236,0,-.22158,.401289,418e-6,0,3.99135,2.20391,0,0,-1.8845,-.6041,4.9307,1],visible:!0,type:"Mesh",material:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",castShadow:!0,receiveShadow:!0,geometry:"5B23DCE7-72A6-31B5-B561-B5098FF6433E"},{name:"Box11",uuid:"303885B5-D681-34A0-BE3A-FF503094081C",matrix:[247e-6,409e-6,-.5236,0,.237305,.392195,418e-6,0,3.9009,-2.36032,0,0,2.0009,-.6814,4.9307,1],visible:!0,type:"Mesh",material:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",castShadow:!0,receiveShadow:!0,geometry:"CD7D62CA-6C08-3384-8598-2BE3FE25E16A"},{name:"Box12",uuid:"73DFC2DD-8605-33DF-943F-25833DE0AA66",matrix:[-232e-6,418e-6,-.5236,0,-.222837,.400592,418e-6,0,3.98443,2.21641,0,0,-1.8845,-.6041,3.0692,1],visible:!0,type:"Mesh",material:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",castShadow:!0,receiveShadow:!0,geometry:"CA468235-6318-31E9-A81A-2C1F5F2934B1"},{name:"Box13",uuid:"656E752A-C320-3047-8661-E390EF3B5190",matrix:[-231e-6,418e-6,-.5236,0,-.22158,.401289,418e-6,0,3.99135,2.20391,0,0,-1.8845,-.6041,1.2687,1],visible:!0,type:"Mesh",material:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",castShadow:!0,receiveShadow:!0,geometry:"AC0895ED-19F7-3290-AE60-9FA3A609C69C"},{name:"Box14",uuid:"DFF46D8A-6273-380C-9F06-32554A226289",matrix:[229e-6,413e-6,-.5172,0,.26166,.470884,492e-6,0,4.66636,-2.593,0,0,2.3534,-.8287,3.0641,1],visible:!0,type:"Mesh",material:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",castShadow:!0,receiveShadow:!0,geometry:"F44F6C5E-78D6-3464-9233-B5E5E66E0110"},{name:"Box15",uuid:"ADEBC251-8314-31AC-915B-5FCE433AF6AC",matrix:[247e-6,409e-6,-.5236,0,.237305,.392195,418e-6,0,3.9009,-2.36032,0,0,2.0009,-.6814,1.2861,1],visible:!0,type:"Mesh",material:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",castShadow:!0,receiveShadow:!0,geometry:"B06408BE-40FD-3CF5-8133-8A1EE9E62A96"},{name:"Box2",uuid:"66A008AC-44C6-3B23-9275-5237B57058C0",matrix:[-.3399,0,0,0,0,0,.3505,0,0,1.9219,0,0,0,-1.3048,0,1],visible:!0,type:"Mesh",material:"4385125B-DD1E-3025-880F-3311517CC8D5",castShadow:!0,receiveShadow:!0,geometry:"A3266DF7-EF8B-3835-B919-F2D9B9D10D07"},{name:"Box3",uuid:"BF7F5BAE-ECAB-32A6-B7E6-0F0B02A66F3D",matrix:[-.3399,0,0,0,0,0,.3505,0,0,1.9219,0,0,0,-1.3048,5.9721,1],visible:!0,type:"Mesh",material:"4385125B-DD1E-3025-880F-3311517CC8D5",castShadow:!0,receiveShadow:!0,geometry:"DAF26EED-E8A1-3597-94D1-E65246622C91"},{name:"Box4",uuid:"21E1EE28-720A-3F5F-A701-169B87D161B6",matrix:[-1,0,0,0,0,0,1,0,0,.116,0,0,-4.1681,-1.7834,3.0964,1],visible:!0,type:"Mesh",material:"897396E1-B5B0-339C-8890-A7B3F838CD5A",castShadow:!0,receiveShadow:!0,geometry:"21064AED-2F9E-349A-8048-33069A9BEACE"},{name:"Box5",uuid:"B7F31A6C-E829-3060-8AE1-EBA084A2865B",matrix:[-1,0,0,0,0,0,1,0,0,.116,0,0,-3.6762,-1.7834,1.2627,1],visible:!0,type:"Mesh",material:"897396E1-B5B0-339C-8890-A7B3F838CD5A",castShadow:!0,receiveShadow:!0,geometry:"64183BD0-6EAE-3D88-8ABC-1117C3AD9D35"},{name:"Box6",uuid:"635989B7-6F0F-336A-8B27-DC1722994B13",matrix:[-1,0,0,0,0,0,1,0,0,.116,0,0,-3.6283,-1.7834,4.9435,1],visible:!0,type:"Mesh",material:"897396E1-B5B0-339C-8890-A7B3F838CD5A",castShadow:!0,receiveShadow:!0,geometry:"5F05442A-9704-3BFB-BE1B-EE12E2150EE3"},{name:"Box7",uuid:"438FF972-AF36-3959-A474-DA6FFA57510C",matrix:[-1,0,0,0,0,0,1,0,0,.116,0,0,3.7392,-1.7834,1.2627,1],visible:!0,type:"Mesh",material:"897396E1-B5B0-339C-8890-A7B3F838CD5A",castShadow:!0,receiveShadow:!0,geometry:"778708C3-2A4C-30ED-AC23-F99783DFA888"},{name:"Box8",uuid:"43CFC224-7989-3DCA-9CAA-AACBEFA6DBBB",matrix:[-1,0,0,0,0,0,1,0,0,.116,0,0,4.364,-1.7834,3.0964,1],visible:!0,type:"Mesh",material:"897396E1-B5B0-339C-8890-A7B3F838CD5A",castShadow:!0,receiveShadow:!0,geometry:"D9FDB576-F098-320B-9FFB-E5989779BD81"},{name:"Box9",uuid:"82475668-0D68-35E4-A7AD-6FC2EA1CDC6D",matrix:[-1,0,0,0,0,0,1,0,0,.116,0,0,3.6594,-1.7834,4.9435,1],visible:!0,type:"Mesh",material:"897396E1-B5B0-339C-8890-A7B3F838CD5A",castShadow:!0,receiveShadow:!0,geometry:"98CE0ABF-982E-3010-BF1D-01919C9CB4EF"},{name:"CameraPreset",uuid:"B0C4E574-DECC-3D97-99F0-60577F3026BF",matrix:[-1,0,0,0,0,0,1,0,0,1,0,0,0,-.471048,2.5921,1],visible:!0,type:"Object",children:[{name:"TurnTableCamera",uuid:"D7C44AB9-C5E4-3E53-805E-02A6D8DC90EC",matrix:[-.999962,.008726,0,0,-.004231,-.484791,.87462,0,.007632,.874586,.484809,0,.13728,15.7313,8.72032,1],visible:!0,type:"PerspectiveCamera",far:5e4,near:.1,aspect:1.77778,fov:38.6274}]},{name:"Cone",uuid:"02BF8491-5563-3FC5-A223-35058E8B5663",matrix:[-1,0,0,0,0,1.02076,.009111,0,0,.016939,-1.89772,0,-2.1069,.8999,-.23,1],visible:!0,type:"Mesh",material:"8423B809-4704-361F-A18E-BFD4C1A955F1",castShadow:!0,receiveShadow:!0,geometry:"6F819075-5DAE-3263-8E03-B58B1580326C"},{name:"Cone1",uuid:"DB587E3E-D56C-36F7-B43D-9B391022056B",matrix:[-1,0,0,0,0,1.02076,.009111,0,0,.016939,-1.89772,0,2.0624,.7782,-.23,1],visible:!0,type:"Mesh",material:"8423B809-4704-361F-A18E-BFD4C1A955F1",castShadow:!0,receiveShadow:!0,geometry:"F1E8EF2D-6DD7-3144-9E90-9F95164FFC64"},{name:"LightPreset",uuid:"1783D250-7BC6-30D0-B7CB-5461D8774CE2",matrix:[-1,0,0,0,0,0,1,0,0,1,0,0,0,-.471048,2.5921,1],visible:!0,type:"Object",children:[{name:"BackLight",uuid:"6C2D9241-E0B7-3878-BBEB-78107E823E3E",matrix:[-.117758,-.595422,.794736,0,.794736,.42335,.434935,0,-.595422,.682823,.42335,0,-63.2308,72.5124,44.9577,1],visible:!0,type:"DirectionalLight",castShadow:!1,color:7838134,intensity:.75,distance:0},{name:"FillLight",uuid:"45C90A33-0D2F-3540-A48E-3AFDDA8A011B",matrix:[.398127,.775804,-.489512,0,-.489512,.630973,.601873,0,.775804,0,.630973,0,158.295,0,128.743,1],visible:!0,type:"DirectionalLight",castShadow:!1,color:15062196,intensity:.85,distance:0},{name:"KeyLight",uuid:"50157FD0-6064-3AF8-A62F-23E1675946D0",matrix:[.817645,-.527833,.229888,0,.229888,.66542,.710188,0,-.527833,-.527833,.66542,0,-56.0533,-56.0533,70.6643,1],visible:!0,type:"DirectionalLight",castShadow:!1,color:16776180,intensity:1,distance:0}]},{name:"Sphere",uuid:"1B9B9D6A-3196-3068-B377-090E7B209321",matrix:[-1,0,0,0,0,0,9.7458,0,0,1,0,0,0,0,2.5921,1],visible:!0,type:"Mesh",material:"DB93155A-C144-3CBE-B085-93FE406436BF",castShadow:!0,receiveShadow:!0,geometry:"E6CB0260-CD70-38C6-857F-01B6A2FCBF68"},{name:"SpotLight",uuid:"1B18A08F-0404-3C2E-888D-7391D0AB1E6E",matrix:[-1,0,0,0,0,-.101796,.994805,0,0,.994805,.101796,0,0,7.1022,4.0562,1],visible:!0,type:"SpotLight",castShadow:!0,color:16777215,intensity:1,distance:0,angle:2.0944,decayExponent:2},{name:"Torus",uuid:"9E57E2F8-2660-3209-A6A1-61E1EAD8A858",matrix:[-2.1239,0,0,0,0,0,1.6568,0,0,.5181,0,0,0,-2.0754,3.0477,1],visible:!0,type:"Mesh",material:"D4DF4C0A-5C84-32A8-BD6B-7691F5ACD080",castShadow:!0,receiveShadow:!0,geometry:"9838AE54-DDD3-3795-82AD-49AEB706B30F"}],matrix:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],type:"Scene"},animations:[{tracks:[{keys:[{time:0,value:[0,-.471048,2.5921]},{time:120,value:[0,-.471048,2.5921]},{time:240,value:[0,-.471048,2.5921]},{time:360,value:[0,-.471048,2.5921]}],name:"CameraPreset.position",type:"vector3"},{keys:[{time:0,value:[1,1,1]},{time:120,value:[1,1,1]},{time:240,value:[1,1,1]},{time:360,value:[1,1,1]}],name:"CameraPreset.scale",type:"vector3"},{keys:[{time:0,value:[0,.707107,.707107,0]},{time:120,value:[-.612372,-.353553,-.353553,.612372]},{time:240,value:[-.612372,.353553,.353553,.612372]},{time:360,value:[0,.707107,.707107,0]}],name:"CameraPreset.quaternion",type:"quaternion"}],name:"default",fps:29}],textures:[],metadata:{generator:"io_three",version:4.4,type:"Object"},materials:[{uuid:"4385125B-DD1E-3025-880F-3311517CC8D5",name:"0",specular:0,depthWrite:!0,blending:"NormalBlending",ambient:0,type:"MeshPhongMaterial",depthTest:!0,shininess:50,vertexColors:!1,color:0,emissive:0},{uuid:"DB93155A-C144-3CBE-B085-93FE406436BF",name:"2b2828",specular:0,depthWrite:!0,blending:"NormalBlending",ambient:2828328,type:"MeshPhongMaterial",depthTest:!0,shininess:50,vertexColors:!1,color:2828328,emissive:0},{uuid:"897396E1-B5B0-339C-8890-A7B3F838CD5A",name:"444444",specular:0,depthWrite:!0,blending:"NormalBlending",ambient:4473924,type:"MeshPhongMaterial",depthTest:!0,shininess:50,vertexColors:!1,color:4473924,emissive:0},{uuid:"8423B809-4704-361F-A18E-BFD4C1A955F1",name:"601f1f",specular:0,depthWrite:!0,blending:"NormalBlending",ambient:6299423,type:"MeshPhongMaterial",depthTest:!0,shininess:50,vertexColors:!1,color:6299423,emissive:0},{uuid:"B92F5ACA-E24A-3A69-B2DD-69B8C9C5682C",name:"b0b0b0",specular:0,depthWrite:!0,blending:"NormalBlending",ambient:11579568,type:"MeshPhongMaterial",depthTest:!0,shininess:50,vertexColors:!1,color:11579568,emissive:0},{uuid:"D4DF4C0A-5C84-32A8-BD6B-7691F5ACD080",name:"c0a0a",specular:0,depthWrite:!0,blending:"NormalBlending",ambient:789002,type:"MeshPhongMaterial",depthTest:!0,shininess:50,vertexColors:!1,color:789002,emissive:0}],images:[],geometries:[{uuid:"15641190-4052-3871-BF5E-F046F6B1B496",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"BoxGeometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[0,0,0],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[0,0,0],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"CD7D62CA-6C08-3384-8598-2BE3FE25E16A",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box11Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.690196,.690196,.690196],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.690196,.690196,.690196],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"b0b0b0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"778708C3-2A4C-30ED-AC23-F99783DFA888",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,12,13,14,15,0,0,1,2,3,4,7,0,3,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4,43,4,5,8,9,0,1,1,1,1,4,7,8,9,43,5,0,10,8,0,1,1,1,1,7,0,10,8,43,0,1,11,10,0,1,1,1,1,0,3,11,10,43,1,4,9,11,0,1,1,1,1,3,4,9,11,43,9,8,13,12,0,1,1,1,1,9,8,7,4,43,8,10,14,13,0,1,1,1,1,8,10,0,7,43,10,11,15,14,0,1,1,1,1,10,11,3,0,43,11,9,12,15,0,1,1,1,1,11,9,4,3],morphTargets:[],name:"Box7Geometry",metadata:{faces:14,morphTargets:0,uvs:1,bones:0,materials:1,normals:12,generator:"io_three",version:3,vertices:16},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349,-.301492,-.301492,.904508,-.301492,.301492,.904508,.301492,-.301492,.904508,.301492,.301492,.904508],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.429289,-.429289,.5,-.429289,.429289,.5,.429289,-.429289,.5,.429289,.429289,.5,-.429289,.429289,2.11353,-.429289,-.429289,2.11353,.429289,-.429289,2.11353,.429289,.429289,2.11353],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.266667,.266667,.266667],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.266667,.266667,.266667],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"444444",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"AC0895ED-19F7-3290-AE60-9FA3A609C69C",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box13Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.690196,.690196,.690196],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.690196,.690196,.690196],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"b0b0b0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"5B23DCE7-72A6-31B5-B561-B5098FF6433E",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box10Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.690196,.690196,.690196],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.690196,.690196,.690196],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"b0b0b0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"21064AED-2F9E-349A-8048-33069A9BEACE",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,12,13,14,15,0,0,1,2,3,4,7,0,3,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4,43,4,5,8,9,0,1,1,1,1,4,7,8,9,43,5,0,10,8,0,1,1,1,1,7,0,10,8,43,0,1,11,10,0,1,1,1,1,0,3,11,10,43,1,4,9,11,0,1,1,1,1,3,4,9,11,43,9,8,13,12,0,1,1,1,1,9,8,7,4,43,8,10,14,13,0,1,1,1,1,8,10,0,7,43,10,11,15,14,0,1,1,1,1,10,11,3,0,43,11,9,12,15,0,1,1,1,1,11,9,4,3],morphTargets:[],name:"Box4Geometry",metadata:{faces:14,morphTargets:0,uvs:1,bones:0,materials:1,normals:12,generator:"io_three",version:3,vertices:16},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349,-.301492,-.301492,.904508,-.301492,.301492,.904508,.301492,-.301492,.904508,.301492,.301492,.904508],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.429289,-.429289,.5,-.429289,.429289,.5,.429289,-.429289,.5,.429289,.429289,.5,-.429289,.429289,2.09855,-.429289,-.429289,2.09855,.429289,-.429289,2.09855,.429289,.429289,2.09855],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.266667,.266667,.266667],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.266667,.266667,.266667],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"444444",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"E6CB0260-CD70-38C6-857F-01B6A2FCBF68",data:{faces:[42,0,25,1,0,0,1,2,0,1,2,43,1,25,26,2,0,2,1,3,4,2,1,3,4,43,2,26,27,3,0,4,3,5,6,4,3,5,6,43,3,27,28,4,0,6,5,7,8,6,5,7,8,43,4,28,29,5,0,8,7,9,10,8,7,9,10,43,5,29,30,6,0,10,9,11,12,10,9,11,12,43,6,30,31,7,0,12,11,13,14,12,11,13,14,43,7,31,32,8,0,14,13,15,16,14,13,15,16,43,8,32,33,9,0,16,15,17,18,16,15,17,18,43,9,33,34,10,0,18,17,19,20,18,17,19,20,43,10,34,35,11,0,20,19,21,22,20,19,21,22,43,11,35,36,12,0,22,21,23,24,22,21,23,24,43,12,36,37,13,0,24,23,25,26,24,23,25,26,43,13,37,38,14,0,26,25,27,28,26,25,27,28,43,14,38,39,15,0,28,27,29,30,28,27,29,30,43,15,39,40,16,0,30,29,31,32,30,29,31,32,43,16,40,41,17,0,32,31,33,34,32,31,33,34,43,17,41,42,18,0,34,33,35,36,34,33,35,36,43,18,42,43,19,0,36,35,37,38,36,35,37,38,43,19,43,44,20,0,38,37,39,40,38,37,39,40,43,20,44,45,21,0,40,39,41,42,40,39,41,42,43,21,45,46,22,0,42,41,43,44,42,41,43,44,43,22,46,47,23,0,44,43,45,46,44,43,45,46,42,23,47,24,0,46,45,47,46,45,47,42,0,48,25,0,48,49,1,0,48,1,43,25,48,49,26,0,1,49,50,3,1,48,49,3,43,26,49,50,27,0,3,50,51,5,3,49,50,5,43,27,50,51,28,0,5,51,52,7,5,50,51,7,43,28,51,52,29,0,7,52,53,9,7,51,52,9,43,29,52,53,30,0,9,53,54,11,9,52,53,11,43,30,53,54,31,0,11,54,55,13,11,53,54,13,43,31,54,55,32,0,13,55,56,15,13,54,55,15,43,32,55,56,33,0,15,56,57,17,15,55,56,17,43,33,56,57,34,0,17,57,58,19,17,56,57,19,43,34,57,58,35,0,19,58,59,21,19,57,58,21,43,35,58,59,36,0,21,59,60,23,21,58,59,23,43,36,59,60,37,0,23,60,61,25,23,59,60,25,43,37,60,61,38,0,25,61,62,27,25,60,61,27,43,38,61,62,39,0,27,62,63,29,27,61,62,29,43,39,62,63,40,0,29,63,64,31,29,62,63,31,43,40,63,64,41,0,31,64,65,33,31,63,64,33,43,41,64,65,42,0,33,65,66,35,33,64,65,35,43,42,65,66,43,0,35,66,67,37,35,65,66,37,43,43,66,67,44,0,37,67,68,39,37,66,67,39,43,44,67,68,45,0,39,68,69,41,39,67,68,41,43,45,68,69,46,0,41,69,70,43,41,68,69,43,43,46,69,70,47,0,43,70,71,45,43,69,70,45,42,47,70,24,0,45,71,72,45,70,47,42,0,71,48,0,73,74,49,0,71,48,43,48,71,72,49,0,49,74,75,50,48,71,72,49,43,49,72,73,50,0,50,75,76,51,49,72,73,50,43,50,73,74,51,0,51,76,77,52,50,73,74,51,43,51,74,75,52,0,52,77,78,53,51,74,75,52,43,52,75,76,53,0,53,78,79,54,52,75,76,53,43,53,76,77,54,0,54,79,80,55,53,76,77,54,43,54,77,78,55,0,55,80,81,56,54,77,78,55,43,55,78,79,56,0,56,81,82,57,55,78,79,56,43,56,79,80,57,0,57,82,83,58,56,79,80,57,43,57,80,81,58,0,58,83,84,59,57,80,81,58,43,58,81,82,59,0,59,84,85,60,58,81,82,59,43,59,82,83,60,0,60,85,86,61,59,82,83,60,43,60,83,84,61,0,61,86,87,62,60,83,84,61,43,61,84,85,62,0,62,87,88,63,61,84,85,62,43,62,85,86,63,0,63,88,89,64,62,85,86,63,43,63,86,87,64,0,64,89,90,65,63,86,87,64,43,64,87,88,65,0,65,90,91,66,64,87,88,65,43,65,88,89,66,0,66,91,92,67,65,88,89,66,43,66,89,90,67,0,67,92,93,68,66,89,90,67,43,67,90,91,68,0,68,93,94,69,67,90,91,68,43,68,91,92,69,0,69,94,95,70,68,91,92,69,43,69,92,93,70,0,70,95,96,71,69,92,93,70,42,70,93,24,0,71,96,97,70,93,47,42,0,94,71,0,98,99,74,0,94,71,43,71,94,95,72,0,74,99,100,75,71,94,95,72,43,72,95,96,73,0,75,100,101,76,72,95,96,73,43,73,96,97,74,0,76,101,102,77,73,96,97,74,43,74,97,98,75,0,77,102,103,78,74,97,98,75,43,75,98,99,76,0,78,103,104,79,75,98,99,76,43,76,99,100,77,0,79,104,105,80,76,99,100,77,43,77,100,101,78,0,80,105,106,81,77,100,101,78,43,78,101,102,79,0,81,106,107,82,78,101,102,79,43,79,102,103,80,0,82,107,108,83,79,102,103,80,43,80,103,104,81,0,83,108,109,84,80,103,104,81,43,81,104,105,82,0,84,109,110,85,81,104,105,82,43,82,105,106,83,0,85,110,111,86,82,105,106,83,43,83,106,107,84,0,86,111,112,87,83,106,107,84,43,84,107,108,85,0,87,112,113,88,84,107,108,85,43,85,108,109,86,0,88,113,114,89,85,108,109,86,43,86,109,110,87,0,89,114,115,90,86,109,110,87,43,87,110,111,88,0,90,115,116,91,87,110,111,88,43,88,111,112,89,0,91,116,117,92,88,111,112,89,43,89,112,113,90,0,92,117,118,93,89,112,113,90,43,90,113,114,91,0,93,118,119,94,90,113,114,91,43,91,114,115,92,0,94,119,120,95,91,114,115,92,43,92,115,116,93,0,95,120,121,96,92,115,116,93,42,93,116,24,0,96,121,122,93,116,47,42,0,117,94,0,123,124,99,0,117,94,43,94,117,118,95,0,99,124,125,100,94,117,118,95,43,95,118,119,96,0,100,125,126,101,95,118,119,96,43,96,119,120,97,0,101,126,127,102,96,119,120,97,43,97,120,121,98,0,102,127,128,103,97,120,121,98,43,98,121,122,99,0,103,128,129,104,98,121,122,99,43,99,122,123,100,0,104,129,130,105,99,122,123,100,43,100,123,124,101,0,105,130,131,106,100,123,124,101,43,101,124,125,102,0,106,131,132,107,101,124,125,102,43,102,125,126,103,0,107,132,133,108,102,125,126,103,43,103,126,127,104,0,108,133,134,109,103,126,127,104,43,104,127,128,105,0,109,134,135,110,104,127,128,105,43,105,128,129,106,0,110,135,136,111,105,128,129,106,43,106,129,130,107,0,111,136,137,112,106,129,130,107,43,107,130,131,108,0,112,137,138,113,107,130,131,108,43,108,131,132,109,0,113,138,139,114,108,131,132,109,43,109,132,133,110,0,114,139,140,115,109,132,133,110,43,110,133,134,111,0,115,140,141,116,110,133,134,111,43,111,134,135,112,0,116,141,142,117,111,134,135,112,43,112,135,136,113,0,117,142,143,118,112,135,136,113,43,113,136,137,114,0,118,143,144,119,113,136,137,114,43,114,137,138,115,0,119,144,145,120,114,137,138,115,43,115,138,139,116,0,120,145,146,121,115,138,139,116,42,116,139,24,0,121,146,147,116,139,47,42,0,140,117,0,148,149,124,0,140,117,43,117,140,141,118,0,124,149,150,125,117,140,141,118,43,118,141,142,119,0,125,150,151,126,118,141,142,119,43,119,142,143,120,0,126,151,152,127,119,142,143,120,43,120,143,144,121,0,127,152,153,128,120,143,144,121,43,121,144,145,122,0,128,153,154,129,121,144,145,122,43,122,145,146,123,0,129,154,155,130,122,145,146,123,43,123,146,147,124,0,130,155,156,131,123,146,147,124,43,124,147,148,125,0,131,156,157,132,124,147,148,125,43,125,148,149,126,0,132,157,158,133,125,148,149,126,43,126,149,150,127,0,133,158,159,134,126,149,150,127,43,127,150,151,128,0,134,159,160,135,127,150,151,128,43,128,151,152,129,0,135,160,161,136,128,151,152,129,43,129,152,153,130,0,136,161,162,137,129,152,153,130,43,130,153,154,131,0,137,162,163,138,130,153,154,131,43,131,154,155,132,0,138,163,164,139,131,154,155,132,43,132,155,156,133,0,139,164,165,140,132,155,156,133,43,133,156,157,134,0,140,165,166,141,133,156,157,134,43,134,157,158,135,0,141,166,167,142,134,157,158,135,43,135,158,159,136,0,142,167,168,143,135,158,159,136,43,136,159,160,137,0,143,168,169,144,136,159,160,137,43,137,160,161,138,0,144,169,170,145,137,160,161,138,43,138,161,162,139,0,145,170,171,146,138,161,162,139,42,139,162,24,0,146,171,172,139,162,47,42,0,163,140,0,173,174,149,0,163,140,43,140,163,164,141,0,149,174,175,150,140,163,164,141,43,141,164,165,142,0,150,175,176,151,141,164,165,142,43,142,165,166,143,0,151,176,177,152,142,165,166,143,43,143,166,167,144,0,152,177,178,153,143,166,167,144,43,144,167,168,145,0,153,178,179,154,144,167,168,145,43,145,168,169,146,0,154,179,180,155,145,168,169,146,43,146,169,170,147,0,155,180,181,156,146,169,170,147,43,147,170,171,148,0,156,181,182,157,147,170,171,148,43,148,171,172,149,0,157,182,183,158,148,171,172,149,43,149,172,173,150,0,158,183,184,159,149,172,173,150,43,150,173,174,151,0,159,184,185,160,150,173,174,151,43,151,174,175,152,0,160,185,186,161,151,174,175,152,43,152,175,176,153,0,161,186,187,162,152,175,176,153,43,153,176,177,154,0,162,187,188,163,153,176,177,154,43,154,177,178,155,0,163,188,189,164,154,177,178,155,43,155,178,179,156,0,164,189,190,165,155,178,179,156,43,156,179,180,157,0,165,190,191,166,156,179,180,157,43,157,180,181,158,0,166,191,192,167,157,180,181,158,43,158,181,182,159,0,167,192,193,168,158,181,182,159,43,159,182,183,160,0,168,193,194,169,159,182,183,160,43,160,183,184,161,0,169,194,195,170,160,183,184,161,43,161,184,185,162,0,170,195,196,171,161,184,185,162,42,162,185,24,0,171,196,197,162,185,47,42,0,186,163,0,198,199,174,0,186,163,43,163,186,187,164,0,174,199,200,175,163,186,187,164,43,164,187,188,165,0,175,200,201,176,164,187,188,165,43,165,188,189,166,0,176,201,202,177,165,188,189,166,43,166,189,190,167,0,177,202,203,178,166,189,190,167,43,167,190,191,168,0,178,203,204,179,167,190,191,168,43,168,191,192,169,0,179,204,205,180,168,191,192,169,43,169,192,193,170,0,180,205,206,181,169,192,193,170,43,170,193,194,171,0,181,206,207,182,170,193,194,171,43,171,194,195,172,0,182,207,208,183,171,194,195,172,43,172,195,196,173,0,183,208,209,184,172,195,196,173,43,173,196,197,174,0,184,209,210,185,173,196,197,174,43,174,197,198,175,0,185,210,211,186,174,197,198,175,43,175,198,199,176,0,186,211,212,187,175,198,199,176,43,176,199,200,177,0,187,212,213,188,176,199,200,177,43,177,200,201,178,0,188,213,214,189,177,200,201,178,43,178,201,202,179,0,189,214,215,190,178,201,202,179,43,179,202,203,180,0,190,215,216,191,179,202,203,180,43,180,203,204,181,0,191,216,217,192,180,203,204,181,43,181,204,205,182,0,192,217,218,193,181,204,205,182,43,182,205,206,183,0,193,218,219,194,182,205,206,183,43,183,206,207,184,0,194,219,220,195,183,206,207,184,43,184,207,208,185,0,195,220,221,196,184,207,208,185,42,185,208,24,0,196,221,222,185,208,47,42,0,209,186,0,223,224,199,0,209,186,43,186,209,210,187,0,199,224,225,200,186,209,210,187,43,187,210,211,188,0,200,225,226,201,187,210,211,188,43,188,211,212,189,0,201,226,227,202,188,211,212,189,43,189,212,213,190,0,202,227,228,203,189,212,213,190,43,190,213,214,191,0,203,228,229,204,190,213,214,191,43,191,214,215,192,0,204,229,230,205,191,214,215,192,43,192,215,216,193,0,205,230,231,206,192,215,216,193,43,193,216,217,194,0,206,231,232,207,193,216,217,194,43,194,217,218,195,0,207,232,233,208,194,217,218,195,43,195,218,219,196,0,208,233,234,209,195,218,219,196,43,196,219,220,197,0,209,234,235,210,196,219,220,197,43,197,220,221,198,0,210,235,236,211,197,220,221,198,43,198,221,222,199,0,211,236,237,212,198,221,222,199,43,199,222,223,200,0,212,237,238,213,199,222,223,200,43,200,223,224,201,0,213,238,239,214,200,223,224,201,43,201,224,225,202,0,214,239,240,215,201,224,225,202,43,202,225,226,203,0,215,240,241,216,202,225,226,203,43,203,226,227,204,0,216,241,242,217,203,226,227,204,43,204,227,228,205,0,217,242,243,218,204,227,228,205,43,205,228,229,206,0,218,243,244,219,205,228,229,206,43,206,229,230,207,0,219,244,245,220,206,229,230,207,43,207,230,231,208,0,220,245,246,221,207,230,231,208,42,208,231,24,0,221,246,247,208,231,47,42,0,232,209,0,248,249,224,0,232,209,43,209,232,233,210,0,224,249,250,225,209,232,233,210,43,210,233,234,211,0,225,250,251,226,210,233,234,211,43,211,234,235,212,0,226,251,252,227,211,234,235,212,43,212,235,236,213,0,227,252,253,228,212,235,236,213,43,213,236,237,214,0,228,253,254,229,213,236,237,214,43,214,237,238,215,0,229,254,255,230,214,237,238,215,43,215,238,239,216,0,230,255,256,231,215,238,239,216,43,216,239,240,217,0,231,256,257,232,216,239,240,217,43,217,240,241,218,0,232,257,258,233,217,240,241,218,43,218,241,242,219,0,233,258,259,234,218,241,242,219,43,219,242,243,220,0,234,259,260,235,219,242,243,220,43,220,243,244,221,0,235,260,261,236,220,243,244,221,43,221,244,245,222,0,236,261,262,237,221,244,245,222,43,222,245,246,223,0,237,262,263,238,222,245,246,223,43,223,246,247,224,0,238,263,264,239,223,246,247,224,43,224,247,248,225,0,239,264,265,240,224,247,248,225,43,225,248,249,226,0,240,265,266,241,225,248,249,226,43,226,249,250,227,0,241,266,267,242,226,249,250,227,43,227,250,251,228,0,242,267,268,243,227,250,251,228,43,228,251,252,229,0,243,268,269,244,228,251,252,229,43,229,252,253,230,0,244,269,270,245,229,252,253,230,43,230,253,254,231,0,245,270,271,246,230,253,254,231,42,231,254,24,0,246,271,272,231,254,47,42,0,255,232,0,273,274,249,0,255,232,43,232,255,256,233,0,249,274,275,250,232,255,256,233,43,233,256,257,234,0,250,275,276,251,233,256,257,234,43,234,257,258,235,0,251,276,277,252,234,257,258,235,43,235,258,259,236,0,252,277,278,253,235,258,259,236,43,236,259,260,237,0,253,278,279,254,236,259,260,237,43,237,260,261,238,0,254,279,280,255,237,260,261,238,43,238,261,262,239,0,255,280,281,256,238,261,262,239,43,239,262,263,240,0,256,281,282,257,239,262,263,240,43,240,263,264,241,0,257,282,283,258,240,263,264,241,43,241,264,265,242,0,258,283,284,259,241,264,265,242,43,242,265,266,243,0,259,284,285,260,242,265,266,243,43,243,266,267,244,0,260,285,286,261,243,266,267,244,43,244,267,268,245,0,261,286,287,262,244,267,268,245,43,245,268,269,246,0,262,287,288,263,245,268,269,246,43,246,269,270,247,0,263,288,289,264,246,269,270,247,43,247,270,271,248,0,264,289,290,265,247,270,271,248,43,248,271,272,249,0,265,290,291,266,248,271,272,249,43,249,272,273,250,0,266,291,292,267,249,272,273,250,43,250,273,274,251,0,267,292,293,268,250,273,274,251,43,251,274,275,252,0,268,293,294,269,251,274,275,252,43,252,275,276,253,0,269,294,295,270,252,275,276,253,43,253,276,277,254,0,270,295,296,271,253,276,277,254,42,254,277,24,0,271,296,297,254,277,47,42,0,278,255,0,298,299,274,0,278,255,43,255,278,279,256,0,274,299,300,275,255,278,279,256,43,256,279,280,257,0,275,300,301,276,256,279,280,257,43,257,280,281,258,0,276,301,302,277,257,280,281,258,43,258,281,282,259,0,277,302,303,278,258,281,282,259,43,259,282,283,260,0,278,303,304,279,259,282,283,260,43,260,283,284,261,0,279,304,305,280,260,283,284,261,43,261,284,285,262,0,280,305,306,281,261,284,285,262,43,262,285,286,263,0,281,306,307,282,262,285,286,263,43,263,286,287,264,0,282,307,308,283,263,286,287,264,43,264,287,288,265,0,283,308,309,284,264,287,288,265,43,265,288,289,266,0,284,309,310,285,265,288,289,266,43,266,289,290,267,0,285,310,311,286,266,289,290,267,43,267,290,291,268,0,286,311,312,287,267,290,291,268,43,268,291,292,269,0,287,312,313,288,268,291,292,269,43,269,292,293,270,0,288,313,314,289,269,292,293,270,43,270,293,294,271,0,289,314,315,290,270,293,294,271,43,271,294,295,272,0,290,315,316,291,271,294,295,272,43,272,295,296,273,0,291,316,317,292,272,295,296,273,43,273,296,297,274,0,292,317,318,293,273,296,297,274,43,274,297,298,275,0,293,318,319,294,274,297,298,275,43,275,298,299,276,0,294,319,320,295,275,298,299,276,43,276,299,300,277,0,295,320,321,296,276,299,300,277,42,277,300,24,0,296,321,322,277,300,47,42,0,301,278,0,323,324,299,0,301,278,43,278,301,302,279,0,299,324,325,300,278,301,302,279,43,279,302,303,280,0,300,325,326,301,279,302,303,280,43,280,303,304,281,0,301,326,327,302,280,303,304,281,43,281,304,305,282,0,302,327,328,303,281,304,305,282,43,282,305,306,283,0,303,328,329,304,282,305,306,283,43,283,306,307,284,0,304,329,330,305,283,306,307,284,43,284,307,308,285,0,305,330,331,306,284,307,308,285,43,285,308,309,286,0,306,331,332,307,285,308,309,286,43,286,309,310,287,0,307,332,333,308,286,309,310,287,43,287,310,311,288,0,308,333,334,309,287,310,311,288,43,288,311,312,289,0,309,334,335,310,288,311,312,289,43,289,312,313,290,0,310,335,336,311,289,312,313,290,43,290,313,314,291,0,311,336,337,312,290,313,314,291,43,291,314,315,292,0,312,337,338,313,291,314,315,292,43,292,315,316,293,0,313,338,339,314,292,315,316,293,43,293,316,317,294,0,314,339,340,315,293,316,317,294,43,294,317,318,295,0,315,340,341,316,294,317,318,295,43,295,318,319,296,0,316,341,342,317,295,318,319,296,43,296,319,320,297,0,317,342,343,318,296,319,320,297,43,297,320,321,298,0,318,343,344,319,297,320,321,298,43,298,321,322,299,0,319,344,345,320,298,321,322,299,43,299,322,323,300,0,320,345,346,321,299,322,323,300,42,300,323,24,0,321,346,347,300,323,47,42,0,324,301,0,348,349,324,0,324,301,43,301,324,325,302,0,324,349,350,325,301,324,325,302,43,302,325,326,303,0,325,350,351,326,302,325,326,303,43,303,326,327,304,0,326,351,352,327,303,326,327,304,43,304,327,328,305,0,327,352,353,328,304,327,328,305,43,305,328,329,306,0,328,353,354,329,305,328,329,306,43,306,329,330,307,0,329,354,355,330,306,329,330,307,43,307,330,331,308,0,330,355,356,331,307,330,331,308,43,308,331,332,309,0,331,356,357,332,308,331,332,309,43,309,332,333,310,0,332,357,358,333,309,332,333,310,43,310,333,334,311,0,333,358,359,334,310,333,334,311,43,311,334,335,312,0,334,359,360,335,311,334,335,312,43,312,335,336,313,0,335,360,361,336,312,335,336,313,43,313,336,337,314,0,336,361,362,337,313,336,337,314,43,314,337,338,315,0,337,362,363,338,314,337,338,315,43,315,338,339,316,0,338,363,364,339,315,338,339,316,43,316,339,340,317,0,339,364,365,340,316,339,340,317,43,317,340,341,318,0,340,365,366,341,317,340,341,318,43,318,341,342,319,0,341,366,367,342,318,341,342,319,43,319,342,343,320,0,342,367,368,343,319,342,343,320,43,320,343,344,321,0,343,368,369,344,320,343,344,321,43,321,344,345,322,0,344,369,370,345,321,344,345,322,43,322,345,346,323,0,345,370,371,346,322,345,346,323,42,323,346,24,0,346,371,372,323,346,47,42,0,347,324,0,373,374,349,0,347,324,43,324,347,348,325,0,349,374,375,350,324,347,348,325,43,325,348,349,326,0,350,375,376,351,325,348,349,326,43,326,349,350,327,0,351,376,377,352,326,349,350,327,43,327,350,351,328,0,352,377,378,353,327,350,351,328,43,328,351,352,329,0,353,378,379,354,328,351,352,329,43,329,352,353,330,0,354,379,380,355,329,352,353,330,43,330,353,354,331,0,355,380,381,356,330,353,354,331,43,331,354,355,332,0,356,381,382,357,331,354,355,332,43,332,355,356,333,0,357,382,383,358,332,355,356,333,43,333,356,357,334,0,358,383,384,359,333,356,357,334,43,334,357,358,335,0,359,384,385,360,334,357,358,335,43,335,358,359,336,0,360,385,386,361,335,358,359,336,43,336,359,360,337,0,361,386,387,362,336,359,360,337,43,337,360,361,338,0,362,387,388,363,337,360,361,338,43,338,361,362,339,0,363,388,389,364,338,361,362,339,43,339,362,363,340,0,364,389,390,365,339,362,363,340,43,340,363,364,341,0,365,390,391,366,340,363,364,341,43,341,364,365,342,0,366,391,392,367,341,364,365,342,43,342,365,366,343,0,367,392,393,368,342,365,366,343,43,343,366,367,344,0,368,393,394,369,343,366,367,344,43,344,367,368,345,0,369,394,395,370,344,367,368,345,43,345,368,369,346,0,370,395,396,371,345,368,369,346,42,346,369,24,0,371,396,397,346,369,47,42,0,370,347,0,398,399,374,0,370,347,43,347,370,371,348,0,374,399,400,375,347,370,371,348,43,348,371,372,349,0,375,400,401,376,348,371,372,349,43,349,372,373,350,0,376,401,402,377,349,372,373,350,43,350,373,374,351,0,377,402,403,378,350,373,374,351,43,351,374,375,352,0,378,403,404,379,351,374,375,352,43,352,375,376,353,0,379,404,405,380,352,375,376,353,43,353,376,377,354,0,380,405,406,381,353,376,377,354,43,354,377,378,355,0,381,406,407,382,354,377,378,355,43,355,378,379,356,0,382,407,408,383,355,378,379,356,43,356,379,380,357,0,383,408,409,384,356,379,380,357,43,357,380,381,358,0,384,409,410,385,357,380,381,358,43,358,381,382,359,0,385,410,411,386,358,381,382,359,43,359,382,383,360,0,386,411,412,387,359,382,383,360,43,360,383,384,361,0,387,412,413,388,360,383,384,361,43,361,384,385,362,0,388,413,414,389,361,384,385,362,43,362,385,386,363,0,389,414,415,390,362,385,386,363,43,363,386,387,364,0,390,415,416,391,363,386,387,364,43,364,387,388,365,0,391,416,417,392,364,387,388,365,43,365,388,389,366,0,392,417,418,393,365,388,389,366,43,366,389,390,367,0,393,418,419,394,366,389,390,367,43,367,390,391,368,0,394,419,420,395,367,390,391,368,43,368,391,392,369,0,395,420,421,396,368,391,392,369,42,369,392,24,0,396,421,422,369,392,47,42,0,393,370,0,423,424,399,0,393,370,43,370,393,394,371,0,399,424,425,400,370,393,394,371,43,371,394,395,372,0,400,425,426,401,371,394,395,372,43,372,395,396,373,0,401,426,427,402,372,395,396,373,43,373,396,397,374,0,402,427,428,403,373,396,397,374,43,374,397,398,375,0,403,428,429,404,374,397,398,375,43,375,398,399,376,0,404,429,430,405,375,398,399,376,43,376,399,400,377,0,405,430,431,406,376,399,400,377,43,377,400,401,378,0,406,431,432,407,377,400,401,378,43,378,401,402,379,0,407,432,433,408,378,401,402,379,43,379,402,403,380,0,408,433,434,409,379,402,403,380,43,380,403,404,381,0,409,434,435,410,380,403,404,381,43,381,404,405,382,0,410,435,436,411,381,404,405,382,43,382,405,406,383,0,411,436,437,412,382,405,406,383,43,383,406,407,384,0,412,437,438,413,383,406,407,384,43,384,407,408,385,0,413,438,439,414,384,407,408,385,43,385,408,409,386,0,414,439,440,415,385,408,409,386,43,386,409,410,387,0,415,440,441,416,386,409,410,387,43,387,410,411,388,0,416,441,442,417,387,410,411,388,43,388,411,412,389,0,417,442,443,418,388,411,412,389,43,389,412,413,390,0,418,443,444,419,389,412,413,390,43,390,413,414,391,0,419,444,445,420,390,413,414,391,43,391,414,415,392,0,420,445,446,421,391,414,415,392,42,392,415,24,0,421,446,447,392,415,47,42,0,416,393,0,448,449,424,0,416,393,43,393,416,417,394,0,424,449,450,425,393,416,417,394,43,394,417,418,395,0,425,450,451,426,394,417,418,395,43,395,418,419,396,0,426,451,452,427,395,418,419,396,43,396,419,420,397,0,427,452,453,428,396,419,420,397,43,397,420,421,398,0,428,453,454,429,397,420,421,398,43,398,421,422,399,0,429,454,455,430,398,421,422,399,43,399,422,423,400,0,430,455,456,431,399,422,423,400,43,400,423,424,401,0,431,456,457,432,400,423,424,401,43,401,424,425,402,0,432,457,458,433,401,424,425,402,43,402,425,426,403,0,433,458,459,434,402,425,426,403,43,403,426,427,404,0,434,459,460,435,403,426,427,404,43,404,427,428,405,0,435,460,461,436,404,427,428,405,43,405,428,429,406,0,436,461,462,437,405,428,429,406,43,406,429,430,407,0,437,462,463,438,406,429,430,407,43,407,430,431,408,0,438,463,464,439,407,430,431,408,43,408,431,432,409,0,439,464,465,440,408,431,432,409,43,409,432,433,410,0,440,465,466,441,409,432,433,410,43,410,433,434,411,0,441,466,467,442,410,433,434,411,43,411,434,435,412,0,442,467,468,443,411,434,435,412,43,412,435,436,413,0,443,468,469,444,412,435,436,413,43,413,436,437,414,0,444,469,470,445,413,436,437,414,43,414,437,438,415,0,445,470,471,446,414,437,438,415,42,415,438,24,0,446,471,472,415,438,47,42,0,439,416,0,473,474,449,0,439,416,43,416,439,440,417,0,449,474,475,450,416,439,440,417,43,417,440,441,418,0,450,475,476,451,417,440,441,418,43,418,441,442,419,0,451,476,477,452,418,441,442,419,43,419,442,443,420,0,452,477,478,453,419,442,443,420,43,420,443,444,421,0,453,478,479,454,420,443,444,421,43,421,444,445,422,0,454,479,480,455,421,444,445,422,43,422,445,446,423,0,455,480,481,456,422,445,446,423,43,423,446,447,424,0,456,481,482,457,423,446,447,424,43,424,447,448,425,0,457,482,483,458,424,447,448,425,43,425,448,449,426,0,458,483,484,459,425,448,449,426,43,426,449,450,427,0,459,484,485,460,426,449,450,427,43,427,450,451,428,0,460,485,486,461,427,450,451,428,43,428,451,452,429,0,461,486,487,462,428,451,452,429,43,429,452,453,430,0,462,487,488,463,429,452,453,430,43,430,453,454,431,0,463,488,489,464,430,453,454,431,43,431,454,455,432,0,464,489,490,465,431,454,455,432,43,432,455,456,433,0,465,490,491,466,432,455,456,433,43,433,456,457,434,0,466,491,492,467,433,456,457,434,43,434,457,458,435,0,467,492,493,468,434,457,458,435,43,435,458,459,436,0,468,493,494,469,435,458,459,436,43,436,459,460,437,0,469,494,495,470,436,459,460,437,43,437,460,461,438,0,470,495,496,471,437,460,461,438,42,438,461,24,0,471,496,497,438,461,47,42,0,462,439,0,498,499,474,0,462,439,43,439,462,463,440,0,474,499,500,475,439,462,463,440,43,440,463,464,441,0,475,500,501,476,440,463,464,441,43,441,464,465,442,0,476,501,502,477,441,464,465,442,43,442,465,466,443,0,477,502,503,478,442,465,466,443,43,443,466,467,444,0,478,503,504,479,443,466,467,444,43,444,467,468,445,0,479,504,505,480,444,467,468,445,43,445,468,469,446,0,480,505,506,481,445,468,469,446,43,446,469,470,447,0,481,506,507,482,446,469,470,447,43,447,470,471,448,0,482,507,508,483,447,470,471,448,43,448,471,472,449,0,483,508,509,484,448,471,472,449,43,449,472,473,450,0,484,509,510,485,449,472,473,450,43,450,473,474,451,0,485,510,511,486,450,473,474,451,43,451,474,475,452,0,486,511,512,487,451,474,475,452,43,452,475,476,453,0,487,512,513,488,452,475,476,453,43,453,476,477,454,0,488,513,514,489,453,476,477,454,43,454,477,478,455,0,489,514,515,490,454,477,478,455,43,455,478,479,456,0,490,515,516,491,455,478,479,456,43,456,479,480,457,0,491,516,517,492,456,479,480,457,43,457,480,481,458,0,492,517,518,493,457,480,481,458,43,458,481,482,459,0,493,518,519,494,458,481,482,459,43,459,482,483,460,0,494,519,520,495,459,482,483,460,43,460,483,484,461,0,495,520,521,496,460,483,484,461,42,461,484,24,0,496,521,522,461,484,47,42,0,485,462,0,523,524,499,0,485,462,43,462,485,486,463,0,499,524,525,500,462,485,486,463,43,463,486,487,464,0,500,525,526,501,463,486,487,464,43,464,487,488,465,0,501,526,527,502,464,487,488,465,43,465,488,489,466,0,502,527,528,503,465,488,489,466,43,466,489,490,467,0,503,528,529,504,466,489,490,467,43,467,490,491,468,0,504,529,530,505,467,490,491,468,43,468,491,492,469,0,505,530,531,506,468,491,492,469,43,469,492,493,470,0,506,531,532,507,469,492,493,470,43,470,493,494,471,0,507,532,533,508,470,493,494,471,43,471,494,495,472,0,508,533,534,509,471,494,495,472,43,472,495,496,473,0,509,534,535,510,472,495,496,473,43,473,496,497,474,0,510,535,536,511,473,496,497,474,43,474,497,498,475,0,511,536,537,512,474,497,498,475,43,475,498,499,476,0,512,537,538,513,475,498,499,476,43,476,499,500,477,0,513,538,539,514,476,499,500,477,43,477,500,501,478,0,514,539,540,515,477,500,501,478,43,478,501,502,479,0,515,540,541,516,478,501,502,479,43,479,502,503,480,0,516,541,542,517,479,502,503,480,43,480,503,504,481,0,517,542,543,518,480,503,504,481,43,481,504,505,482,0,518,543,544,519,481,504,505,482,43,482,505,506,483,0,519,544,545,520,482,505,506,483,43,483,506,507,484,0,520,545,546,521,483,506,507,484,42,484,507,24,0,521,546,547,484,507,47,42,0,508,485,0,548,549,524,0,508,485,43,485,508,509,486,0,524,549,550,525,485,508,509,486,43,486,509,510,487,0,525,550,551,526,486,509,510,487,43,487,510,511,488,0,526,551,552,527,487,510,511,488,43,488,511,512,489,0,527,552,553,528,488,511,512,489,43,489,512,513,490,0,528,553,554,529,489,512,513,490,43,490,513,514,491,0,529,554,555,530,490,513,514,491,43,491,514,515,492,0,530,555,556,531,491,514,515,492,43,492,515,516,493,0,531,556,557,532,492,515,516,493,43,493,516,517,494,0,532,557,558,533,493,516,517,494,43,494,517,518,495,0,533,558,559,534,494,517,518,495,43,495,518,519,496,0,534,559,560,535,495,518,519,496,43,496,519,520,497,0,535,560,561,536,496,519,520,497,43,497,520,521,498,0,536,561,562,537,497,520,521,498,43,498,521,522,499,0,537,562,563,538,498,521,522,499,43,499,522,523,500,0,538,563,564,539,499,522,523,500,43,500,523,524,501,0,539,564,565,540,500,523,524,501,43,501,524,525,502,0,540,565,566,541,501,524,525,502,43,502,525,526,503,0,541,566,567,542,502,525,526,503,43,503,526,527,504,0,542,567,568,543,503,526,527,504,43,504,527,528,505,0,543,568,569,544,504,527,528,505,43,505,528,529,506,0,544,569,570,545,505,528,529,506,43,506,529,530,507,0,545,570,571,546,506,529,530,507,42,507,530,24,0,546,571,572,507,530,47,42,0,531,508,0,573,574,549,0,531,508,43,508,531,532,509,0,549,574,575,550,508,531,532,509,43,509,532,533,510,0,550,575,576,551,509,532,533,510,43,510,533,534,511,0,551,576,577,552,510,533,534,511,43,511,534,535,512,0,552,577,578,553,511,534,535,512,43,512,535,536,513,0,553,578,579,554,512,535,536,513,43,513,536,537,514,0,554,579,580,555,513,536,537,514,43,514,537,538,515,0,555,580,581,556,514,537,538,515,43,515,538,539,516,0,556,581,582,557,515,538,539,516,43,516,539,540,517,0,557,582,583,558,516,539,540,517,43,517,540,541,518,0,558,583,584,559,517,540,541,518,43,518,541,542,519,0,559,584,585,560,518,541,542,519,43,519,542,543,520,0,560,585,586,561,519,542,543,520,43,520,543,544,521,0,561,586,587,562,520,543,544,521,43,521,544,545,522,0,562,587,588,563,521,544,545,522,43,522,545,546,523,0,563,588,589,564,522,545,546,523,43,523,546,547,524,0,564,589,590,565,523,546,547,524,43,524,547,548,525,0,565,590,591,566,524,547,548,525,43,525,548,549,526,0,566,591,592,567,525,548,549,526,43,526,549,550,527,0,567,592,593,568,526,549,550,527,43,527,550,551,528,0,568,593,594,569,527,550,551,528,43,528,551,552,529,0,569,594,595,570,528,551,552,529,43,529,552,553,530,0,570,595,596,571,529,552,553,530,42,530,553,24,0,571,596,597,530,553,47,42,0,1,531,0,598,599,574,0,2,531,43,531,1,2,532,0,574,599,600,575,531,2,4,532,43,532,2,3,533,0,575,600,601,576,532,4,6,533,43,533,3,4,534,0,576,601,602,577,533,6,8,534,43,534,4,5,535,0,577,602,603,578,534,8,10,535,43,535,5,6,536,0,578,603,604,579,535,10,12,536,43,536,6,7,537,0,579,604,605,580,536,12,14,537,43,537,7,8,538,0,580,605,606,581,537,14,16,538,43,538,8,9,539,0,581,606,607,582,538,16,18,539,43,539,9,10,540,0,582,607,608,583,539,18,20,540,43,540,10,11,541,0,583,608,609,584,540,20,22,541,43,541,11,12,542,0,584,609,610,585,541,22,24,542,43,542,12,13,543,0,585,610,611,586,542,24,26,543,43,543,13,14,544,0,586,611,612,587,543,26,28,544,43,544,14,15,545,0,587,612,613,588,544,28,30,545,43,545,15,16,546,0,588,613,614,589,545,30,32,546,43,546,16,17,547,0,589,614,615,590,546,32,34,547,43,547,17,18,548,0,590,615,616,591,547,34,36,548,43,548,18,19,549,0,591,616,617,592,548,36,38,549,43,549,19,20,550,0,592,617,618,593,549,38,40,550,43,550,20,21,551,0,593,618,619,594,550,40,42,551,43,551,21,22,552,0,594,619,620,595,551,42,44,552,43,552,22,23,553,0,595,620,621,596,552,44,46,553,42,553,23,24,0,596,621,622,553,46,47],morphTargets:[],name:"SphereGeometry",metadata:{faces:576,morphTargets:0,uvs:1,bones:0,materials:1,normals:554,generator:"io_three",version:3,vertices:554},animations:[],normals:[0,0,1,.130802,-.035157,.990753,.135685,0,.990722,.255135,-.0683,.964476,.264107,0,.964476,.374371,-.100162,.921842,.387524,0,.921842,.486465,-.130314,.863887,.503586,0,.863918,.59096,-.158452,.790948,.611805,0,.790979,.685537,-.183813,.704428,.709708,0,.704459,.768303,-.20603,.606006,.795495,0,.605914,.837947,-.224464,.497421,.867641,0,.497147,.893216,-.239174,.380688,.92468,0,.380718,.933409,-.249947,.257363,.966247,0,.257515,.957732,-.256569,.129826,.991455,-214e-6,.130314,.965941,-.258736,0,.999969,-61e-5,366e-6,.957732,-.256569,-.129826,.991455,-58e-5,-.130314,.933409,-.249947,-.257363,.966155,-183e-6,-.257851,.893216,-.239174,-.380688,.92468,0,-.380718,.837947,-.224464,-.497421,.867641,0,-.497147,.768303,-.20603,-.606006,.795495,0,-.605914,.685537,-.183813,-.704428,.709708,0,-.704459,.59096,-.158452,-.790948,.611805,0,-.790979,.486465,-.130314,-.863887,.503586,0,-.863918,.374371,-.100162,-.921842,.387524,0,-.921842,.255135,-.0683,-.964476,.264107,0,-.964476,.130802,-.035157,-.990753,.135685,0,-.990722,0,0,-1,.117313,-.067812,.990753,.228645,-.131993,.964507,.335673,-.193762,.921812,.436232,-.251839,.863857,.529832,-.305979,.790948,.614673,-.354991,.704337,.688833,-.397778,.606006,.751091,-.433821,.497574,.800684,-.462478,.380749,.836787,-.4832,.257393,.858638,-.495804,.129856,.866054,-.499924,0,.858638,-.495804,-.129856,.836787,-.4832,-.257393,.800684,-.462478,-.380749,.751091,-.433821,-.497574,.688833,-.397778,-.606006,.614673,-.354991,-.704337,.529832,-.305979,-.790948,.436232,-.251839,-.863857,.335673,-.193762,-.921812,.228645,-.131993,-.964507,.117313,-.067812,-.990753,.095737,-.095737,.990783,.186651,-.186651,.964507,.274026,-.274026,.921812,.356243,-.356243,.863796,.43263,-.43263,.790948,.501938,-.501938,.704337,.562487,-.562487,.605976,.613361,-.613361,.497543,.653829,-.653829,.380779,.683248,-.683248,.257485,.701102,-.701102,.129948,.707083,-.707083,0,.701102,-.701102,-.129948,.683248,-.683248,-.257485,.653829,-.653829,-.380779,.613361,-.613361,-.497543,.562487,-.562487,-.605976,.501938,-.501938,-.704337,.43263,-.43263,-.790948,.356243,-.356243,-.863796,.274026,-.274026,-.921812,.186651,-.186651,-.964507,.095737,-.095737,-.990783,.067812,-.117313,.990753,.131993,-.228645,.964507,.193762,-.335673,.921812,.251839,-.436232,.863857,.305979,-.529832,.790948,.354991,-.614673,.704337,.397778,-.688833,.606006,.433821,-.751091,.497574,.462478,-.800684,.380749,.4832,-.836787,.257393,.495804,-.858638,.129856,.499924,-.866054,0,.495804,-.858638,-.129856,.4832,-.836787,-.257393,.462478,-.800684,-.380749,.433821,-.751091,-.497574,.397778,-.688833,-.606006,.354991,-.614673,-.704337,.305979,-.529832,-.790948,.251839,-.436232,-.863857,.193762,-.335673,-.921812,.131993,-.228645,-.964507,.067812,-.117313,-.990753,.035157,-.130802,.990783,.0683,-.255135,.964476,.100162,-.374371,.921842,.130314,-.486465,.863887,.158452,-.59096,.790948,.183813,-.685537,.704428,.20603,-.768303,.606006,.224464,-.837947,.497421,.239174,-.893216,.380688,.249947,-.933409,.257363,.256569,-.957732,.129826,.258736,-.965941,0,.256569,-.957732,-.129826,.249947,-.933409,-.257363,.239174,-.893216,-.380688,.224464,-.837947,-.497421,.20603,-.768303,-.606006,.183813,-.685537,-.704428,.158452,-.59096,-.790948,.130314,-.486465,-.863887,.100162,-.374371,-.921842,.0683,-.255135,-.964476,.035157,-.130802,-.990783,0,-.135685,.990722,0,-.264107,.964476,0,-.387524,.921842,0,-.503586,.863918,0,-.611805,.790979,0,-.709708,.704459,0,-.795495,.605914,0,-.867641,.497147,0,-.92468,.380718,0,-.966247,.257515,0,-.991516,.129887,0,-1,0,0,-.991516,-.129887,0,-.966247,-.257515,0,-.92468,-.380718,0,-.867641,-.497147,0,-.795495,-.605914,0,-.709708,-.704459,0,-.611805,-.790979,0,-.503586,-.863918,0,-.387524,-.921842,0,-.264107,-.964476,0,-.135685,-.990722,-.035157,-.130802,.990783,-.0683,-.255135,.964476,-.100162,-.374371,.921842,-.130314,-.486465,.863887,-.158452,-.59096,.790948,-.183813,-.685537,.704428,-.20603,-.768303,.606006,-.224464,-.837947,.497421,-.239174,-.893216,.380688,-.249947,-.933409,.257363,-.256569,-.957732,.129826,-.258736,-.965941,0,-.256569,-.957732,-.129826,-.249947,-.933409,-.257363,-.239174,-.893216,-.380688,-.224464,-.837947,-.497421,-.20603,-.768303,-.606006,-.183813,-.685537,-.704428,-.158452,-.59096,-.790948,-.130314,-.486465,-.863887,-.100162,-.374371,-.921842,-.0683,-.255135,-.964476,-.035157,-.130802,-.990783,-.067812,-.117313,.990753,-.131993,-.228645,.964507,-.193762,-.335673,.921812,-.251839,-.436232,.863857,-.305979,-.529832,.790948,-.354991,-.614673,.704337,-.397778,-.688833,.606006,-.433821,-.751091,.497574,-.462478,-.800684,.380749,-.4832,-.836787,.257393,-.495804,-.858638,.129856,-.499924,-.866054,0,-.495804,-.858638,-.129856,-.4832,-.836787,-.257393,-.462478,-.800684,-.380749,-.433821,-.751091,-.497574,-.397778,-.688833,-.606006,-.354991,-.614673,-.704337,-.305979,-.529832,-.790948,-.251839,-.436232,-.863857,-.193762,-.335673,-.921812,-.131993,-.228645,-.964507,-.067812,-.117313,-.990753,-.095737,-.095737,.990783,-.186651,-.186651,.964507,-.274026,-.274026,.921812,-.356243,-.356243,.863796,-.43263,-.43263,.790948,-.501938,-.501938,.704337,-.562487,-.562487,.605976,-.613361,-.613361,.497543,-.653829,-.653829,.380779,-.683248,-.683248,.257485,-.701102,-.701102,.129948,-.707083,-.707083,0,-.701102,-.701102,-.129948,-.683248,-.683248,-.257485,-.653829,-.653829,-.380779,-.613361,-.613361,-.497543,-.562487,-.562487,-.605976,-.501938,-.501938,-.704337,-.43263,-.43263,-.790948,-.356243,-.356243,-.863796,-.274026,-.274026,-.921812,-.186651,-.186651,-.964507,-.095737,-.095737,-.990783,-.117313,-.067812,.990753,-.228645,-.131993,.964507,-.335673,-.193762,.921812,-.436232,-.251839,.863857,-.529832,-.305979,.790948,-.614673,-.354991,.704337,-.688833,-.397778,.606006,-.751091,-.433821,.497574,-.800684,-.462478,.380749,-.836787,-.4832,.257393,-.858638,-.495804,.129887,-.866054,-.499924,0,-.858638,-.495804,-.129856,-.836787,-.4832,-.257393,-.800684,-.462478,-.380749,-.751091,-.433821,-.497574,-.688833,-.397778,-.606006,-.614673,-.354991,-.704337,-.529832,-.305979,-.790948,-.436232,-.251839,-.863857,-.335673,-.193762,-.921812,-.228645,-.131993,-.964507,-.117313,-.067812,-.990753,-.130802,-.035157,.990753,-.255135,-.0683,.964476,-.374371,-.100162,.921842,-.486465,-.130314,.863887,-.59096,-.158452,.790948,-.685537,-.183813,.704428,-.768303,-.20603,.606006,-.837947,-.224464,.497421,-.893216,-.239174,.380688,-.933409,-.249947,.257363,-.957732,-.256569,.129826,-.965941,-.258736,0,-.957732,-.256569,-.129826,-.933409,-.249947,-.257363,-.893216,-.239174,-.380688,-.837947,-.224464,-.497421,-.768303,-.20603,-.606006,-.685537,-.183813,-.704428,-.59096,-.158452,-.790948,-.486465,-.130314,-.863887,-.374371,-.100162,-.921842,-.255135,-.0683,-.964476,-.130802,-.035157,-.990753,-.135685,0,.990722,-.264107,0,.964476,-.387524,0,.921842,-.503586,0,.863918,-.611805,0,.790979,-.709708,0,.704459,-.795495,0,.605914,-.867641,0,.497147,-.92468,0,.380718,-.966247,0,.257515,-.991516,0,.129887,-1,0,0,-.991516,0,-.129887,-.966247,0,-.257515,-.92468,0,-.380718,-.867641,0,-.497147,-.795495,0,-.605914,-.709708,0,-.704459,-.611805,0,-.790979,-.503586,0,-.863918,-.387524,0,-.921842,-.264107,0,-.964476,-.135685,0,-.990722,-.130802,.035157,.990753,-.255135,.0683,.964476,-.374371,.100162,.921842,-.486465,.130314,.863887,-.59096,.158452,.790948,-.685537,.183813,.704428,-.768303,.20603,.606006,-.837947,.224464,.497421,-.893216,.239174,.380688,-.933409,.249947,.257363,-.957732,.256569,.129826,-.965941,.258736,0,-.957732,.256569,-.129826,-.933409,.249947,-.257363,-.893216,.239174,-.380688,-.837947,.224464,-.497421,-.768303,.20603,-.606006,-.685537,.183813,-.704428,-.59096,.158452,-.790948,-.486465,.130314,-.863887,-.374371,.100162,-.921842,-.255135,.0683,-.964476,-.130802,.035157,-.990753,-.117313,.067812,.990753,-.228645,.131993,.964507,-.335673,.193762,.921812,-.436232,.251839,.863857,-.529832,.305979,.790948,-.614673,.354991,.704337,-.688833,.397778,.606006,-.751091,.433821,.497574,-.800684,.462478,.380749,-.836787,.4832,.257393,-.858638,.495804,.129856,-.866054,.499924,0,-.858638,.495804,-.129856,-.836787,.4832,-.257393,-.800684,.462478,-.380749,-.751091,.433821,-.497574,-.688833,.397778,-.606006,-.614673,.354991,-.704337,-.529832,.305979,-.790948,-.436232,.251839,-.863857,-.335673,.193762,-.921812,-.228645,.131993,-.964507,-.117313,.067812,-.990753,-.095737,.095737,.990783,-.186651,.186651,.964507,-.274026,.274026,.921812,-.356243,.356243,.863796,-.43263,.43263,.790948,-.501938,.501938,.704337,-.562487,.562487,.605976,-.613361,.613361,.497543,-.653829,.653829,.380779,-.683248,.683248,.257485,-.701102,.701102,.129948,-.707083,.707083,0,-.701102,.701102,-.129948,-.683248,.683248,-.257485,-.653829,.653829,-.380779,-.613361,.613361,-.497543,-.562487,.562487,-.605976,-.501938,.501938,-.704337,-.43263,.43263,-.790948,-.356243,.356243,-.863796,-.274026,.274026,-.921812,-.186651,.186651,-.964507,-.095737,.095737,-.990783,-.067812,.117313,.990753,-.131993,.228645,.964507,-.193762,.335673,.921812,-.251839,.436232,.863857,-.305979,.529832,.790948,-.354991,.614673,.704337,-.397778,.688833,.606006,-.433821,.751091,.497574,-.462478,.800684,.380749,-.4832,.836787,.257393,-.495804,.858638,.129856,-.499924,.866054,0,-.495804,.858638,-.129856,-.4832,.836787,-.257393,-.462478,.800684,-.380749,-.433821,.751091,-.497574,-.397778,.688833,-.606006,-.354991,.614673,-.704337,-.305979,.529832,-.790948,-.251839,.436232,-.863857,-.193762,.335673,-.921812,-.131993,.228645,-.964507,-.067812,.117313,-.990753,-.035157,.130802,.990783,-.0683,.255135,.964476,-.100162,.374371,.921842,-.130314,.486465,.863887,-.158452,.59096,.790948,-.183813,.685537,.704428,-.20603,.768303,.606006,-.224464,.837947,.497421,-.239174,.893216,.380688,-.249947,.933409,.257363,-.256569,.957732,.129826,-.258736,.965941,0,-.256569,.957732,-.129826,-.249947,.933409,-.257363,-.239174,.893216,-.380688,-.224464,.837947,-.497421,-.20603,.768303,-.606006,-.183813,.685537,-.704428,-.158452,.59096,-.790948,-.130314,.486465,-.863887,-.100162,.374371,-.921842,-.0683,.255135,-.964476,-.035157,.130802,-.990783,0,.135685,.990722,0,.264107,.964476,0,.387524,.921842,0,.503586,.863918,0,.611805,.790979,0,.709708,.704459,0,.795495,.605914,0,.867641,.497147,0,.92468,.380718,0,.966247,.257515,0,.991516,.129887,0,1,0,0,.991516,-.129887,0,.966247,-.257515,0,.92468,-.380718,0,.867641,-.497147,0,.795495,-.605914,0,.709708,-.704459,0,.611805,-.790979,0,.503586,-.863918,0,.387524,-.921842,0,.264107,-.964476,0,.135685,-.990722,.035157,.130802,.990783,.0683,.255135,.964476,.100162,.374371,.921842,.130314,.486465,.863887,.158452,.59096,.790948,.183813,.685537,.704428,.20603,.768303,.606006,.224464,.837947,.497421,.239174,.893216,.380688,.249947,.933409,.257363,.256569,.957732,.129826,.258736,.965941,0,.256569,.957732,-.129826,.249947,.933409,-.257363,.239174,.893216,-.380688,.224464,.837947,-.497421,.20603,.768303,-.606006,.183813,.685537,-.704428,.158452,.59096,-.790948,.130314,.486465,-.863887,.100162,.374371,-.921842,.0683,.255135,-.964476,.035157,.130802,-.990783,.067812,.117313,.990753,.131993,.228645,.964507,.193762,.335673,.921812,.251839,.436232,.863857,.305979,.529832,.790948,.354991,.614673,.704337,.397778,.688833,.606006,.433821,.751091,.497574,.462478,.800684,.380749,.4832,.836787,.257393,.495804,.858638,.129856,.499924,.866054,0,.495804,.858638,-.129856,.4832,.836787,-.257393,.462478,.800684,-.380749,.433821,.751091,-.497574,.397778,.688833,-.606006,.354991,.614673,-.704337,.305979,.529832,-.790948,.251839,.436232,-.863857,.193762,.335673,-.921812,.131993,.228645,-.964507,.067812,.117313,-.990753,.095737,.095737,.990783,.186651,.186651,.964507,.274026,.274026,.921812,.356243,.356243,.863796,.43263,.43263,.790948,.501938,.501938,.704337,.562487,.562487,.605976,.613361,.613361,.497543,.653829,.653829,.380779,.683248,.683248,.257485,.701224,.70101,.129643,.707419,.706748,-336e-6,.701468,.700766,-.129673,.683432,.683187,-.257149,.653829,.653829,-.380779,.613361,.613361,-.497543,.562487,.562487,-.605976,.501938,.501938,-.704337,.43263,.43263,-.790948,.356243,.356243,-.863796,.274026,.274026,-.921812,.186651,.186651,-.964507,.095737,.095737,-.990783,.117313,.067812,.990753,.228645,.131993,.964507,.335673,.193762,.921812,.436232,.251839,.863857,.529832,.305979,.790948,.614673,.354991,.704337,.688833,.397778,.606006,.751091,.433821,.497574,.800684,.462478,.380749,.836787,.4832,.257393,.858577,.495956,.129643,.865688,.500534,-366e-6,.858333,.496414,-.129643,.836818,.483352,-.256996,.800684,.462478,-.380749,.751091,.433821,-.497574,.688833,.397778,-.606006,.614673,.354991,-.704337,.529832,.305979,-.790948,.436232,.251839,-.863857,.335673,.193762,-.921812,.228645,.131993,-.964507,.117313,.067812,-.990753,.130802,.035157,.990753,.255135,.0683,.964476,.374371,.100162,.921842,.486465,.130314,.863887,.59096,.158452,.790948,.685537,.183813,.704428,.768303,.20603,.606006,.837947,.224464,.497421,.893216,.239174,.380688,.933409,.249947,.257363,.95764,.256752,.130345,.965819,.259163,275e-6,.957549,.257057,-.130345,.933256,.25016,-.257698,.893216,.239174,-.380688,.837947,.224464,-.497421,.768303,.20603,-.606006,.685537,.183813,-.704428,.59096,.158452,-.790948,.486465,.130314,-.863887,.374371,.100162,-.921842,.255135,.0683,-.964476,.130802,.035157,-.990753],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[1,1,.958333,.958333,1,.958333,.958333,.916667,1,.916667,.958333,.875,1,.875,.958333,.833333,1,.833333,.958333,.791667,1,.791667,.958333,.75,1,.75,.958333,.708333,1,.708333,.958333,.666667,1,.666667,.958333,.625,1,.625,.958333,.583333,1,.583333,.958333,.541667,1,.541667,.958333,.5,1,.5,.958333,.458333,1,.458333,.958333,.416667,1,.416667,.958333,.375,1,.375,.958333,.333333,1,.333333,.958333,.291667,1,.291667,.958333,.25,1,.25,.958333,.208333,1,.208333,.958333,.166667,1,.166667,.958333,.125,1,.125,.958333,.083333,1,.083333,.958333,.041667,1,.041667,.958333,0,.958333,1,.916667,.958333,.916667,.916667,.916667,.875,.916667,.833333,.916667,.791667,.916667,.75,.916667,.708333,.916667,.666667,.916667,.625,.916667,.583333,.916667,.541667,.916667,.5,.916667,.458333,.916667,.416667,.916667,.375,.916667,.333333,.916667,.291667,.916667,.25,.916667,.208333,.916667,.166667,.916667,.125,.916667,.083333,.916667,.041667,.916667,0,.916667,1,.875,.958333,.875,.916667,.875,.875,.875,.833333,.875,.791667,.875,.75,.875,.708333,.875,.666667,.875,.625,.875,.583333,.875,.541667,.875,.5,.875,.458333,.875,.416667,.875,.375,.875,.333333,.875,.291667,.875,.25,.875,.208333,.875,.166667,.875,.125,.875,.083333,.875,.041667,.875,0,.875,1,.833333,.958333,.833333,.916667,.833333,.875,.833333,.833333,.833333,.791667,.833333,.75,.833333,.708333,.833333,.666667,.833333,.625,.833333,.583333,.833333,.541667,.833333,.5,.833333,.458333,.833333,.416667,.833333,.375,.833333,.333333,.833333,.291667,.833333,.25,.833333,.208333,.833333,.166667,.833333,.125,.833333,.083333,.833333,.041667,.833333,0,.833333,1,.791667,.958333,.791667,.916667,.791667,.875,.791667,.833333,.791667,.791667,.791667,.75,.791667,.708333,.791667,.666667,.791667,.625,.791667,.583333,.791667,.541667,.791667,.5,.791667,.458333,.791667,.416667,.791667,.375,.791667,.333333,.791667,.291667,.791667,.25,.791667,.208333,.791667,.166667,.791667,.125,.791667,.083333,.791667,.041667,.791667,0,.791667,1,.75,.958333,.75,.916667,.75,.875,.75,.833333,.75,.791667,.75,.75,.75,.708333,.75,.666667,.75,.625,.75,.583333,.75,.541667,.75,.5,.75,.458333,.75,.416667,.75,.375,.75,.333333,.75,.291667,.75,.25,.75,.208333,.75,.166667,.75,.125,.75,.083333,.75,.041667,.75,0,.75,1,.708333,.958333,.708333,.916667,.708333,.875,.708333,.833333,.708333,.791667,.708333,.75,.708333,.708333,.708333,.666667,.708333,.625,.708333,.583333,.708333,.541667,.708333,.5,.708333,.458333,.708333,.416667,.708333,.375,.708333,.333333,.708333,.291667,.708333,.25,.708333,.208333,.708333,.166667,.708333,.125,.708333,.083333,.708333,.041667,.708333,0,.708333,1,.666667,.958333,.666667,.916667,.666667,.875,.666667,.833333,.666667,.791667,.666667,.75,.666667,.708333,.666667,.666667,.666667,.625,.666667,.583333,.666667,.541667,.666667,.5,.666667,.458333,.666667,.416667,.666667,.375,.666667,.333333,.666667,.291667,.666667,.25,.666667,.208333,.666667,.166667,.666667,.125,.666667,.083333,.666667,.041667,.666667,0,.666667,1,.625,.958333,.625,.916667,.625,.875,.625,.833333,.625,.791667,.625,.75,.625,.708333,.625,.666667,.625,.625,.625,.583333,.625,.541667,.625,.5,.625,.458333,.625,.416667,.625,.375,.625,.333333,.625,.291667,.625,.25,.625,.208333,.625,.166667,.625,.125,.625,.083333,.625,.041667,.625,0,.625,1,.583333,.958333,.583333,.916667,.583333,.875,.583333,.833333,.583333,.791667,.583333,.75,.583333,.708333,.583333,.666667,.583333,.625,.583333,.583333,.583333,.541667,.583333,.5,.583333,.458333,.583333,.416667,.583333,.375,.583333,.333333,.583333,.291667,.583333,.25,.583333,.208333,.583333,.166667,.583333,.125,.583333,.083333,.583333,.041667,.583333,0,.583333,1,.541667,.958333,.541667,.916667,.541667,.875,.541667,.833333,.541667,.791667,.541667,.75,.541667,.708333,.541667,.666667,.541667,.625,.541667,.583333,.541667,.541667,.541667,.5,.541667,.458333,.541667,.416667,.541667,.375,.541667,.333333,.541667,.291667,.541667,.25,.541667,.208333,.541667,.166667,.541667,.125,.541667,.083333,.541667,.041667,.541667,0,.541667,1,.5,.958333,.5,.916667,.5,.875,.5,.833333,.5,.791667,.5,.75,.5,.708333,.5,.666667,.5,.625,.5,.583333,.5,.541667,.5,.5,.5,.458333,.5,.416667,.5,.375,.5,.333333,.5,.291667,.5,.25,.5,.208333,.5,.166667,.5,.125,.5,.083333,.5,.041667,.5,0,.5,1,.458333,.958333,.458333,.916667,.458333,.875,.458333,.833333,.458333,.791667,.458333,.75,.458333,.708333,.458333,.666667,.458333,.625,.458333,.583333,.458333,.541667,.458333,.5,.458333,.458333,.458333,.416667,.458333,.375,.458333,.333333,.458333,.291667,.458333,.25,.458333,.208333,.458333,.166667,.458333,.125,.458333,.083333,.458333,.041667,.458333,0,.458333,1,.416667,.958333,.416667,.916667,.416667,.875,.416667,.833333,.416667,.791667,.416667,.75,.416667,.708333,.416667,.666667,.416667,.625,.416667,.583333,.416667,.541667,.416667,.5,.416667,.458333,.416667,.416667,.416667,.375,.416667,.333333,.416667,.291667,.416667,.25,.416667,.208333,.416667,.166667,.416667,.125,.416667,.083333,.416667,.041667,.416667,0,.416667,1,.375,.958333,.375,.916667,.375,.875,.375,.833333,.375,.791667,.375,.75,.375,.708333,.375,.666667,.375,.625,.375,.583333,.375,.541667,.375,.5,.375,.458333,.375,.416667,.375,.375,.375,.333333,.375,.291667,.375,.25,.375,.208333,.375,.166667,.375,.125,.375,.083333,.375,.041667,.375,0,.375,1,.333333,.958333,.333333,.916667,.333333,.875,.333333,.833333,.333333,.791667,.333333,.75,.333333,.708333,.333333,.666667,.333333,.625,.333333,.583333,.333333,.541667,.333333,.5,.333333,.458333,.333333,.416667,.333333,.375,.333333,.333333,.333333,.291667,.333333,.25,.333333,.208333,.333333,.166667,.333333,.125,.333333,.083333,.333333,.041667,.333333,0,.333333,1,.291667,.958333,.291667,.916667,.291667,.875,.291667,.833333,.291667,.791667,.291667,.75,.291667,.708333,.291667,.666667,.291667,.625,.291667,.583333,.291667,.541667,.291667,.5,.291667,.458333,.291667,.416667,.291667,.375,.291667,.333333,.291667,.291667,.291667,.25,.291667,.208333,.291667,.166667,.291667,.125,.291667,.083333,.291667,.041667,.291667,0,.291667,1,.25,.958333,.25,.916667,.25,.875,.25,.833333,.25,.791667,.25,.75,.25,.708333,.25,.666667,.25,.625,.25,.583333,.25,.541667,.25,.5,.25,.458333,.25,.416667,.25,.375,.25,.333333,.25,.291667,.25,.25,.25,.208333,.25,.166667,.25,.125,.25,.083333,.25,.041667,.25,0,.25,1,.208333,.958333,.208333,.916667,.208333,.875,.208333,.833333,.208333,.791667,.208333,.75,.208333,.708333,.208333,.666667,.208333,.625,.208333,.583333,.208333,.541667,.208333,.5,.208333,.458333,.208333,.416667,.208333,.375,.208333,.333333,.208333,.291667,.208333,.25,.208333,.208333,.208333,.166667,.208333,.125,.208333,.083333,.208333,.041667,.208333,0,.208333,1,.166667,.958333,.166667,.916667,.166667,.875,.166667,.833333,.166667,.791667,.166667,.75,.166667,.708333,.166667,.666667,.166667,.625,.166667,.583333,.166667,.541667,.166667,.5,.166667,.458333,.166667,.416667,.166667,.375,.166667,.333333,.166667,.291667,.166667,.25,.166667,.208333,.166667,.166667,.166667,.125,.166667,.083333,.166667,.041667,.166667,0,.166667,1,.125,.958333,.125,.916667,.125,.875,.125,.833333,.125,.791667,.125,.75,.125,.708333,.125,.666667,.125,.625,.125,.583333,.125,.541667,.125,.5,.125,.458333,.125,.416667,.125,.375,.125,.333333,.125,.291667,.125,.25,.125,.208333,.125,.166667,.125,.125,.125,.083333,.125,.041667,.125,0,.125,1,.083333,.958333,.083333,.916667,.083333,.875,.083333,.833333,.083333,.791667,.083333,.75,.083333,.708333,.083333,.666667,.083333,.625,.083333,.583333,.083333,.541667,.083333,.5,.083333,.458333,.083333,.416667,.083333,.375,.083333,.333333,.083333,.291667,.083333,.25,.083333,.208333,.083333,.166667,.083333,.125,.083333,.083333,.083333,.041667,.083333,0,.083333,1,.041667,.958333,.041667,.916667,.041667,.875,.041667,.833333,.041667,.791667,.041667,.75,.041667,.708333,.041667,.666667,.041667,.625,.041667,.583333,.041667,.541667,.041667,.5,.041667,.458333,.041667,.416667,.041667,.375,.041667,.333333,.041667,.291667,.041667,.25,.041667,.208333,.041667,.166667,.041667,.125,.041667,.083333,.041667,.041667,.041667,0,.041667,1,0,.958333,0,.916667,0,.875,0,.833333,0,.791667,0,.75,0,.708333,0,.666667,0,.625,0,.583333,0,.541667,0,.5,0,.458333,0,.416667,0,.375,0,.333333,0,.291667,0,.25,0,.208333,0,.166667,0,.125,0,.083333,0,.041667,0,0]],vertices:[0,0,.5,.0653,0,.4957,.1294,0,.483,.1913,0,.4619,.25,0,.433,.3044,0,.3967,.3536,0,.3536,.3967,0,.3044,.433,0,.25,.4619,0,.1913,.483,0,.1294,.4957,0,.0653,.5,0,0,.4957,0,-.0653,.483,0,-.1294,.4619,0,-.1913,.433,0,-.25,.3967,0,-.3044,.3536,0,-.3536,.3044,0,-.3967,.25,0,-.433,.1913,0,-.4619,.1294,0,-.483,.0653,0,-.4957,0,0,-.5,.063,-.0169,.4957,.125,-.0335,.483,.1848,-.0495,.4619,.2415,-.0647,.433,.294,-.0788,.3967,.3415,-.0915,.3536,.3832,-.1027,.3044,.4183,-.1121,.25,.4462,-.1196,.1913,.4665,-.125,.1294,.4788,-.1283,.0653,.483,-.1294,0,.4788,-.1283,-.0653,.4665,-.125,-.1294,.4462,-.1196,-.1913,.4183,-.1121,-.25,.3832,-.1027,-.3044,.3415,-.0915,-.3536,.294,-.0788,-.3967,.2415,-.0647,-.433,.1848,-.0495,-.4619,.125,-.0335,-.483,.063,-.0169,-.4957,.0565,-.0326,.4957,.1121,-.0647,.483,.1657,-.0957,.4619,.2165,-.125,.433,.2636,-.1522,.3967,.3062,-.1768,.3536,.3435,-.1983,.3044,.375,-.2165,.25,.4001,-.231,.1913,.4183,-.2415,.1294,.4293,-.2479,.0653,.433,-.25,0,.4293,-.2479,-.0653,.4183,-.2415,-.1294,.4001,-.231,-.1913,.375,-.2165,-.25,.3435,-.1983,-.3044,.3062,-.1768,-.3536,.2636,-.1522,-.3967,.2165,-.125,-.433,.1657,-.0957,-.4619,.1121,-.0647,-.483,.0565,-.0326,-.4957,.0461,-.0461,.4957,.0915,-.0915,.483,.1353,-.1353,.4619,.1768,-.1768,.433,.2152,-.2152,.3967,.25,-.25,.3536,.2805,-.2805,.3044,.3062,-.3062,.25,.3266,-.3266,.1913,.3415,-.3415,.1294,.3505,-.3505,.0653,.3536,-.3536,0,.3505,-.3505,-.0653,.3415,-.3415,-.1294,.3266,-.3266,-.1913,.3062,-.3062,-.25,.2805,-.2805,-.3044,.25,-.25,-.3536,.2152,-.2152,-.3967,.1768,-.1768,-.433,.1353,-.1353,-.4619,.0915,-.0915,-.483,.0461,-.0461,-.4957,.0326,-.0565,.4957,.0647,-.1121,.483,.0957,-.1657,.4619,.125,-.2165,.433,.1522,-.2636,.3967,.1768,-.3062,.3536,.1983,-.3435,.3044,.2165,-.375,.25,.231,-.4001,.1913,.2415,-.4183,.1294,.2479,-.4293,.0653,.25,-.433,0,.2479,-.4293,-.0653,.2415,-.4183,-.1294,.231,-.4001,-.1913,.2165,-.375,-.25,.1983,-.3435,-.3044,.1768,-.3062,-.3536,.1522,-.2636,-.3967,.125,-.2165,-.433,.0957,-.1657,-.4619,.0647,-.1121,-.483,.0326,-.0565,-.4957,.0169,-.063,.4957,.0335,-.125,.483,.0495,-.1848,.4619,.0647,-.2415,.433,.0788,-.294,.3967,.0915,-.3415,.3536,.1027,-.3832,.3044,.1121,-.4183,.25,.1196,-.4462,.1913,.125,-.4665,.1294,.1283,-.4788,.0653,.1294,-.483,0,.1283,-.4788,-.0653,.125,-.4665,-.1294,.1196,-.4462,-.1913,.1121,-.4183,-.25,.1027,-.3832,-.3044,.0915,-.3415,-.3536,.0788,-.294,-.3967,.0647,-.2415,-.433,.0495,-.1848,-.4619,.0335,-.125,-.483,.0169,-.063,-.4957,0,-.0653,.4957,0,-.1294,.483,0,-.1913,.4619,0,-.25,.433,0,-.3044,.3967,0,-.3536,.3536,0,-.3967,.3044,0,-.433,.25,0,-.4619,.1913,0,-.483,.1294,0,-.4957,.0653,0,-.5,0,0,-.4957,-.0653,0,-.483,-.1294,0,-.4619,-.1913,0,-.433,-.25,0,-.3967,-.3044,0,-.3536,-.3536,0,-.3044,-.3967,0,-.25,-.433,0,-.1913,-.4619,0,-.1294,-.483,0,-.0653,-.4957,-.0169,-.063,.4957,-.0335,-.125,.483,-.0495,-.1848,.4619,-.0647,-.2415,.433,-.0788,-.294,.3967,-.0915,-.3415,.3536,-.1027,-.3832,.3044,-.1121,-.4183,.25,-.1196,-.4462,.1913,-.125,-.4665,.1294,-.1283,-.4788,.0653,-.1294,-.483,0,-.1283,-.4788,-.0653,-.125,-.4665,-.1294,-.1196,-.4462,-.1913,-.1121,-.4183,-.25,-.1027,-.3832,-.3044,-.0915,-.3415,-.3536,-.0788,-.294,-.3967,-.0647,-.2415,-.433,-.0495,-.1848,-.4619,-.0335,-.125,-.483,-.0169,-.063,-.4957,-.0326,-.0565,.4957,-.0647,-.1121,.483,-.0957,-.1657,.4619,-.125,-.2165,.433,-.1522,-.2636,.3967,-.1768,-.3062,.3536,-.1983,-.3435,.3044,-.2165,-.375,.25,-.231,-.4001,.1913,-.2415,-.4183,.1294,-.2479,-.4293,.0653,-.25,-.433,0,-.2479,-.4293,-.0653,-.2415,-.4183,-.1294,-.231,-.4001,-.1913,-.2165,-.375,-.25,-.1983,-.3435,-.3044,-.1768,-.3062,-.3536,-.1522,-.2636,-.3967,-.125,-.2165,-.433,-.0957,-.1657,-.4619,-.0647,-.1121,-.483,-.0326,-.0565,-.4957,-.0461,-.0461,.4957,-.0915,-.0915,.483,-.1353,-.1353,.4619,-.1768,-.1768,.433,-.2152,-.2152,.3967,-.25,-.25,.3536,-.2805,-.2805,.3044,-.3062,-.3062,.25,-.3266,-.3266,.1913,-.3415,-.3415,.1294,-.3505,-.3505,.0653,-.3536,-.3536,0,-.3505,-.3505,-.0653,-.3415,-.3415,-.1294,-.3266,-.3266,-.1913,-.3062,-.3062,-.25,-.2805,-.2805,-.3044,-.25,-.25,-.3536,-.2152,-.2152,-.3967,-.1768,-.1768,-.433,-.1353,-.1353,-.4619,-.0915,-.0915,-.483,-.0461,-.0461,-.4957,-.0565,-.0326,.4957,-.1121,-.0647,.483,-.1657,-.0957,.4619,-.2165,-.125,.433,-.2636,-.1522,.3967,-.3062,-.1768,.3536,-.3435,-.1983,.3044,-.375,-.2165,.25,-.4001,-.231,.1913,-.4183,-.2415,.1294,-.4293,-.2479,.0653,-.433,-.25,0,-.4293,-.2479,-.0653,-.4183,-.2415,-.1294,-.4001,-.231,-.1913,-.375,-.2165,-.25,-.3435,-.1983,-.3044,-.3062,-.1768,-.3536,-.2636,-.1522,-.3967,-.2165,-.125,-.433,-.1657,-.0957,-.4619,-.1121,-.0647,-.483,-.0565,-.0326,-.4957,-.063,-.0169,.4957,-.125,-.0335,.483,-.1848,-.0495,.4619,-.2415,-.0647,.433,-.294,-.0788,.3967,-.3415,-.0915,.3536,-.3832,-.1027,.3044,-.4183,-.1121,.25,-.4462,-.1196,.1913,-.4665,-.125,.1294,-.4788,-.1283,.0653,-.483,-.1294,0,-.4788,-.1283,-.0653,-.4665,-.125,-.1294,-.4462,-.1196,-.1913,-.4183,-.1121,-.25,-.3832,-.1027,-.3044,-.3415,-.0915,-.3536,-.294,-.0788,-.3967,-.2415,-.0647,-.433,-.1848,-.0495,-.4619,-.125,-.0335,-.483,-.063,-.0169,-.4957,-.0653,0,.4957,-.1294,0,.483,-.1913,0,.4619,-.25,0,.433,-.3044,0,.3967,-.3536,0,.3536,-.3967,0,.3044,-.433,0,.25,-.4619,0,.1913,-.483,0,.1294,-.4957,0,.0653,-.5,0,0,-.4957,0,-.0653,-.483,0,-.1294,-.4619,0,-.1913,-.433,0,-.25,-.3967,0,-.3044,-.3536,0,-.3536,-.3044,0,-.3967,-.25,0,-.433,-.1913,0,-.4619,-.1294,0,-.483,-.0653,0,-.4957,-.063,.0169,.4957,-.125,.0335,.483,-.1848,.0495,.4619,-.2415,.0647,.433,-.294,.0788,.3967,-.3415,.0915,.3536,-.3832,.1027,.3044,-.4183,.1121,.25,-.4462,.1196,.1913,-.4665,.125,.1294,-.4788,.1283,.0653,-.483,.1294,0,-.4788,.1283,-.0653,-.4665,.125,-.1294,-.4462,.1196,-.1913,-.4183,.1121,-.25,-.3832,.1027,-.3044,-.3415,.0915,-.3536,-.294,.0788,-.3967,-.2415,.0647,-.433,-.1848,.0495,-.4619,-.125,.0335,-.483,-.063,.0169,-.4957,-.0565,.0326,.4957,-.1121,.0647,.483,-.1657,.0957,.4619,-.2165,.125,.433,-.2636,.1522,.3967,-.3062,.1768,.3536,-.3435,.1983,.3044,-.375,.2165,.25,-.4001,.231,.1913,-.4183,.2415,.1294,-.4293,.2479,.0653,-.433,.25,0,-.4293,.2479,-.0653,-.4183,.2415,-.1294,-.4001,.231,-.1913,-.375,.2165,-.25,-.3435,.1983,-.3044,-.3062,.1768,-.3536,-.2636,.1522,-.3967,-.2165,.125,-.433,-.1657,.0957,-.4619,-.1121,.0647,-.483,-.0565,.0326,-.4957,-.0461,.0461,.4957,-.0915,.0915,.483,-.1353,.1353,.4619,-.1768,.1768,.433,-.2152,.2152,.3967,-.25,.25,.3536,-.2805,.2805,.3044,-.3062,.3062,.25,-.3266,.3266,.1913,-.3415,.3415,.1294,-.3505,.3505,.0653,-.3536,.3536,0,-.3505,.3505,-.0653,-.3415,.3415,-.1294,-.3266,.3266,-.1913,-.3062,.3062,-.25,-.2805,.2805,-.3044,-.25,.25,-.3536,-.2152,.2152,-.3967,-.1768,.1768,-.433,-.1353,.1353,-.4619,-.0915,.0915,-.483,-.0461,.0461,-.4957,-.0326,.0565,.4957,-.0647,.1121,.483,-.0957,.1657,.4619,-.125,.2165,.433,-.1522,.2636,.3967,-.1768,.3062,.3536,-.1983,.3435,.3044,-.2165,.375,.25,-.231,.4001,.1913,-.2415,.4183,.1294,-.2479,.4293,.0653,-.25,.433,0,-.2479,.4293,-.0653,-.2415,.4183,-.1294,-.231,.4001,-.1913,-.2165,.375,-.25,-.1983,.3435,-.3044,-.1768,.3062,-.3536,-.1522,.2636,-.3967,-.125,.2165,-.433,-.0957,.1657,-.4619,-.0647,.1121,-.483,-.0326,.0565,-.4957,-.0169,.063,.4957,-.0335,.125,.483,-.0495,.1848,.4619,-.0647,.2415,.433,-.0788,.294,.3967,-.0915,.3415,.3536,-.1027,.3832,.3044,-.1121,.4183,.25,-.1196,.4462,.1913,-.125,.4665,.1294,-.1283,.4788,.0653,-.1294,.483,0,-.1283,.4788,-.0653,-.125,.4665,-.1294,-.1196,.4462,-.1913,-.1121,.4183,-.25,-.1027,.3832,-.3044,-.0915,.3415,-.3536,-.0788,.294,-.3967,-.0647,.2415,-.433,-.0495,.1848,-.4619,-.0335,.125,-.483,-.0169,.063,-.4957,0,.0653,.4957,0,.1294,.483,0,.1913,.4619,0,.25,.433,0,.3044,.3967,0,.3536,.3536,0,.3967,.3044,0,.433,.25,0,.4619,.1913,0,.483,.1294,0,.4957,.0653,0,.5,0,0,.4957,-.0653,0,.483,-.1294,0,.4619,-.1913,0,.433,-.25,0,.3967,-.3044,0,.3536,-.3536,0,.3044,-.3967,0,.25,-.433,0,.1913,-.4619,0,.1294,-.483,0,.0653,-.4957,.0169,.063,.4957,.0335,.125,.483,.0495,.1848,.4619,.0647,.2415,.433,.0788,.294,.3967,.0915,.3415,.3536,.1027,.3832,.3044,.1121,.4183,.25,.1196,.4462,.1913,.125,.4665,.1294,.1283,.4788,.0653,.1294,.483,0,.1283,.4788,-.0653,.125,.4665,-.1294,.1196,.4462,-.1913,.1121,.4183,-.25,.1027,.3832,-.3044,.0915,.3415,-.3536,.0788,.294,-.3967,.0647,.2415,-.433,.0495,.1848,-.4619,.0335,.125,-.483,.0169,.063,-.4957,.0326,.0565,.4957,.0647,.1121,.483,.0957,.1657,.4619,.125,.2165,.433,.1522,.2636,.3967,.1768,.3062,.3536,.1983,.3435,.3044,.2165,.375,.25,.231,.4001,.1913,.2415,.4183,.1294,.2479,.4293,.0653,.25,.433,0,.2479,.4293,-.0653,.2415,.4183,-.1294,.231,.4001,-.1913,.2165,.375,-.25,.1983,.3435,-.3044,.1768,.3062,-.3536,.1522,.2636,-.3967,.125,.2165,-.433,.0957,.1657,-.4619,.0647,.1121,-.483,.0326,.0565,-.4957,.0461,.0461,.4957,.0915,.0915,.483,.1353,.1353,.4619,.1768,.1768,.433,.2152,.2152,.3967,.25,.25,.3536,.2805,.2805,.3044,.3062,.3062,.25,.3266,.3266,.1913,.3415,.3415,.1294,.3505,.3505,.0653,.3536,.3536,0,.3505,.3505,-.0653,.3415,.3415,-.1294,.3266,.3266,-.1913,.3062,.3062,-.25,.2805,.2805,-.3044,.25,.25,-.3536,.2152,.2152,-.3967,.1768,.1768,-.433,.1353,.1353,-.4619,.0915,.0915,-.483,.0461,.0461,-.4957,.0565,.0326,.4957,.1121,.0647,.483,.1657,.0957,.4619,.2165,.125,.433,.2636,.1522,.3967,.3062,.1768,.3536,.3435,.1983,.3044,.375,.2165,.25,.4001,.231,.1913,.4183,.2415,.1294,.4293,.2479,.0653,.432805,.25,0,.429074,.2479,-.0653,.4183,.2415,-.1294,.4001,.231,-.1913,.375,.2165,-.25,.3435,.1983,-.3044,.3062,.1768,-.3536,.2636,.1522,-.3967,.2165,.125,-.433,.1657,.0957,-.4619,.1121,.0647,-.483,.0565,.0326,-.4957,.063,.0169,.4957,.125,.0335,.483,.1848,.0495,.4619,.2415,.0647,.433,.294,.0788,.3967,.3415,.0915,.3536,.3832,.1027,.3044,.4183,.1121,.25,.4462,.1196,.1913,.4665,.125,.1294,.4788,.1283,.0653,.483228,.1294,0,.478992,.1283,-.0653,.4665,.125,-.1294,.4462,.1196,-.1913,.4183,.1121,-.25,.3832,.1027,-.3044,.3415,.0915,-.3536,.294,.0788,-.3967,.2415,.0647,-.433,.1848,.0495,-.4619,.125,.0335,-.483,.063,.0169,-.4957],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.168627,.156863,.156863],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.168627,.156863,.156863],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"2b2828",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"5F05442A-9704-3BFB-BE1B-EE12E2150EE3",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,12,13,14,15,0,0,1,2,3,4,7,0,3,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4,43,4,5,8,9,0,1,1,1,1,4,7,8,9,43,5,0,10,8,0,1,1,1,1,7,0,10,8,43,0,1,11,10,0,1,1,1,1,0,3,11,10,43,1,4,9,11,0,1,1,1,1,3,4,9,11,43,9,8,13,12,0,1,1,1,1,9,8,7,4,43,8,10,14,13,0,1,1,1,1,8,10,0,7,43,10,11,15,14,0,1,1,1,1,10,11,3,0,43,11,9,12,15,0,1,1,1,1,11,9,4,3],morphTargets:[],name:"Box6Geometry",metadata:{faces:14,morphTargets:0,uvs:1,bones:0,materials:1,normals:12,generator:"io_three",version:3,vertices:16},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349,-.301492,-.301492,.904508,-.301492,.301492,.904508,.301492,-.301492,.904508,.301492,.301492,.904508],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.429289,-.429289,.5,-.429289,.429289,.5,.429289,-.429289,.5,.429289,.429289,.5,-.429289,.429289,2.25068,-.429289,-.429289,2.25068,.429289,-.429289,2.25068,.429289,.429289,2.25068],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.266667,.266667,.266667],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.266667,.266667,.266667],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"444444",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"DAF26EED-E8A1-3597-94D1-E65246622C91",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box3Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[0,0,0],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[0,0,0],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"64183BD0-6EAE-3D88-8ABC-1117C3AD9D35",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,12,13,14,15,0,0,1,2,3,4,7,0,3,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4,43,4,5,8,9,0,1,1,1,1,4,7,8,9,43,5,0,10,8,0,1,1,1,1,7,0,10,8,43,0,1,11,10,0,1,1,1,1,0,3,11,10,43,1,4,9,11,0,1,1,1,1,3,4,9,11,43,9,8,13,12,0,1,1,1,1,9,8,7,4,43,8,10,14,13,0,1,1,1,1,8,10,0,7,43,10,11,15,14,0,1,1,1,1,10,11,3,0,43,11,9,12,15,0,1,1,1,1,11,9,4,3],morphTargets:[],name:"Box5Geometry",metadata:{faces:14,morphTargets:0,uvs:1,bones:0,materials:1,normals:12,generator:"io_three",version:3,vertices:16},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349,-.301492,-.301492,.904508,-.301492,.301492,.904508,.301492,-.301492,.904508,.301492,.301492,.904508],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.429289,-.429289,.5,-.429289,.429289,.5,.429289,-.429289,.5,.429289,.429289,.5,-.429289,.429289,1.98065,-.429289,-.429289,1.98065,.429289,-.429289,1.98065,.429289,.429289,1.98065],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.266667,.266667,.266667],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.266667,.266667,.266667],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"444444",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"F1E8EF2D-6DD7-3144-9E90-9F95164FFC64",data:{faces:[42,0,1,2,0,0,1,2,0,1,2,42,0,2,3,0,3,2,4,0,2,3,42,0,3,4,0,5,4,6,0,3,4,42,0,4,5,0,7,6,8,0,4,5,42,0,5,6,0,9,8,10,0,5,6,42,0,6,7,0,11,10,12,0,6,7,42,0,7,8,0,13,12,14,0,7,8,42,0,8,9,0,15,14,16,0,8,9,42,0,9,10,0,17,16,18,0,9,10,42,0,10,11,0,19,18,20,0,10,11,42,0,11,12,0,21,20,22,0,11,12,42,0,12,1,0,23,22,24,0,12,1,42,50,51,13,0,3,0,1,13,14,15,42,52,50,13,0,5,3,1,16,13,15,42,53,52,13,0,7,5,1,17,16,15,42,54,53,13,0,9,7,1,18,17,15,42,55,54,13,0,11,9,1,19,18,15,42,56,55,13,0,13,11,1,20,19,15,42,57,56,13,0,15,13,1,21,20,15,42,58,57,13,0,17,15,1,22,21,15,42,59,58,13,0,19,17,1,23,22,15,42,60,59,13,0,21,19,1,24,23,15,42,61,60,13,0,23,21,1,25,24,15,42,51,61,13,0,25,23,1,14,25,15,43,2,1,14,15,0,1,1,1,1,2,1,26,27,43,3,2,15,16,0,1,1,1,1,3,2,27,28,43,4,3,16,17,0,1,1,1,1,4,3,28,29,43,5,4,17,18,0,1,1,1,1,5,4,29,30,43,6,5,18,19,0,1,1,1,1,6,5,30,31,43,7,6,19,20,0,1,1,1,1,7,6,31,32,43,8,7,20,21,0,1,1,1,1,8,7,32,33,43,9,8,21,22,0,1,1,1,1,9,8,33,34,43,10,9,22,23,0,1,1,1,1,10,9,34,35,43,11,10,23,24,0,1,1,1,1,11,10,35,36,43,12,11,24,25,0,1,1,1,1,12,11,36,37,43,1,12,25,14,0,1,1,1,1,1,12,37,26,43,15,14,27,26,0,1,1,1,1,27,26,38,39,43,16,15,26,28,0,1,1,1,1,28,27,39,40,43,17,16,28,29,0,1,1,1,1,29,28,40,41,43,18,17,29,30,0,1,1,1,1,30,29,41,42,43,19,18,30,31,0,1,1,1,1,31,30,42,43,43,20,19,31,32,0,1,1,1,1,32,31,43,44,43,21,20,32,33,0,1,1,1,1,33,32,44,45,43,22,21,33,34,0,1,1,1,1,34,33,45,46,43,23,22,34,35,0,1,1,1,1,35,34,46,47,43,24,23,35,36,0,1,1,1,1,36,35,47,48,43,25,24,36,37,0,1,1,1,1,37,36,48,49,43,14,25,37,27,0,1,1,1,1,26,37,49,38,43,26,27,39,38,0,1,1,1,1,39,38,50,51,43,28,26,38,40,0,1,1,1,1,40,39,51,52,43,29,28,40,41,0,1,1,1,1,41,40,52,53,43,30,29,41,42,0,1,1,1,1,42,41,53,54,43,31,30,42,43,0,1,1,1,1,43,42,54,55,43,32,31,43,44,0,1,1,1,1,44,43,55,56,43,33,32,44,45,0,1,1,1,1,45,44,56,57,43,34,33,45,46,0,1,1,1,1,46,45,57,58,43,35,34,46,47,0,1,1,1,1,47,46,58,59,43,36,35,47,48,0,1,1,1,1,48,47,59,60,43,37,36,48,49,0,1,1,1,1,49,48,60,61,43,27,37,49,39,0,1,1,1,1,38,49,61,50,43,38,39,51,50,0,1,1,1,1,51,50,14,13,43,40,38,50,52,0,1,1,1,1,52,51,13,16,43,41,40,52,53,0,1,1,1,1,53,52,16,17,43,42,41,53,54,0,1,1,1,1,54,53,17,18,43,43,42,54,55,0,1,1,1,1,55,54,18,19,43,44,43,55,56,0,1,1,1,1,56,55,19,20,43,45,44,56,57,0,1,1,1,1,57,56,20,21,43,46,45,57,58,0,1,1,1,1,58,57,21,22,43,47,46,58,59,0,1,1,1,1,59,58,22,23,43,48,47,59,60,0,1,1,1,1,60,59,23,24,43,49,48,60,61,0,1,1,1,1,61,60,24,25,43,39,49,61,51,0,1,1,1,1,50,61,25,14],morphTargets:[],name:"Cone1Geometry",metadata:{faces:72,morphTargets:0,uvs:1,bones:0,materials:1,normals:62,generator:"io_three",version:3,vertices:62},animations:[],normals:[0,0,1,0,-.881924,-.471358,.440962,-.763756,-.471358,.763756,-.440962,-.471358,.881924,0,-.471358,.763756,.440962,-.471358,.440962,.763756,-.471358,0,.881924,-.471358,-.440962,.763756,-.471358,-.763756,.440962,-.471358,-.881924,0,-.471358,-.763756,-.440962,-.471358,-.440962,-.763756,-.471358,-.381451,.664937,-.642109,0,.768029,-.6404,0,0,-.999969,-.658589,.384564,-.646779,-.757225,.004242,-.653127,-.65276,-.372662,-.659536,-.375622,-.64629,-.664205,0,-.746025,-.665883,.375622,-.64629,-.664205,.65276,-.372662,-.659536,.757225,.004242,-.653127,.658589,.384564,-.646779,.381451,.664937,-.642109,0,-.663503,-.748131,.333323,-.569689,-.751213,.566546,-.31962,-.759484,.637379,.007263,-.770501,.537675,.317515,-.78106,.304483,.534288,-.788537,0,.611499,-.791223,-.304483,.534288,-.788537,-.537675,.317515,-.78106,-.637379,.007263,-.770501,-.566546,-.31962,-.759484,-.333323,-.569689,-.751213,0,-.778863,-.627155,.384259,-.674245,-.630604,.66158,-.390667,-.640004,.757378,-.008637,-.652882,.6498,.366588,-.665822,.372448,.636555,-.675283,0,.734336,-.678732,-.372448,.636555,-.675283,-.6498,.366588,-.665822,-.757378,-.008637,-.652882,-.66158,-.390667,-.640004,-.384259,-.674245,-.630604,0,.650502,-.759484,-.325999,.56093,-.760918,-.559343,.319315,-.764916,-.637623,-.003571,-.770318,-.545122,-.318278,-.775567,-.311747,-.543474,-.779351,0,-.624775,-.780755,.311747,-.543474,-.779351,.545122,-.318278,-.775567,.637623,-.003571,-.770318,.559343,.319315,-.764916,.325999,.56093,-.760918],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,.083333,0,.083333,1,.166667,0,.166667,1,.25,0,.25,1,.333333,0,.333333,1,.416667,0,.416667,1,.5,0,.5,1,.583333,0,.583333,1,.666667,0,.666667,1,.75,0,.75,1,.833333,0,.833333,1,.916667,0,.916667,1,1,0,1,1]],vertices:[0,0,.5,0,-.5,-.5,.25,-.433,-.5,.433,-.25,-.5,.5,0,-.5,.433,.25,-.5,.25,.433,-.5,0,.5,-.5,-.25,.433,-.5,-.433,.25,-.5,-.5,0,-.5,-.433,-.25,-.5,-.25,-.433,-.5,0,-.009119,-.350466,0,-.4,-.5,.199998,-.346399,-.5,.346399,-.199998,-.5,.4,0,-.5,.346399,.199998,-.5,.199998,.346399,-.5,0,.4,-.5,-.199998,.346399,-.5,-.346399,.199998,-.5,-.4,0,-.5,-.346399,-.199998,-.5,-.199998,-.346399,-.5,.199998,-.349077,-.538602,0,-.402678,-.538602,.346399,-.202676,-.538602,.4,-.002678,-.538602,.346399,.19732,-.538602,.199998,.34372,-.538602,0,.397322,-.538602,-.199998,.34372,-.538602,-.346399,.19732,-.538602,-.4,-.002678,-.538602,-.346399,-.202676,-.538602,-.199998,-.349077,-.538602,.149996,-.262476,-.538602,0,-.302678,-.538602,.259798,-.152674,-.538602,.3,-.002678,-.538602,.259798,.147317,-.538602,.149996,.257119,-.538602,0,.297322,-.538602,-.149996,.257119,-.538602,-.259798,.147317,-.538602,-.3,-.002678,-.538602,-.259798,-.152674,-.538602,-.149996,-.262476,-.538602,.149996,-.268917,-.350466,0,-.309119,-.350466,.259798,-.159115,-.350466,.3,-.009119,-.350466,.259798,.140876,-.350466,.149996,.250678,-.350466,0,.290881,-.350466,-.149996,.250678,-.350466,-.259798,.140876,-.350466,-.3,-.009119,-.350466,-.259798,-.159115,-.350466,-.149996,-.268917,-.350466],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.376471,.121569,.121569],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.376471,.121569,.121569],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"601f1f",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"CA468235-6318-31E9-A81A-2C1F5F2934B1",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box12Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.690196,.690196,.690196],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.690196,.690196,.690196],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"b0b0b0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"9838AE54-DDD3-3795-82AD-49AEB706B30F",data:{faces:[43,0,24,25,1,0,0,1,2,3,0,1,2,3,43,1,25,26,2,0,3,2,4,5,3,2,4,5,43,2,26,27,3,0,5,4,6,7,5,4,6,7,43,3,27,28,4,0,7,6,8,9,7,6,8,9,43,4,28,29,5,0,9,8,10,11,9,8,10,11,43,5,29,30,6,0,11,10,12,13,11,10,12,13,43,6,30,31,7,0,13,12,14,15,13,12,14,15,43,7,31,32,8,0,15,14,16,17,15,14,16,17,43,8,32,33,9,0,17,16,18,19,17,16,18,19,43,9,33,34,10,0,19,18,20,21,19,18,20,21,43,10,34,35,11,0,21,20,22,23,21,20,22,23,43,11,35,36,12,0,23,22,24,25,23,22,24,25,43,12,36,37,13,0,25,24,26,27,25,24,26,27,43,13,37,38,14,0,27,26,28,29,27,26,28,29,43,14,38,39,15,0,29,28,30,31,29,28,30,31,43,15,39,40,16,0,31,30,32,33,31,30,32,33,43,16,40,41,17,0,33,32,34,35,33,32,34,35,43,17,41,42,18,0,35,34,36,37,35,34,36,37,43,18,42,43,19,0,37,36,38,39,37,36,38,39,43,19,43,44,20,0,39,38,40,41,39,38,40,41,43,20,44,45,21,0,41,40,42,43,41,40,42,43,43,21,45,46,22,0,43,42,44,45,43,42,44,45,43,22,46,47,23,0,45,44,46,47,45,44,46,47,43,24,0,23,47,0,48,49,47,46,1,0,47,46,43,24,48,49,25,0,1,50,51,2,1,48,49,2,43,25,49,50,26,0,2,51,52,4,2,49,50,4,43,26,50,51,27,0,4,52,53,6,4,50,51,6,43,27,51,52,28,0,6,53,54,8,6,51,52,8,43,28,52,53,29,0,8,54,55,10,8,52,53,10,43,29,53,54,30,0,10,55,56,12,10,53,54,12,43,30,54,55,31,0,12,56,57,14,12,54,55,14,43,31,55,56,32,0,14,57,58,16,14,55,56,16,43,32,56,57,33,0,16,58,59,18,16,56,57,18,43,33,57,58,34,0,18,59,60,20,18,57,58,20,43,34,58,59,35,0,20,60,61,22,20,58,59,22,43,35,59,60,36,0,22,61,62,24,22,59,60,24,43,36,60,61,37,0,24,62,63,26,24,60,61,26,43,37,61,62,38,0,26,63,64,28,26,61,62,28,43,38,62,63,39,0,28,64,65,30,28,62,63,30,43,39,63,64,40,0,30,65,66,32,30,63,64,32,43,40,64,65,41,0,32,66,67,34,32,64,65,34,43,41,65,66,42,0,34,67,68,36,34,65,66,36,43,42,66,67,43,0,36,68,69,38,36,66,67,38,43,43,67,68,44,0,38,69,70,40,38,67,68,40,43,44,68,69,45,0,40,70,71,42,40,68,69,42,43,45,69,70,46,0,42,71,72,44,42,69,70,44,43,46,70,71,47,0,44,72,73,46,44,70,71,46,43,47,71,48,24,0,46,73,74,48,46,71,48,1,43,48,72,73,49,0,50,75,76,51,48,72,73,49,43,49,73,74,50,0,51,76,77,52,49,73,74,50,43,50,74,75,51,0,52,77,78,53,50,74,75,51,43,51,75,76,52,0,53,78,79,54,51,75,76,52,43,52,76,77,53,0,54,79,80,55,52,76,77,53,43,53,77,78,54,0,55,80,81,56,53,77,78,54,43,54,78,79,55,0,56,81,82,57,54,78,79,55,43,55,79,80,56,0,57,82,83,58,55,79,80,56,43,56,80,81,57,0,58,83,84,59,56,80,81,57,43,57,81,82,58,0,59,84,85,60,57,81,82,58,43,58,82,83,59,0,60,85,86,61,58,82,83,59,43,59,83,84,60,0,61,86,87,62,59,83,84,60,43,60,84,85,61,0,62,87,88,63,60,84,85,61,43,61,85,86,62,0,63,88,89,64,61,85,86,62,43,62,86,87,63,0,64,89,90,65,62,86,87,63,43,63,87,88,64,0,65,90,91,66,63,87,88,64,43,64,88,89,65,0,66,91,92,67,64,88,89,65,43,65,89,90,66,0,67,92,93,68,65,89,90,66,43,66,90,91,67,0,68,93,94,69,66,90,91,67,43,67,91,92,68,0,69,94,95,70,67,91,92,68,43,68,92,93,69,0,70,95,96,71,68,92,93,69,43,69,93,94,70,0,71,96,97,72,69,93,94,70,43,70,94,95,71,0,72,97,98,73,70,94,95,71,43,71,95,72,48,0,73,98,99,74,71,95,72,48,43,72,96,97,73,0,75,100,101,76,72,96,97,73,43,73,97,98,74,0,76,101,102,77,73,97,98,74,43,74,98,99,75,0,77,102,103,78,74,98,99,75,43,75,99,100,76,0,78,103,104,79,75,99,100,76,43,76,100,101,77,0,79,104,105,80,76,100,101,77,43,77,101,102,78,0,80,105,106,81,77,101,102,78,43,78,102,103,79,0,81,106,107,82,78,102,103,79,43,79,103,104,80,0,82,107,108,83,79,103,104,80,43,80,104,105,81,0,83,108,109,84,80,104,105,81,43,81,105,106,82,0,84,109,110,85,81,105,106,82,43,82,106,107,83,0,85,110,111,86,82,106,107,83,43,83,107,108,84,0,86,111,112,87,83,107,108,84,43,84,108,109,85,0,87,112,113,88,84,108,109,85,43,85,109,110,86,0,88,113,114,89,85,109,110,86,43,86,110,111,87,0,89,114,115,90,86,110,111,87,43,87,111,112,88,0,90,115,116,91,87,111,112,88,43,88,112,113,89,0,91,116,117,92,88,112,113,89,43,89,113,114,90,0,92,117,118,93,89,113,114,90,43,90,114,115,91,0,93,118,119,94,90,114,115,91,43,91,115,116,92,0,94,119,120,95,91,115,116,92,43,92,116,117,93,0,95,120,121,96,92,116,117,93,43,93,117,118,94,0,96,121,122,97,93,117,118,94,43,94,118,119,95,0,97,122,123,98,94,118,119,95,43,95,119,96,72,0,98,123,124,99,95,119,96,72,43,96,120,121,97,0,100,125,126,101,96,120,121,97,43,97,121,122,98,0,101,126,127,102,97,121,122,98,43,98,122,123,99,0,102,127,128,103,98,122,123,99,43,99,123,124,100,0,103,128,129,104,99,123,124,100,43,100,124,125,101,0,104,129,130,105,100,124,125,101,43,101,125,126,102,0,105,130,131,106,101,125,126,102,43,102,126,127,103,0,106,131,132,107,102,126,127,103,43,103,127,128,104,0,107,132,133,108,103,127,128,104,43,104,128,129,105,0,108,133,134,109,104,128,129,105,43,105,129,130,106,0,109,134,135,110,105,129,130,106,43,106,130,131,107,0,110,135,136,111,106,130,131,107,43,107,131,132,108,0,111,136,137,112,107,131,132,108,43,108,132,133,109,0,112,137,138,113,108,132,133,109,43,109,133,134,110,0,113,138,139,114,109,133,134,110,43,110,134,135,111,0,114,139,140,115,110,134,135,111,43,111,135,136,112,0,115,140,141,116,111,135,136,112,43,112,136,137,113,0,116,141,142,117,112,136,137,113,43,113,137,138,114,0,117,142,143,118,113,137,138,114,43,114,138,139,115,0,118,143,144,119,114,138,139,115,43,115,139,140,116,0,119,144,145,120,115,139,140,116,43,116,140,141,117,0,120,145,146,121,116,140,141,117,43,117,141,142,118,0,121,146,147,122,117,141,142,118,43,118,142,143,119,0,122,147,148,123,118,142,143,119,43,119,143,120,96,0,123,148,149,124,119,143,120,96,43,120,144,145,121,0,125,150,151,126,120,144,145,121,43,121,145,146,122,0,126,151,152,127,121,145,146,122,43,122,146,147,123,0,127,152,153,128,122,146,147,123,43,123,147,148,124,0,128,153,154,129,123,147,148,124,43,124,148,149,125,0,129,154,155,130,124,148,149,125,43,125,149,150,126,0,130,155,156,131,125,149,150,126,43,126,150,151,127,0,131,156,157,132,126,150,151,127,43,127,151,152,128,0,132,157,158,133,127,151,152,128,43,128,152,153,129,0,133,158,159,134,128,152,153,129,43,129,153,154,130,0,134,159,160,135,129,153,154,130,43,130,154,155,131,0,135,160,161,136,130,154,155,131,43,131,155,156,132,0,136,161,162,137,131,155,156,132,43,132,156,157,133,0,137,162,163,138,132,156,157,133,43,133,157,158,134,0,138,163,164,139,133,157,158,134,43,134,158,159,135,0,139,164,165,140,134,158,159,135,43,135,159,160,136,0,140,165,166,141,135,159,160,136,43,136,160,161,137,0,141,166,167,142,136,160,161,137,43,137,161,162,138,0,142,167,168,143,137,161,162,138,43,138,162,163,139,0,143,168,169,144,138,162,163,139,43,139,163,164,140,0,144,169,170,145,139,163,164,140,43,140,164,165,141,0,145,170,171,146,140,164,165,141,43,141,165,166,142,0,146,171,172,147,141,165,166,142,43,142,166,167,143,0,147,172,173,148,142,166,167,143,43,143,167,144,120,0,148,173,174,149,143,167,144,120,43,144,168,169,145,0,150,175,176,151,144,168,169,145,43,145,169,170,146,0,151,176,177,152,145,169,170,146,43,146,170,171,147,0,152,177,178,153,146,170,171,147,43,147,171,172,148,0,153,178,179,154,147,171,172,148,43,148,172,173,149,0,154,179,180,155,148,172,173,149,43,149,173,174,150,0,155,180,181,156,149,173,174,150,43,150,174,175,151,0,156,181,182,157,150,174,175,151,43,151,175,176,152,0,157,182,183,158,151,175,176,152,43,152,176,177,153,0,158,183,184,159,152,176,177,153,43,153,177,178,154,0,159,184,185,160,153,177,178,154,43,154,178,179,155,0,160,185,186,161,154,178,179,155,43,155,179,180,156,0,161,186,187,162,155,179,180,156,43,156,180,181,157,0,162,187,188,163,156,180,181,157,43,157,181,182,158,0,163,188,189,164,157,181,182,158,43,158,182,183,159,0,164,189,190,165,158,182,183,159,43,159,183,184,160,0,165,190,191,166,159,183,184,160,43,160,184,185,161,0,166,191,192,167,160,184,185,161,43,161,185,186,162,0,167,192,193,168,161,185,186,162,43,162,186,187,163,0,168,193,194,169,162,186,187,163,43,163,187,188,164,0,169,194,195,170,163,187,188,164,43,164,188,189,165,0,170,195,196,171,164,188,189,165,43,165,189,190,166,0,171,196,197,172,165,189,190,166,43,166,190,191,167,0,172,197,198,173,166,190,191,167,43,167,191,168,144,0,173,198,199,174,167,191,168,144,43,168,192,193,169,0,175,200,201,176,168,192,193,169,43,169,193,194,170,0,176,201,202,177,169,193,194,170,43,170,194,195,171,0,177,202,203,178,170,194,195,171,43,171,195,196,172,0,178,203,204,179,171,195,196,172,43,172,196,197,173,0,179,204,205,180,172,196,197,173,43,173,197,198,174,0,180,205,206,181,173,197,198,174,43,174,198,199,175,0,181,206,207,182,174,198,199,175,43,175,199,200,176,0,182,207,208,183,175,199,200,176,43,176,200,201,177,0,183,208,209,184,176,200,201,177,43,177,201,202,178,0,184,209,210,185,177,201,202,178,43,178,202,203,179,0,185,210,211,186,178,202,203,179,43,179,203,204,180,0,186,211,212,187,179,203,204,180,43,180,204,205,181,0,187,212,213,188,180,204,205,181,43,181,205,206,182,0,188,213,214,189,181,205,206,182,43,182,206,207,183,0,189,214,215,190,182,206,207,183,43,183,207,208,184,0,190,215,216,191,183,207,208,184,43,184,208,209,185,0,191,216,217,192,184,208,209,185,43,185,209,210,186,0,192,217,218,193,185,209,210,186,43,186,210,211,187,0,193,218,219,194,186,210,211,187,43,187,211,212,188,0,194,219,220,195,187,211,212,188,43,188,212,213,189,0,195,220,221,196,188,212,213,189,43,189,213,214,190,0,196,221,222,197,189,213,214,190,43,190,214,215,191,0,197,222,223,198,190,214,215,191,43,191,215,192,168,0,198,223,224,199,191,215,192,168,43,192,216,217,193,0,200,225,226,201,192,216,217,193,43,193,217,218,194,0,201,226,227,202,193,217,218,194,43,194,218,219,195,0,202,227,228,203,194,218,219,195,43,195,219,220,196,0,203,228,229,204,195,219,220,196,43,196,220,221,197,0,204,229,230,205,196,220,221,197,43,197,221,222,198,0,205,230,231,206,197,221,222,198,43,198,222,223,199,0,206,231,232,207,198,222,223,199,43,199,223,224,200,0,207,232,233,208,199,223,224,200,43,200,224,225,201,0,208,233,234,209,200,224,225,201,43,201,225,226,202,0,209,234,235,210,201,225,226,202,43,202,226,227,203,0,210,235,236,211,202,226,227,203,43,203,227,228,204,0,211,236,237,212,203,227,228,204,43,204,228,229,205,0,212,237,238,213,204,228,229,205,43,205,229,230,206,0,213,238,239,214,205,229,230,206,43,206,230,231,207,0,214,239,240,215,206,230,231,207,43,207,231,232,208,0,215,240,241,216,207,231,232,208,43,208,232,233,209,0,216,241,242,217,208,232,233,209,43,209,233,234,210,0,217,242,243,218,209,233,234,210,43,210,234,235,211,0,218,243,244,219,210,234,235,211,43,211,235,236,212,0,219,244,245,220,211,235,236,212,43,212,236,237,213,0,220,245,246,221,212,236,237,213,43,213,237,238,214,0,221,246,247,222,213,237,238,214,43,214,238,239,215,0,222,247,248,223,214,238,239,215,43,215,239,216,192,0,223,248,249,224,215,239,216,192,43,216,240,241,217,0,225,250,251,226,216,240,241,217,43,217,241,242,218,0,226,251,252,227,217,241,242,218,43,218,242,243,219,0,227,252,253,228,218,242,243,219,43,219,243,244,220,0,228,253,254,229,219,243,244,220,43,220,244,245,221,0,229,254,255,230,220,244,245,221,43,221,245,246,222,0,230,255,256,231,221,245,246,222,43,222,246,247,223,0,231,256,257,232,222,246,247,223,43,223,247,248,224,0,232,257,258,233,223,247,248,224,43,224,248,249,225,0,233,258,259,234,224,248,249,225,43,225,249,250,226,0,234,259,260,235,225,249,250,226,43,226,250,251,227,0,235,260,261,236,226,250,251,227,43,227,251,252,228,0,236,261,262,237,227,251,252,228,43,228,252,253,229,0,237,262,263,238,228,252,253,229,43,229,253,254,230,0,238,263,264,239,229,253,254,230,43,230,254,255,231,0,239,264,265,240,230,254,255,231,43,231,255,256,232,0,240,265,266,241,231,255,256,232,43,232,256,257,233,0,241,266,267,242,232,256,257,233,43,233,257,258,234,0,242,267,268,243,233,257,258,234,43,234,258,259,235,0,243,268,269,244,234,258,259,235,43,235,259,260,236,0,244,269,270,245,235,259,260,236,43,236,260,261,237,0,245,270,271,246,236,260,261,237,43,237,261,262,238,0,246,271,272,247,237,261,262,238,43,238,262,263,239,0,247,272,273,248,238,262,263,239,43,239,263,240,216,0,248,273,274,249,239,263,240,216,43,240,264,265,241,0,250,275,276,251,240,264,265,241,43,241,265,266,242,0,251,276,277,252,241,265,266,242,43,242,266,267,243,0,252,277,278,253,242,266,267,243,43,243,267,268,244,0,253,278,279,254,243,267,268,244,43,244,268,269,245,0,254,279,280,255,244,268,269,245,43,245,269,270,246,0,255,280,281,256,245,269,270,246,43,246,270,271,247,0,256,281,282,257,246,270,271,247,43,247,271,272,248,0,257,282,283,258,247,271,272,248,43,248,272,273,249,0,258,283,284,259,248,272,273,249,43,249,273,274,250,0,259,284,285,260,249,273,274,250,43,250,274,275,251,0,260,285,286,261,250,274,275,251,43,251,275,276,252,0,261,286,287,262,251,275,276,252,43,252,276,277,253,0,262,287,288,263,252,276,277,253,43,253,277,278,254,0,263,288,289,264,253,277,278,254,43,254,278,279,255,0,264,289,290,265,254,278,279,255,43,255,279,280,256,0,265,290,291,266,255,279,280,256,43,256,280,281,257,0,266,291,292,267,256,280,281,257,43,257,281,282,258,0,267,292,293,268,257,281,282,258,43,258,282,283,259,0,268,293,294,269,258,282,283,259,43,259,283,284,260,0,269,294,295,270,259,283,284,260,43,260,284,285,261,0,270,295,296,271,260,284,285,261,43,261,285,286,262,0,271,296,297,272,261,285,286,262,43,262,286,287,263,0,272,297,298,273,262,286,287,263,43,263,287,264,240,0,273,298,299,274,263,287,264,240,43,264,288,289,265,0,275,300,301,276,264,25,288,265,43,265,289,290,266,0,276,301,302,277,265,288,289,266,43,266,290,291,267,0,277,302,303,278,266,289,290,267,43,267,291,292,268,0,278,303,304,279,267,290,291,268,43,268,292,293,269,0,279,304,305,280,268,291,292,269,43,269,293,294,270,0,280,305,306,281,269,292,293,270,43,270,294,295,271,0,281,306,307,282,270,293,294,271,43,271,295,296,272,0,282,307,308,283,271,294,295,272,43,272,296,297,273,0,283,308,309,284,272,295,296,273,43,273,297,298,274,0,284,309,310,285,273,296,297,274,43,274,298,299,275,0,285,310,311,286,274,297,298,275,43,275,299,300,276,0,286,311,312,287,275,298,0,276,43,276,300,301,277,0,287,312,313,288,276,0,299,277,43,277,301,302,278,0,288,313,314,289,277,299,300,278,43,278,302,303,279,0,289,314,315,290,278,300,301,279,43,279,303,304,280,0,290,315,316,291,279,301,302,280,43,280,304,305,281,0,291,316,317,292,280,302,303,281,43,281,305,306,282,0,292,317,318,293,281,303,304,282,43,282,306,307,283,0,293,318,319,294,282,304,305,283,43,283,307,308,284,0,294,319,320,295,283,305,306,284,43,284,308,309,285,0,295,320,321,296,284,306,307,285,43,285,309,310,286,0,296,321,322,297,285,307,308,286,43,286,310,311,287,0,297,322,323,298,286,308,309,287,43,287,311,288,264,0,298,323,324,299,287,309,25,264,43,288,312,313,289,0,300,325,326,301,25,24,310,288,43,289,313,314,290,0,301,326,327,302,288,310,311,289,43,290,314,315,291,0,302,327,328,303,289,311,312,290,43,291,315,316,292,0,303,328,329,304,290,312,313,291,43,292,316,317,293,0,304,329,330,305,291,313,314,292,43,293,317,318,294,0,305,330,331,306,292,314,315,293,43,294,318,319,295,0,306,331,332,307,293,315,316,294,43,295,319,320,296,0,307,332,333,308,294,316,317,295,43,296,320,321,297,0,308,333,334,309,295,317,318,296,43,297,321,322,298,0,309,334,335,310,296,318,319,297,43,298,322,323,299,0,310,335,336,311,297,319,320,298,43,299,323,324,300,0,311,336,337,312,298,320,1,0,43,300,324,325,301,0,312,337,338,313,0,1,321,299,43,301,325,326,302,0,313,338,339,314,299,321,322,300,43,302,326,327,303,0,314,339,340,315,300,322,323,301,43,303,327,328,304,0,315,340,341,316,301,323,324,302,43,304,328,329,305,0,316,341,342,317,302,324,325,303,43,305,329,330,306,0,317,342,343,318,303,325,326,304,43,306,330,331,307,0,318,343,344,319,304,326,327,305,43,307,331,332,308,0,319,344,345,320,305,327,328,306,43,308,332,333,309,0,320,345,346,321,306,328,329,307,43,309,333,334,310,0,321,346,347,322,307,329,330,308,43,310,334,335,311,0,322,347,348,323,308,330,331,309,43,311,335,312,288,0,323,348,349,324,309,331,24,25,43,312,336,337,313,0,325,350,351,326,24,60,332,310,43,313,337,338,314,0,326,351,352,327,310,332,333,311,43,314,338,339,315,0,327,352,353,328,311,333,334,312,43,315,339,340,316,0,328,353,354,329,312,334,335,313,43,316,340,341,317,0,329,354,355,330,313,335,336,314,43,317,341,342,318,0,330,355,356,331,314,336,337,315,43,318,342,343,319,0,331,356,357,332,315,337,338,316,43,319,343,344,320,0,332,357,358,333,316,338,339,317,43,320,344,345,321,0,333,358,359,334,317,339,340,318,43,321,345,346,322,0,334,359,360,335,318,340,341,319,43,322,346,347,323,0,335,360,361,336,319,341,342,320,43,323,347,348,324,0,336,361,362,337,320,342,48,1,43,324,348,349,325,0,337,362,363,338,1,48,343,321,43,325,349,350,326,0,338,363,364,339,321,343,344,322,43,326,350,351,327,0,339,364,365,340,322,344,345,323,43,327,351,352,328,0,340,365,366,341,323,345,346,324,43,328,352,353,329,0,341,366,367,342,324,346,347,325,43,329,353,354,330,0,342,367,368,343,325,347,348,326,43,330,354,355,331,0,343,368,369,344,326,348,349,327,43,331,355,356,332,0,344,369,370,345,327,349,350,328,43,332,356,357,333,0,345,370,371,346,328,350,351,329,43,333,357,358,334,0,346,371,372,347,329,351,352,330,43,334,358,359,335,0,347,372,373,348,330,352,353,331,43,335,359,336,312,0,348,373,374,349,331,353,60,24,43,336,360,361,337,0,350,375,376,351,60,84,354,332,43,337,361,362,338,0,351,376,377,352,332,354,355,333,43,338,362,363,339,0,352,377,378,353,333,355,356,334,43,339,363,364,340,0,353,378,379,354,334,356,357,335,43,340,364,365,341,0,354,379,380,355,335,357,358,336,43,341,365,366,342,0,355,380,381,356,336,358,359,337,43,342,366,367,343,0,356,381,382,357,337,359,360,338,43,343,367,368,344,0,357,382,383,358,338,360,361,339,43,344,368,369,345,0,358,383,384,359,339,361,362,340,43,345,369,370,346,0,359,384,385,360,340,362,363,341,43,346,370,371,347,0,360,385,386,361,341,363,364,342,43,347,371,372,348,0,361,386,387,362,342,364,72,48,43,348,372,373,349,0,362,387,388,363,48,72,365,343,43,349,373,374,350,0,363,388,389,364,343,365,366,344,43,350,374,375,351,0,364,389,390,365,344,366,367,345,43,351,375,376,352,0,365,390,391,366,345,367,368,346,43,352,376,377,353,0,366,391,392,367,346,368,369,347,43,353,377,378,354,0,367,392,393,368,347,369,370,348,43,354,378,379,355,0,368,393,394,369,348,370,371,349,43,355,379,380,356,0,369,394,395,370,349,371,372,350,43,356,380,381,357,0,370,395,396,371,350,372,373,351,43,357,381,382,358,0,371,396,397,372,351,373,374,352,43,358,382,383,359,0,372,397,398,373,352,374,375,353,43,359,383,360,336,0,373,398,399,374,353,375,84,60,43,360,384,385,361,0,375,400,401,376,84,108,376,354,43,361,385,386,362,0,376,401,402,377,354,376,377,355,43,362,386,387,363,0,377,402,403,378,355,377,378,356,43,363,387,388,364,0,378,403,404,379,356,378,379,357,43,364,388,389,365,0,379,404,405,380,357,379,380,358,43,365,389,390,366,0,380,405,406,381,358,380,381,359,43,366,390,391,367,0,381,406,407,382,359,381,382,360,43,367,391,392,368,0,382,407,408,383,360,382,383,361,43,368,392,393,369,0,383,408,409,384,361,383,384,362,43,369,393,394,370,0,384,409,410,385,362,384,385,363,43,370,394,395,371,0,385,410,411,386,363,385,386,364,43,371,395,396,372,0,386,411,412,387,364,386,96,72,43,372,396,397,373,0,387,412,413,388,72,96,387,365,43,373,397,398,374,0,388,413,414,389,365,387,388,366,43,374,398,399,375,0,389,414,415,390,366,388,389,367,43,375,399,400,376,0,390,415,416,391,367,389,390,368,43,376,400,401,377,0,391,416,417,392,368,390,391,369,43,377,401,402,378,0,392,417,418,393,369,391,392,370,43,378,402,403,379,0,393,418,419,394,370,392,393,371,43,379,403,404,380,0,394,419,420,395,371,393,394,372,43,380,404,405,381,0,395,420,421,396,372,394,395,373,43,381,405,406,382,0,396,421,422,397,373,395,396,374,43,382,406,407,383,0,397,422,423,398,374,396,397,375,43,383,407,384,360,0,398,423,424,399,375,397,108,84,43,384,408,409,385,0,400,425,426,401,108,132,398,376,43,385,409,410,386,0,401,426,427,402,376,398,399,377,43,386,410,411,387,0,402,427,428,403,377,399,400,378,43,387,411,412,388,0,403,428,429,404,378,400,401,379,43,388,412,413,389,0,404,429,430,405,379,401,402,380,43,389,413,414,390,0,405,430,431,406,380,402,403,381,43,390,414,415,391,0,406,431,432,407,381,403,404,382,43,391,415,416,392,0,407,432,433,408,382,404,405,383,43,392,416,417,393,0,408,433,434,409,383,405,406,384,43,393,417,418,394,0,409,434,435,410,384,406,407,385,43,394,418,419,395,0,410,435,436,411,385,407,408,386,43,395,419,420,396,0,411,436,437,412,386,408,120,96,43,396,420,421,397,0,412,437,438,413,96,120,409,387,43,397,421,422,398,0,413,438,439,414,387,409,410,388,43,398,422,423,399,0,414,439,440,415,388,410,411,389,43,399,423,424,400,0,415,440,441,416,389,411,412,390,43,400,424,425,401,0,416,441,442,417,390,412,413,391,43,401,425,426,402,0,417,442,443,418,391,413,414,392,43,402,426,427,403,0,418,443,444,419,392,414,415,393,43,403,427,428,404,0,419,444,445,420,393,415,416,394,43,404,428,429,405,0,420,445,446,421,394,416,417,395,43,405,429,430,406,0,421,446,447,422,395,417,418,396,43,406,430,431,407,0,422,447,448,423,396,418,419,397,43,407,431,408,384,0,423,448,449,424,397,419,132,108,43,408,432,433,409,0,425,450,451,426,132,156,420,398,43,409,433,434,410,0,426,451,452,427,398,420,421,399,43,410,434,435,411,0,427,452,453,428,399,421,422,400,43,411,435,436,412,0,428,453,454,429,400,422,423,401,43,412,436,437,413,0,429,454,455,430,401,423,424,402,43,413,437,438,414,0,430,455,456,431,402,424,425,403,43,414,438,439,415,0,431,456,457,432,403,425,426,404,43,415,439,440,416,0,432,457,458,433,404,426,427,405,43,416,440,441,417,0,433,458,459,434,405,427,428,406,43,417,441,442,418,0,434,459,460,435,406,428,429,407,43,418,442,443,419,0,435,460,461,436,407,429,430,408,43,419,443,444,420,0,436,461,462,437,408,430,144,120,43,420,444,445,421,0,437,462,463,438,120,144,431,409,43,421,445,446,422,0,438,463,464,439,409,431,432,410,43,422,446,447,423,0,439,464,465,440,410,432,433,411,43,423,447,448,424,0,440,465,466,441,411,433,434,412,43,424,448,449,425,0,441,466,467,442,412,434,435,413,43,425,449,450,426,0,442,467,468,443,413,435,436,414,43,426,450,451,427,0,443,468,469,444,414,436,437,415,43,427,451,452,428,0,444,469,470,445,415,437,438,416,43,577,576,578,579,0,445,470,471,446,439,440,441,442,43,429,453,454,430,0,446,471,472,447,417,443,444,418,43,430,454,455,431,0,447,472,473,448,418,444,445,419,43,431,455,432,408,0,448,473,474,449,419,445,156,132,43,432,456,457,433,0,450,475,476,451,156,180,446,420,43,433,457,458,434,0,451,476,477,452,420,446,447,421,43,434,458,459,435,0,452,477,478,453,421,447,448,422,43,435,459,460,436,0,453,478,479,454,422,448,449,423,43,436,460,461,437,0,454,479,480,455,423,449,450,424,43,437,461,462,438,0,455,480,481,456,424,450,451,425,43,438,462,463,439,0,456,481,482,457,425,451,452,426,43,439,463,464,440,0,457,482,483,458,426,452,453,427,43,440,464,465,441,0,458,483,484,459,427,453,454,428,43,441,465,466,442,0,459,484,485,460,428,454,455,429,43,442,466,467,443,0,460,485,486,461,429,455,456,430,43,443,467,468,444,0,461,486,487,462,430,456,168,144,43,444,468,469,445,0,462,487,488,463,144,168,457,431,43,445,469,470,446,0,463,488,489,464,431,457,458,432,43,446,470,471,447,0,464,489,490,465,432,458,459,433,43,447,471,472,448,0,465,490,491,466,433,459,460,434,43,448,472,473,449,0,466,491,492,467,434,460,461,435,43,449,473,474,450,0,467,492,493,468,435,461,462,436,43,450,474,475,451,0,468,493,494,469,436,462,463,437,43,451,475,476,452,0,469,494,495,470,437,463,464,438,43,452,476,477,453,0,470,495,496,471,438,464,465,443,43,453,477,478,454,0,471,496,497,472,443,465,466,444,43,454,478,479,455,0,472,497,498,473,444,466,467,445,43,455,479,456,432,0,473,498,499,474,445,467,180,156,43,456,480,481,457,0,475,500,501,476,180,204,468,446,43,457,481,482,458,0,476,501,502,477,446,468,469,447,43,458,482,483,459,0,477,502,503,478,447,469,470,448,43,459,483,484,460,0,478,503,504,479,448,470,471,449,43,460,484,485,461,0,479,504,505,480,449,471,472,450,43,461,485,486,462,0,480,505,506,481,450,472,473,451,43,462,486,487,463,0,481,506,507,482,451,473,474,452,43,463,487,488,464,0,482,507,508,483,452,474,475,453,43,464,488,489,465,0,483,508,509,484,453,475,476,454,43,465,489,490,466,0,484,509,510,485,454,476,477,455,43,466,490,491,467,0,485,510,511,486,455,477,478,456,43,467,491,492,468,0,486,511,512,487,456,478,192,168,43,468,492,493,469,0,487,512,513,488,168,192,479,457,43,469,493,494,470,0,488,513,514,489,457,479,480,458,43,470,494,495,471,0,489,514,515,490,458,480,481,459,43,471,495,496,472,0,490,515,516,491,459,481,482,460,43,472,496,497,473,0,491,516,517,492,460,482,483,461,43,473,497,498,474,0,492,517,518,493,461,483,484,462,43,474,498,499,475,0,493,518,519,494,462,484,485,463,43,475,499,500,476,0,494,519,520,495,463,485,486,464,43,476,500,501,477,0,495,520,521,496,464,486,487,465,43,477,501,502,478,0,496,521,522,497,465,487,488,466,43,478,502,503,479,0,497,522,523,498,466,488,489,467,43,479,503,480,456,0,498,523,524,499,467,489,204,180,43,480,504,505,481,0,500,525,526,501,204,228,490,468,43,481,505,506,482,0,501,526,527,502,468,490,491,469,43,482,506,507,483,0,502,527,528,503,469,491,492,470,43,483,507,508,484,0,503,528,529,504,470,492,493,471,43,484,508,509,485,0,504,529,530,505,471,493,494,472,43,485,509,510,486,0,505,530,531,506,472,494,495,473,43,486,510,511,487,0,506,531,532,507,473,495,496,474,43,487,511,512,488,0,507,532,533,508,474,496,497,475,43,488,512,513,489,0,508,533,534,509,475,497,498,476,43,489,513,514,490,0,509,534,535,510,476,498,499,477,43,490,514,515,491,0,510,535,536,511,477,499,500,478,43,491,515,516,492,0,511,536,537,512,478,500,216,192,43,492,516,517,493,0,512,537,538,513,192,216,501,479,43,493,517,518,494,0,513,538,539,514,479,501,502,480,43,494,518,519,495,0,514,539,540,515,480,502,503,481,43,495,519,520,496,0,515,540,541,516,481,503,504,482,43,496,520,521,497,0,516,541,542,517,482,504,505,483,43,497,521,522,498,0,517,542,543,518,483,505,506,484,43,498,522,523,499,0,518,543,544,519,484,506,507,485,43,499,523,524,500,0,519,544,545,520,485,507,508,486,43,500,524,525,501,0,520,545,546,521,486,508,509,487,43,501,525,526,502,0,521,546,547,522,487,509,510,488,43,502,526,527,503,0,522,547,548,523,488,510,511,489,43,503,527,504,480,0,523,548,549,524,489,511,228,204,43,504,528,529,505,0,525,550,551,526,228,252,512,490,43,505,529,530,506,0,526,551,552,527,490,512,513,491,43,506,530,531,507,0,527,552,553,528,491,513,514,492,43,507,531,532,508,0,528,553,554,529,492,514,515,493,43,508,532,533,509,0,529,554,555,530,493,515,516,494,43,509,533,534,510,0,530,555,556,531,494,516,517,495,43,510,534,535,511,0,531,556,557,532,495,517,518,496,43,511,535,536,512,0,532,557,558,533,496,518,519,497,43,512,536,537,513,0,533,558,559,534,497,519,520,498,43,513,537,538,514,0,534,559,560,535,498,520,521,499,43,514,538,539,515,0,535,560,561,536,499,521,522,500,43,515,539,540,516,0,536,561,562,537,500,522,240,216,43,516,540,541,517,0,537,562,563,538,216,240,523,501,43,517,541,542,518,0,538,563,564,539,501,523,524,502,43,518,542,543,519,0,539,564,565,540,502,524,525,503,43,519,543,544,520,0,540,565,566,541,503,525,526,504,43,520,544,545,521,0,541,566,567,542,504,526,527,505,43,521,545,546,522,0,542,567,568,543,505,527,528,506,43,522,546,547,523,0,543,568,569,544,506,528,529,507,43,523,547,548,524,0,544,569,570,545,507,529,530,508,43,524,548,549,525,0,545,570,571,546,508,530,531,509,43,525,549,550,526,0,546,571,572,547,509,531,532,510,43,526,550,551,527,0,547,572,573,548,510,532,533,511,43,527,551,528,504,0,548,573,574,549,511,533,252,228,43,528,552,553,529,0,550,575,576,551,252,276,534,512,43,529,553,554,530,0,551,576,577,552,512,534,535,513,43,530,554,555,531,0,552,577,578,553,513,535,536,514,43,531,555,556,532,0,553,578,579,554,514,536,537,515,43,532,556,557,533,0,554,579,580,555,515,537,538,516,43,533,557,558,534,0,555,580,581,556,516,538,539,517,43,534,558,559,535,0,556,581,582,557,517,539,540,518,43,535,559,560,536,0,557,582,583,558,518,540,541,519,43,536,560,561,537,0,558,583,584,559,519,541,542,520,43,537,561,562,538,0,559,584,585,560,520,542,543,521,43,538,562,563,539,0,560,585,586,561,521,543,544,522,43,539,563,564,540,0,561,586,587,562,522,544,264,240,43,540,564,565,541,0,562,587,588,563,240,264,545,523,43,541,565,566,542,0,563,588,589,564,523,545,546,524,43,542,566,567,543,0,564,589,590,565,524,546,547,525,43,543,567,568,544,0,565,590,591,566,525,547,548,526,43,544,568,569,545,0,566,591,592,567,526,548,549,527,43,545,569,570,546,0,567,592,593,568,527,549,550,528,43,546,570,571,547,0,568,593,594,569,528,550,551,529,43,547,571,572,548,0,569,594,595,570,529,551,552,530,43,548,572,573,549,0,570,595,596,571,530,552,553,531,43,549,573,574,550,0,571,596,597,572,531,553,554,532,43,550,574,575,551,0,572,597,598,573,532,554,555,533,43,551,575,552,528,0,573,598,599,574,533,555,276,252,43,552,0,1,553,0,575,600,601,576,276,0,3,534,43,553,1,2,554,0,576,601,602,577,534,3,5,535,43,554,2,3,555,0,577,602,603,578,535,5,7,536,43,555,3,4,556,0,578,603,604,579,536,7,9,537,43,556,4,5,557,0,579,604,605,580,537,9,11,538,43,557,5,6,558,0,580,605,606,581,538,11,13,539,43,558,6,7,559,0,581,606,607,582,539,13,15,540,43,559,7,8,560,0,582,607,608,583,540,15,17,541,43,560,8,9,561,0,583,608,609,584,541,17,19,542,43,561,9,10,562,0,584,609,610,585,542,19,21,543,43,562,10,11,563,0,585,610,611,586,543,21,23,544,43,563,11,12,564,0,586,611,612,587,544,23,25,264,43,564,12,13,565,0,587,612,613,588,264,25,27,545,43,565,13,14,566,0,588,613,614,589,545,27,29,546,43,566,14,15,567,0,589,614,615,590,546,29,31,547,43,567,15,16,568,0,590,615,616,591,547,31,33,548,43,568,16,17,569,0,591,616,617,592,548,33,35,549,43,569,17,18,570,0,592,617,618,593,549,35,37,550,43,570,18,19,571,0,593,618,619,594,550,37,39,551,43,571,19,20,572,0,594,619,620,595,551,39,41,552,43,572,20,21,573,0,595,620,621,596,552,41,43,553,43,573,21,22,574,0,596,621,622,597,553,43,45,554,43,574,22,23,575,0,597,622,623,598,554,45,47,555,43,0,552,575,23,0,624,599,598,623,0,276,555,47,43,428,452,576,577,0,625,625,625,625,416,438,440,439,43,452,453,578,576,0,625,625,625,625,438,443,441,440,43,453,429,579,578,0,625,625,625,625,443,417,442,441,43,429,428,577,579,0,625,625,625,625,417,416,439,442],morphTargets:[],name:"TorusGeometry",metadata:{faces:580,morphTargets:0,uvs:1,bones:0,materials:1,normals:556,generator:"io_three",version:3,vertices:580},animations:[],normals:[1,0,0,.965911,-.258797,0,.933714,-.25016,-.256081,.966643,0,-.256111,.839106,-.22483,-.495254,.868709,0,-.495254,.688131,-.184362,-.701743,.712424,0,-.701712,.490677,-.131474,-.861354,.50795,0,-.861354,.259835,-.069613,-.963134,.26899,0,-.963134,.010468,-.002808,-.999939,.010834,0,-.999939,-.240089,.064302,-.968596,-.248604,0,-.968596,-.474899,.127232,-.870754,-.491623,0,-.870785,-.677664,.181524,-.712577,-.701529,0,-.712607,-.833888,.223395,-.504654,-.863308,0,-.504624,-.932279,.249733,-.261635,-.965178,0,-.261574,-.965911,.258797,0,-1,0,0,-.932279,.249733,.261635,-.965178,0,.261574,-.833888,.223395,.504654,-.863308,0,.504624,-.677664,.181524,.712577,-.701529,0,.712607,-.474899,.127232,.870754,-.491623,0,.870785,-.240089,.064302,.968596,-.248604,0,.968596,.010468,-.002808,.999939,.010834,0,.999939,.259835,-.069613,.963134,.26899,0,.963134,.490677,-.131474,.861354,.50795,0,.861354,.688131,-.184362,.701743,.712424,0,.701712,.839106,-.22483,.495254,.868709,0,.495254,.933714,-.25016,.256081,.966643,0,.256111,.866024,-.499954,0,.837092,-.483322,-.256142,.752342,-.434339,-.495254,.616901,-.356212,-.701773,.439985,-.254006,-.861293,.232887,-.134465,-.963134,.0094,-.005432,-.999939,-.215247,.124271,-.968596,-.425855,.245888,-.870724,-.607593,.35078,-.712546,-.747612,.431654,-.504685,-.835871,.482528,-.261635,-.866024,.499954,0,-.835871,.482528,.261635,-.747612,.431654,.504685,-.607593,.35078,.712546,-.425855,.245888,.870724,-.215247,.124271,.968596,.0094,-.005432,.999939,.232887,-.134465,.963134,.439985,-.254006,.861293,.616901,-.356212,.701773,.752342,-.434339,.495254,.837092,-.483322,.256142,.707083,-.707083,0,.683493,-.683493,-.256203,.614277,-.614277,-.495224,.503739,-.503739,-.701743,.359233,-.359233,-.861293,.19013,-.19013,-.963164,.00766,-.00766,-.999939,-.175756,.175756,-.968596,-.347728,.347728,-.870693,-.496109,.496109,-.712546,-.610462,.610462,-.504624,-.682485,.682485,-.261513,-.707083,.707083,0,-.682485,.682485,.261513,-.610462,.610462,.504624,-.496109,.496109,.712546,-.347728,.347728,.870693,-.175756,.175756,.968596,.00766,-.00766,.999939,.19013,-.19013,.963164,.359233,-.359233,.861293,.503739,-.503739,.701743,.614277,-.614277,.495224,.683493,-.683493,.256203,.499954,-.866024,0,.483322,-.837092,-.256142,.434339,-.752342,-.495254,.356212,-.616901,-.701773,.254006,-.439985,-.861293,.134465,-.232887,-.963134,.005432,-.0094,-.999939,-.124271,.215247,-.968596,-.245888,.425855,-.870724,-.35078,.607593,-.712546,-.431654,.747612,-.504685,-.482528,.835871,-.261635,-.499954,.866024,0,-.482528,.835871,.261635,-.431654,.747612,.504685,-.35078,.607593,.712546,-.245888,.425855,.870724,-.124271,.215247,.968596,.005432,-.0094,.999939,.134465,-.232887,.963134,.254006,-.439985,.861293,.356212,-.616901,.701773,.434339,-.752342,.495254,.483322,-.837092,.256142,.258797,-.965911,0,.25016,-.933714,-.256081,.22483,-.839106,-.495254,.184362,-.688131,-.701743,.131474,-.490677,-.861354,.069613,-.259835,-.963134,.002808,-.010468,-.999939,-.064302,.240089,-.968596,-.127232,.474899,-.870754,-.181524,.677664,-.712577,-.223395,.833888,-.504654,-.249733,.932279,-.261635,-.258797,.965911,0,-.249733,.932279,.261635,-.223395,.833888,.504654,-.181524,.677664,.712577,-.127232,.474899,.870754,-.064302,.240089,.968596,.002808,-.010468,.999939,.069613,-.259835,.963134,.131474,-.490677,.861354,.184362,-.688131,.701743,.22483,-.839106,.495254,.25016,-.933714,.256081,0,-1,0,0,-.966643,-.256111,0,-.868709,-.495254,0,-.712424,-.701712,0,-.50795,-.861354,0,-.26899,-.963134,0,-.010834,-.999939,0,.248604,-.968596,0,.491623,-.870785,0,.701529,-.712607,0,.863308,-.504624,0,.965178,-.261574,0,1,0,0,.965178,.261574,0,.863308,.504624,0,.701529,.712607,0,.491623,.870785,0,.248604,.968596,0,-.010834,.999939,0,-.26899,.963134,0,-.50795,.861354,0,-.712424,.701712,0,-.868709,.495254,0,-.966643,.256111,-.258797,-.965911,0,-.25016,-.933714,-.256081,-.22483,-.839106,-.495254,-.184362,-.688131,-.701743,-.131474,-.490677,-.861354,-.069613,-.259835,-.963134,-.002808,-.010468,-.999939,.064302,.240089,-.968596,.127232,.474899,-.870754,.181524,.677664,-.712577,.223395,.833888,-.504654,.249733,.932279,-.261635,.258797,.965911,0,.249733,.932279,.261635,.223395,.833888,.504654,.181524,.677664,.712577,.127232,.474899,.870754,.064302,.240089,.968596,-.002808,-.010468,.999939,-.069613,-.259835,.963134,-.131474,-.490677,.861354,-.184362,-.688131,.701743,-.22483,-.839106,.495254,-.25016,-.933714,.256081,-.499954,-.866024,0,-.483322,-.837092,-.256142,-.434339,-.752342,-.495254,-.356212,-.616901,-.701773,-.254006,-.439985,-.861293,-.134465,-.232887,-.963134,-.005432,-.0094,-.999939,.124271,.215247,-.968596,.245888,.425855,-.870724,.35078,.607593,-.712546,.431654,.747612,-.504685,.482528,.835871,-.261635,.499954,.866024,0,.482528,.835871,.261635,.431654,.747612,.504685,.35078,.607593,.712546,.245888,.425855,.870724,.124271,.215247,.968596,-.005432,-.0094,.999939,-.134465,-.232887,.963134,-.254006,-.439985,.861293,-.356212,-.616901,.701773,-.434339,-.752342,.495254,-.483322,-.837092,.256142,-.707083,-.707083,0,-.683493,-.683493,-.256203,-.614277,-.614277,-.495224,-.503739,-.503739,-.701743,-.359233,-.359233,-.861293,-.19013,-.19013,-.963164,-.00766,-.00766,-.999939,.175756,.175756,-.968596,.347728,.347728,-.870693,.496109,.496109,-.712546,.610462,.610462,-.504624,.682485,.682485,-.261513,.707083,.707083,0,.682485,.682485,.261513,.610462,.610462,.504624,.496109,.496109,.712546,.347728,.347728,.870693,.175756,.175756,.968596,-.00766,-.00766,.999939,-.19013,-.19013,.963164,-.359233,-.359233,.861293,-.503739,-.503739,.701743,-.614277,-.614277,.495224,-.683493,-.683493,.256203,-.866024,-.499954,0,-.837092,-.483322,-.256142,-.752342,-.434339,-.495254,-.616901,-.356212,-.701773,-.439985,-.254006,-.861293,-.232887,-.134465,-.963134,-.0094,-.005432,-.999939,.215247,.124271,-.968596,.425855,.245888,-.870724,.607593,.35078,-.712546,.747612,.431654,-.504685,.835871,.482528,-.261635,.866024,.499954,0,.835871,.482528,.261635,.747612,.431654,.504685,.607593,.35078,.712546,.425855,.245888,.870724,.215247,.124271,.968596,-.0094,-.005432,.999939,-.232887,-.134465,.963134,-.439985,-.254006,.861293,-.616901,-.356212,.701773,-.752342,-.434339,.495254,-.837092,-.483322,.256142,-.965911,-.258797,0,-.933714,-.25016,-.256081,-.839106,-.22483,-.495254,-.688131,-.184362,-.701743,-.490677,-.131474,-.861354,-.259835,-.069613,-.963134,-.010468,-.002808,-.999939,.240089,.064302,-.968596,.474899,.127232,-.870754,.677664,.181524,-.712577,.833888,.223395,-.504654,.932279,.249733,-.261635,.965911,.258797,0,.932279,.249733,.261635,.833888,.223395,.504654,.677664,.181524,.712577,.474899,.127232,.870754,.240089,.064302,.968596,-.010468,-.002808,.999939,-.259835,-.069613,.963134,-.490677,-.131474,.861354,-.688131,-.184362,.701743,-.839106,-.22483,.495254,-.933714,-.25016,.256081,-.966643,0,-.256111,-.868709,0,-.495254,-.712424,0,-.701712,-.50795,0,-.861354,-.26899,0,-.963134,-.010834,0,-.999939,.248604,0,-.968596,.491623,0,-.870785,.701529,0,-.712607,.863308,0,-.504624,.965178,0,-.261574,.965178,0,.261574,.863308,0,.504624,.701529,0,.712607,.491623,0,.870785,.248604,0,.968596,-.010834,0,.999939,-.26899,0,.963134,-.50795,0,.861354,-.712424,0,.701712,-.868709,0,.495254,-.966643,0,.256111,-.933714,.25016,-.256081,-.839106,.22483,-.495254,-.688131,.184362,-.701743,-.490677,.131474,-.861354,-.259835,.069613,-.963134,-.010468,.002808,-.999939,.240089,-.064302,-.968596,.474899,-.127232,-.870754,.677664,-.181524,-.712577,.833888,-.223395,-.504654,.932279,-.249733,-.261635,.932279,-.249733,.261635,.833888,-.223395,.504654,.677664,-.181524,.712577,.474899,-.127232,.870754,.240089,-.064302,.968596,-.010468,.002808,.999939,-.259835,.069613,.963134,-.490677,.131474,.861354,-.688131,.184362,.701743,-.839106,.22483,.495254,-.933714,.25016,.256081,-.837092,.483322,-.256142,-.752342,.434339,-.495254,-.616901,.356212,-.701773,-.439985,.254006,-.861293,-.232887,.134465,-.963134,-.0094,.005432,-.999939,.215247,-.124271,-.968596,.425855,-.245888,-.870724,.607593,-.35078,-.712546,.747612,-.431654,-.504685,.835871,-.482528,-.261635,.835871,-.482528,.261635,.747612,-.431654,.504685,.607593,-.35078,.712546,.425855,-.245888,.870724,.215247,-.124271,.968596,-.0094,.005432,.999939,-.232887,.134465,.963134,-.439985,.254006,.861293,-.616901,.356212,.701773,-.752342,.434339,.495254,-.837092,.483322,.256142,-.683493,.683493,-.256203,-.614277,.614277,-.495224,-.503739,.503739,-.701743,-.359233,.359233,-.861293,-.19013,.19013,-.963164,-.00766,.00766,-.999939,.175756,-.175756,-.968596,.347728,-.347728,-.870693,.496109,-.496109,-.712546,.610462,-.610462,-.504624,.682485,-.682485,-.261513,.682485,-.682485,.261513,.610462,-.610462,.504624,.496109,-.496109,.712546,.347728,-.347728,.870693,.175756,-.175756,.968596,-.00766,.00766,.999939,-.19013,.19013,.963164,-.359233,.359233,.861293,-.503739,.503739,.701743,-.614277,.614277,.495224,-.683493,.683493,.256203,-.483322,.837092,-.256142,-.434339,.752342,-.495254,-.356212,.616901,-.701773,-.254006,.439985,-.861293,-.134465,.232887,-.963134,-.005432,.0094,-.999939,.124271,-.215247,-.968596,.245888,-.425855,-.870724,.35078,-.607593,-.712546,.431654,-.747612,-.504685,.482528,-.835871,-.261635,.482528,-.835871,.261635,.431654,-.747612,.504685,.35078,-.607593,.712546,.245888,-.425855,.870724,.124271,-.215247,.968596,-.005432,.0094,.999939,-.134465,.232887,.963134,-.254006,.439985,.861293,-.356212,.616901,.701773,-.434339,.752342,.495254,-.483322,.837092,.256142,-.25016,.933714,-.256081,-.22483,.839106,-.495254,-.184362,.688131,-.701743,-.131474,.490677,-.861354,-.069613,.259835,-.963134,-.002808,.010468,-.999939,.064302,-.240089,-.968596,.127232,-.474899,-.870754,.181524,-.677664,-.712577,.223395,-.833888,-.504654,.249733,-.932279,-.261635,.249733,-.932279,.261635,.223395,-.833888,.504654,.181524,-.677664,.712577,.127232,-.474899,.870754,.064302,-.240089,.968596,-.002808,.010468,.999939,-.069613,.259835,.963134,-.394055,.064455,.916807,-.46971,.77282,.426679,-.22483,.839106,.495254,-.25016,.933714,.256081,0,.966643,-.256111,0,.868709,-.495254,0,.712424,-.701712,0,.50795,-.861354,0,.26899,-.963134,0,.010834,-.999939,0,-.248604,-.968596,0,-.491623,-.870785,0,-.701529,-.712607,0,-.863308,-.504624,0,-.965178,-.261574,0,-.965178,.261574,0,-.863308,.504624,0,-.701529,.712607,0,-.491623,.870785,0,-.248604,.968596,0,.010834,.999939,0,.26899,.963134,.363994,.164129,.916807,-.515427,-.226356,.826472,.556383,-.085208,.826533,.508957,.847285,.151708,-.710868,.686728,.151677,.25367,.868068,.426679,0,.868709,.495254,0,.966643,.256111,.25016,.933714,-.256081,.22483,.839106,-.495254,.184362,.688131,-.701743,.131474,.490677,-.861354,.069613,.259835,-.963134,.002808,.010468,-.999939,-.064302,-.240089,-.968596,-.127232,-.474899,-.870754,-.181524,-.677664,-.712577,-.223395,-.833888,-.504654,-.249733,-.932279,-.261635,-.249733,-.932279,.261635,-.223395,-.833888,.504654,-.181524,-.677664,.712577,-.127232,-.474899,.870754,-.064302,-.240089,.968596,.002808,.010468,.999939,.069613,.259835,.963134,.131474,.490677,.861354,.184362,.688131,.701743,.22483,.839106,.495254,.25016,.933714,.256081,.483322,.837092,-.256142,.434339,.752342,-.495254,.356212,.616901,-.701773,.254006,.439985,-.861293,.134465,.232887,-.963134,.005432,.0094,-.999939,-.124271,-.215247,-.968596,-.245888,-.425855,-.870724,-.35078,-.607593,-.712546,-.431654,-.747612,-.504685,-.482528,-.835871,-.261635,-.482528,-.835871,.261635,-.431654,-.747612,.504685,-.35078,-.607593,.712546,-.245888,-.425855,.870724,-.124271,-.215247,.968596,.005432,.0094,.999939,.134465,.232887,.963134,.254006,.439985,.861293,.356212,.616901,.701773,.434339,.752342,.495254,.483322,.837092,.256142,.683493,.683493,-.256203,.614277,.614277,-.495224,.503739,.503739,-.701743,.359233,.359233,-.861293,.19013,.19013,-.963164,.00766,.00766,-.999939,-.175756,-.175756,-.968596,-.347728,-.347728,-.870693,-.496109,-.496109,-.712546,-.610462,-.610462,-.504624,-.682485,-.682485,-.261513,-.682485,-.682485,.261513,-.610462,-.610462,.504624,-.496109,-.496109,.712546,-.347728,-.347728,.870693,-.175756,-.175756,.968596,.00766,.00766,.999939,.19013,.19013,.963164,.359233,.359233,.861293,.503739,.503739,.701743,.614277,.614277,.495224,.683493,.683493,.256203,.837092,.483322,-.256142,.752342,.434339,-.495254,.616901,.356212,-.701773,.439985,.254006,-.861293,.232887,.134465,-.963134,.0094,.005432,-.999939,-.215247,-.124271,-.968596,-.425855,-.245888,-.870724,-.607593,-.35078,-.712546,-.747612,-.431654,-.504685,-.835871,-.482528,-.261635,-.835871,-.482528,.261635,-.747612,-.431654,.504685,-.607593,-.35078,.712546,-.425855,-.245888,.870724,-.215247,-.124271,.968596,.0094,.005432,.999939,.232887,.134465,.963134,.439985,.254006,.861293,.616901,.356212,.701773,.752342,.434339,.495254,.837092,.483322,.256142,.933714,.25016,-.256081,.839106,.22483,-.495254,.688131,.184362,-.701743,.490677,.131474,-.861354,.259835,.069613,-.963134,.010468,.002808,-.999939,-.240089,-.064302,-.968596,-.474899,-.127232,-.870754,-.677664,-.181524,-.712577,-.833888,-.223395,-.504654,-.932279,-.249733,-.261635,-.932279,-.249733,.261635,-.833888,-.223395,.504654,-.677664,-.181524,.712577,-.474899,-.127232,.870754,-.240089,-.064302,.968596,.010468,.002808,.999939,.259835,.069613,.963134,.490677,.131474,.861354,.688131,.184362,.701743,.839106,.22483,.495254,.933714,.25016,.256081],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[1,1,.958333,1,.958333,.958333,1,.958333,.958333,.916667,1,.916667,.958333,.875,1,.875,.958333,.833333,1,.833333,.958333,.791667,1,.791667,.958333,.75,1,.75,.958333,.708333,1,.708333,.958333,.666667,1,.666667,.958333,.625,1,.625,.958333,.583333,1,.583333,.958333,.541667,1,.541667,.958333,.5,1,.5,.958333,.458333,1,.458333,.958333,.416667,1,.416667,.958333,.375,1,.375,.958333,.333333,1,.333333,.958333,.291667,1,.291667,.958333,.25,1,.25,.958333,.208333,1,.208333,.958333,.166667,1,.166667,.958333,.125,1,.125,.958333,.083333,1,.083333,.958333,.041667,1,.041667,.958333,0,1,0,.916667,1,.916667,.958333,.916667,.916667,.916667,.875,.916667,.833333,.916667,.791667,.916667,.75,.916667,.708333,.916667,.666667,.916667,.625,.916667,.583333,.916667,.541667,.916667,.5,.916667,.458333,.916667,.416667,.916667,.375,.916667,.333333,.916667,.291667,.916667,.25,.916667,.208333,.916667,.166667,.916667,.125,.916667,.083333,.916667,.041667,.916667,0,.875,1,.875,.958333,.875,.916667,.875,.875,.875,.833333,.875,.791667,.875,.75,.875,.708333,.875,.666667,.875,.625,.875,.583333,.875,.541667,.875,.5,.875,.458333,.875,.416667,.875,.375,.875,.333333,.875,.291667,.875,.25,.875,.208333,.875,.166667,.875,.125,.875,.083333,.875,.041667,.875,0,.833333,1,.833333,.958333,.833333,.916667,.833333,.875,.833333,.833333,.833333,.791667,.833333,.75,.833333,.708333,.833333,.666667,.833333,.625,.833333,.583333,.833333,.541667,.833333,.5,.833333,.458333,.833333,.416667,.833333,.375,.833333,.333333,.833333,.291667,.833333,.25,.833333,.208333,.833333,.166667,.833333,.125,.833333,.083333,.833333,.041667,.833333,0,.791667,1,.791667,.958333,.791667,.916667,.791667,.875,.791667,.833333,.791667,.791667,.791667,.75,.791667,.708333,.791667,.666667,.791667,.625,.791667,.583333,.791667,.541667,.791667,.5,.791667,.458333,.791667,.416667,.791667,.375,.791667,.333333,.791667,.291667,.791667,.25,.791667,.208333,.791667,.166667,.791667,.125,.791667,.083333,.791667,.041667,.791667,0,.75,1,.75,.958333,.75,.916667,.75,.875,.75,.833333,.75,.791667,.75,.75,.75,.708333,.75,.666667,.75,.625,.75,.583333,.75,.541667,.75,.5,.75,.458333,.75,.416667,.75,.375,.75,.333333,.75,.291667,.75,.25,.75,.208333,.75,.166667,.75,.125,.75,.083333,.75,.041667,.75,0,.708333,1,.708333,.958333,.708333,.916667,.708333,.875,.708333,.833333,.708333,.791667,.708333,.75,.708333,.708333,.708333,.666667,.708333,.625,.708333,.583333,.708333,.541667,.708333,.5,.708333,.458333,.708333,.416667,.708333,.375,.708333,.333333,.708333,.291667,.708333,.25,.708333,.208333,.708333,.166667,.708333,.125,.708333,.083333,.708333,.041667,.708333,0,.666667,1,.666667,.958333,.666667,.916667,.666667,.875,.666667,.833333,.666667,.791667,.666667,.75,.666667,.708333,.666667,.666667,.666667,.625,.666667,.583333,.666667,.541667,.666667,.5,.666667,.458333,.666667,.416667,.666667,.375,.666667,.333333,.666667,.291667,.666667,.25,.666667,.208333,.666667,.166667,.666667,.125,.666667,.083333,.666667,.041667,.666667,0,.625,1,.625,.958333,.625,.916667,.625,.875,.625,.833333,.625,.791667,.625,.75,.625,.708333,.625,.666667,.625,.625,.625,.583333,.625,.541667,.625,.5,.625,.458333,.625,.416667,.625,.375,.625,.333333,.625,.291667,.625,.25,.625,.208333,.625,.166667,.625,.125,.625,.083333,.625,.041667,.625,0,.583333,1,.583333,.958333,.583333,.916667,.583333,.875,.583333,.833333,.583333,.791667,.583333,.75,.583333,.708333,.583333,.666667,.583333,.625,.583333,.583333,.583333,.541667,.583333,.5,.583333,.458333,.583333,.416667,.583333,.375,.583333,.333333,.583333,.291667,.583333,.25,.583333,.208333,.583333,.166667,.583333,.125,.583333,.083333,.583333,.041667,.583333,0,.541667,1,.541667,.958333,.541667,.916667,.541667,.875,.541667,.833333,.541667,.791667,.541667,.75,.541667,.708333,.541667,.666667,.541667,.625,.541667,.583333,.541667,.541667,.541667,.5,.541667,.458333,.541667,.416667,.541667,.375,.541667,.333333,.541667,.291667,.541667,.25,.541667,.208333,.541667,.166667,.541667,.125,.541667,.083333,.541667,.041667,.541667,0,.5,1,.5,.958333,.5,.916667,.5,.875,.5,.833333,.5,.791667,.5,.75,.5,.708333,.5,.666667,.5,.625,.5,.583333,.5,.541667,.5,.5,.5,.458333,.5,.416667,.5,.375,.5,.333333,.5,.291667,.5,.25,.5,.208333,.5,.166667,.5,.125,.5,.083333,.5,.041667,.5,0,.458333,1,.458333,.958333,.458333,.916667,.458333,.875,.458333,.833333,.458333,.791667,.458333,.75,.458333,.708333,.458333,.666667,.458333,.625,.458333,.583333,.458333,.541667,.458333,.5,.458333,.458333,.458333,.416667,.458333,.375,.458333,.333333,.458333,.291667,.458333,.25,.458333,.208333,.458333,.166667,.458333,.125,.458333,.083333,.458333,.041667,.458333,0,.416667,1,.416667,.958333,.416667,.916667,.416667,.875,.416667,.833333,.416667,.791667,.416667,.75,.416667,.708333,.416667,.666667,.416667,.625,.416667,.583333,.416667,.541667,.416667,.5,.416667,.458333,.416667,.416667,.416667,.375,.416667,.333333,.416667,.291667,.416667,.25,.416667,.208333,.416667,.166667,.416667,.125,.416667,.083333,.416667,.041667,.416667,0,.375,1,.375,.958333,.375,.916667,.375,.875,.375,.833333,.375,.791667,.375,.75,.375,.708333,.375,.666667,.375,.625,.375,.583333,.375,.541667,.375,.5,.375,.458333,.375,.416667,.375,.375,.375,.333333,.375,.291667,.375,.25,.375,.208333,.375,.166667,.375,.125,.375,.083333,.375,.041667,.375,0,.333333,1,.333333,.958333,.333333,.916667,.333333,.875,.333333,.833333,.333333,.791667,.333333,.75,.333333,.708333,.333333,.666667,.333333,.625,.333333,.583333,.333333,.541667,.333333,.5,.333333,.458333,.333333,.416667,.333333,.375,.333333,.333333,.333333,.291667,.333333,.25,.333333,.208333,.333333,.166667,.333333,.125,.333333,.083333,.333333,.041667,.333333,0,.291667,1,.291667,.958333,.291667,.916667,.291667,.875,.291667,.833333,.291667,.791667,.291667,.75,.291667,.708333,.291667,.666667,.291667,.625,.291667,.583333,.291667,.541667,.291667,.5,.291667,.458333,.291667,.416667,.291667,.375,.291667,.333333,.291667,.291667,.291667,.25,.291667,.208333,.291667,.166667,.291667,.125,.291667,.083333,.291667,.041667,.291667,0,.25,1,.25,.958333,.25,.916667,.25,.875,.25,.833333,.25,.791667,.25,.75,.25,.708333,.25,.666667,.25,.625,.25,.583333,.25,.541667,.25,.5,.25,.458333,.25,.416667,.25,.375,.25,.333333,.25,.291667,.25,.25,.25,.208333,.25,.166667,.25,.125,.25,.083333,.25,.041667,.25,0,.208333,1,.208333,.958333,.208333,.916667,.208333,.875,.208333,.833333,.208333,.791667,.208333,.75,.208333,.708333,.208333,.666667,.208333,.625,.208333,.583333,.208333,.541667,.208333,.5,.208333,.458333,.208333,.416667,.208333,.375,.208333,.333333,.208333,.291667,.208333,.25,.208333,.208333,.208333,.166667,.208333,.125,.208333,.083333,.208333,.041667,.208333,0,.166667,1,.166667,.958333,.166667,.916667,.166667,.875,.166667,.833333,.166667,.791667,.166667,.75,.166667,.708333,.166667,.666667,.166667,.625,.166667,.583333,.166667,.541667,.166667,.5,.166667,.458333,.166667,.416667,.166667,.375,.166667,.333333,.166667,.291667,.166667,.25,.166667,.208333,.166667,.166667,.166667,.125,.166667,.083333,.166667,.041667,.166667,0,.125,1,.125,.958333,.125,.916667,.125,.875,.125,.833333,.125,.791667,.125,.75,.125,.708333,.125,.666667,.125,.625,.125,.583333,.125,.541667,.125,.5,.125,.458333,.125,.416667,.125,.375,.125,.333333,.125,.291667,.125,.25,.125,.208333,.125,.166667,.125,.125,.125,.083333,.125,.041667,.125,0,.083333,1,.083333,.958333,.083333,.916667,.083333,.875,.083333,.833333,.083333,.791667,.083333,.75,.083333,.708333,.083333,.666667,.083333,.625,.083333,.583333,.083333,.541667,.083333,.5,.083333,.458333,.083333,.416667,.083333,.375,.083333,.333333,.083333,.291667,.083333,.25,.083333,.208333,.083333,.166667,.083333,.125,.083333,.083333,.083333,.041667,.083333,0,.041667,1,.041667,.958333,.041667,.916667,.041667,.875,.041667,.833333,.041667,.791667,.041667,.75,.041667,.708333,.041667,.666667,.041667,.625,.041667,.583333,.041667,.541667,.041667,.5,.041667,.458333,.041667,.416667,.041667,.375,.041667,.333333,.041667,.291667,.041667,.25,.041667,.208333,.041667,.166667,.041667,.125,.041667,.083333,.041667,.041667,.041667,0,0,1,0,.958333,0,.916667,0,.875,0,.833333,0,.791667,0,.75,0,.708333,0,.666667,0,.625,0,.583333,0,.541667,0,.5,0,.458333,0,.416667,0,.375,0,.333333,0,.291667,0,.25,0,.208333,0,.166667,0,.125,0,.083333,0,.041667,0,0,0,0]],vertices:[2.5,0,0,2.483,0,-.1294,2.433,0,-.25,2.3536,0,-.3536,2.25,0,-.433,2.1294,0,-.483,2,0,-.5,1.8706,0,-.483,1.75,0,-.433,1.6464,0,-.3536,1.567,0,-.25,1.517,0,-.1294,1.5,0,0,1.517,0,.1294,1.567,0,.25,1.6464,0,.3536,1.75,0,.433,1.8706,0,.483,2,0,.5,2.1294,0,.483,2.25,0,.433,2.3536,0,.3536,2.433,0,.25,2.483,0,.1294,2.4148,-.647,0,2.3984,-.6426,-.1294,2.3501,-.6297,-.25,2.2734,-.6091,-.3536,2.1733,-.5823,-.433,2.0569,-.5511,-.483,1.9319,-.5176,-.5,1.8069,-.4841,-.483,1.6904,-.4529,-.433,1.5903,-.4261,-.3536,1.5136,-.4056,-.25,1.4653,-.3926,-.1294,1.4489,-.3882,0,1.4653,-.3926,.1294,1.5136,-.4056,.25,1.5903,-.4261,.3536,1.6904,-.4529,.433,1.8069,-.4841,.483,1.9319,-.5176,.5,2.0569,-.5511,.483,2.1733,-.5823,.433,2.2734,-.6091,.3536,2.3501,-.6297,.25,2.3984,-.6426,.1294,2.1651,-1.25,0,2.1503,-1.2415,-.1294,2.1071,-1.2165,-.25,2.0382,-1.1768,-.3536,1.9486,-1.125,-.433,1.8441,-1.0647,-.483,1.7321,-1,-.5,1.62,-.9353,-.483,1.5155,-.875,-.433,1.4259,-.8232,-.3536,1.3571,-.7835,-.25,1.3138,-.7585,-.1294,1.299,-.75,0,1.3138,-.7585,.1294,1.3571,-.7835,.25,1.4259,-.8232,.3536,1.5155,-.875,.433,1.62,-.9353,.483,1.7321,-1,.5,1.8441,-1.0647,.483,1.9486,-1.125,.433,2.0382,-1.1768,.3536,2.1071,-1.2165,.25,2.1503,-1.2415,.1294,1.7678,-1.7678,0,1.7557,-1.7557,-.1294,1.7204,-1.7204,-.25,1.6642,-1.6642,-.3536,1.591,-1.591,-.433,1.5057,-1.5057,-.483,1.4142,-1.4142,-.5,1.3227,-1.3227,-.483,1.2374,-1.2374,-.433,1.1642,-1.1642,-.3536,1.108,-1.108,-.25,1.0727,-1.0727,-.1294,1.0607,-1.0607,0,1.0727,-1.0727,.1294,1.108,-1.108,.25,1.1642,-1.1642,.3536,1.2374,-1.2374,.433,1.3227,-1.3227,.483,1.4142,-1.4142,.5,1.5057,-1.5057,.483,1.591,-1.591,.433,1.6642,-1.6642,.3536,1.7204,-1.7204,.25,1.7557,-1.7557,.1294,1.25,-2.1651,0,1.2415,-2.1503,-.1294,1.2165,-2.1071,-.25,1.1768,-2.0382,-.3536,1.125,-1.9486,-.433,1.0647,-1.8441,-.483,1,-1.7321,-.5,.9353,-1.62,-.483,.875,-1.5155,-.433,.8232,-1.4259,-.3536,.7835,-1.3571,-.25,.7585,-1.3138,-.1294,.75,-1.299,0,.7585,-1.3138,.1294,.7835,-1.3571,.25,.8232,-1.4259,.3536,.875,-1.5155,.433,.9353,-1.62,.483,1,-1.7321,.5,1.0647,-1.8441,.483,1.125,-1.9486,.433,1.1768,-2.0382,.3536,1.2165,-2.1071,.25,1.2415,-2.1503,.1294,.647,-2.4148,0,.6426,-2.3984,-.1294,.6297,-2.3501,-.25,.6091,-2.2734,-.3536,.5823,-2.1733,-.433,.5511,-2.0569,-.483,.5176,-1.9319,-.5,.4841,-1.8069,-.483,.4529,-1.6904,-.433,.4261,-1.5903,-.3536,.4056,-1.5136,-.25,.3926,-1.4653,-.1294,.3882,-1.4489,0,.3926,-1.4653,.1294,.4056,-1.5136,.25,.4261,-1.5903,.3536,.4529,-1.6904,.433,.4841,-1.8069,.483,.5176,-1.9319,.5,.5511,-2.0569,.483,.5823,-2.1733,.433,.6091,-2.2734,.3536,.6297,-2.3501,.25,.6426,-2.3984,.1294,0,-2.5,0,0,-2.483,-.1294,0,-2.433,-.25,0,-2.3536,-.3536,0,-2.25,-.433,0,-2.1294,-.483,0,-2,-.5,0,-1.8706,-.483,0,-1.75,-.433,0,-1.6464,-.3536,0,-1.567,-.25,0,-1.517,-.1294,0,-1.5,0,0,-1.517,.1294,0,-1.567,.25,0,-1.6464,.3536,0,-1.75,.433,0,-1.8706,.483,0,-2,.5,0,-2.1294,.483,0,-2.25,.433,0,-2.3536,.3536,0,-2.433,.25,0,-2.483,.1294,-.647,-2.4148,0,-.6426,-2.3984,-.1294,-.6297,-2.3501,-.25,-.6091,-2.2734,-.3536,-.5823,-2.1733,-.433,-.5511,-2.0569,-.483,-.5176,-1.9319,-.5,-.4841,-1.8069,-.483,-.4529,-1.6904,-.433,-.4261,-1.5903,-.3536,-.4056,-1.5136,-.25,-.3926,-1.4653,-.1294,-.3882,-1.4489,0,-.3926,-1.4653,.1294,-.4056,-1.5136,.25,-.4261,-1.5903,.3536,-.4529,-1.6904,.433,-.4841,-1.8069,.483,-.5176,-1.9319,.5,-.5511,-2.0569,.483,-.5823,-2.1733,.433,-.6091,-2.2734,.3536,-.6297,-2.3501,.25,-.6426,-2.3984,.1294,-1.25,-2.1651,0,-1.2415,-2.1503,-.1294,-1.2165,-2.1071,-.25,-1.1768,-2.0382,-.3536,-1.125,-1.9486,-.433,-1.0647,-1.8441,-.483,-1,-1.7321,-.5,-.9353,-1.62,-.483,-.875,-1.5155,-.433,-.8232,-1.4259,-.3536,-.7835,-1.3571,-.25,-.7585,-1.3138,-.1294,-.75,-1.299,0,-.7585,-1.3138,.1294,-.7835,-1.3571,.25,-.8232,-1.4259,.3536,-.875,-1.5155,.433,-.9353,-1.62,.483,-1,-1.7321,.5,-1.0647,-1.8441,.483,-1.125,-1.9486,.433,-1.1768,-2.0382,.3536,-1.2165,-2.1071,.25,-1.2415,-2.1503,.1294,-1.7678,-1.7678,0,-1.7557,-1.7557,-.1294,-1.7204,-1.7204,-.25,-1.6642,-1.6642,-.3536,-1.591,-1.591,-.433,-1.5057,-1.5057,-.483,-1.4142,-1.4142,-.5,-1.3227,-1.3227,-.483,-1.2374,-1.2374,-.433,-1.1642,-1.1642,-.3536,-1.108,-1.108,-.25,-1.0727,-1.0727,-.1294,-1.0607,-1.0607,0,-1.0727,-1.0727,.1294,-1.108,-1.108,.25,-1.1642,-1.1642,.3536,-1.2374,-1.2374,.433,-1.3227,-1.3227,.483,-1.4142,-1.4142,.5,-1.5057,-1.5057,.483,-1.591,-1.591,.433,-1.6642,-1.6642,.3536,-1.7204,-1.7204,.25,-1.7557,-1.7557,.1294,-2.1651,-1.25,0,-2.1503,-1.2415,-.1294,-2.1071,-1.2165,-.25,-2.0382,-1.1768,-.3536,-1.9486,-1.125,-.433,-1.8441,-1.0647,-.483,-1.7321,-1,-.5,-1.62,-.9353,-.483,-1.5155,-.875,-.433,-1.4259,-.8232,-.3536,-1.3571,-.7835,-.25,-1.3138,-.7585,-.1294,-1.299,-.75,0,-1.3138,-.7585,.1294,-1.3571,-.7835,.25,-1.4259,-.8232,.3536,-1.5155,-.875,.433,-1.62,-.9353,.483,-1.7321,-1,.5,-1.8441,-1.0647,.483,-1.9486,-1.125,.433,-2.0382,-1.1768,.3536,-2.1071,-1.2165,.25,-2.1503,-1.2415,.1294,-2.4148,-.647,0,-2.3984,-.6426,-.1294,-2.3501,-.6297,-.25,-2.2734,-.6091,-.3536,-2.1733,-.5823,-.433,-2.0569,-.5511,-.483,-1.9319,-.5176,-.5,-1.8069,-.4841,-.483,-1.6904,-.4529,-.433,-1.5903,-.4261,-.3536,-1.5136,-.4056,-.25,-1.4653,-.3926,-.1294,-1.4489,-.3882,0,-1.4653,-.3926,.1294,-1.5136,-.4056,.25,-1.5903,-.4261,.3536,-1.6904,-.4529,.433,-1.8069,-.4841,.483,-1.9319,-.5176,.5,-2.0569,-.5511,.483,-2.1733,-.5823,.433,-2.2734,-.6091,.3536,-2.3501,-.6297,.25,-2.3984,-.6426,.1294,-2.5,0,0,-2.483,0,-.1294,-2.433,0,-.25,-2.3536,0,-.3536,-2.25,0,-.433,-2.1294,0,-.483,-2,0,-.5,-1.8706,0,-.483,-1.75,0,-.433,-1.6464,0,-.3536,-1.567,0,-.25,-1.517,0,-.1294,-1.5,0,0,-1.517,0,.1294,-1.567,0,.25,-1.6464,0,.3536,-1.75,0,.433,-1.8706,0,.483,-2,0,.5,-2.1294,0,.483,-2.25,0,.433,-2.3536,0,.3536,-2.433,0,.25,-2.483,0,.1294,-2.4148,.647,0,-2.3984,.6426,-.1294,-2.3501,.6297,-.25,-2.2734,.6091,-.3536,-2.1733,.5823,-.433,-2.0569,.5511,-.483,-1.9319,.5176,-.5,-1.8069,.4841,-.483,-1.6904,.4529,-.433,-1.5903,.4261,-.3536,-1.5136,.4056,-.25,-1.4653,.3926,-.1294,-1.4489,.3882,0,-1.4653,.3926,.1294,-1.5136,.4056,.25,-1.5903,.4261,.3536,-1.6904,.4529,.433,-1.8069,.4841,.483,-1.9319,.5176,.5,-2.0569,.5511,.483,-2.1733,.5823,.433,-2.2734,.6091,.3536,-2.3501,.6297,.25,-2.3984,.6426,.1294,-2.1651,1.25,0,-2.1503,1.2415,-.1294,-2.1071,1.2165,-.25,-2.0382,1.1768,-.3536,-1.9486,1.125,-.433,-1.8441,1.0647,-.483,-1.7321,1,-.5,-1.62,.9353,-.483,-1.5155,.875,-.433,-1.4259,.8232,-.3536,-1.3571,.7835,-.25,-1.3138,.7585,-.1294,-1.299,.75,0,-1.3138,.7585,.1294,-1.3571,.7835,.25,-1.4259,.8232,.3536,-1.5155,.875,.433,-1.62,.9353,.483,-1.7321,1,.5,-1.8441,1.0647,.483,-1.9486,1.125,.433,-2.0382,1.1768,.3536,-2.1071,1.2165,.25,-2.1503,1.2415,.1294,-1.7678,1.7678,0,-1.7557,1.7557,-.1294,-1.7204,1.7204,-.25,-1.6642,1.6642,-.3536,-1.591,1.591,-.433,-1.5057,1.5057,-.483,-1.4142,1.4142,-.5,-1.3227,1.3227,-.483,-1.2374,1.2374,-.433,-1.1642,1.1642,-.3536,-1.108,1.108,-.25,-1.0727,1.0727,-.1294,-1.0607,1.0607,0,-1.0727,1.0727,.1294,-1.108,1.108,.25,-1.1642,1.1642,.3536,-1.2374,1.2374,.433,-1.3227,1.3227,.483,-1.4142,1.4142,.5,-1.5057,1.5057,.483,-1.591,1.591,.433,-1.6642,1.6642,.3536,-1.7204,1.7204,.25,-1.7557,1.7557,.1294,-1.25,2.1651,0,-1.2415,2.1503,-.1294,-1.2165,2.1071,-.25,-1.1768,2.0382,-.3536,-1.125,1.9486,-.433,-1.0647,1.8441,-.483,-1,1.7321,-.5,-.9353,1.62,-.483,-.875,1.5155,-.433,-.8232,1.4259,-.3536,-.7835,1.3571,-.25,-.7585,1.3138,-.1294,-.75,1.299,0,-.7585,1.3138,.1294,-.7835,1.3571,.25,-.8232,1.4259,.3536,-.875,1.5155,.433,-.9353,1.62,.483,-1,1.7321,.5,-1.0647,1.8441,.483,-1.125,1.9486,.433,-1.1768,2.0382,.3536,-1.2165,2.1071,.25,-1.2415,2.1503,.1294,-.647,2.4148,0,-.6426,2.3984,-.1294,-.6297,2.3501,-.25,-.6091,2.2734,-.3536,-.5823,2.1733,-.433,-.5511,2.0569,-.483,-.5176,1.9319,-.5,-.4841,1.8069,-.483,-.4529,1.6904,-.433,-.4261,1.5903,-.3536,-.4056,1.5136,-.25,-.3926,1.4653,-.1294,-.3882,1.4489,0,-.3926,1.4653,.1294,-.4056,1.5136,.25,-.4261,1.5903,.3536,-.4529,1.6904,.433,-.4841,1.8069,.483,-.5176,1.9319,.5,-.5511,2.0569,.483,-.5823,2.1733,.433,-.6091,2.2734,.3536,-.6297,2.3501,.25,-.6426,2.3984,.1294,0,2.5,0,0,2.483,-.1294,0,2.433,-.25,0,2.3536,-.3536,0,2.25,-.433,0,2.1294,-.483,0,2,-.5,0,1.8706,-.483,0,1.75,-.433,0,1.6464,-.3536,0,1.567,-.25,0,1.517,-.1294,0,1.5,0,0,1.517,.1294,0,1.567,.25,0,1.6464,.3536,0,1.75,.433,0,1.8706,.483,0,2,.5,0,2.1294,.483,0,2.25,.433,0,2.3536,.3536,0,2.433,.25,0,2.483,.1294,.647,2.4148,0,.6426,2.3984,-.1294,.6297,2.3501,-.25,.6091,2.2734,-.3536,.5823,2.1733,-.433,.5511,2.0569,-.483,.5176,1.9319,-.5,.4841,1.8069,-.483,.4529,1.6904,-.433,.4261,1.5903,-.3536,.4056,1.5136,-.25,.3926,1.4653,-.1294,.3882,1.4489,0,.3926,1.4653,.1294,.4056,1.5136,.25,.4261,1.5903,.3536,.4529,1.6904,.433,.4841,1.8069,.483,.5176,1.9319,.5,.5511,2.0569,.483,.5823,2.1733,.433,.6091,2.2734,.3536,.6297,2.3501,.25,.6426,2.3984,.1294,1.25,2.1651,0,1.2415,2.1503,-.1294,1.2165,2.1071,-.25,1.1768,2.0382,-.3536,1.125,1.9486,-.433,1.0647,1.8441,-.483,1,1.7321,-.5,.9353,1.62,-.483,.875,1.5155,-.433,.8232,1.4259,-.3536,.7835,1.3571,-.25,.7585,1.3138,-.1294,.75,1.299,0,.7585,1.3138,.1294,.7835,1.3571,.25,.8232,1.4259,.3536,.875,1.5155,.433,.9353,1.62,.483,1,1.7321,.5,1.0647,1.8441,.483,1.125,1.9486,.433,1.1768,2.0382,.3536,1.2165,2.1071,.25,1.2415,2.1503,.1294,1.7678,1.7678,0,1.7557,1.7557,-.1294,1.7204,1.7204,-.25,1.6642,1.6642,-.3536,1.591,1.591,-.433,1.5057,1.5057,-.483,1.4142,1.4142,-.5,1.3227,1.3227,-.483,1.2374,1.2374,-.433,1.1642,1.1642,-.3536,1.108,1.108,-.25,1.0727,1.0727,-.1294,1.0607,1.0607,0,1.0727,1.0727,.1294,1.108,1.108,.25,1.1642,1.1642,.3536,1.2374,1.2374,.433,1.3227,1.3227,.483,1.4142,1.4142,.5,1.5057,1.5057,.483,1.591,1.591,.433,1.6642,1.6642,.3536,1.7204,1.7204,.25,1.7557,1.7557,.1294,2.1651,1.25,0,2.1503,1.2415,-.1294,2.1071,1.2165,-.25,2.0382,1.1768,-.3536,1.9486,1.125,-.433,1.8441,1.0647,-.483,1.7321,1,-.5,1.62,.9353,-.483,1.5155,.875,-.433,1.4259,.8232,-.3536,1.3571,.7835,-.25,1.3138,.7585,-.1294,1.299,.75,0,1.3138,.7585,.1294,1.3571,.7835,.25,1.4259,.8232,.3536,1.5155,.875,.433,1.62,.9353,.483,1.7321,1,.5,1.8441,1.0647,.483,1.9486,1.125,.433,2.0382,1.1768,.3536,2.1071,1.2165,.25,2.1503,1.2415,.1294,2.4148,.647,0,2.3984,.6426,-.1294,2.3501,.6297,-.25,2.2734,.6091,-.3536,2.1733,.5823,-.433,2.0569,.5511,-.483,1.9319,.5176,-.5,1.8069,.4841,-.483,1.6904,.4529,-.433,1.5903,.4261,-.3536,1.5136,.4056,-.25,1.4653,.3926,-.1294,1.4489,.3882,0,1.4653,.3926,.1294,1.5136,.4056,.25,1.5903,.4261,.3536,1.6904,.4529,.433,1.8069,.4841,.483,1.9319,.5176,.5,2.0569,.5511,.483,2.1733,.5823,.433,2.2734,.6091,.3536,2.3501,.6297,.25,2.3984,.6426,.1294,-.015969,2.37126,.624071,-.598269,2.29456,.624071,-.015969,2.47486,.544671,-.625069,2.39466,.544671],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.047059,.039216,.039216],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.047059,.039216,.039216],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"c0a0a",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"B06408BE-40FD-3CF5-8133-8A1EE9E62A96",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box15Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.690196,.690196,.690196],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.690196,.690196,.690196],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"b0b0b0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"F44F6C5E-78D6-3464-9233-B5E5E66E0110",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box14Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.690196,.690196,.690196],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.690196,.690196,.690196],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"b0b0b0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"0813763B-3A95-3717-A405-7EEF112B324A",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box1Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[0,0,0],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[0,0,0],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"A3266DF7-EF8B-3835-B919-F2D9B9D10D07",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,0,1,4,5,0,2,3,0,1,0,3,4,7,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4],morphTargets:[],name:"Box2Geometry",metadata:{faces:6,morphTargets:0,uvs:1,bones:0,materials:1,normals:8,generator:"io_three",version:3,vertices:8},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[0,0,0],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[0,0,0],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"0",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"6F819075-5DAE-3263-8E03-B58B1580326C",data:{faces:[42,0,1,2,0,0,1,2,0,1,2,42,0,2,3,0,3,2,4,0,2,3,42,0,3,4,0,5,4,6,0,3,4,42,0,4,5,0,7,6,8,0,4,5,42,0,5,6,0,9,8,10,0,5,6,42,0,6,7,0,11,10,12,0,6,7,42,0,7,8,0,13,12,14,0,7,8,42,0,8,9,0,15,14,16,0,8,9,42,0,9,10,0,17,16,18,0,9,10,42,0,10,11,0,19,18,20,0,10,11,42,0,11,12,0,21,20,22,0,11,12,42,0,12,1,0,23,22,24,0,12,1,42,50,51,13,0,3,0,1,13,14,15,42,52,50,13,0,5,3,1,16,13,15,42,53,52,13,0,7,5,1,17,16,15,42,54,53,13,0,9,7,1,18,17,15,42,55,54,13,0,11,9,1,19,18,15,42,56,55,13,0,13,11,1,20,19,15,42,57,56,13,0,15,13,1,21,20,15,42,58,57,13,0,17,15,1,22,21,15,42,59,58,13,0,19,17,1,23,22,15,42,60,59,13,0,21,19,1,24,23,15,42,61,60,13,0,23,21,1,25,24,15,42,51,61,13,0,25,23,1,14,25,15,43,2,1,14,15,0,1,1,1,1,2,1,26,27,43,3,2,15,16,0,1,1,1,1,3,2,27,28,43,4,3,16,17,0,1,1,1,1,4,3,28,29,43,5,4,17,18,0,1,1,1,1,5,4,29,30,43,6,5,18,19,0,1,1,1,1,6,5,30,31,43,7,6,19,20,0,1,1,1,1,7,6,31,32,43,8,7,20,21,0,1,1,1,1,8,7,32,33,43,9,8,21,22,0,1,1,1,1,9,8,33,34,43,10,9,22,23,0,1,1,1,1,10,9,34,35,43,11,10,23,24,0,1,1,1,1,11,10,35,36,43,12,11,24,25,0,1,1,1,1,12,11,36,37,43,1,12,25,14,0,1,1,1,1,1,12,37,26,43,15,14,27,26,0,1,1,1,1,27,26,38,39,43,16,15,26,28,0,1,1,1,1,28,27,39,40,43,17,16,28,29,0,1,1,1,1,29,28,40,41,43,18,17,29,30,0,1,1,1,1,30,29,41,42,43,19,18,30,31,0,1,1,1,1,31,30,42,43,43,20,19,31,32,0,1,1,1,1,32,31,43,44,43,21,20,32,33,0,1,1,1,1,33,32,44,45,43,22,21,33,34,0,1,1,1,1,34,33,45,46,43,23,22,34,35,0,1,1,1,1,35,34,46,47,43,24,23,35,36,0,1,1,1,1,36,35,47,48,43,25,24,36,37,0,1,1,1,1,37,36,48,49,43,14,25,37,27,0,1,1,1,1,26,37,49,38,43,26,27,39,38,0,1,1,1,1,39,38,50,51,43,28,26,38,40,0,1,1,1,1,40,39,51,52,43,29,28,40,41,0,1,1,1,1,41,40,52,53,43,30,29,41,42,0,1,1,1,1,42,41,53,54,43,31,30,42,43,0,1,1,1,1,43,42,54,55,43,32,31,43,44,0,1,1,1,1,44,43,55,56,43,33,32,44,45,0,1,1,1,1,45,44,56,57,43,34,33,45,46,0,1,1,1,1,46,45,57,58,43,35,34,46,47,0,1,1,1,1,47,46,58,59,43,36,35,47,48,0,1,1,1,1,48,47,59,60,43,37,36,48,49,0,1,1,1,1,49,48,60,61,43,27,37,49,39,0,1,1,1,1,38,49,61,50,43,38,39,51,50,0,1,1,1,1,51,50,14,13,43,40,38,50,52,0,1,1,1,1,52,51,13,16,43,41,40,52,53,0,1,1,1,1,53,52,16,17,43,42,41,53,54,0,1,1,1,1,54,53,17,18,43,43,42,54,55,0,1,1,1,1,55,54,18,19,43,44,43,55,56,0,1,1,1,1,56,55,19,20,43,45,44,56,57,0,1,1,1,1,57,56,20,21,43,46,45,57,58,0,1,1,1,1,58,57,21,22,43,47,46,58,59,0,1,1,1,1,59,58,22,23,43,48,47,59,60,0,1,1,1,1,60,59,23,24,43,49,48,60,61,0,1,1,1,1,61,60,24,25,43,39,49,61,51,0,1,1,1,1,50,61,25,14],morphTargets:[],name:"ConeGeometry",metadata:{faces:72,morphTargets:0,uvs:1,bones:0,materials:1,normals:62,generator:"io_three",version:3,vertices:62},animations:[],normals:[0,0,1,0,-.881924,-.471358,.440962,-.763756,-.471358,.763756,-.440962,-.471358,.881924,0,-.471358,.763756,.440962,-.471358,.440962,.763756,-.471358,0,.881924,-.471358,-.440962,.763756,-.471358,-.763756,.440962,-.471358,-.881924,0,-.471358,-.763756,-.440962,-.471358,-.440962,-.763756,-.471358,-.382031,.66686,-.63979,0,.770257,-.637684,0,0,-.999969,-.6592,.385815,-.645405,-.757225,.005158,-.653096,-.65215,-.37141,-.660817,-.374981,-.644337,-.666463,0,-.743675,-.668508,.374981,-.644337,-.666463,.65215,-.37141,-.660817,.757225,.005158,-.653096,.6592,.385815,-.645405,.382031,.66686,-.63979,0,-.647298,-.7622,.324198,-.558763,-.763298,.557573,-.319224,-.766259,.637654,.002686,-.770287,.546922,.31843,-.774224,.313547,.545701,-.777093,0,.62804,-.778161,-.313547,.545701,-.777093,-.546922,.31843,-.774224,-.637654,.002686,-.770287,-.557573,-.319224,-.766259,-.324198,-.558763,-.763298,0,-.765313,-.643635,.380718,-.662618,-.644917,.657888,-.383038,-.648396,.757195,-.003174,-.653157,.653523,.374126,-.657949,.376385,.648671,-.661458,0,.748863,-.662709,-.376385,.648671,-.661458,-.653523,.374126,-.657949,-.757195,-.003174,-.653157,-.657888,-.383038,-.648396,-.380718,-.662618,-.644917,0,.653157,-.757195,-.327494,.562731,-.758965,-.560839,.319407,-.763817,-.637562,-.004334,-.770348,-.543596,-.318125,-.776696,-.310282,-.541581,-.781243,0,-.622089,-.782922,.310282,-.541581,-.781243,.543596,-.318125,-.776696,.637562,-.004334,-.770348,.560839,.319407,-.763817,.327494,.562731,-.758965],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,.083333,0,.083333,1,.166667,0,.166667,1,.25,0,.25,1,.333333,0,.333333,1,.416667,0,.416667,1,.5,0,.5,1,.583333,0,.583333,1,.666667,0,.666667,1,.75,0,.75,1,.833333,0,.833333,1,.916667,0,.916667,1,1,0,1,1]],vertices:[0,0,.5,0,-.5,-.5,.25,-.433,-.5,.433,-.25,-.5,.5,0,-.5,.433,.25,-.5,.25,.433,-.5,0,.5,-.5,-.25,.433,-.5,-.433,.25,-.5,-.5,0,-.5,-.433,-.25,-.5,-.25,-.433,-.5,0,-.007552,-.444875,0,-.4,-.5,.199998,-.346399,-.5,.346399,-.199998,-.5,.4,0,-.5,.346399,.199998,-.5,.199998,.346399,-.5,0,.4,-.5,-.199998,.346399,-.5,-.346399,.199998,-.5,-.4,0,-.5,-.346399,-.199998,-.5,-.199998,-.346399,-.5,.199998,-.348413,-.578604,0,-.402014,-.578604,.346399,-.202012,-.578604,.4,-.002014,-.578604,.346399,.197983,-.578604,.199998,.344384,-.578604,0,.397986,-.578604,-.199998,.344384,-.578604,-.346399,.197983,-.578604,-.4,-.002014,-.578604,-.346399,-.202012,-.578604,-.199998,-.348413,-.578604,.149996,-.261812,-.578604,0,-.302014,-.578604,.259798,-.15201,-.578604,.3,-.002014,-.578604,.259798,.147981,-.578604,.149996,.257783,-.578604,0,.297986,-.578604,-.149996,.257783,-.578604,-.259798,.147981,-.578604,-.3,-.002014,-.578604,-.259798,-.15201,-.578604,-.149996,-.261812,-.578604,.149996,-.26735,-.444875,0,-.307552,-.444875,.259798,-.157548,-.444875,.3,-.007552,-.444875,.259798,.142443,-.444875,.149996,.252245,-.444875,0,.292448,-.444875,-.149996,.252245,-.444875,-.259798,.142443,-.444875,-.3,-.007552,-.444875,-.259798,-.157548,-.444875,-.149996,-.26735,-.444875],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.376471,.121569,.121569],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.376471,.121569,.121569],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"601f1f",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"98CE0ABF-982E-3010-BF1D-01919C9CB4EF",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,12,13,14,15,0,0,1,2,3,4,7,0,3,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4,43,4,5,8,9,0,1,1,1,1,4,7,8,9,43,5,0,10,8,0,1,1,1,1,7,0,10,8,43,0,1,11,10,0,1,1,1,1,0,3,11,10,43,1,4,9,11,0,1,1,1,1,3,4,9,11,43,9,8,13,12,0,1,1,1,1,9,8,7,4,43,8,10,14,13,0,1,1,1,1,8,10,0,7,43,10,11,15,14,0,1,1,1,1,10,11,3,0,43,11,9,12,15,0,1,1,1,1,11,9,4,3],morphTargets:[],name:"Box9Geometry",metadata:{faces:14,morphTargets:0,uvs:1,bones:0,materials:1,normals:12,generator:"io_three",version:3,vertices:16},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349,-.301492,-.301492,.904508,-.301492,.301492,.904508,.301492,-.301492,.904508,.301492,.301492,.904508],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.429289,-.429289,.5,-.429289,.429289,.5,.429289,-.429289,.5,.429289,.429289,.5,-.429289,.429289,2.18678,-.429289,-.429289,2.18678,.429289,-.429289,2.18678,.429289,.429289,2.18678],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.266667,.266667,.266667],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.266667,.266667,.266667],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"444444",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]},{uuid:"D9FDB576-F098-320B-9FFB-E5989779BD81",data:{faces:[43,0,2,3,1,0,0,1,2,3,0,1,2,3,43,4,6,7,5,0,0,1,2,3,4,5,6,7,43,12,13,14,15,0,0,1,2,3,4,7,0,3,43,7,6,3,2,0,0,1,2,3,6,5,2,1,43,2,0,5,7,0,2,3,0,1,1,0,7,6,43,1,3,6,4,0,0,1,2,3,3,2,5,4,43,4,5,8,9,0,1,1,1,1,4,7,8,9,43,5,0,10,8,0,1,1,1,1,7,0,10,8,43,0,1,11,10,0,1,1,1,1,0,3,11,10,43,1,4,9,11,0,1,1,1,1,3,4,9,11,43,9,8,13,12,0,1,1,1,1,9,8,7,4,43,8,10,14,13,0,1,1,1,1,8,10,0,7,43,10,11,15,14,0,1,1,1,1,10,11,3,0,43,11,9,12,15,0,1,1,1,1,11,9,4,3],morphTargets:[],name:"Box8Geometry",metadata:{faces:14,morphTargets:0,uvs:1,bones:0,materials:1,normals:12,generator:"io_three",version:3,vertices:16},animations:[],normals:[.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,.577349,-.577349,.577349,.577349,.577349,-.577349,.577349,.577349,-.577349,.577349,-.577349,-.577349,-.577349,-.577349,-.577349,-.577349,.577349,-.301492,-.301492,.904508,-.301492,.301492,.904508,.301492,-.301492,.904508,.301492,.301492,.904508],bones:[],influencesPerVertex:2,skinWeights:[],uvs:[[0,1,0,0,1,0,1,1]],vertices:[.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.429289,-.429289,.5,-.429289,.429289,.5,.429289,-.429289,.5,.429289,.429289,.5,-.429289,.429289,2.04103,-.429289,-.429289,2.04103,.429289,-.429289,2.04103,.429289,.429289,2.04103],skinIndices:[]},type:"Geometry",materials:[{colorSpecular:[.001176,.001176,.001176],colorDiffuse:[.266667,.266667,.266667],DbgColor:15658734,colorEmissive:[0,0,0],shading:"phong",DbgIndex:0,transparent:!1,colorAmbient:[.266667,.266667,.266667],depthWrite:!0,blending:"NormalBlending",depthTest:!0,DbgName:"444444",specularCoef:50,wireframe:!1,opacity:1,visible:!0}]}]}},function(e,t){e.exports={geometries:[{data:{morphTargets:[],bones:[],normals:[-.062136,.065004,.995941,-.055422,.078127,.995392,-.176824,-.020447,.984008,-.210089,-.041353,.976775,-.060488,.047548,.997009,-.184698,-.047823,.981628,-.095859,.06531,.993225,-.115848,.06064,.991394,-.069369,.058229,.99588,-.040101,.020905,.998962,-.036958,.036958,.998627,-.137638,-.072665,.987793,-.002747,-.015015,.999878,.001373,.001373,.999969,-.064119,-.116306,.991119,-.462813,-.098514,.880947,-.444197,-.107028,.889492,-.631153,-.028535,.775109,-.598285,.005341,.801233,-.395398,-.098575,.913175,-.518418,-.005432,.855068,-.289315,-.14301,.946471,-.386395,-.088168,.918088,-.113742,-.238655,.964415,-.120823,-.295572,.94763,-.534532,.148686,.831935,-.592181,.168096,.788049,-.562975,.236213,.791955,-.518571,.206427,.829707,-.631519,.136814,.763146,-.594134,.2313,.770379,-.431349,.044191,.901089,-.149266,-.276131,.949431,-.417371,.068148,.906156,-.162694,-.260903,.951537,.019623,-.167913,.985595,.041505,-.05414,.99765,.060854,-.203436,.977172,.06708,-.074404,.994964,.040315,-.041292,.998321,.055086,-.071047,.995941,.070589,-.075198,.994659,.047609,-.088839,.994903,.050996,-.231605,.971465,.073153,-.072817,.994629,.03824,-.104282,.993805,.040254,-.25425,.966277,.192633,-.50734,.83993,.084902,-.342082,.935789,.314737,-.584246,.748039,.169347,-.404096,.898862,.155919,-.459456,.874386,.312845,-.634236,.706992,.148015,-.500595,.852901,.296243,-.653462,.696554,.144414,-.569414,.809229,.252022,-.632588,.732322,.424238,-.767388,.480758,.400891,-.725547,.559282,.400983,-.756371,.5168,.438826,-.794336,.419996,.376568,-.747612,.547014,.417646,-.812403,.406812,-.268105,-.149174,.95175,-.382427,-.180334,.906186,-.437361,-.329814,.836604,-.572893,-.364696,.734001,-.379162,-.141545,.914426,-.633076,-.363506,.683401,-.143681,-.123173,.981903,-.182104,-.119297,.975982,-.272591,-.235664,.932798,-.311228,-.260933,.913785,-.139592,-.163091,.976653,-.182592,-.244362,.95233,-.299387,-.272652,.914335,-.379711,-.389721,.838984,-.188116,-.333506,.923765,-.232002,-.345256,.90936,-.443037,-.573351,.689138,-.433637,-.515305,.739158,-.080538,-.037294,.996033,-.089267,-.029756,.995544,-.03061,-.16303,.986145,-.025544,-.169134,.985229,-.062838,-.04062,.997192,-.009735,-.153539,.988067,-.086978,-.075961,.993286,-.087588,-.095767,.991516,-.073611,-.052034,.995911,-.030915,-.029695,.999054,-.044893,-.026154,.998627,.032685,-.128819,.991119,.015259,-.006134,.999847,-702e-6,.00174,.999969,.106021,-.090487,.990234,-.04532,-.408826,.911466,-.183508,-.662893,.725852,-.22953,-.668966,.706931,-.052309,-.404187,.913144,-.197363,-.566637,.799951,-.029023,-.346141,.937712,.055055,-.279061,.958678,-.057466,-.446425,.892941,.218909,-.177252,.959502,.235298,-.232185,.943754,-.493057,-.746757,.446303,-.493515,-.822321,.283151,-.630238,-.776086,.02121,-.603961,-.749199,.271828,-.396558,-.842036,.365612,-.559069,-.826868,-.060762,-.314798,-.633839,.706473,.13599,-.315592,.939085,-.277657,-.610706,.741539,.23722,-.218238,.946593,.195746,-.045686,.979583,.067171,.022858,.997467,.249245,-.029817,.967956,.094211,.04004,.99472,.0506,.028443,.998291,.083163,.035096,.995911,.096103,.042848,.994446,.098605,.02353,.994842,.276589,-.049989,.959655,.092227,.048921,.994507,.111698,.010041,.993683,.266854,-.053774,.962218,.506668,.004913,.862087,.401257,-.059114,.914029,.608783,.090243,.788171,.498917,-.015442,.866482,.546587,-.045564,.836146,.640095,.085238,.763543,.562334,-.075289,.82345,.65801,.071932,.749535,.456099,.016388,.889767,.495621,.044374,.867367,.542924,.142033,.827662,.572863,.146397,.806452,.572863,.165441,.802759,.533219,.162664,.830164,.583026,.17066,.794305,.521683,.181951,.833491,.079867,-.296243,.95175,.08243,-.414716,.906186,.214209,-.504166,.836604,.215278,-.644093,.734001,.045595,-.402142,.914426,.19953,-.7022,.683401,.08475,-.169195,.981903,.071688,-.205573,.975982,.162725,-.321512,.932798,.177892,-.365123,.913785,.124454,-.174902,.976653,.192907,-.236305,.9523,.192114,-.356456,.914335,.286264,-.462722,.838984,.278085,-.263222,.923765,.278878,-.308634,.90936,.449141,-.568621,.689138,.395093,-.545427,.739158,-.072359,-.088351,.993439,-.08417,-.095218,.991882,.075808,-.080996,.993805,.103763,-.080386,.991333,-.063967,-.072726,.99527,.087436,-.060488,.994324,-.042451,-.106998,.993347,-.023286,-.113987,.993194,-.060915,-.086642,.994354,-.065798,-.039094,.99704,-.076479,-.050996,.995758,.066713,-.012787,.997681,-.076113,.011536,.997009,-.089022,-275e-6,.996002,.038087,.066683,.99704,.334025,-.175359,.926084,.3773,-.419385,.825648,.311167,-.42143,.851772,.324595,-.186834,.927183,.245582,-.337382,.90875,.265999,-.143834,.953154,.219062,-.038514,.974944,.222938,-.159734,.961638,.167943,.151799,.974029,.230995,.191473,.953917,.063082,-.548631,.833644,.090793,-.658284,.747246,-.04181,-.718406,.694357,-.010163,-.570147,.821436,.186651,-.649922,.736686,.00235,-.77105,.636738,.107761,-.325083,.939512,.225227,.128391,.965789,.08121,-.31254,.94641,.196051,.038636,.979827,.007569,.159612,.987121,-.089999,.06885,.99353,305e-6,.21308,.97702,-.099216,.100101,.98999,-.097995,.056703,.993561,-.093875,.089724,.991516,-.101474,.102786,.989502,-.077914,.100558,.991852,.026826,.23191,.97235,-.10596,.101779,.989135,-.061312,.108371,.992187,.043428,.238136,.970244,.217414,.526841,.82165,.113102,.35435,.92822,.199042,.637623,.744133,.102145,.449232,.887539,.144871,.48085,.864711,.213172,.654622,.725242,.173864,.494644,.851497,.22132,.65389,.723472,.30314,.471603,.828028,.301401,.583422,.754143,.335398,.722587,.604419,.295022,.702567,.647542,.283944,.700461,.654714,.322764,.703879,.63271,.265542,.69982,.663076,.303995,.696219,.650258,.222083,-.020997,.974792,.338481,-.05707,.939238,.471664,.038301,.880917,.61269,-.006165,.790277,.313944,-.087802,.945372,.666677,-.039918,.744255,.101138,.025178,.994537,.131809,793e-6,.991272,.273934,.049257,.960479,.321909,.049257,.945463,.119938,.060823,.990905,.202185,.105472,.973632,.318217,.065584,.945738,.455611,.120029,.882015,.257698,.177129,.949828,.30195,.163182,.939238,.621265,.239418,.746086,.577532,.19599,.792444,.09125,-.014496,.995697,.093509,-.030061,.995148,.136204,.089297,.986633,.137455,.097934,.985626,.079165,-.001862,.996857,.115238,.099216,.988342,.128117,.018036,.991577,.1536,.052583,.986724,.098605,.004883,.995086,.045228,.006928,.998932,.055513,-.001404,.998444,.06769,.112796,.991302,-.007752,.013581,.999847,-31e-6,-.001923,.999969,-.011322,.139348,.990173,.28721,.205786,.935484,.297708,.21775,.929472,.496689,.268532,.825312,.499771,.252846,.828425,.239204,.192724,.951628,.436842,.228401,.870022,.144749,.216437,.965484,.301889,.251137,.919645,-.033906,.280953,.959105,-.013031,.320292,.947203,.671499,.231758,.703818,.714072,.265938,.647572,.810846,.238807,.534257,.772362,.211158,.599017,.676229,.288003,.67803,.809442,.287118,.512162,.531358,.247444,.810175,.097232,.306253,.946959,.54912,.250923,.797143,-.038575,.301828,.952574,-.106632,.173803,.978973,-.066805,.018891,.997559,-.153813,.201086,.967406,-.097415,.019471,.995025,-.057985,.00238,.998291,-.086459,.015076,.996124,-.100711,.017731,.994751,-.089236,.034425,.995392,-.158086,.23545,.958922,-.101047,.017914,.99469,-.09238,.036042,.995056,-.149571,.23072,.961425,-.39555,.372234,.839595,-.251625,.354228,.900632,-.558092,.404889,.724235,-.355693,.407788,.840907,-.367016,.470962,.802149,-.584674,.450087,.674917,-.340709,.494278,.799738,-.575091,.499222,.648061,-.376629,.281899,.882412,-.444868,.298898,.844234,-.611377,.241432,.753563,-.62682,.285165,.725059,-.661367,.293649,.690146,-.651753,.232337,.721946,-.672567,.336009,.659322,-.668538,.232673,.70629,.169256,.286325,.943052,.256447,.381817,.887936,.229163,.532914,.814508,.329173,.631336,.702139,.288949,.389416,.874538,.377026,.660268,.649495,.068209,.187994,.979797,.106326,.209967,.971892,.123417,.356609,.926054,.14832,.403058,.903043,.042268,.215461,.975585,.03592,.306101,.951292,.125736,.39845,.908505,.135716,.534745,.83401,-.015442,.337596,.94113,.027223,.414136,.909787,.099124,.726066,.68041,.121433,.669729,.732597,.038606,.080508,.996002,.051668,.079623,.995453,-.08298,.152867,.984741,-.101749,.164129,.98117,.022828,.072329,.997101,-.101321,.140263,.984893,.023194,.113376,.993255,.011414,.129795,.991455,.026978,.086245,.99588,.005097,.043764,.999023,.019837,.048189,.998627,-.112918,.09122,.98938,-.015412,-.003754,.999847,.00174,-855e-6,.999969,-.13599,.011414,.990631,-.240181,.364849,.899533,-.243904,.354747,.902554,-.269082,.567614,.778039,-.23545,.563585,.791742,-.219855,.306925,.925962,-.212073,.488998,.846065,-.2313,.200171,.952055,-.236702,.340098,.910092,-.271981,.010956,.962218,-.316813,.015046,.948332,-.117832,.635731,.762841,-.137303,.693747,.706961,-.071474,.735191,.674062,-.064394,.681753,.728721,-.183447,.694662,.695517,-.105045,.756188,.645833,-.157933,.489944,.857295,-.291208,.078463,.953429,-.141423,.490951,.859615,-.304514,.018647,.9523,-.165044,-.082553,.982818,-.036683,-.059023,.997559,-.190161,-.131504,.9729,-.046663,-.089785,.994842,-.022736,-.053224,.998321,-.044527,-.07828,.995911,-.046236,-.093204,.994568,-.063845,-.078372,.994873,-.222663,-.132633,.965819,-.041444,-.095157,.994568,-.082034,-.075594,.993744,-.235298,-.127537,.9635,-.378796,-.360363,.852412,-.314615,-.207892,.926145,-.404248,-.508408,.760308,-.352336,-.310343,.8829,-.412061,-.318217,.853755,-.44911,-.529344,.719748,-.450331,-.314463,.835627,-.480697,-.523637,.70333,-.379131,-.345744,.858303,-.389904,-.434523,.811853,-.40083,-.626606,.668325,-.402509,-.612201,.680532,-.420576,-.637989,.645009,-.407727,-.664296,.626453,-.442274,-.629749,.638539,-.419691,-.66979,.612507,-.242073,.188513,.95175,-.315439,.281564,.906186,-.474471,.273721,.836604,-.559557,.384838,.734001,-.278451,.29371,.914426,-.581957,.440718,.683401,-.1695,.084109,.981903,-.180975,.121036,.975982,-.323435,.158818,.932798,-.361797,.184545,.913785,-.204657,.06476,.976653,-.296274,.072604,.95233,-.367962,.169012,.914335,-.507096,.197241,.838984,-.380505,.042848,.923765,-.40846,.078646,.90936,-.700888,.183813,.689138,-.643788,.197821,.739158,.108798,-.021119,-.993835,.076601,.661061,-.746391,.748009,.656056,-.099979,.918485,-.178533,-.352824,.853175,.341655,.394116,.885952,-.172216,.430555,.447768,-.888516,-.099948,-.17655,-.641621,-.746391,.663045,-.636372,.394147,-.53676,.104312,-.837245,-.436293,-.624409,-.647847,-.350047,-.746239,-.566179,-.518723,.100833,-.848933,-.045015,.823023,-.566179,-.170598,.742393,-.647847,-.571917,.111148,-.812708,-.473312,-.611347,-.634175,-.209815,.744163,-.634175,-.189215,.754875,-.627949,-.57683,.112094,-.809107,-.458205,-.629017,-.627949,.597125,-.653279,.465407,.785699,-.152715,.599445,.784845,-.152532,.600604,.648885,-.561357,.513565,.597491,-.653462,.464644,.788842,-.153325,.595111,.798364,.382031,.465407,.811945,.277413,.513565,.798791,.382061,.464644,.609699,-.649464,.454329,.798761,-.155248,.581225,.808588,.373791,.454299,.1124,-.993164,-.030641,.266213,-.954741,.132572,.091708,-.995331,-.029389,.093478,-.994842,-.038911,.476272,.87875,-.030641,.60448,.785485,.132572,.4579,.888485,-.029389,.459334,.887387,-.038911,-.07123,.084933,-.993835,-.475539,-.465499,-.746391,-.994201,-.039155,-.099979,-.601428,.716758,-.352824,-.878048,.271371,.394116,-.580126,.691397,.430555,.211188,.972289,-.099979,.541002,.387524,-.746391,-.11478,.911832,.394147,.351482,-.418867,-.837245,.732017,.210669,-.647847,.741661,.35963,-.566179,.339671,-.404797,-.848933,-.482955,-.667928,-.566179,-.334605,-.684317,-.647847,.374493,-.446333,-.812708,.752586,.177252,-.634175,-.305246,-.710349,-.634175,-.327982,-.705741,-.627949,.377728,-.450148,-.809107,.751946,.200446,-.627949,-.052889,.88348,.465407,-.514481,.613147,.599445,-.513932,.612476,.600604,-.150975,.84463,.513565,-.053072,.883877,.464644,-.516556,.615619,.595111,-.860866,.205512,.465407,-.805567,.295358,.513565,-.861232,.205756,.464644,-.065065,.888424,.454329,-.523026,.623341,.581225,-.863643,.21836,.454299,.537645,.842586,-.030641,.393933,.909513,.132572,.555101,.831233,-.029389,.553423,.831965,-.038881,-.923154,-.38316,-.030641,-.96408,-.230018,.132603,-.915006,-.402295,-.029389,-.915433,-.400525,-.038911,.102054,-.043306,-.993805,.212409,.630665,-.746391,.868068,.486221,-.099979,.861293,-.365612,-.352794,.905545,.156804,.394116,.830805,-.352641,.430525,.253212,-.962218,-.099979,-.306101,-.590899,-.746391,.516251,-.760338,.394116,-.503342,.21363,-.837245,-.556566,-.520066,-.647847,-.497543,-.657125,-.566179,-.486435,.206458,-.848933,.127079,.814386,-.566179,-.012513,.76165,-.647847,-.536332,.227638,-.812708,-.590075,-.499588,-.634175,-.050508,.771508,-.634175,-.028108,.777703,-.627949,-.54091,.229591,-.809107,-.578997,-.520005,-.627949,.448225,-.763176,.465407,.736778,-.312723,.599445,.735954,-.312387,.600604,.517991,-.684011,.513565,.448561,-.763421,.464644,.739738,-.313974,.595111,.860347,.207678,.465407,.851863,.102542,.513565,.860775,.207617,.464644,.461318,-.762047,.454299,.749046,-.317942,.581225,.868648,.197516,.454329,-.09653,-.994842,-.030641,.061861,-.989227,.132572,-.117191,-.992645,-.029389,-.11539,-.992553,-.038911,.648579,.760521,-.030641,.75457,.642659,.132603,.632618,.773858,-.029389,.633808,.772485,-.038881,.061953,.091861,-.993835,-.57857,.328806,-.746361,-.311655,.944884,-.099979,.523179,.775719,-.352824,.01886,.918851,.394116,.504685,.748253,.430555,.992859,.065004,-.099979,.521622,-.413251,-.746391,.844874,.361675,.394116,-.305765,-.453322,-.837245,.404309,-.645589,-.647847,.550127,-.613788,-.566179,-.29548,-.438093,-.848933,-.77517,.280129,-.566179,-.750053,.133,-.647847,-.325785,-.483016,-.812708,.377819,-.674551,-.634175,-.766991,.097598,-.634175,-.768792,.120762,-.627949,-.328593,-.487167,-.809107,.399945,-.667562,-.627949,.834681,.294382,.465407,.447584,.663564,.599445,.447096,.662831,.600604,.770287,.377941,.513565,.834986,.294656,.464644,.449385,.666219,.595111,-.039705,.884182,.465407,.061861,.8558,.513565,-.039552,.884579,.464644,.836085,.307443,.454299,.455031,.674612,.581225,-.028108,.890378,.454329,.958159,-.284585,-.030641,.982849,-.127995,.132603,.952055,-.304453,-.029389,.952269,-.302683,-.038911,-.622791,.781762,-.030641,-.486862,.863338,.132603,-.638936,.76867,-.029389,-.637379,.769555,-.038911,-.110752,-.003876,-.993835,.074038,-.661336,-.746391,-.581256,-.80755,-.099979,-.935087,-.032655,-.352824,-.754448,-.524827,.394116,-.902005,-.031495,.430525,-.636158,.765007,-.099979,.02768,.664907,-.746391,-.789209,.470901,.394116,.546464,.019074,-.837245,.284646,.706565,-.647847,.173193,.805841,-.566179,.528123,.018433,-.848933,.22898,-.791803,-.566179,.333232,-.684988,-.647847,.582293,.020325,-.812708,.323649,.70217,-.634175,.371838,-.677877,-.634175,.354167,-.692953,-.627949,.587298,.020508,-.809107,.304971,.715964,-.627949,-.728782,.502213,.465407,-.799921,-.027924,.599445,-.799036,-.027894,.600574,-.758538,.401013,.513565,-.729209,.502304,.464644,-.803125,-.028047,.595111,-.691977,-.551836,.465407,-.728721,-.452956,.513565,-.692373,-.551958,.464644,-.740165,.495682,.454329,-.813227,-.028382,.581225,-.703787,-.546098,.454329,-.332957,.942442,-.030641,-.474136,.870388,.132603,-.313273,.949187,-.029389,-.314859,.948332,-.038911,-.266396,-.963347,-.030641,-.412275,-.901334,.132572,-.246284,-.968719,-.029389,-.247932,-.967986,-.038911,.999969,.003174,-.005554,.999542,.004151,.029908,.921812,.38731,.015595,.922575,.385754,.005127,.703604,.710562,-.001312,.704794,.709281,.012238,.996002,.001862,-.088961,.921079,.383312,-.067965,.705283,.707083,-.050661,.37962,.924924,-.01822,.380505,.924619,.014801,-855e-6,.999451,-.032533,-.001038,.999908,.012452,.381603,.92346,-.039277,-275e-6,.999329,-.035981,-.382244,.924009,.005615,-.380688,.923704,-.042207,-.703604,.709067,-.045869,-.705741,.708426,-.00473,-.705374,.706809,-.053377,-.382,.923246,-.040773,-.922605,.385296,-.017029,-.92114,.386761,-.04294,-.99939,.005005,-.033845,-.999542,.003479,-.029511,-.995697,.001984,-.092624,-.920865,.38319,-.071413,-.925321,-.378643,-.019837,-.709647,-.70452,-.003113,-.708335,-.704245,-.0477,-.924375,-.379254,-.040284,-.702139,-.699911,-.13068,-.918668,-.378399,-.113254,-.385205,-.922697,.013825,-.002045,-.999573,.028413,-793e-6,-.99881,-.048341,-.383923,-.921964,-.050508,31e-6,-.989349,-.145421,-.379559,-.914212,-.14182,.381481,-.923551,.038453,.382672,-.922941,-.041414,.706839,-.706076,.042299,.707816,-.705679,-.030793,.379711,-.914335,-.140477,.702353,-.700156,-.128239,.924039,-.38023,.039338,.92465,-.380383,-.018189,.918973,-.378643,-.109958,.998749,458e-6,.049501,.922666,.385296,.014161,.998993,-.006531,.044069,.924894,.379772,.016999,.704337,.709464,-.023438,.707755,.70629,-.013306,.380108,.923154,-.057283,.383129,.922727,-.041871,702e-6,.996582,-.082308,.002564,.997925,-.063906,-.377544,.92111,-.094882,-.377483,.92288,-.0759,-.700186,.707816,-.093295,-.701804,.708274,-.076083,-.919126,.386212,-.077731,-.921049,.383984,-.064486,-.998718,.003296,-.050325,-.999054,-.002014,-.043092,-.924161,-.381634,-.01529,-.921506,-.387982,-.015625,-.706992,-.706839,.02179,-.701987,-.712027,.013367,-.382672,-.922208,.055269,-.377819,-.925016,.039674,-.002197,-.996765,.080203,458e-6,-.998199,.059847,.377606,-.921262,.093081,.377453,-.923246,.071444,.701376,-.706809,.092013,.699484,-.710898,.072848,.920255,-.383648,.076815,.918668,-.389843,.063509,.999908,-.005402,-.010987,.925413,.378918,-.00238,.99823,.003723,-.059175,.921201,.387829,-.030854,.70983,.704306,.005982,.70333,.710837,.001831,.386456,.922178,.013123,.379803,.924436,.033967,.00531,.999817,.018281,671e-6,.998138,.060854,-.377728,.925657,.020997,-.37846,.922239,.078738,-.704703,.709159,.020814,-.702078,.706992,.084902,-.924131,.381603,.017518,-.920499,.382824,.078219,-.999908,-.006745,.011292,-.99823,-.002136,.059389,-.919645,-.392651,.002777,-.921506,-.387036,.031098,-.698508,-.715537,-.006653,-.703421,-.710746,-.002014,-.37373,-.927396,-.015381,-.379192,-.92465,-.034852,.005158,-.999725,-.021729,702e-6,-.998047,-.062258,.382519,-.923612,-.024537,.38023,-.921384,-.080203,.704154,-.709616,-.023377,.703635,-.705313,-.08594,.921537,-.387799,-.018494,.921262,-.380902,-.078585,.997833,.001312,-.06531,.921079,.387127,-.041169,.998199,275e-6,-.059481,.921018,.386792,-.045595,.70278,.711295,-.011017,.70217,.711539,-.024995,.379009,.925138,.020478,.378368,.925626,-946e-6,488e-6,.99881,.048647,122e-6,.999725,.023011,-.377483,.923368,.069613,-.377239,.925077,.04358,-.700522,.709067,.080325,-.69985,.711905,.057924,-.919279,.385571,.079012,-.91879,.389477,.063753,-.997833,214e-6,.065462,-.998169,.004669,.059847,-.921598,-.385846,.041597,-.92291,-.382153,.04651,-.703543,-.710532,.011231,-.705344,-.708365,.025788,-.379589,-.924894,-.020753,-.381176,-.924467,.001038,-519e-6,-.998749,-.049501,-.001526,-.999695,-.023743,.377972,-.923093,-.070711,.377636,-.924833,-.044862,.701254,-.708243,-.081271,.701468,-.710227,-.059114,.919797,-.384259,-.079409,.920255,-.385937,-.064272,.999512,.002411,-.030457,.920682,.388348,-.038728,.923002,.383953,-.02411,.999969,-702e-6,-.00351,.700797,.712119,-.0412,.704856,.708121,-.040834,.376476,.925657,-.037568,.380383,.923399,-.051302,-.002441,.999573,-.028443,-366e-6,.998535,-.054018,-.380383,.92468,-.015046,-.381085,.923246,-.048647,-.702963,.711203,824e-6,-.705466,.707785,-.035859,-.921018,.389111,.016907,-.923338,.383557,-.017548,-.999512,.005737,.030519,-.999969,-855e-6,.003571,-.924345,-.379498,.039399,-.922605,-.38496,.024262,-.707785,-.70513,.041993,-.70452,-.708457,.041169,-.384045,-.922513,.037996,-.380535,-.923307,.051759,-.003327,-.999573,.02823,-458e-6,-.998505,.054506,.378185,-.925596,.014222,.379772,-.923765,.049043,.70394,-.710227,-.001831,.704215,-.709037,.036103,.922941,-.384503,-.017487,.922636,-.385205,.01764,.923521,.38319,-.014557,.999969,-.001099,31e-6,.924772,.380444,-.001282,.999969,-.003815,-.002167,.705954,.707724,-.026826,.70809,.706076,-31e-6,.38142,.923704,-.034974,.38319,.923643,.001221,0,.999268,-.037812,244e-6,.999969,.002258,-.381451,.923704,-.034974,-.382763,.923826,.002838,-.706046,.707633,-.026856,-.707846,.706351,.00293,-.923612,.382977,-.014557,-.924711,.380657,.002594,-.999969,-.001373,61e-6,-.999969,-.003754,.001984,-.922666,-.385266,.014801,-.922086,-.386883,.001282,-.704672,-.708975,.027345,-.704062,-.710105,549e-6,-.380535,-.924039,.035707,-.380169,-.924894,-214e-6,0,-.999237,.038636,275e-6,-.999969,-.001007,.380596,-.924039,.035676,.380627,-.924711,-.00177,.704794,-.708853,.027314,.704306,-.709861,-.002319,.922758,-.385052,.014801,.922147,-.386761,-.002503,.910672,.378704,-.164983,.697867,.69924,-.154881,.91348,.38142,-.141545,.698538,.701743,-.139927,.98413,.001434,-.177313,.989593,.002808,-.143681,.377972,.913938,-.14774,0,.989349,-.145512,.377758,.915433,-.138646,0,.990356,-.138371,-.697867,.699271,-.15479,-.377911,.913968,-.147679,-.698538,.701712,-.139897,-.377789,.915433,-.138646,-.984161,.001404,-.177129,-.910672,.378735,-.164861,-.989593,.002747,-.143651,-.91348,.38139,-.141514,-.693564,-.692251,-.199286,-.907743,-.374523,-.18891,-.700552,-.698202,-.147374,-.914945,-.376415,-.145512,92e-6,-.978027,-.208441,-.374889,-.903897,-.205847,31e-6,-.98883,-.1489,-.379192,-.913327,-.148381,.375103,-.903775,-.205939,.693686,-.692099,-.199438,.379254,-.913297,-.148381,.700583,-.698141,-.147404,.907743,-.374432,-.189123,.914945,-.376354,-.145543,.704581,.706626,-.064974,.921262,.383435,-.064974,.70394,.708701,-.046388,.921293,.386059,-.046358,.997864,.001556,-.065127,.998901,.004242,-.046449,0,.997864,-.064913,.381054,.922239,-.064852,.380535,.923582,-.046327,0,.998901,-.046358,-.704611,.706595,-.064974,-.381115,.922239,-.064852,-.380596,.923551,-.046327,-.70397,.70867,-.046388,-.921262,.383404,-.064974,-.997864,.001495,-.065127,-.921293,.385998,-.046358,-.998901,.004181,-.046449,-.92233,-.38081,-.065096,-.706107,-.705069,-.065218,-.708182,-.704459,-.04648,-.924223,-.378979,-.046419,-.382122,-.921781,-.065157,0,-.997864,-.065249,0,-.998901,-.04648,-.383435,-.922361,-.046419,.706137,-.705039,-.065218,.382183,-.921751,-.065157,.708213,-.704428,-.04648,.383496,-.922361,-.046419,.922361,-.380749,-.065096,.924253,-.378918,-.046419,.924863,.38023,.00177,.999786,-.002991,-.019959,.922666,.385083,-.019135,.999176,.002716,-.040345,.708609,.705191,.023438,.705527,.708609,.004883,.384228,.922269,.041627,.381664,.923856,.028077,.001984,.998566,.053407,793e-6,.998871,.047029,-.380535,.923002,.056978,-.37962,.923246,.058992,-.705618,.706687,.051759,-.702933,.708518,.062166,-.923399,.381848,.038514,-.920713,.386151,.055971,-.999786,-.002319,.01941,-.999115,.004089,.0412,-.922452,-.386029,-.002472,-.924772,-.379925,.019959,-.70397,-.709799,-.023804,-.708243,-.705924,-.004425,-.379162,-.924375,-.041322,-.382794,-.923399,-.028169,.001862,-.998596,-.052492,61e-5,-.998871,-.047487,.381939,-.922483,-.05591,.383099,-.921781,-.05942,.704917,-.707419,-.050996,.706992,-.704428,-.062227,.922117,-.38496,-.038453,.923276,-.380047,-.055513,.999054,336e-6,-.043153,.923002,.383129,-.035463,.999512,-397e-6,-.030763,.923399,.382794,-.027894,.706198,.707633,-.022401,.70629,.707572,-.020783,.381848,.924192,-.005921,.381512,.924284,-.010529,-336e-6,.999908,.011383,-.001129,.999969,.001312,-.382061,.923704,.026978,-.383282,.923521,.01294,-.705679,.70748,.038484,-.707022,.706778,.022584,-.922269,.383953,.044221,-.923338,.382885,.028809,-.999054,.001892,.043214,-.999512,702e-6,.030702,-.923856,-.380993,.035646,-.923826,-.381726,.027924,-.707724,-.706107,.022584,-.707633,-.706229,.020905,-.383251,-.923612,.006043,-.383587,-.923429,.010681,-427e-6,-.999908,-.011383,-.00119,-.999969,-.00116,.382183,-.923673,-.0271,.38142,-.924284,-.012879,.706381,-.706748,-.038636,.706015,-.707816,-.022614,.92291,-.382366,-.044282,.923093,-.383435,-.028901,.999908,-214e-6,-.012543,.923643,.383007,-.011567,.999969,.00235,-.003662,.92291,.38496,-.003357,.706442,.707694,-.00882,.705527,.70867,-.002564,.381603,.924284,-.00473,.381298,.924436,-.001373,-.001099,.999969,0,-458e-6,.999969,0,-.383374,.923551,.004791,-.382031,.924131,.001373,-.707389,.706748,.00882,-.705924,.708243,.002564,-.923826,.382611,.011536,-.923002,.384747,.003357,-.999908,214e-6,.012513,-.999969,.002472,.003662,-.923978,-.382244,.011567,-.924711,-.380627,.003357,-.707541,-.706565,.008881,-.708396,-.705771,.002594,-.383465,-.923521,.004822,-.383709,-.923429,.001404,-.001099,-.999969,0,-458e-6,-.999969,0,.381512,-.924314,-.004761,.382916,-.923765,-.001373,.706259,-.707877,-.00885,.707877,-.70629,-.002564,.92349,-.383374,-.011597,.924528,-.381054,-.003357,.995453,.094546,.009461,.995636,.084506,.03943,.987335,.152135,.044465,.986541,.16303,.010529,.98706,-.1601,.007935,.985748,-.164464,.034486,.993652,.05414,.098392,.986328,.117924,.114933,.981231,-.174902,.080874,.472304,-.880032,.049501,.470473,-.882138,.020325,.247688,-.968474,.026307,.249092,-.967101,.051546,.195715,-.980255,.027894,.196326,-.979156,.051973,.469375,-.876461,.10712,.248177,-.963469,.100528,.195349,-.975738,.098697,.747642,-.655232,.107944,.750938,-.658895,.043703,.842036,-.529923,.100436,.840724,-.540025,.039033,.750755,-.660451,.011811,.839991,-.542497,.008271,.890835,-.452773,.0365,.892331,-.442396,.089511,.890225,-.455397,.007996,.857021,-.177831,.483566,.899564,-.019318,.436293,.913511,-.008515,.40669,.878933,-.15125,.452254,.912412,.036683,.407605,.922971,.028565,.38374,.942747,-.012146,.333262,.917844,-.169713,.358806,.943114,.033021,.33079,.977722,.011811,.20951,.962981,-.181097,.199622,.971618,.067171,.226783,.720267,-.647298,.249336,.827235,-.505173,.245888,.446883,-.865963,.224403,.655293,-.637684,.404859,.775018,-.47499,.41673,.409284,-.840968,.353893,.584979,-.655812,.477126,.719626,-.480087,.501633,.37846,-.824824,.419996,.590472,-.633625,.499832,.699026,-.492019,.518876,.386242,-.809564,.44203,.88229,-.412427,.226783,.839625,-.366924,.400433,.773736,-.367046,.516282,.800623,-.341533,.492264,.233741,-.917783,.320933,.244819,-.885647,.394482,.190313,-.930326,.313456,.204535,-.897397,.390851,.26661,-.871456,.411634,.226844,-.878689,.420026,.240181,-.950011,.199347,.190771,-.962401,.193274,-.553178,-.832942,.013764,-.55385,-.832545,.009949,-.628224,-.777917,.010224,-.626118,-.779565,.015625,-.800043,-.599811,.010895,-.795709,-.605304,.020631,-.553026,-.831477,.052767,-.62157,-.780908,.061525,-.781487,-.618824,.079165,-.559221,-.820795,.116184,-.623066,-.768883,.143437,-.758385,-.627949,.174718,-.654714,-.730277,.194891,-.57033,-.80224,.176336,-.760735,-.606983,.229713,-.984771,.173345,.011231,-.922666,.385418,.010315,-.919584,.392499,.016846,-.982604,.184027,.023957,-.886959,.461684,.009919,-.884884,.46556,.013947,-.908475,.412732,.06531,-.971954,.216376,.091983,-.877529,.476485,.053652,-.887478,.435987,.149113,-.943785,.261391,.202216,-.865474,.48674,.118168,-.881893,.422559,.20896,-.929991,.240761,.277657,-.854335,.4897,.173986,-.992706,-.034516,.115329,-.998199,-.051607,.029786,-.965972,-.230781,.116581,-.975738,-.216681,.030335,-.99826,-.057375,.011811,-.976897,-.213233,.011841,-.923978,-.381451,.026521,-.907743,-.407147,.100864,-.927549,-.373424,.011475,-.942717,-.051027,.32963,-.967132,-.013031,.253914,-.901914,-.289956,.320048,-.930448,-.264504,.253456,-.867214,-.4485,.216224,-.84405,-.459334,.276681,.939329,-.342753,.012421,.941527,-.336772,.00882,.906674,-.421705,.008942,.906034,-.422956,.013977,.775628,-.631092,.009522,.779534,-.625996,.019959,.930784,-.362316,.048219,.900693,-.430921,.055147,.787439,-.611835,.074496,.912656,-.394665,.105991,.881649,-.454115,.128208,.786981,-.595599,.160863,.854671,-.489517,.172826,.889248,-.427534,.162481,.757317,-.615497,.218116,.070284,-.997467,.009186,-.15009,-.988617,.008606,-.151433,-.988342,.014435,.062349,-.997833,.019837,-.232612,-.972503,.008423,-.230049,-.973083,.012726,-.151646,-.986785,.056642,.040529,-.996368,.074709,-.220161,-.974212,.049196,-.139012,-.981567,.131046,.016144,-.986572,.162481,-.19895,-.973968,.108341,-.104068,-.978362,.178686,.036927,-.974761,.220099,-.174108,-.971099,.163182,.262978,-.959807,.09772,.28901,-.956938,.026093,.432356,-.895077,.108768,.440626,-.897214,.028993,.296915,-.954833,.009827,.442701,-.896603,.010163,.601459,-.792535,.100314,.590564,-.806513,.026948,.586474,-.80987,.010102,.227912,-.935667,.269387,.218665,-.953612,.206885,.412,-.86404,.289254,.414106,-.880428,.230873,.589557,-.76101,.270638,.61333,-.761132,.210944,.688559,.724967,.0159,.624012,.781274,.013642,.624317,.781091,.009949,.693319,.720542,.010285,.848323,.529313,.011353,.835963,.548235,.023652,.677358,.733085,.060793,.626576,.777673,.051057,.794671,.601001,.085177,.671163,.728813,.135319,.638539,.761864,.108646,.724174,.667714,.172246,.667348,.723045,.178381,.65862,.73394,.165899,.682455,.695517,.224647,.965545,-.259896,.0112,.885617,-.464248,.010102,.882382,-.470229,.015412,.959136,-.281899,.023591,.843654,-.53676,.009796,.843745,-.536546,.013153,.871212,-.487167,.059908,.935209,-.343242,.086734,.842463,-.53621,.05179,.850429,-.508011,.136509,.887631,-.422529,.183111,.837397,-.534196,.115513,.836207,-.514817,.18891,.857662,-.447127,.253945,.831019,-.530717,.166509,.997742,-.056825,.035615,.983215,-.127293,.130467,.990783,.128819,.041475,.977935,.141728,.153447,.99939,-.032075,.012665,.991791,.127018,.013367,.947203,.318613,.035249,.90759,.400128,.127049,.955962,.29313,.012696,.938963,-.215125,.26838,.919156,-.154851,.362102,.930052,.185614,.316996,.883847,.274056,.37904,.812677,.526475,.249641,.767968,.55916,.312326,-.696402,-.713981,-.072298,-.748405,-.659871,-.066683,-.747246,-.658254,-.090854,-.695029,-.712272,-.097659,-.454085,-.88638,-.089908,-.453139,-.882656,-.124668,-.692465,-.716117,-.087374,-.745659,-.661428,-.080386,-.447707,-.888455,-.10065,-.678304,-.724937,-.119602,-.737236,-.666707,-.109378,-.428449,-.894162,-.129765,-.634114,-.761132,-.136021,-.726829,-.674459,-.129551,-.372417,-.917142,-.141911,.087344,-.991058,-.100711,.086367,-.985626,-.145116,.599445,-.790735,-.123905,.599414,-.796045,-.083529,.086459,-.990966,-.102237,.586077,-.806116,-.081454,.082217,-.988952,-.123203,.551958,-.827967,-.098941,.070864,-.988647,-.13242,.492233,-.863521,-.109439,.807794,-.581347,-.09714,.806024,-.58797,-.067446,.849849,-.51915,-.09064,.847774,-.526414,-.064241,.790582,-.607959,-.072756,.833674,-.54738,-.073,.756035,-.647664,-.094394,.807245,-.582354,-.095889,.707816,-.699026,-.101382,.780572,-.615101,-.110904,-.444838,-.893429,-.061983,-.511307,-.857112,-.062288,-.521073,-.848689,-.090243,-.455245,-.885128,-.096286,-.164342,-.984039,-.068178,-.1742,-.977142,-.121738,-.399823,-.914975,-.054079,-.470656,-.879788,-.066408,-.125248,-.991607,-.031312,-.298257,-.952788,-.05649,-.39143,-.916593,-.081088,-.038636,-.999207,-.007385,-.190588,-.980834,-.040101,-.312113,-.946043,-.086947,.04181,-.999084,.006165,.373516,-.924528,-.075472,.370769,-.917844,-.141514,.804102,-.581927,-.121525,.801782,-.593677,-.068178,.374493,-.926939,-.022736,.778954,-.62627,-.031312,.374554,-.927061,.014924,.721915,-.691916,-.007385,.374432,-.926786,.02826,.66393,-.747734,.006165,.942351,-.320475,-.095981,.940642,-.333659,-.061983,.964415,-.248543,-.089846,.963225,-.261361,-.062288,.923215,-.380413,-.054079,.949736,-.305887,-.066408,.876431,-.478164,-.05649,.918302,-.387432,-.081057,.818445,-.573138,-.040101,.88168,-.463698,-.086947,.706534,-.707511,.012452,.710959,-.703116,.010071,.643483,-.765374,.010407,.642781,-.765893,.014496,.436048,-.899808,.011475,.440474,-.897458,.021882,.692129,-.720084,.049013,.636128,-.769433,.057192,.445509,-.891476,.082064,.666921,-.737114,.108707,.612903,-.778619,.134434,.42439,-.886776,.182897,.567217,-.801508,.189276,.639058,-.750816,.166906,.307077,-.912473,.270302,-.357677,-.933775,.011109,-.553514,-.832759,.010193,-.551866,-.833796,.013398,-.363414,-.931394,.019623,-.621326,-.783441,.009949,-.615223,-.788232,.011841,-.542497,-.838374,.053041,-.374401,-.924406,.072634,-.596088,-.801538,.046663,-.516251,-.847377,.124058,-.3708,-.915067,.158391,-.564806,-.81869,.103397,-.477554,-.861843,.170598,-.306711,-.924345,.226844,-.532762,-.831385,.157811,-.154302,-.98294,.100009,-.139958,-.989776,.027161,.00296,-.9935,.11359,.018677,-.999329,.03058,-.13419,-.990875,.011963,.022156,-.999664,.01236,.181402,-.977233,.109989,.18952,-.981414,.029359,.188818,-.981903,.012299,-.110324,-.955504,.273507,-.161657,-.964232,.209998,-.084048,-.952055,.294076,-.0506,-.969451,.239875,-.019684,-.952269,.304514,.119266,-.963683,.238838,.335734,.941923,-824e-6,.338542,.940947,-.00174,.443037,.896481,-.001221,.408399,.912778,-763e-6,.626453,.779412,-488e-6,.619037,.785333,-275e-6,.333415,.942747,-122e-6,.406232,.913755,-122e-6,.618183,.786004,-183e-6,.306131,.945036,.114658,.319163,.946013,.056307,.387371,.919126,.071322,.373608,.914731,.153752,.595752,.79574,.108737,.578295,.786737,.215857,.414747,.885891,.207709,.305368,.937132,.168798,.629902,.725883,.276193,.863857,-.503677,-488e-6,.707205,-.706992,-.001251,.663839,-.747856,-824e-6,.856746,-.515702,-305e-6,.585406,-.810724,-.001831,.582049,-.813135,-855e-6,.661336,-.750053,-122e-6,.856014,-.516923,-153e-6,.579333,-.815088,-92e-6,.83639,-.537156,.108951,.642384,-.763604,.064791,.6292,-.76458,.139592,.815607,-.537034,.215217,.565386,-.82345,.04706,.553758,-.827113,.096042,.675985,-.709861,.197699,.851863,-.442824,.279611,.554003,-.819849,.144566,.987671,-.156377,0,.987701,-.156255,-214e-6,.980102,.198401,0,.980102,.198401,-244e-6,.851192,.524827,0,.851222,.524735,-214e-6,.943388,-.176031,.281075,.935514,-.119327,.332469,.935026,.186499,.301462,.92053,.178686,.347331,.973907,-.171117,.148961,.967071,.196387,.161748,.806757,.521592,.277535,.822108,.463973,.329844,.833216,.533158,.146519,.406201,.913663,.013886,.616291,.787164,.021882,.334513,.942289,.011322,.621052,.783715,-.002808,.40968,.912198,-.001404,.336863,.941527,-793e-6,.407056,.913388,-732e-6,.334208,.942473,-488e-6,.618976,.785363,-.001343,.851588,.524186,-.001953,.980071,.198614,-.002136,.85226,.523057,-.004059,.979919,.199316,-.004395,.849422,.526811,.029878,.979186,.20014,.033387,.987854,-.155217,-.001892,.856655,-.515854,-.001251,.98825,-.152654,-.003754,.858394,-.512925,-.00238,.987243,-.156011,.030854,.854885,-.518265,.022584,.660604,-.750603,.013184,.579516,-.814875,.009827,.664296,-.747429,-.001038,.58211,-.813074,-519e-6,.662038,-.749443,-61e-5,.579913,-.814661,-366e-6,-.574419,-.806818,.137883,-.59032,-.804285,.067751,-.65627,-.749779,.084262,-.63805,-.748314,.181341,-.825953,-.550523,.121128,-.802637,-.546007,.240028,-.670522,-.701621,.241035,-.569689,-.796747,.201483,-.828059,-.474136,.299112,-.760094,.640126,.111606,-.555681,.828303,.07123,-.541459,.826502,.153874,-.739555,.635701,.221137,-.471572,.880184,.053285,-.45851,.881954,.109043,-.592029,.777245,.213019,-.777825,.562181,.280831,-.459029,.873287,.163121,-.895169,.351177,.274422,-.893948,.30958,.323954,-.953246,.066561,.294717,-.937895,.065981,.340526,-.92407,.353526,.145177,-.985168,.066408,.158116,-.929197,-.235267,.284982,-.922697,-.191687,.334452,-.959471,-.238075,.15067,-.675161,-.737449,.016297,-.843684,-.536241,.02414,-.606739,-.794763,.01355,-.846858,-.531785,-.003082,-.678304,-.734733,-.001648,-.609119,-.793054,-977e-6,-.674917,-.737877,.003388,-.675863,-.736991,-855e-6,-.606464,-.795099,-58e-5,-.605457,-.795862,.003388,-.844752,-.535081,.003418,-.845363,-.534135,-.001495,-.973754,-.227424,.003449,-.973907,-.226875,-.001984,-.997711,.067141,.003449,-.997742,.066988,-.002106,-.974181,-.225654,-.004151,-.997772,.066408,-.004303,-.9729,-.229072,.030671,-.997284,.065889,.032716,-.93878,.344432,.00351,-.939085,.343669,-.001831,-.780114,.625599,.003571,-.780877,.624622,-.001282,-.939787,.341685,-.003662,-.782769,.622303,-.002411,-.938383,.344188,.030091,-.779138,.626392,.022919,-.575457,.817682,.014313,-.487625,.872951,.011048,-.579394,.815027,-.001129,-.490524,.871395,-58e-5,-.576952,.816767,-671e-6,-.575945,.817438,.00354,-.488021,.872799,-397e-6,-.487075,.873318,.00351,.232032,-.962859,.137913,.219703,-.973174,.067751,.135289,-.987213,.084262,.146153,-.972472,.181341,-.126347,-.984558,.121128,-.114475,-.963958,.240028,.089572,-.966338,.241035,.227515,-.952666,.201483,-.1854,-.936003,.299142,-.98178,-.153691,.111606,-.989685,.124027,.07123,-.979003,.13358,.153874,-.964965,-.141087,.221107,-.973662,.221534,.053255,-.96643,.232551,.109043,-.974975,.063082,.213019,-.934599,-.218207,.280831,-.960234,.226478,.163121,-.852321,-.445204,.274422,-.820154,-.471572,.323954,-.675619,-.675741,.294717,-.66512,-.664541,.340526,-.873074,-.465438,.145177,-.696432,-.699942,.158116,-.43202,-.855617,.284982,-.460646,-.822138,.334452,-.449782,-.880306,.15067,.11362,-.993378,.016297,-.148778,-.988556,.02414,.201758,-.979308,.01355,-.154241,-.988006,-.003082,.1095,-.993957,-.001648,.198889,-.98001,-977e-6,.114139,-.993439,.002503,.112796,-.993591,-855e-6,.202185,-.979339,-58e-5,.203406,-.979064,.002594,-.150273,-.988617,.00235,-.151494,-.988433,-.001495,-.467147,-.884152,.002197,-.467696,-.883877,-.001984,-.705252,-.708914,.002167,-.70513,-.709037,-.002106,-.468795,-.883267,-.004151,-.704733,-.709433,-.004303,-.465377,-.884548,.030671,-.704001,-.709403,.032716,-.875881,-.482498,.002289,-.875454,-.483261,-.001831,-.983978,-.178228,.002564,-.983734,-.17954,-.001282,-.874416,-.485092,-.003662,-.983184,-.182501,-.002411,-.875423,-.482406,.030091,-.983917,-.177068,.022919,-.994659,.102115,.014313,-.978729,.204688,.011048,-.995239,.097415,-.001129,-.979461,.201483,-58e-5,-.994934,.100406,-671e-6,-.994812,.101657,.002808,-.978881,.20426,-397e-6,-.978668,.205329,.002899,.990387,-.007752,.137913,.997436,-.022217,.067751,.9906,-.107517,.084262,.978942,-.093417,.181341,.924711,-.36079,.121128,.907651,-.344279,.240028,.959319,-.146825,.241035,.97943,-.009674,.201483,.863338,-.406354,.299142,-.088382,-.989807,.111606,-.359783,-.930296,.07123,-.366436,-.9176,.153874,-.09653,-.970428,.221137,-.450514,-.89114,.053285,-.459456,-.881466,.109043,-.297098,-.930754,.21305,-.014344,-.959624,.280831,-.45204,-.876919,.163121,.225776,-.934721,.274422,.259133,-.909848,.323954,.492203,-.819056,.294717,.483902,-.806116,.340526,.240394,-.959746,.145177,.510666,-.845088,.158116,.7257,-.626179,.284982,.68627,-.645863,.334452,.745354,-.649403,.15067,.991363,-.130039,.016297,.923185,-.383526,.02414,.999054,-.041139,.01355,.921354,-.388684,-.003082,.990936,-.13419,-.001648,.999023,-.044099,-977e-6,.991546,-.129521,.00238,.991363,-.130894,-855e-6,.999146,-.040742,-58e-5,.999207,-.03946,.002533,.922941,-.384899,.002014,.922422,-.38612,-.001495,.744896,-.667135,.001617,.744469,-.667623,-.001984,.517258,-.8558,.001465,.51738,-.855708,-.002106,.743614,-.668569,-.004151,.517869,-.855434,-.004303,.745689,-.665548,.030671,.518021,-.854732,.032716,.256264,-.966582,.001495,.257118,-.966369,-.001831,-.065096,-.997864,.00174,-.063753,-.997955,-.001282,.259133,-.965819,-.003662,-.060762,-.998138,-.002411,.256294,-.966124,.030091,-.066195,-.997528,.022919,-.339732,-.940397,.014313,-.435408,-.900143,.011048,-.335307,-.942076,-.001129,-.432478,-.901639,-58e-5,-.338115,-.941069,-671e-6,-.339335,-.940642,.002045,-.435011,-.900388,-397e-6,-.436018,-.89993,.002167,-.41554,.909543,-977e-6,-.412336,.911008,-.002075,-.290139,.956969,-.001434,-.331797,.943327,-916e-6,-.065065,.997864,-58e-5,-.074526,.997192,-336e-6,-.418195,.908322,-122e-6,-.334422,.942412,-153e-6,-.075747,.997101,-214e-6,-.442671,.885983,.137913,-.432997,.898831,.067751,-.353893,.931455,.084262,-.361156,.91467,.181371,-.098331,.987732,.121128,-.105289,.965026,.240028,-.304697,.921415,.241035,-.435957,.877102,.201514,-.029878,.953734,.299142,.913572,.406598,-549e-6,.982757,.184729,-.001373,.991699,.12833,-916e-6,.918027,.396496,-305e-6,.999573,.02823,-.002045,.999695,.023896,-977e-6,.992126,.125004,-153e-6,.918577,.395215,-183e-6,.999786,.020356,-122e-6,.922056,.370586,.111606,.992248,.101749,.071261,.983947,.09006,.153874,.908505,.354534,.221107,.998566,.003143,.053255,.993988,-.009156,.109043,.964202,.157811,.213019,.861568,.422834,.280801,.986572,-.004608,.163121,.744926,.667104,0,.744865,.667196,-214e-6,.527726,.849391,0,.527696,.849422,-244e-6,.256264,.966582,0,.256325,.966582,-214e-6,.730308,.625507,.274422,.693045,.643971,.323954,.506333,.810389,.294717,.498611,.797113,.340526,.745994,.649922,.145177,.521165,.838679,.158116,.228492,.930876,.284982,.263924,.90466,.334483,.240242,.958922,.150639,-.334178,.942351,.016297,-.077395,.996704,.02414,-.416883,.908841,.01355,-.071963,.997375,-.003082,-.330302,.943846,-.001648,-.414228,.910154,-977e-6,-.333415,.942747,-855e-6,-.41728,.90875,-58e-5,-.07474,.997192,-.001495,.256874,.96643,-.001984,.527543,.849483,-.002106,.258095,.966094,-.004151,.527085,.849788,-.004303,.254463,.966582,.030671,.526383,.849605,.032746,.744316,.667806,-.001831,.918119,.396222,-.001282,.742882,.669362,-.003662,.916929,.398999,-.002411,.744469,.666951,.030091,.918851,.393872,.022919,.992126,.12421,.014313,.999695,.020692,.011017,.991638,.12891,-.001129,.999695,.023988,-58e-5,.992004,.12595,-671e-6,.999756,.021149,-397e-6,-.991302,-.131474,-977e-6,-.99176,-.127934,-.002075,-.999969,.002289,-.001434,-.999115,-.041505,-916e-6,-.973296,.22953,-58e-5,-.975433,.220283,-336e-6,-.990905,-.134342,-122e-6,-.998993,-.044282,-153e-6,-.975677,.219062,-183e-6,-.976714,-.164312,.137883,-.986145,-.15128,.067751,-.994232,-.066103,.084262,-.980316,-.077975,.181341,-.973327,.194739,.121128,-.953642,.181433,.240028,-.970244,-.022004,.241005,-.966247,-.160527,.201453,-.920804,.250221,.299112,-.121738,.992553,-549e-6,.11063,.993835,-.001373,.16718,.9859,-916e-6,-.110752,.993835,-305e-6,.265236,.964171,-.002045,.269417,.963012,-977e-6,.170476,.985351,-153e-6,-.109409,.993988,-183e-6,.272805,.962035,-122e-6,-.084811,.990112,.111606,.192785,.978637,.071261,.201514,.967284,.153905,-.073428,.972472,.221137,.288919,.95584,.053285,.299387,.947844,.109043,.130894,.9682,.21305,-.15244,.947539,.280831,.292856,.942106,.163152,-.420179,.907437,0,-.42024,.907376,-214e-6,-.657979,.752983,0,-.65801,.752983,-244e-6,-.849422,.527665,0,-.849391,.527726,-214e-6,-.384625,.881314,.274422,-.41319,.851039,.323954,-.626942,.721122,.294717,-.616535,.709861,.340526,-.403394,.903409,.145177,-.649648,.743584,.158116,-.823389,.490677,.284982,-.787988,.516861,.334452,-.846797,.510086,.15067,-.998871,-.044038,.016297,-.975768,.217383,.02414,-.991028,-.132939,.01355,-.974853,.222785,-.003082,-.999176,-.039888,-.001648,-.991485,-.130039,-977e-6,-.999054,-.043214,-855e-6,-.991058,-.133396,-58e-5,-.975463,.220069,-.001495,-.849086,.528214,-.001984,-.658132,.752861,-.002075,-.848415,.529283,-.004151,-.658528,.752495,-.004303,-.84994,.525956,.030641,-.658559,.751793,.032716,-.421003,.907041,-.001831,-.110477,.993866,-.001282,-.422926,.906125,-.003662,-.113468,.99353,-.002411,-.420148,.906919,.030091,-.108005,.993866,.022919,.17127,.985107,.014313,.272469,.962096,.011017,.166601,.985992,-.001129,.269326,.963042,-58e-5,.169561,.985504,-671e-6,.272042,.962249,-397e-6,.906949,-.421186,-977e-6,.905484,-.424329,-.002045,.843379,-.537278,-.001434,.86581,-.500351,-916e-6,.699454,-.714652,-58e-5,.706198,-.707999,-336e-6,.90817,-.418592,-122e-6,.867153,-.497971,-153e-6,.707053,-.707114,-183e-6,.912259,-.386212,.136387,.913144,-.40202,.066988,.874783,-.477218,.083529,.869503,-.459975,.179785,.718223,-.685202,.120853,.708762,-.663533,.239418,.831416,-.50145,.239326,.901578,-.383862,.199469,.643727,-.704398,.29902,-.446516,-.894742,-549e-6,-.643086,-.76577,-.001373,-.685842,-.727714,-916e-6,-.456557,-.889676,-305e-6,-.755516,-.65511,-.002045,-.758324,-.651845,-977e-6,-.688284,-.725425,-153e-6,-.457778,-.889035,-183e-6,-.760613,-.64919,-122e-6,-.476455,-.872005,.112125,-.703177,-.707419,.071108,-.704215,-.693167,.153539,-.476211,-.850795,.222083,-.770562,-.635151,.053011,-.774865,-.62273,.108493,-.645741,-.733207,.213019,-.394971,-.874142,.28254,-.766289,-.621601,.162389,-.145085,-.98941,0,-.144993,-.98941,-214e-6,.144993,-.98941,0,.145024,-.98941,-244e-6,.433058,-.901334,0,.432997,-.901364,-214e-6,-.160894,-.947325,.276833,-.119144,-.937529,.326792,.13599,-.945036,.297311,.132969,-.929716,.343364,-.157201,-.976623,.14655,.143101,-.976745,.159581,.431074,-.855647,.286355,.385693,-.859127,.336314,.440504,-.884854,.151463,.866939,-.498093,.016175,.70809,-.705679,.02411,.907498,-.419782,.013398,.704367,-.709799,-.003082,.864986,-.501724,-.001617,.906369,-.422468,-946e-6,.866634,-.498886,-855e-6,.907743,-.419477,-58e-5,.70632,-.707846,-.001495,.432447,-.901639,-.001984,.145177,-.98938,-.002106,.431288,-.902188,-.004151,.145756,-.989288,-.004334,.434462,-.900143,.030824,.146184,-.988678,.033021,-.144139,-.989532,-.001862,-.456801,-.889553,-.001282,-.142003,-.989837,-.003693,-.454085,-.890927,-.002441,-.14481,-.988983,.030366,-.458937,-.88815,.023072,-.688803,-.724784,.014313,-.760369,-.649373,.010987,-.685415,-.728111,-.001129,-.758263,-.651906,-58e-5,-.687582,-.726066,-671e-6,-.760125,-.64977,-397e-6,.92761,.140965,.345866,.923704,.078219,.375011,.993622,.094821,.060518,.984802,.162633,.06061,.916196,-.151372,.370983,.985534,-.159124,.058107,.749718,-.658956,.060488,.701315,-.608386,.371471,.447401,-.810389,.378246,.47029,-.879696,.070284,.839106,-.541002,.056154,.781396,-.498672,.375103,.889096,-.454207,.056429,.828791,-.420148,.369488,-.843959,-.534349,.046663,-.972686,-.227119,.047578,-.816858,-.515488,.258797,-.93939,-.219001,.26368,-.996582,.067141,.047853,-.961913,.065004,.265481,-.904691,.332255,.266701,-.752892,.602313,.265206,-.77926,.624836,.048067,-.937651,.344188,.048158,-.591815,-.768395,.243446,-.655995,-.711722,.251106,-.674184,-.737144,.045289,-.604724,-.79516,.04474,-.560289,.78692,.258431,-.575365,.816523,.046846,-.477706,.841243,.25309,-.486465,.872463,.046236,-.964232,-.172094,.201544,-.972625,.097903,.21073,-.994049,.102237,.037385,-.98349,-.177313,.035249,-.959166,.195196,.204566,-.977935,.205298,.037904,-.861171,-.471938,.188726,-.875668,-.481735,.032716,-.693991,-.696646,.181707,-.705008,-.708457,.031373,-.06769,-.98706,.145268,-.335368,-.928587,.158788,-.339976,-.940001,.027589,-.06595,-.997497,.024812,-.42671,-.891049,.154668,-.435926,-.899503,.028535,-.149663,-.988189,.032746,-.46672,-.883816,.031526,-.146153,-.97116,.18833,-.458632,-.869716,.182195,.824549,-.299814,.479751,.782617,-.366192,.503342,.901639,-.41847,.108921,.936247,-.334147,.108493,.675741,-.548997,.491867,.77163,-.627277,.105045,.583758,-.805689,.100131,.514847,-.709342,.481338,.440962,-.892148,.097812,.389569,-.787805,.477004,.532517,.656697,.533952,.584796,.602161,.543504,.688589,.714408,.124271,.619648,.775079,.123508,.714927,.443342,.540605,.843043,.523331,.123905,.814112,-.21659,.538774,.746605,-.386792,.541246,.879269,-.460097,.123112,.958953,-.255593,.122532,.718375,-.449629,.530747,.837336,-.532762,.12244,.842128,-.024873,.538682,.992218,-.029206,.121006,.835017,.106906,.53972,.984649,.126041,.120457,.949675,.288552,.121708,.805506,.24485,.539598,.590777,-.591876,.548296,.532945,-.639119,.55446,.637989,-.759178,.128849,.705649,-.69686,.128056,.362438,-.750114,.553087,.431837,-.892605,.129215,.983215,-.04294,.177282,.974395,-.126133,.186041,.99118,-.128422,.032594,.998657,-.039308,.033662,.912015,-.374798,.166478,.923063,-.383526,.028596,.246132,-.891049,.381329,.24836,-.965606,.076846,.201544,-.914121,.351756,.197058,-.977294,.077639,.187506,-.973937,.127598,.157445,-.817713,.553636,.022401,-.991699,.126499,.018799,-.832026,.554369,.195593,-.962889,.185919,.111118,-.97467,.193976,.114628,-.992798,.034089,.203436,-.978454,.034455,.252602,-.958434,.132603,.255837,-.96643,.022492,.513627,-.847865,.131504,.517319,-.855495,.022309,.745232,-.666311,.024415,.739616,-.657521,.143498,.261361,-.839564,.47618,.061892,-.875027,.480056,.070254,-.992431,.100558,.296121,-.950072,.098209,-.84109,-.048585,.538682,-.82989,.14481,.538774,-.977599,.171056,.122532,-.990966,-.057344,.121006,-.822504,-.179266,.53972,-.969939,-.211371,.120457,-.794214,-.594836,.123905,-.920896,-.37022,.121708,-.673574,-.503952,.540605,-.781091,-.314127,.539598,-.777459,.320231,.541246,-.916013,.381695,.123112,-.754845,.385327,.530747,-.880581,.457747,.122471,-.473251,-.700613,.533952,-.530076,-.650838,.543504,-.623707,-.771691,.124271,-.54976,-.826136,.123508,-.297281,-.779077,.551927,-.458205,-.695608,.553301,-.548997,-.825922,.128086,-.354045,-.926389,.128086,-.516129,-.659963,.545915,-.616993,-.776574,.127445,-.128513,-.864193,.486435,-.149571,-.983367,.102756,-.20072,-.861995,.465438,-.231666,-.967376,.102268,-.696005,-.617878,-.365734,-.647938,-.664479,-.372265,-.688528,-.704978,-.169927,-.740379,-.65212,-.162877,-.416272,-.806848,-.419141,-.447249,-.869686,-.208777,.077761,-.886959,-.455184,.084689,-.967254,-.239204,.54973,-.721335,-.421216,.591479,-.778649,-.209296,-.486526,-.796686,-.358531,-.427076,-.826685,-.366253,-.45262,-.875607,-.168584,-.517441,-.840236,-.161809,-.164281,-.898434,-.407147,-.174017,-.962951,-.205878,-.111423,-.825678,.552995,-.132633,-.982971,.126957,.744804,-.535661,-.397839,.886959,-.300211,-.350871,.934355,-.315714,-.165166,.794244,-.572405,-.203681,.909146,-.236366,-.342814,.956511,-.245125,-.157933,.752373,-.541002,-.375744,.800409,-.574602,-.170721,.791498,-.486923,-.369335,.84225,-.513565,-.163793,.336222,-.834315,-.436811,.363842,-.901425,-.234504,.666982,.076052,.741142,.577258,.025056,.816157,.307413,458e-6,.951567,.292795,-.010407,.956114,.575396,-.103153,.811304,.275521,-.058229,.959502,.481002,-.298013,.824488,.450423,-.372143,.811518,.248268,-.145726,.95764,.224769,-.168767,.959655,.29783,-.497757,.814539,.160466,-.223518,.961364,.520371,-.261177,.812983,.255928,-.125126,.958556,-.618458,-.390423,.681936,-.705527,-.165075,.689169,-.382702,-.242927,.891324,-.432478,-.102695,.895749,-.719413,.048311,.692892,-.441786,.028932,.896634,-.676229,.248085,.693625,-.413556,.151067,.897824,-.565722,.45146,.689993,-.346873,.275033,.896634,-.49559,-.609027,.61919,-.510239,-.535203,.673177,-.336894,-.371258,.86523,-.343425,-.335398,.877224,-.435957,.586352,.682699,-.294961,.361034,.88464,-.400708,.650685,.644978,-.282815,.3979,.872738,-.787896,-.144658,.598529,-.790155,.062319,.609699,-.549913,-.118137,.826807,-.558824,.017151,.829066,-.829432,.146275,.539079,-.569781,.067782,.818964,-.581011,-.583605,.567248,-.714377,-.392682,.57918,-.422681,-.429365,.79809,-.510056,-.292276,.808924,-.057894,-.86935,.490738,-.277993,-.812922,.511673,-.018586,-.697989,.715842,-.187628,-.653768,.733024,-.374248,-.822596,.428053,-.256539,-.635426,.728263,-.124088,-.807855,.576128,-.384594,-.728599,.566698,-.100894,-.58037,.808039,-.283792,-.529374,.799493,.478225,-.187597,.857936,.410108,-.20365,.888974,.212165,-.101016,.971984,.197089,-.109622,.974212,.360698,-.300394,.882962,.169622,-.146428,.974548,.279122,-.389904,.877499,.134678,-.19129,.972228,.213416,-.432844,.87582,.105472,-.214759,.970946,.293527,.340068,.893399,.293344,.290109,.910916,.146214,.14481,.978576,.146306,.130467,.98059,.353221,.216651,.910092,.162297,.097171,.981933,.402661,-.105167,.909268,.372448,-.182562,.909879,.185766,-.04651,.981475,.182012,-.077914,.980193,.391125,-.227302,.891781,.187841,-.089175,.978118,.411084,.052461,.910062,.415784,-.011414,.90936,.193274,.024567,.980804,.193548,-.004883,.981048,.397595,.119388,.909757,.184454,.054689,.981292,.295572,-.315958,.901517,.250343,-.312632,.916257,.123325,-.155248,.980132,.109867,-.153294,.982025,.17304,-.3614,.916196,.076632,-.164159,.983428,.884945,-.053468,.462569,.81637,-.120609,.564745,.619648,-.064577,.782189,.607044,-.119205,.785638,.779778,-.32432,.535447,.586779,-.281381,.75927,.186804,-.542985,.818659,.126164,-.259102,.957549,.178289,-.652211,.736747,.12421,-.276406,.952971,.074465,-.392956,.916501,.033631,-.180303,.983001,.00885,-.398694,.91702,.004059,-.185461,.982635,.156926,-.854976,.494308,.07886,-.809168,.582232,.083865,-.602832,.79342,.034883,-.5927,.804651,.460036,-.758629,.461348,.225349,-.85696,.463485,.371288,-.627186,.684622,.194891,-.699454,.687551,.65212,-.579394,.488876,.507431,-.484573,.712485,.145116,-.462264,.874752,.071963,-.226875,.971252,.037446,-.480178,.876339,.021058,-.232459,.97235,-.40495,-.088076,.910062,-.415204,-.024842,.90936,-.190405,-.041322,.980804,-.193243,-.011963,.981048,-.410321,.069674,.909268,-.189093,.030152,.981475,-.332987,-.24662,.910092,-.385662,-.153569,.909757,-.153203,-.110935,.981933,-.178991,-.070559,.981292,-.386975,.149419,.909879,-.188116,.061739,.980193,-.409467,.192358,.891781,-.194922,.072481,.978118,-.262764,-.36436,.893399,-.266945,-.314554,.910886,-.133061,-.156987,.978576,-.134373,-.142705,.98059,-.141881,-.375896,.915708,-.213416,-.34019,.915799,-.06299,-.171819,.983093,-.092196,-.16596,.98178,-.255867,-.351665,.900449,-.103122,-.170904,.979858,-.059633,-.472243,.879421,-.019257,-.237434,.971191,-.106967,-.520371,.847194,-.032777,-.246712,.968505,-.536241,-.491317,-.6863,-.444655,-.46263,-.766961,-.255745,-.260079,-.931089,-.228706,-.253243,-.93997,-.291787,-.542009,-.788049,-.14594,-.257485,-.955168,.051332,-.591479,-.804651,.022248,-.263192,-.964476,.379467,-.481033,-.790277,.18543,-.226081,-.956267,-.379131,-.641469,-.66686,-.293344,-.580065,-.75988,-.173345,-.331126,-.927519,-.147557,-.317179,-.936796,-.12122,-.618213,-.776574,-.063204,-.303842,-.950591,-.052858,-.397015,.916257,-.024018,-.182867,.982818,.527909,-.367016,-.765862,.633076,-.219275,-.742332,.273537,-.180273,-.944792,.351299,-.132908,-.926756,.73629,-.202246,-.645711,.381054,-.12418,-.916135,.514542,-.375896,-.770623,.264718,-.206702,-.941893,.609882,-.388653,-.690603,.292184,-.208838,-.933256,.232948,-.572253,-.786248,.111881,-.266823,-.957213,.649434,-.754357,-.095492,.654622,-.75341,-.061769,.596149,-.800684,-.058992,.591083,-.80166,-.088992,.840205,-.528398,-.121769,.846095,-.527726,-.074801,.66802,-.74218,-.053438,.609851,-.790307,-.058596,.855098,-.516312,-.04706,.989837,0,-.142186,.996277,0,-.085971,.846095,.527726,-.074801,.840175,.528398,-.12183,.998871,0,-.04709,.855098,.516312,-.04706,.654622,.75341,-.061769,.649434,.754357,-.095584,.596149,.800684,-.058992,.591083,.80166,-.089084,.66802,.74218,-.053468,.609851,.790307,-.058596,-.759484,.643483,-.09534,-.76455,.64156,-.061586,-.714194,.697409,-.058901,-.70925,.699332,-.088839,-.912534,.390423,-.121647,-.918332,.388684,-.074374,-.776513,.627857,-.052675,-.726585,.684561,-.05829,-.925718,.375439,-.045228,-.97763,-.154881,-.142125,-.984069,-.155858,-.085391,-.753288,-.653462,-.074374,-.747185,-.65331,-.121891,-.986694,-.156255,-.044649,-.764367,-.643147,-.045228,-.528886,-.846431,-.061586,-.523423,-.846644,-.095706,-.463729,-.883999,-.058931,-.458388,-.884243,-.089236,-.544481,-.837092,-.052644,-.479476,-.875607,-.05826,-.319987,.942747,-.093905,-.327738,.943022,-.057039,-.255501,.965209,-.055055,-.247993,.964751,-.08768,-.581652,.80459,-.119541,-.589343,.805017,-.067812,-.35258,.934782,-.042421,-.280648,.958708,-.045412,-.606769,.793817,-.040376,-.918119,.370861,-.139561,-.924345,.373516,-.077486,-.977264,-.17478,-.119999,-.983123,-.169591,-.0683,-.926328,.37431,-.042177,-.987884,-.149419,-.041505,-.890805,-.450636,-.057741,-.885006,-.455855,-.094607,-.854244,-.5168,-.055757,-.848537,-.521653,-.088443,-.902951,-.427442,-.044038,-.867794,-.494613,-.047121,.981079,.168554,-.095157,.982604,.176153,-.05829,.993255,.101321,-.056215,.991577,.094028,-.088931,.885525,.448561,-.120792,.887204,.456099,-.069124,.978332,.201972,-.045412,.990692,.127171,-.048311,.878842,.475051,-.043519,.509934,.848628,-.140629,.513413,.854518,-.078616,-.019623,.992492,-.120609,-.013825,.997497,-.068911,.514481,.856288,-.044862,.006836,.999023,-.043031,-.305765,.950316,-.057985,-.311747,.945402,-.094852,-.376812,.924589,-.05591,-.382488,.919675,-.088626,-.280953,.958647,-.04474,-.352794,.934477,-.047578,.099704,-.990448,-.095157,.107181,-.992523,-.05829,.031831,-.997894,-.056215,.024628,-.995727,-.088931,.385693,-.91467,-.120792,.393078,-.916868,-.069124,.133244,-.99002,-.045412,.057772,-.997131,-.048311,.41258,-.909848,-.043519,.810968,-.567888,-.140629,.816614,-.571764,-.078616,.991455,-.049623,-.120609,.996033,-.055757,-.068911,.818323,-.572954,-.044862,.996124,-.076479,-.043031,.969329,.238716,-.057985,.964843,.245033,-.094852,.948607,.31138,-.05591,.944121,.317392,-.088595,.975921,.213385,-.04474,.956816,.286752,-.047578,-.448561,.847377,-.284127,-.48381,.85403,-.191076,-.663228,.693655,-.280923,-.61681,.675832,-.403424,-.456069,.822016,-.340922,-.631031,.627155,-.456526,-.402203,.890225,-.213782,-.428175,.891354,-.148595,-.379009,.886532,-.265236,.485855,.811609,-.324351,.115879,.955138,-.272469,.091189,.916684,-.388989,.457595,.762749,-.456893,.128117,.890378,-.436781,.454909,.742973,-.490921,.761437,.498978,-.41377,.785455,.546556,-.290323,.725852,.512589,-.458632,-.125401,.973693,-.190191,-.148839,.948332,-.280068,-.192999,.969695,-.149693,-.212653,.95352,-.213355,-.128025,.933958,-.333628,-.228675,.937193,-.263344,-.869747,.35432,-.343394,-.949065,-.040407,-.312387,-.892087,-.068911,-.446516,-.810389,.328623,-.485,-.868648,-.03824,-.493912,-.795801,.30784,-.521409,.905087,.294778,-.306406,.918119,.338084,-.206732,.881039,.30134,-.364574,.94232,.241615,-.231574,.947783,.275674,-.160192,.934019,.211097,-.288125,-.931455,-.289468,-.220405,-.887112,-.322275,-.330332,-.918668,-.357707,-.167425,-.888516,-.38728,-.245949,-.86697,-.303903,-.39491,-.857601,-.411298,-.308756,.933134,-.173467,-.314829,.970916,.075808,-.227027,.932432,.121189,-.340312,.882839,-.131443,-.450819,.974059,.145909,-.172765,.949248,.184881,-.254372,.907346,.109531,-.405805,.854854,-.151067,-.496353,.922117,.218238,-.319437,.260994,-.929136,-.261788,.286111,-.941679,-.177038,.495529,-.828303,-.261361,.460616,-.803125,-.377819,.277505,-.90759,-.314982,.488907,-.757195,-.433088,.205206,-.958251,-.19895,.22364,-.964446,-.14066,.18955,-.950499,-.246101,.721122,-.506668,-.472427,.770592,-.543657,-.33253,.716117,-.475539,-.510849,.936033,.09122,-.339793,.924284,.157414,-.347697,.972106,.165471,-.166143,.982879,.092441,-.159246,.823603,.413129,-.388531,.874294,.440748,-.203223,.354686,-.850398,-.388531,.743278,-.521195,-.419324,.796655,-.558123,-.23191,.378674,-.902921,-.203223,.923246,-.04355,-.381664,.978301,-.047334,-.201605,.912412,.232856,-.336497,.955779,.244209,-.16364,.896054,.298807,-.328288,.935942,.315439,-.156407,.468062,.777825,-.419324,.501175,.833674,-.23191,-.020905,.924039,-.381664,-.020997,.979217,-.201605,-.858516,.370373,-.354595,-.908475,-.144963,-.391949,-.962523,-.152806,-.223914,-.901303,.387188,-.194067,-.697714,-.615925,-.365734,-.7369,-.646809,-.196448,-.548387,.763329,-.341411,-.857326,.344554,-.382397,-.903989,.364605,-.223151,-.573412,.796289,-.192602,-.917661,-.1695,-.359386,-.964721,-.175024,-.196509,-.679922,.667379,-.303751,-.723289,.615101,-.313791,-.752617,.639332,-.157384,-.703635,.69451,-.15009,-.494339,-.803552,-.331462,-.517808,-.840175,-.161016,-.437971,-.839534,-.321421,-.454268,-.877377,-.154241,-.239998,.926725,-.289041,-.304819,.904355,-.298624,-.315958,.935911,-.155553,-.245491,.958007,-.148076,-.838954,-.43498,-.326945,-.876461,-.453475,-.161534,-.808863,-.494797,-.317576,-.841182,-.518021,-.154881,-.295938,.893948,-.336497,-.310282,.93643,-.16364,-.360576,.873012,-.328288,-.379955,.911649,-.156407,.025697,-.940123,-.339793,.092563,-.933012,-.347697,.097262,-.981292,-.166143,.023652,-.986938,-.159246,.788446,-.499893,-.358379,.920194,244e-6,-.391369,.974609,61ee-6,-.733634,.329051,-.217078,-.919004,.365825,-.001495,-.930662,.580554,.375286,-.722556,.324992,.212317,-.921537,.494766,-.653127,-.573229,.468825,-.538072,-.70043,.291665,-.353923,-.888607,.294504,-.317209,-.901456,.465194,.533555,-.70632,.289041,.310526,-.905545,.491928,.649037,-.580248,.286416,.346568,-.893185,.694754,.716453,-.062868,.870785,.490921,-.026368,.636616,.766778,-.082125,.72924,.6798,-.077578,.888699,.4579,-.022156,.672292,.732292,-.10828,-.399243,.915922,-.04059,-.32841,.943358,-.046937,-.637745,.769585,-.031251,-.450758,.891659,-.041292,-.382366,.922666,-.049074,-.6704,.741417,-.028993,.837031,.546068,-.033845,.859737,.509445,-.035676,.514756,.856685,-.032716,.514817,.856777,-.029206,.046175,.998291,-.035066,.089236,.995453,-.033235,-.232276,.971648,-.043977,-.305399,.950896,-.050142,-.176489,.983245,-.045106,-.249825,.966826,-.052736,-.799829,.597095,-.060884,-.750267,.656087,-.081393,-.937651,.346873,-.021882,-.828883,.554125,-.076388,-.78103,.61504,-.108066,-.950407,.310404,-.018555,-.926786,.374432,-.028901,-.926878,.374432,-.024995,-.993316,-.110569,-.032746,-.997223,-.067721,-.030488,.966918,.251015,-.044893,.98291,.176733,-.051149,.950987,.305673,-.046052,.970916,.233222,-.053774,.999908,-31e-6,-.011231,.870724,-.491043,-.026246,.999969,-183e-6,.001953,.888485,-.458357,-.021699,-.98764,-.156468,-.005341,-.784478,-.619739,-.021729,-.987579,-.156774,.007233,-.807611,-.589404,-.017335,-.923368,-.381481,-.042787,-.891446,-.450392,-.049318,-.943541,-.328318,-.043519,-.91586,-.398114,-.051546,.985473,.163976,-.043977,.992645,-.115665,-.035066,.969848,.23838,-.050142,.993133,.107669,-.045106,.986816,-.1583,-.033235,.981872,.181951,-.052767,-.576067,-.815119,-.060701,-.510727,-.855892,-.08121,-.616871,-.783441,-.075198,-.552568,-.826502,-.107212,.694693,-.716544,-.062685,.636525,-.766869,-.081973,.728935,-.680227,-.077029,.671987,-.732658,-.107791,.182897,-.982086,-.044893,.107669,-.992859,-.051149,.448195,-.893216,-.035676,.23835,-.970061,-.046052,.164708,-.984863,-.053774,.48619,-.873165,-.033845,.81869,-.57326,-.032716,.818781,-.573351,-.029206,.51445,.856502,-.041505,.514847,.856777,-.028596,.119572,.992248,-.033143,.134617,.989929,-.04355,.810785,.583605,-.044862,.820002,.571306,-.033723,.804895,.579363,-.1283,.508927,.849452,-.139286,.13303,.983642,-.121372,-.185217,.980956,-.05826,-.179724,.979858,-.086703,-.110111,.989166,-.096805,-.11359,.992126,-.052187,-.135411,.989715,-.045991,-.207984,.976623,-.05414,.89288,.407056,-.192419,.764794,.621418,-.169958,.758263,.611347,-.226386,.875332,.394818,-.279,.718497,.676321,-.162206,.71749,.668661,-.195044,.772759,.579241,-.259407,.885372,.345012,-.311472,.71218,.665639,-.222938,.704306,.697745,-.13065,.756584,.644398,-.110752,.899838,.428755,-.079958,-.506577,.85696,-.094577,-.50618,.861049,-.048433,-.703116,.709922,-.039888,-.696951,.706656,-.121891,-.445662,.891232,-.083834,-.442274,.895199,-.054506,-.487411,.872127,-.042024,-.421583,.905362,-.050325,-.692679,.720634,-.02884,-.812159,.506455,-.28959,-.840114,.501236,-.207221,-.929044,.266213,-.256844,-.886685,.266945,-.377514,-.878964,.222327,-.421857,-.808985,.478957,-.340709,-.789056,.568712,-.232215,-.805963,.563005,-.182775,-.76812,.578326,-.274697,-.847621,.516404,-.121769,-.805048,.577227,-.136509,-.954558,.281137,-.098758,-.926939,.374401,-.024323,-.926389,.374554,-.038362,-.99884,-.037416,-.030244,-.99884,-.022156,-.042543,-.916654,.372784,-.143986,-.990661,-.022828,-.134342,.925169,.365276,-.103061,.94998,.298837,-.090701,.953154,.296518,-.059572,.92938,.365123,-.053713,.937437,.34492,-.046876,.959929,.274636,-.055116,.977813,793e-6,-.209449,.997559,0,-.069582,.893185,-.406537,-.192053,.899686,-.429212,-.079562,.875973,-.394147,-.277932,.950987,824e-6,-.309183,.886013,-.344615,-.31016,.942228,519e-6,-.33488,-.983642,-.15656,-.0889,-.821131,-.563189,-.092257,-.948515,-.149876,-.27897,-.806635,-.539872,-.240516,-.899045,-.141301,-.41438,-.773034,-.526078,-.354442,-.782495,-.476363,-.400922,-.883602,-.132694,-.448988,-.939604,-.337352,-.057466,-.93759,-.33549,-.091372,-.957732,-.267312,-.106052,-.961943,-.268258,-.051668,-.956298,-.288949,-.044191,-.931974,-.358592,-.052675,.997528,.045198,-.053682,.99292,.046052,-.109378,.970122,-.200598,-.136418,.978088,-.20304,-.045412,.991272,.117618,-.059145,.988586,.117374,-.09418,.988678,.139805,-.05417,.996704,.0665,-.046022,.981536,-.188208,-.033174,-.651509,-.733879,-.192145,-.632923,-.7275,-.264718,-.599719,-.781182,-.173315,-.590106,-.7781,-.215186,-.642689,-.700247,-.310739,-.575091,-.778832,-.250252,-.647755,-.752922,-.116123,-.588641,-.797327,-.133122,.235237,-.968291,-.083987,.229011,-.971618,-.05887,.29899,-.952788,-.052553,.302194,-.948759,-.092257,.524979,-.849971,-.043733,.520829,-.845607,-.116733,.512406,-.858058,-.033753,.278176,-.95938,-.046907,.206488,-.976867,-.055116,.81814,-.573473,-.041932,.818751,-.573382,-.028626,.80929,-.570116,-.141331,.764428,-.621998,-.169408,.756035,-.645161,-.110263,.717856,-.677145,-.161657,.703665,-.698508,-.130131,.773034,-.579821,-.257241,.758293,-.611866,-.224891,.711997,-.666585,-.220649,.717093,-.669393,-.193976,-.815363,-.573779,.076785,-.841426,-.534562,.078585,-.84048,-.530564,.109897,-.814539,-.569567,.109806,-.921171,-.379803,.084475,-.919095,-.377117,.11417,-.83462,-.518052,.186987,-.808954,-.555406,.192602,-.90997,-.370495,.186163,-.874844,.472243,.107578,-.876766,.474013,.080844,-.776452,.625874,.073214,-.775811,.623066,.099307,-.745537,.662618,.071078,-.745109,.659719,.09772,-.866054,.469039,.172887,-.770989,.61507,.164953,-.740989,.650441,.166753,-.956175,.223701,.188818,-.967925,.222114,.117313,-.980071,.037263,.195013,-.992065,.036927,.12006,-.970885,.222602,.088229,-.995239,.036958,.09003,-.983245,-.137608,.11951,-.971435,-.137486,.193335,-.986297,-.138401,.08945,-.668355,-.485366,.563585,-.689749,-.482864,.539476,-.689993,-.409742,.596637,-.65923,-.424055,.62093,-.676565,-.499954,.540574,-.695639,-.500198,.51558,-.741691,-.482528,.465835,-.769829,-.377483,.514634,-.732414,-.508499,.452742,-.803278,-.498886,.325297,-.864223,-.368603,.342326,-.781304,-.530961,.328013,-.898556,.235817,.370067,-.919736,.036805,.390759,-.822291,.468184,.323435,-.775719,.258126,.575823,-.787896,.033509,.614856,-.732719,.464248,.497513,-.681478,.303507,.665914,-.696036,.030793,.717307,-.658254,.475387,.583636,-.657918,.289865,.695029,-.675985,.028626,.73632,-.632801,.47911,.608234,-.913785,-.150029,.377453,-.789941,-.182714,.585284,-.669332,-.232643,.705588,-.69509,-.24131,.677175,-.684744,.571673,.451949,-.638112,.550371,.538377,-.669851,.597888,.440168,-.633808,.571398,.521317,-.624653,.541124,.562944,-.619922,.557207,.552416,-.74279,.599109,.298807,-.717093,.629994,.298105,.264351,-.963012,.051668,.300851,-.951964,.056887,.221625,-.973693,.052583,.196478,-.979278,.04886,-.044069,-.997559,.053896,-.038087,-.997314,.062319,.245491,-.963469,.106998,.188391,-.976257,.106754,-.017518,-.991455,.129124,-.773766,-.624317,.106967,-.693808,-.711295,.11243,-.695425,-.713553,.084597,-.77517,-.626484,.081118,-.793237,-.599719,.105228,-.79461,-.601764,.080081,-.691885,-.70101,.172704,-.771172,-.616199,.159886,-.790368,-.592486,.155614,-.554186,-.811457,.1854,-.559679,-.82049,.116276,-.44023,-.878597,.184942,-.45912,-.881405,.110752,-.566088,-.819788,.086428,-.477859,-.874691,.080813,-.318918,-.943327,.091647,-.286477,-.943663,.165563,-.345378,-.936003,.067782,.184637,-.790368,.584094,.191473,-.807184,.558367,.129124,-.795221,.592395,.159062,-.7734,.613605,.192389,-.785028,.588794,.211646,-.80697,.551347,.199377,-.870693,.449538,.074313,-.864254,.497482,.232521,-.865749,.443129,.195074,-.945616,.260262,.021668,-.953673,.300027,.241523,-.936155,.255379,-.550035,-.756035,.354717,-.411512,-.828578,.379528,-.690207,-.657247,.302622,-.554826,-.625568,.548418,-.368236,-.701132,.610553,-.689779,-.567248,.449873,-.618946,-.482131,.620014,-.362224,-.591754,.720115,-.719352,-.470107,.511368,-.646687,-.421979,.635365,-.372234,-.559862,.740226,-.74691,-.413007,.521073,-.233131,-.903592,.359325,-.142705,-.799158,.58388,-.033204,-.697684,.715598,-.039735,-.728629,.683706,-.75512,-.534898,.378948,-.753258,-.484481,.444777,-.772179,-.529069,.351817,-.763085,-.495071,.415387,-.75811,-.457015,.465163,-.760399,-.476424,.441328,-.765679,-.587786,.261086,-.784143,-.569475,.246498,.966918,-.209967,.144749,.982055,-.171361,.078402,.968932,-.237648,.068056,.959136,-.259499,.112552,.88638,-.457595,.069796,.890866,-.446974,.08063,.946104,-.257942,.195715,.940062,-.294504,.171789,.887417,-.437269,.145787,.338389,-.934874,.106967,.444868,-.888546,.112033,.445906,-.890927,.085696,.339915,-.936827,.082217,.308817,-.94525,.105228,.310221,-.947172,.081179,.436598,-.88287,.172796,.3314,-.929777,.160161,.302774,-.940245,.155736,.581133,-.792993,.182775,.580859,-.806024,.113468,.650838,-.752373,.101505,.672231,-.719382,.17478,.574664,-.813623,.087771,.627552,-.774071,.08356,.744407,-.662618,.082278,.768944,-.620533,.153752,.717765,-.692038,.076357,.850459,-.163671,.499893,.858303,-.194372,.474837,.810602,-.204901,.54854,.811853,-.146031,.565264,.865535,-.178014,.468093,.875759,-.201697,.438551,.8811,-.248939,.402081,.824244,-.307505,.475387,.897061,-.237037,.372906,.915189,-.293497,.276101,.866939,-.395917,.302713,.923917,-.266427,.274545,.536149,-.764855,.357006,.648305,-.66332,.373699,.395459,-.865474,.307382,.423383,-.713736,.557939,.562181,-.565203,.603717,.31019,-.830073,.463363,.295175,-.707755,.641804,.500565,-.493271,.711386,.212439,-.818628,.533525,.265908,-.690268,.672872,.501785,-.461196,.731773,.157445,-.819605,.550859,.758934,-.549791,.348857,.708823,-.423231,.564287,.698233,-.239875,.674429,.705771,-.282327,.649709,.253151,-.886654,.386914,.198981,-.866726,.45735,.242134,-.902493,.356182,.205786,-.882778,.422285,.169225,-.860042,.481277,.182775,-.873989,.450209,.304758,-.915098,.263924,.281564,-.926908,.247963,.475234,.876217,.079928,.473128,.874508,.106449,.439619,.892117,.10416,.441542,.893796,.078402,.592822,.800867,.084536,.590472,.799066,.11298,.465407,.8699,.163213,.432752,.887478,.1583,.581072,.794458,.176458,.980529,.16129,.111942,.983734,.15656,.087954,.994659,-.059358,.08414,.992096,-.050844,.114444,.987396,-.104282,.118778,.990112,-.112705,.083438,.971831,.168767,.164464,.982269,-.027558,.185308,.975677,-.078768,.204505,.882534,.438887,.168737,.883328,.454604,.1142,.795587,.578265,.180639,.794244,.596362,.116184,.884182,.458357,.089816,.793207,.602435,.088748,.729057,.674215,.117618,.722526,.665822,.18598,.730338,.677328,.08829,.285348,.777093,.56093,.309671,.78872,.530992,.34788,.725761,.593432,.309641,.722312,.618336,.284219,.794916,.535966,.308725,.809839,.498795,.370861,.818934,.437941,.443556,.741722,.503037,.354778,.84048,.409497,.434187,.85464,.284616,.537248,.778466,.324503,.406568,.873135,.268899,.861293,.384564,.332011,.76809,.528123,.362041,.941527,.156133,.298532,.790033,.279702,.545518,.677633,.439131,.589862,.876156,.105899,.470199,.739189,.173711,.650685,.601154,.377575,.704276,.827296,.033753,.560717,.717307,.153661,.679586,.578143,.368725,.727836,.809046,.005585,.587664,.676962,.641224,.361217,.563341,.596271,.571886,.42085,.577868,.69921,.448317,.588672,.672628,.904263,-.00235,.426893,.872158,-.032319,.488083,.90759,-.030763,.418653,.888211,-.042024,.457472,.856563,-.051119,.513474,.878414,-.062075,.47383,.951537,-.002503,.307505,.944151,-.044893,.326365,-.694357,.715049,.080905,-.686636,.718711,.109256,-.728599,.675588,.112522,-.736869,.671255,.079989,-.521073,.8493,.084292,-.5168,.849178,.108371,-.662282,.730399,.166814,-.701163,.689169,.182562,-.506027,.849147,.151097,.264199,.957701,.113865,.266366,.960143,.084597,.487289,.869594,.079226,.485733,.867672,.105838,.535997,.840602,.0777,.535173,.838374,.103366,.264443,.949156,.17066,.48384,.860866,.157262,.533403,.831721,.153844,-.064669,.981994,.177374,-.066439,.990936,.11652,-.202857,.96408,.171392,-.197455,.973693,.113498,-.065981,.994049,.086459,-.196265,.976836,.085055,-.280435,.953337,.111515,-.286935,.944365,.160588,-.279092,.95642,.085513,-.516648,.725028,.455367,-.537156,.726615,.428327,-.543474,.729606,.415052,-.50145,.74633,.437605,-.541154,.725303,.425489,-.557482,.71926,.414533,-.569964,.736717,.363811,-.482406,.793603,.370708,-.592639,.711814,.376873,-.617664,.740532,.264657,-.489822,.835902,.247566,-.649556,.703909,.287301,-.205542,.930937,.301798,-.041627,.953307,.299051,.274972,.923093,.268777,.030976,.903745,.426923,-.187719,.870235,.455428,.296701,.883023,.363536,.158025,.863216,.479415,-.144261,.831782,.535966,.331248,.853236,.402753,.211768,.8446,.491684,-.111576,.824824,.554216,.356517,.839473,.410047,-.303232,.911466,.277902,-.334574,.841609,.423933,-.40437,.754509,.516892,-.38844,.775567,.497543,.445265,.822535,.353771,.392285,.823817,.409101,.481338,.796381,.366131,.419385,.798303,.432142,.364635,.835414,.411176,.366039,.815577,.448103,.47618,.843135,.249611,.522233,.815241,.250191,.97293,.152043,.173986,.825922,.127567,.549089,.831019,-.051271,.553819,.983184,-.061342,.17185,.848994,-.096042,.519547,.979003,-.113468,.169225,.566149,-.805475,.175054,.477218,-.679708,.556932,.374218,-.74929,.546312,.440962,-.881344,.169561,.611133,-.770257,.182195,.508042,-.643788,.572192,.863765,-.466475,.190466,.694357,-.692831,.194525,.69451,-.411725,.589984,.56502,-.583819,.582965,.875576,.451888,.17069,.74868,.385418,.539354,.784692,.597369,.165502,.671102,.511002,.537095,.588214,.793298,.156957,.723655,.670644,.162847,.510941,.688894,.514084,.623615,.577837,.526444,.293252,-.757286,.583483,.224219,-.77282,.593646,.253121,-.9494,.185766,.338267,-.922361,.186529,-.019013,-.808802,.587756,-.033082,-.983032,.180273,.287057,-.790429,.541063,.335612,-.927305,.165593,.269662,-.818049,.50795,.306284,-.937864,.16303,.391644,.786615,.477309,.412183,.757103,.50679,.471114,.868892,.151769,.437696,.886593,.149419,.265694,.952452,.149083,.235908,.841121,.486618,.429029,.764122,.481674,.485,.862636,.143529,.47795,.752281,.453383,.533006,.834223,.14127,-.064516,.986511,.150395,-.05591,.870235,.489425,-.194922,.969451,.148717,-.171178,.850856,.496689,-.356914,-.919156,.166448,-.304544,-.76812,.563219,-.490646,-.856319,.161077,-.425703,-.722129,.545213,-.960997,.220252,.167211,-.823634,.189367,.534532,-.748802,.405255,.5244,-.868496,.469192,.159764,-.984893,.036714,.169164,-.839229,.031465,.542833,-.911832,-.375835,.165136,-.976012,-.136937,.169103,-.781152,-.322275,.534684,-.834193,-.117252,.538804,-.707358,-.494583,.50499,-.715384,-.453352,.531632,-.832789,-.529954,.159917,-.807092,-.569018,.157506,-.666768,.537217,.516495,-.768914,.62096,.152043,-.651234,.576647,.493271,-.738243,.657704,.149632,-.656819,.600177,.456404,-.6068,.623615,.492782,-.690359,.708121,.148015,-.732322,.665151,.145726,-.457503,.7416,.490585,-.518265,.841914,.15009,-.689474,-.706717,.158452,-.59743,-.611072,.519272,-.667257,-.539598,.513352,-.768822,-.620411,.15479,-.69921,-.53151,.478072,-.788324,-.596057,.152348,-.56624,-.808161,.161901,-.489914,-.691702,.530534,-.277169,.949095,.149541,-.244789,.83636,.490432,.806207,-.221076,.548753,.7799,-.260964,.568834,.955565,-.252113,.152715,.973754,-.187628,.128605,.402264,.063723,.913297,.400769,-.018403,.915983,.148381,.024781,.988586,.158879,-.00116,.987274,.47792,-.045289,.877194,.170629,-.002991,.985321,.234565,-.302652,.923765,.225776,-.326151,.917936,.090426,-.120609,.988556,.085147,-.125095,.988464,.180212,-.365276,.913266,.068789,-.139622,.987793,.291086,-.233985,.92761,.250465,-.293863,.922422,.087954,-.126591,.988037,.086734,-.126377,.988159,.329234,.25135,.910154,.369915,.196814,.907956,.1301,.099551,.98648,.137394,.075045,.98764,.260964,.356304,.897153,.312418,.293283,.9035,.102054,.139683,.984893,.120792,.114841,.985992,.139744,-.395825,.90762,.094546,-.351115,.931516,.031373,-.150761,.988067,.024689,-.137394,.990204,-.009613,-.365215,.930845,-.004028,-.131535,.991272,.146184,-.386273,.910703,.06418,-.153844,.985992,.16303,-.467299,.868923,.070833,-.164159,.983856,.245613,.473037,.846095,.219428,.390881,.893887,.103641,.170202,.979919,.096774,.159368,.982452,.130863,.456496,.880032,.22837,.417524,.879482,.051302,.178594,.982574,.090976,.180456,.979339,.29545,.48088,.825495,.101352,.190558,.976409,-.089114,.443892,.891598,-.031892,.46968,.882229,-.037049,.185156,.981994,-.013153,.184362,.982757,-.147618,-.361431,.920621,-.049684,-.134281,.989685,-.203375,-.34788,.915189,-.075381,-.13712,.987671,-.409742,.015687,.912046,-.410596,.096255,.906705,-.158605,.006195,.987304,-.154759,.036988,.987243,-.377911,.208289,.902097,-.14423,.079836,.986297,-.388348,-.161168,.907285,-.412824,-.057985,.908933,-.147526,-.060549,.987182,-.155889,-.021882,.987518,-.412122,-.275674,.868404,-.36024,-.220405,.90643,-.159764,-.089206,.983093,-.149083,-.083041,.985321,-.34376,.270119,.89935,-.144749,.105197,.983856,-.388043,.331126,.860073,-.153966,.113437,.981536,-.408155,.384655,.827876,-.319285,.338359,.885159,-.14185,.152593,.978027,-.128605,.146397,.980804,-.245338,.400006,.883053,-.095187,.157872,.982849,-.305856,-.309732,.900266,-.339885,-.281991,.897153,-.119846,-.121311,.985321,-.13715,-.121067,.983093,-.419477,-.329203,.845943,-.14597,-.130833,.98059,-.246223,-.34373,.906186,-.094974,-.133305,.986511,-.1301,.4485,.884243,-.051485,.179174,.982452,.394665,-.189215,.899106,.320505,-.187902,.928404,.105869,-.145329,.983673,.095462,-.131657,.986663,-.637013,-.770775,.009888,-.644246,-.763787,.03943,-.590564,-.80575,.044465,-.582293,-.81286,.011017,-.81109,-.584796,.008179,-.813349,-.580706,.034486,-.663869,-.741234,.099033,-.613849,-.780938,.115146,-.816523,-.571276,.083102,-.956236,.288278,.049501,-.956481,.291025,.019837,-.859981,.509659,.025697,-.859981,.507675,.051546,-.831538,.554765,.027223,-.831172,.553514,.051973,-.95114,.288949,.108737,-.856624,.505966,.100894,-.828028,.551866,.098819,-.991638,-.063356,.112186,-.996918,-.065065,.043703,-.969573,-.220557,.10596,-.976348,-.212592,.039033,-.997864,-.063936,.011597,-.977569,-.210334,.008179,-.950102,-.309732,.0365,-.942869,-.31959,.093966,-.951506,-.307505,.007965,-.564806,-.682669,.463576,-.598224,-.67513,.431593,-.612354,-.600909,.513718,-.566881,-.617084,.545732,-.579302,-.699026,.419172,-.605609,-.690786,.394971,-.651051,-.672262,.352336,-.713736,-.566729,.411542,-.631428,-.697653,.33842,-.677267,-.703146,.216376,-.79577,-.563677,.221259,-.636799,-.736106,.229255,-.928526,-.224158,.295907,-.95706,-.032716,.287912,-.921049,.306375,.240364,-.869472,.04648,.491745,-.821986,-.197455,.534135,-.855983,.336222,.392682,-.800134,.158818,.578387,-.74395,-.151616,.650777,-.798853,.378124,.467788,-.774651,.162725,.611072,-.726341,-.14127,.672628,-.777001,.39491,.490158,-.899167,-.345439,.268532,-.779504,-.379955,.49794,-.639699,-.41789,.64507,-.66277,-.434126,.610096,-.802454,.493851,.334819,-.773186,.47908,.415448,-.785028,.530198,.320292,-.762658,.50679,.401837,-.767296,.468825,.437544,-.757286,.488632,.433302,-.839106,.504227,.204016,-.81402,.547014,.195257,.78338,.621387,.011383,.788965,.613147,.03943,.74517,.665334,.044465,.738578,.674001,.01236,.915036,.403211,.010163,.916318,.398907,.034486,.803613,.586871,.098819,.762841,.636219,.115116,.917814,.388379,.082156,.875393,-.480789,.049501,.875088,-.483383,.02234,.735252,-.677206,.027985,.735618,-.675405,.051546,.698019,-.715445,.02945,.697928,-.714255,.051973,.870724,-.479751,.107822,.73281,-.672903,.100711,.695212,-.711966,.098788,.983551,-.143162,.109928,.988647,-.14359,.043703,.994568,.014161,.103061,.999207,.004944,.039033,.989319,-.144902,.014161,.999939,.002533,.010681,.993744,.105441,.0365,.989044,.115604,.091739,.994629,.102908,.010376,.70455,.459639,.540635,.703421,.539415,.462752,.730796,.529618,.430555,.739494,.440626,.508866,.713858,.560625,.41963,.737297,.548143,.394818,.779687,.518906,.350383,.825892,.393933,.403333,.76339,.550401,.337992,.809748,.545885,.215155,.899014,.381146,.215491,.776147,.58742,.229041,.960082,.026399,.27842,.948271,-.159886,.274117,.841212,-.486984,.23487,.857387,-.208472,.470473,.862667,.023072,.505203,.778191,-.496536,.384503,.773827,-.291635,.562243,.78048,-.004456,.625141,.720084,-.517594,.462081,.748314,-.302225,.590442,.759362,-.012665,.650533,.701468,-.522111,.485092,.956145,.144078,.254921,.857448,.192267,.477248,.734458,.259804,.626942,.761315,.256844,.595294,.685232,-.647755,.332926,.662099,-.624439,.414289,.658223,-.681417,.319926,.641743,-.653249,.401715,.661763,-.609272,.436811,.640706,-.633595,.433576,.71691,-.666951,.202887,.682669,-.704184,.195013,.579547,-.814814,.012146,.571001,-.819971,.03943,.625416,-.778985,.044465,.634419,-.772851,.013153,.354839,-.934843,.010804,.350414,-.935942,.034486,.544145,-.833094,.099033,.595447,-.795068,.115146,.340495,-.936552,.083102,-.525956,-.849055,.049501,-.528428,-.848659,.022279,-.714743,-.698813,.02768,-.712973,-.699271,.051546,-.750999,-.659627,.029115,-.749809,-.659597,.051973,-.525254,-.843928,.108737,-.71044,-.696463,.100894,-.747398,-.656972,.098819,-.195441,-.974273,.112186,-.195135,-.979797,.043703,-.037904,-.993622,.10596,-.047304,-.998108,.039033,-.196387,-.980407,.014374,-.049776,-.998688,.011048,.053285,-.997894,.0365,.064669,-.993469,.093966,.050783,-.998627,.010834,.51323,-.722251,.463576,.497299,-.752586,.431593,.421918,-.747002,.513718,.449324,-.707297,.545732,.525285,-.740501,.419172,.510483,-.763756,.394971,.48085,-.802881,.352336,.362682,-.836085,.411542,.510453,-.79049,.33842,.503891,-.836177,.216376,.338511,-.914548,.221259,.54622,-.805628,.229225,-.023774,-.954894,.295907,-.216102,-.93292,.287912,-.534318,-.810358,.240364,-.269967,-.827815,.491745,-.022004,-.845088,.534135,-.546312,-.739799,.392682,-.360515,-.731742,.578387,-.046083,-.757836,.650777,-.572008,-.673757,.467788,-.357677,-.706107,.611072,-.051515,-.738151,.672628,-.582537,-.648335,.490158,.100925,-.957945,.268532,.165258,-.851283,.49794,.238075,-.726066,.64507,.24778,-.752556,.610096,-.684744,-.647298,.334819,-.662893,-.622852,.415448,-.715323,-.621052,.320292,-.686911,-.605487,.401837,-.651448,-.6198,.437544,-.667959,-.604999,.433302,-.704215,-.679983,.204016,-.739067,-.644673,.195227,-.579638,.814783,.010285,-.571001,.819971,.03943,-.625416,.778985,.044465,-.634449,.772851,.011414,-.354961,.934812,.008576,-.350414,.935942,.034486,-.543779,.833399,.098514,-.595386,.795129,.115055,-.338816,.937376,.080691,.525956,.849055,.049501,.528611,.848598,.020051,.714866,.698752,.025788,.712973,.699271,.051546,.751091,.659627,.027314,.749809,.659597,.051973,.52382,.845088,.106754,.710166,.696738,.100742,.747307,.657033,.099002,.192969,.975341,.106784,.195135,.979766,.043703,.037904,.994354,.098972,.047304,.998108,.039033,.196448,.980407,.011902,.049806,.998718,.008515,-.053285,.997894,.0365,-.062349,.99411,.088504,-.050783,.998657,.008332,-.301035,.796808,.523881,-.463759,.756584,.460921,-.469649,.772729,.426954,-.320841,.810968,.489242,-.514786,.746879,.42085,-.504257,.768212,.39436,-.468581,.813166,.345134,-.314859,.869625,.38023,-.507859,.792779,.336924,-.500504,.839198,.212653,-.324046,.923734,.204077,-.545549,.806269,.228553,.023743,.969268,.244758,.195105,.948454,.249611,.521622,.821772,.229255,.20188,.884182,.421186,.021607,.902493,.430128,.499893,.777245,.382031,.217597,.8305,.512742,.045686,.844935,.532884,.462996,.747581,.476119,.201178,.819056,.537248,.062105,.828547,.556413,.417524,.75573,.504501,-.080508,.970214,.228431,-.096438,.90228,.420179,-.07712,.824854,.560015,-.098331,.840968,.53206,.660817,.656758,.363231,.596179,.64803,.473861,.697256,.623096,.35435,.637501,.609058,.471786,.552812,.668416,.497574,.583544,.618641,.526048,.70043,.682607,.20838,.736473,.645344,.202734,-.996185,-.064821,.058351,-.9288,-.06711,.364422,-.895657,.257729,.362407,-.955016,.289132,.065554,-.975982,-.210669,.055239,-.906461,-.199835,.371929,-.808863,-.584826,.060549,-.949705,-.307993,.056368,-.751518,-.539842,.379162,-.882778,-.289987,.369518,-.193915,-.977233,.085971,-.16596,-.876888,.451064,-.459243,-.770806,.441511,-.523728,-.847133,.089633,-.048647,-.99527,.083926,-.03824,-.884304,.465316,-.35548,.932432,.064608,-.051851,.996826,.060091,-.324809,.860439,.39256,-.051576,.922544,.382366,.049074,.99704,.058779,.041231,.922056,.384777,.680654,.601001,.418867,.711447,.548936,.438673,.781121,.61919,.079867,.736656,.67156,.07944,.82342,.358104,.440107,.912168,.401837,.080142,.986114,-.143284,.083712,.8876,-.121342,.444319,.79281,-.418867,.442671,.872951,-.479324,.090365,.996734,.00354,.080386,.890561,.008148,.454726,.991394,.103244,.080264,.890408,.095737,.444929,.557939,-.704154,.4391,.504318,-.730522,.460372,.577105,-.811945,.087466,.63155,-.770379,.087069,.311899,-.832759,.45735,.353832,-.931272,.086428,.051729,-.995056,.084506,.049379,-.887997,.457137,.194861,.978881,.061464,.174047,.910398,.375286,.4785,.796442,.369671,.526048,.847743,.067507,-.554155,-.75219,.356456,-.594012,-.703848,.389508,-.635243,-.769555,.064882,-.581286,-.81109,.065065,-.811304,.461196,.359233,-.85873,.507492,.07062,-.794092,.50856,.332804,-.830653,.552171,.071474,-.579272,.726035,.370464,-.522294,.751396,.403241,-.578692,.812616,.069002,-.63274,.771233,.069094,-.630055,-.645772,.431227,-.710349,-.697928,.090732,-.667837,-.616565,.416883,-.746574,-.658986,.091128,.675161,-.592914,.438856,.733909,-.67275,.093509,.649739,-.633564,.419965,.697043,-.710807,.093966,.65392,.663472,.363506,.712302,.698172,.071627,.694784,.634205,.339183,.748253,.659413,.07239,-.553606,-.130161,.822504,-.588763,-.053377,.806513,-.280282,-.073214,.957091,-.283212,-.037111,.958312,-.577807,.148839,.802454,-.282846,.051302,.957762,-.474563,-.327036,.817194,-.55324,-.181799,.812891,-.232704,-.148076,.96118,-.27015,-.09067,.958525,-.012024,-.472915,.881008,-.082369,-.490768,.867367,.00177,-.219581,.975585,-.023988,-.215918,.976104,-.248726,-.445662,.85992,-.087008,-.203101,.975249,-.187628,.529618,.827204,-.031465,.567766,.822565,-.078829,.252602,.964324,-.017029,.273354,.96176,.016663,.554918,.831721,.001129,.278542,.960418,.449812,.359813,.817408,.415845,.29191,.861293,.215979,.129032,.967803,.208228,.117283,.971007,.469466,.198248,.860378,.211432,.080416,.974059,.483902,.012452,.874996,.502304,-.055666,.86288,.226936,.013092,.973815,.222816,-.011933,.974761,.458266,-.222236,.860561,.208838,-.074923,.975066,.498642,.056825,.864925,.223884,.029267,.974151,.32017,-.450056,.833613,.256203,-.412946,.873959,.107883,-.210883,.971526,.097781,-.202368,.974395,.165166,-.46263,.870998,.063936,-.205023,.976653,.02884,-.488205,.872219,.016236,-.216651,.976104,.099063,.570696,.815149,.036195,.273202,.961272,.289804,.512223,.808466,.119694,.253182,.95996,-.410749,-.514878,.752434,-.382092,-.414167,.826075,-.210486,-.208319,.955138,-.207739,-.191076,.959319,-.534806,.264595,.802454,-.28782,.103763,.952025,-.605853,.349101,.714866,-.298868,.118473,.946898,-.378979,.516465,.767846,-.292367,.46437,.835963,-.139012,.248054,.958708,-.124149,.240608,.962615,-.334544,-.392224,.856838,-.124851,-.203314,.971099,-.400922,-.422315,.812922,-.13599,-.210852,.967986,.405133,-.308573,.860591,.207862,-.112217,.971679,.442854,-.378704,.812647,.216102,-.123112,.968566,.389966,.444014,.806665,.170598,.246956,.953856,.486068,.488815,.724387,.187048,.254006,.948912,.059572,-.691427,-.719962,.258003,-.674337,-.691855,.342326,-.877224,-.336497,.069247,-.92169,-.381664,.04828,-.433821,-.899686,.163152,-.456038,-.874844,.333567,-.723594,-.604236,.405774,-.852931,-.328288,.197058,-.466597,-.862209,-.597674,-.332682,-.729423,-.312937,-.590503,-.743858,-.42671,-.801263,-.419324,-.800836,-.455672,-.388531,-.370647,-.199194,-.907132,-.181555,-.349315,-.919218,-.929991,-.14008,-.339793,-.773156,-.126469,-.621418,-.688284,-.160161,-.70748,-.914762,-.205573,-.347697,-.473739,-.094485,-.875546,-.447127,-.115848,-.886898,.358898,-.918912,-.16364,.072207,-.976775,-.201605,.427168,-.89053,-.156407,.360546,-.927915,-.094546,.071261,-.990204,-.119938,.429884,-.898526,-.088443,-.456862,-.85876,-.23191,-.850032,-.485885,-.203223,-.464858,-.874264,-.139714,-.860775,-.494583,-.120151,-.962096,-.216132,-.166143,-.976684,-.143742,-.159246,-.98526,-.146001,-.088778,-.970855,-.219947,-.094852,.321818,-.945677,-.045656,.273141,-.960509,-.052522,-.001953,-.998749,-.049562,.037965,-.998321,-.043336,.392743,-.918332,-.048708,.345408,-.936796,-.055483,.252846,-.963561,-.086978,-.018555,-.993988,-.107669,.324686,-.942625,-.077273,.278512,-.939207,-.200781,.003967,-.95764,-.287912,.34312,-.928739,-.140202,.258553,-.912961,-.315622,-.02823,-.908383,-.417096,.367473,-.900754,-.231422,-.825678,-.562059,-.047884,-.84875,-.526963,-.04355,-.468978,-.882046,-.044649,-.468886,-.881863,-.049226,-.809412,-.57918,-.096713,-.466536,-.876919,-.115452,-.446638,-.835658,-.319651,-.406629,-.798456,-.443922,-.794824,-.553728,-.248177,-.731101,-.570849,-.373608,-.947386,-.315897,-.051576,-.968261,-.243629,-.055513,-.980804,-.188543,-.049379,-.963805,-.262551,-.046144,-.956755,-.281503,-.073214,-.933531,-.349651,-.078677,-.925443,-.339976,-.16715,-.897885,-.354747,-.260567,-.951506,-.28254,-.121616,-.943999,-.267617,-.192877,.352641,-.933958,-.057497,.063814,-.995666,-.067232,.422437,-.90463,-.05594,-.468062,-.880367,-.076205,-.86111,-.503891,-.067476,-.971465,-.229896,-.057833,-.986206,-.155614,-.056276,-.024537,-.747917,.663289,-.03357,-.778405,.62682,-.057711,-.788507,.612293,-.449507,-.214576,.867092,-.009278,-.789331,.61388,-.03824,-.803217,.594409,-.083651,-.800775,.593036,-.184545,-.78811,.587176,-.072024,-.817072,.571978,-.042451,-.764122,.643635,-.032624,-.765587,.642476,-.027284,-.771661,.635395,-.039552,-.767724,.639515,-.012085,-.767693,.640675,-.003327,-.77871,.627338,-.046663,-.778069,.626392,-.051668,-.783471,.619251,-.04474,-.7669,.640156,-.048982,-.766472,.64037,-.067751,-.78634,.614002,-.035707,-.765343,.642598,-.041902,-.798517,.600482,-.073122,-.849879,.521836,-.153661,-.926359,.343822,-.068789,-.823267,.563433,-.117252,-.8858,.448988,-.09769,-.830836,.547838,-.097995,-.983398,.152593,-.141758,-.964415,.223151,-.186956,-.969054,.161046,-.103305,-.989135,.104404,-.087558,-.968322,.233711,-.113926,-.934019,.338481,.043428,-.997406,.057344,-.037599,-.993866,.103977,-.02884,-.996765,.074831,.063051,-.997528,.030091,.032319,-.994751,.096835,-.041536,-.98764,.151067,.264016,-.964446,.010468,.154271,-.98761,.028138,.182958,-.983093,.001953,.290933,-.956572,-.017731,.242103,-.96878,.052828,.136692,-.98822,.068728,.392071,-.919889,-.008271,.341838,-.939726,-.007294,.362865,-.931272,-.032289,.403882,-.914487,-.023743,.3614,-.931822,.03296,.317026,-.947691,.036378,.448103,-.891049,.071963,.427107,-.89816,.10419,.417402,-.908078,.033845,.430433,-.902585,.006226,.38844,-.911466,.135228,.37962,-.922636,.067995,.465346,-.840724,.276742,.442061,-.844111,.303354,.441023,-.874935,.199896,.460036,-.872341,.165349,.403119,-.854549,.327403,.402387,-.886502,.228339,.387677,-.790857,.473525,.369518,-.792871,.484542,.413678,-.821039,.393323,.436903,-.817347,.37553,.33668,-.798578,.498886,.377056,-.829096,.412732,.202765,-.727409,.655507,.195105,-.728233,.656941,.304758,-.750725,.586077,.317759,-.748833,.581591,.169073,-.728782,.663503,.276131,-.754082,.595874,-.077059,-.770714,.632466,.050508,-.744224,.665975,.052705,-.744713,.665242,-.075076,-.769707,.633931,-.098056,-.773797,.625782,.025575,-.744072,.667562,-.13303,-.808557,.573138,-.138005,-.793786,.592303,-.133824,-.790094,.598163,-.130345,-.801996,.582904,-.137089,-.821223,.55388,-.15125,-.801965,.577868,-.105808,-.809137,.57796,-.107273,-.800501,.589618,-.10126,-.824488,.556719,.013184,-.797571,.603046,-.020386,-.814814,.579333,.03592,-.80343,.594287,-.002594,-.824335,.566027,-.06122,-.830103,.554186,-.051546,-.841151,.538285,.007233,-.767388,.641102,.01886,-.783288,.621357,.026734,-.763787,.644887,.041414,-.785058,.618,-.068331,-.778802,.623493,-.023621,-.760155,.649281,-.057741,-.761742,.645253,-.008454,-.750237,.661092,-.121891,-.868282,.480819,-.105228,-.820582,.561724,-.125523,-.842891,.523209,-.100375,-.79751,.594867,-.096988,-.953093,.28663,-.119236,-.914151,.387402,-.116062,-.931974,.343394,-.132603,-.889492,.437239,.013855,-.988952,.147435,-.054353,-.977996,.2013,-.009522,-.976196,.21662,-.074435,-.961547,.264321,.207465,-.973266,.098331,.107669,-.987213,.117374,.168981,-.969817,.175695,.074343,-.978637,.191534,.326579,-.941954,.077517,.279,-.956938,.079928,.28077,-.950133,.135594,.232826,-.960753,.150609,.346629,-.920743,.179022,.343974,-.931883,.115146,.272195,-.934385,.229804,.279702,-.944121,.174322,.351634,-.863521,.361431,.356334,-.894375,.270333,.279305,-.871059,.403974,.28312,-.903653,.321268,.289712,-.80401,.519181,.326823,-.836482,.439802,.218451,-.807672,.547624,.255928,-.841792,.475204,.128117,-.728172,.673269,.232582,-.757347,.610157,.061037,-.726585,.684317,.160955,-.759606,.630085,-.125614,-.772973,.621815,-.011017,-.740989,.671407,-.161809,-.767296,.620502,-.064852,-.734794,.675161,-.14301,-.830287,.538621,-.167791,-.80636,.567095,-.152989,-.835566,.527635,-.189398,-.805689,.561174,-.09772,-.836482,.539171,-.096896,-.845973,.524308,.051149,-.803491,.593097,.009522,-.827998,.560594,.212836,-.865932,.452589,.238197,-.937803,.252419,-.047456,-.845912,.531144,.016144,-.922361,.385937,.034364,-.754051,.655904,.055422,-.78048,.6227,.233619,-.821497,.520096,.39433,-.886258,.242897,-.055666,-.738517,.671896,-.005982,-.735405,.677572,.120457,-.814966,.56682,.245979,-.80459,.540452,-.13242,-.80575,.577227,-.100375,-.765099,.636006,.126652,-.99118,-.038911,.076998,-.905332,.417585,-.140141,-.898679,.41554,-.148656,-.852351,.501358,.064943,-.920103,-.386181,.085971,-.956481,-.278787,-.037446,-.957976,.284371,-.102542,-.935972,.336772,.101108,-.889004,-.446516,.113773,-.811274,-.573443,.132359,-.960295,.245491,.046571,-.963988,.261757,.209967,-.262276,-.941862,.134678,-.944487,.2996,.205329,-.953032,.222602,.206305,-.869808,.448103,.205695,-.90936,.361522,.185736,-.883999,.428938,.133,-.909543,.393689,.201941,-.937864,.282083,.120151,-.801294,.586047,.172857,-.836879,.519303,.94055,-.200903,-.273751,.922666,183e-6,-.38551,-.032899,-.719657,.693533,.055452,-.753777,.654744,.391614,-.740043,.546739,.67684,-.662801,.3202,-.198035,-.75103,.629841,-.129398,-.722129,.679525,-.14069,-.894742,.42378,.140873,-.842494,.519944,-.169073,-.829402,.532426,-.211951,-.791681,.572954,-.100803,-.961486,.255562,-.185186,-.950377,.249855,-.103183,-.847835,.520066,.100162,-.994629,.0253,.091494,.784906,-.612781,.113468,.723411,-.68099,.017335,.759636,-.650075,.039338,.721152,-.691641,.173864,.755333,-.631825,.184149,.674856,-.71456,.154485,.693533,-.703635,.208747,.71804,-.66393,.220679,.691305,-.687979,.202033,.668264,-.715934,.212775,.676595,-.704917,.188391,.682394,-.706259,.203711,.683096,-.701285,.151799,.713218,-.684286,.103488,.760826,-.640645,.190344,.718558,-.668874,.16068,.7669,-.621296,.042879,.809229,-.585864,.218909,.455,-.863124,.113681,.818751,-.562761,.084719,.854915,-.511734,.655263,.284127,.699881,.070681,.898923,-.432325,.137059,.851588,-.505936,.174749,.802026,-.571123,.189917,.754082,-.628712,.185308,.713797,-.675375,.163579,.689047,-.705985,.126835,.685537,-.716849,.084109,.697531,-.71157,-.898984,-.169805,.403638,-.892605,-.133213,.430647,-.907651,-.151921,.391186,-.716514,-.459456,.524857,-.889859,-.133061,.436354,-.904691,-.15891,.395245,-.917447,-.159246,.364513,-.897702,-.156865,.411664,-.917631,-.166295,.360881,-.877529,-.053957,.476424,-.876644,-.034883,.479843,-.883358,-.101169,.457595,-.886105,-.110446,.450087,-.877895,-.027619,.478011,-.883755,-.09534,.458113,-.868007,.125767,.480331,-.858791,.148106,.490402,-.869716,.060823,.489731,-.871517,.039735,.488693,-.842311,.156133,.515854,-.865078,.066744,.497116,-.856044,.186346,.482131,-.794794,.267434,.544725,-.714347,.348399,.606861,-.819514,.228187,.525651,-.776879,.295236,.556078,-.80932,.22953,.540635,-.740013,.454726,.495529,-.707785,.410352,.574969,-.644978,.430219,.63155,-.734519,.471358,.488083,-.770867,.425855,.473708,-.762261,.360729,.5374,-.819636,.489975,.296731,-.786279,.480697,.388104,-.792962,.486435,.366832,-.82815,.488601,.274514,-.819514,.488662,.299234,-.793878,.47087,.384686,-.873257,.460707,.158483,-.84933,.481216,.216773,-.859645,.472152,.195105,-.882015,.447829,.146397,-.868404,.469192,.160192,-.846553,.484848,.219642,-.903653,.416059,.101291,-.900967,.421857,.101321,-.889767,.438887,.125065,-.897,.425886,.118351,-.894375,.436262,.098666,-.883236,.451735,.125553,-.907163,.418226,.045808,-.905545,.417524,.075045,-.90701,.412366,.085025,-.909085,.41258,.057161,-.903378,.42671,.042329,-.900601,.428999,.069491,-.913602,.406262,-.014832,-.908994,.416425,.017182,-.909635,.414411,.028077,-.913266,.40727,-.006836,-.912748,.408246,-.014222,-.906613,.421644,.015717,-.931791,.35548,-.073092,-.93408,.349132,-.074496,-.92114,.386456,-.045595,-.919797,.390179,-.041017,-.935392,.346721,-.069155,-.921506,.385998,-.042268,-.969939,.234779,-.063723,-.971831,.228339,-.057894,-.952849,.290109,-.088809,-.950072,.298471,-.090884,-.973479,.221961,-.055208,-.954619,.285806,-.08356,-.980712,.018464,.194403,-.983154,.030244,.180212,-.988067,.150151,.033479,-.987701,.152409,.034577,-.983215,.02823,.18012,-.989074,.143406,.033174,-.925626,-.122745,.357891,-.947935,-.071596,.310221,-.94293,-.086032,.321635,-.923734,-.132511,.359355,-.926969,-.112156,.357891,-.947722,-.06476,.312418,-.920469,-.149327,.361126,-.919675,-.150182,.362804,-.922849,-.146702,.356059,-.895108,-.118107,.429853,-.908963,-.147862,.389752,-.908414,-.088931,.40846,-.92111,-.113315,.372417,-.923368,-.154118,.351604,-.933226,-.118961,.338939,-.881069,-.017365,.47261,-.889279,-.081088,.450087,-.886898,-.005463,.461898,-.899899,-.060213,.431837,-.836543,.154942,.525498,-.86346,.070986,.499374,-.839137,.147954,.523392,-.865719,.073092,.495132,-.785699,.279824,.551683,-.807489,.222419,.546312,-.79519,.264046,.545793,-.813654,.209632,.542192,-.783471,.408094,.468581,-.776788,.341044,.529374,-.793054,.388775,.468886,-.787408,.322611,.525224,-.823511,.480789,.301065,-.800928,.458663,.384808,-.832179,.465438,.301309,-.809656,.441145,.387036,-.866054,.472945,.161931,-.847468,.482101,.222083,-.868648,.46791,.162694,-.854305,.470138,.221534,-.888913,.447371,.098361,-.878903,.46025,.125156,-.885189,.45436,.099643,-.877285,.463057,.126072,-.899472,.4344,.047121,-.895352,.439558,.071322,-.896786,.438551,.058138,-.891232,.446577,.078768,-.9129,.408094,-.006317,-.904752,.425306,.022126,-.91464,.404157,.008759,-.903714,.426466,.037141,-.938108,.341411,-.057619,-.923215,.382855,-.032411,-.943236,.33018,-.035432,-.927061,.374615,-.014557,-.975982,.212561,-.047548,-.95764,.278512,-.072695,-.9794,.200293,-.0253,-.962706,.266091,-.04825,-.983245,.023713,.180578,-.990326,.133915,.036287,-.982788,.018281,.18366,-.991028,.123692,.050111,-.929197,-.09772,.356395,-.947752,-.059542,.313303,-.931089,-.081637,.35548,-.947966,-.057009,.313211,-.92822,-.130833,.348247,-.934416,-.102145,.341197,-.919065,-.06653,.388409,-.930876,-.083468,.355632,-.910092,-.059572,.410016,-.921232,-.090182,.378338,-.940123,-.090732,.328471,-.940794,-.080813,.329112,-.89407,.002777,.447859,-.909024,-.045076,.414289,-.86288,.033235,.504288,-.819758,-.036897,.57149,-.852901,.132878,.504868,-.874172,.070315,.480453,-.629475,.377483,.679128,-.751061,.240577,.614826,-.820887,.234443,.520707,-.834132,.186224,.51915,-.067751,.592059,.803034,-.3867,.501022,.774194,-.81521,.352519,.459487,-.81402,.28779,.504471,-.085208,.689566,.719138,-.022828,.642048,.766289,-.841762,.446974,.302652,-.82458,.412152,.387463,-.411389,.701437,.581957,-.03003,.734123,.678335,-.873959,.459334,.158666,-.861873,.45735,.21894,.567125,.390698,.725028,-.884732,.447462,.130161,-.883633,.45436,.112827,-.918546,.394208,.028871,-.902127,.426893,.062288,-.914182,.402264,.049287,-.902341,.420118,.096133,-.892697,.442549,.084933,-.952239,.305185,.006409,-.934568,.35548,.013062,.068972,.457869,-.886319,.400037,.270882,-.875546,-.982086,.185675,.031831,-.97,.242927,.00586,-.88052,.262459,-.394635,-.773644,.398022,-.492935,-.979797,.017273,.199225,-.988525,.11832,.093722,-.999573,-.008423,.027161,-.947417,.109378,-.300607,-.93234,-.077883,.353069,-.948454,-.060762,.311014,-.918088,.009278,.396252,-.956816,.003815,.290628,-.938108,-.083193,.3361,-.929014,.017182,.369549,.93762,.084201,-.337291,.927396,.06531,-.368297,.927885,.057985,-.368297,.914853,.025117,-.402936,.933836,.096011,-.344493,.931578,-.036775,-.361644,.925993,.032868,-.376019,.941282,.06592,-.331065,.957915,-.017548,-.286447,.936064,-.105136,-.335734,.965545,-.103732,-.238533,.967772,-.146611,-.204596,.939177,-.143101,-.312174,.967315,-.17716,-.18131,.959349,-.229682,-.163854,.940245,-.175268,-.291879,.935514,-.229072,-.268838,.94525,-.292489,-.144597,.997742,-.024567,-.062319,.924986,-.295022,-.239387,.910031,-.345103,-.229591,-.229835,-.333048,-.914457,.883785,-.386059,-.26426,.891171,-.323985,-.317454,.895138,-.25956,-.362377,.896481,-.203162,-.393689,.896084,-.163488,-.412641,.896237,-.124454,-.425672,.899441,-.070498,-.431288,.906308,-.013855,-.422346,-.406415,-.283395,.868618,-.563585,-.3932,.726432,-.480697,-.667196,.568957,-.232215,-.628407,.742393,-.504715,-.708426,.493301,-.313517,-.652943,.689444,.016511,-.50676,.861904,-.160588,-.295206,.941801,-.097476,-.546495,.831751,-.70452,-.628193,.330119,-.550096,-.57741,.603259,-.872341,-.234962,.428663,-.9588,-.282449,.030061,-.324198,-.492813,.807459,-.573595,-.169073,.801447,-.988159,.053163,-.143712,-.965789,.136845,.220191,.200842,.968505,.147008,.870602,.173498,-.460311,-.739616,.353191,.572863,-.302316,.824885,.477615,-.81286,-.426466,.39668,-.760155,-.252297,.598712,-.776635,-.134648,.615345,-.865291,-.385327,.320505,-.686697,-.300272,.661977,-.74926,-.618549,.236579,-.869625,-.435316,.232826,-.869961,-.486831,.078036,-.697531,-.71276,-.073366,-.619282,-.765374,.175024,-.525163,-.51268,.67922,.948576,-.265206,-.172613,-.450331,-.75631,.474471,-.511155,-.851497,-.116703,.686789,.562334,-.460494,.009278,.882138,.47084,.904508,.390942,-.170232,.891263,.414869,-.182958,-.781701,-.192145,.59328,-.686544,-.373608,.623707,-.710715,-.347514,.611621,-.768029,-.248909,.589984,-.790307,-.21305,.57445,-.699515,-.383526,.602924,-.521226,-.606037,.600818,-.513749,-.602374,.610859,-.544633,-.607715,.57796,-.763359,-.240089,.599658,-.753838,-.271493,.598315,-.79165,-.195441,.578845,-.790521,-.17835,.585864,-.754967,-.30076,.582659,-.797601,-.220496,.561388,-.483322,-.490493,.72512,-.428053,-.540513,.724265,-.637562,-.397534,.659871,-.67214,-.34904,.652943,-.418439,-.570544,.706656,-.630848,-.431867,.644551,-.024537,-.65862,.752037,-.193274,-.637165,.746055,-.231666,-.610034,.757714,-.035554,-.648,.760765,-.021332,-.667837,.74395,-.18836,-.656362,.730522,-.029511,-.535386,.84405,.004364,-.559709,.828669,.038301,-.623676,.780725,.027192,-.611072,.79107,.020844,-.55913,.828791,.044923,-.62508,.779229,-.261055,-.443434,.857418,-.203894,-.449629,.869594,-.092807,-.482101,.871151,-.151311,-.445021,.882626,-.16187,-.454421,.875912,-.060274,-.487197,.871181,-.322245,-.60271,.729942,-.280496,-.519181,.807306,-.313974,-.559587,.766961,-.347911,-.618427,.704581,-.299783,-.583026,.755089,-.245643,-.506943,.826228,-.353557,-.626545,.69454,-.370983,-.630055,.68215,-.373699,-.637623,.673605,-.371288,-.636128,.676351,-.337748,-.611438,.715537,-.357707,-.622822,.695761,-.36082,-.653188,.665639,-.349223,-.642781,.681783,-.363781,-.639058,.677664,-.372997,-.645558,.666372,-.336436,-.620533,.708304,-.35313,-.619861,.700736,-.308634,-.685049,.659871,-.292886,-.665365,.686605,-.323374,-.658773,.67925,-.339366,-.664663,.665578,-.276315,-.619892,.734397,-.309,-.626545,.715476,-.223365,-.622364,.750145,-.259865,-.650197,.71392,-.278695,-.682821,.675283,-.242958,-.670583,.700888,-.206183,-.547105,.811243,-.241035,-.59032,.770318,-.272225,-.50618,.818293,-.219672,-.564013,.795984,-.217078,-.64095,.736229,-.248848,-.58153,.774499,-.292032,-.39082,.87289,-.217597,-.463088,.859157,-.386425,-.673788,.62978,-.346202,-.549333,.76046,-.319803,-.614917,.720817,-.354198,-.727897,.587054,-.446608,-.59798,.665517,-.38731,-.442274,.808893,-.365581,-.76278,.533372,-.378552,-.764824,.521256,-.377911,-.758995,.530137,-.345347,-.781823,.519059,-.424116,-.746025,.513352,-.436171,-.720542,.539018,-.421216,-.716941,.555437,-.419233,-.7069,.569628,-.455214,-.709861,.537431,-.803339,-.267617,.531968,-.726615,-.407849,.552843,-.803949,-.351543,.479629,-.757561,-.444533,.47795,-.589557,-.604327,.535844,-.656545,-.57918,.4832,-.757195,-.307657,.576159,-.801782,-.258187,.538896,-.753563,-.300577,.584613,-.793786,-.31315,.521348,-.459487,-.532731,.710624,-.644124,-.412488,.644154,-.542711,-.421216,.726615,-.670553,-.341624,.658467,-.087527,-.626148,.774743,-.252113,-.615558,.746635,-.236854,-.50676,.828883,-.384869,-.494827,.779107,-.014618,-.513291,.858058,-.013611,-.576098,.817225,-.111606,-.425367,.898099,-.151402,-.45851,.875668,-.121433,-.44023,.889615,-.054109,-.463576,.884396,-.08887,-.426893,.899899,-.083285,-.42909,.89938,-.272195,-.524735,.806543,-.201849,-.467116,.860836,-.209387,-.472701,.855953,-.139134,-.430708,.891659,-.344584,-.600909,.721183,-.323985,-.557176,.76455,-.314676,-.578478,.752525,-.269478,-.526566,.806269,-.30549,-.587207,.749535,-.324259,-.616443,.71749,-.248604,-.509262,.823878,-.274758,-.561907,.780206,-.248573,-.538652,.804987,-.277871,-.56212,.778954,-.221686,-.405927,.886593,-.227058,-.446852,.865291,-.192358,-.52205,.830927,-.219794,-.527268,.820734,-.193823,-.524644,.828944,-.217322,-.445112,.868679,-.29545,-.406598,.864498,-.214515,-.462355,.860317,-.285379,-.49556,.820338,-.209265,-.526048,.824274,-.458785,-.582659,.670797,-.390698,-.449293,.8034,-.440382,-.618763,.650502,-.372875,-.525651,.764611,-.458541,-.729301,.507736,-.461013,-.702658,.541948,-.49031,-.707389,.509079,-.462691,-.702536,.540666,-.499649,-.695486,.516312,-.562792,-.658345,.499802,-.782647,-.421247,.458205,-.773858,-.45967,.435621,-.812952,-.52797,.245552,-.796381,-.543626,.264992,-.720908,-.518754,.459487,-.727287,-.560411,.39613,-.73513,-.320811,.597186,-.766778,-.373699,.521897,-.799799,-.006745,.600177,-.980987,.17951,.073428,-.596728,-.353374,.72042,-.679373,-.313089,.663594,-.52382,.289102,.801233,-.65981,.22837,.715842,-.355022,-.405103,.842494,-.482406,-.402173,.77813,-.287729,.432539,.854457,-.319193,.300485,.89877,-.209845,-.352275,.912046,-.261299,-.363079,.894345,.38963,.242164,-.888546,-.699789,.620167,.354442,-.110172,-.396741,.911252,-.153996,-.389599,.907987,-.181921,-.334788,.924558,.660237,-.712943,-.236152,-.154515,-.416089,.896084,-.112857,-.381634,.917386,-.155065,-.343303,.926328,-.169897,-.306192,.936674,-.22779,-.290719,.929258,-.191473,-.336039,.922178,-.264107,-.244148,.933073,-.208411,-.272866,.939177,-.185858,-.419263,.888607,-.210669,-.471999,.856044,-.247108,-.354778,.901669,.242256,-.91644,-.318461,.375835,-.923704,-.073855,-.294137,-.489883,.820643,-.211829,-.505417,.836421,.034028,-.998199,.048891,-.021882,-.995483,-.092227,-.465468,-.601398,.649342,-.388806,-.52147,.759514,61ee-6,.363872,.525132,.76928,.34724,.519883,.78045,-.098758,.993042,-.063662,-.092715,.978881,-.182165,.417676,.582659,.697134,.394787,.544176,.740226,-.038942,.919004,.392285,-.124729,.97879,.162358,.47264,.587786,.656545,.435316,.608478,.663503,.064669,.885464,.460158,-.116489,.927213,.355907,.549364,.534104,.642537,.108249,.92233,.370861,.397473,.46852,.788965,-.631001,-.355602,-.689444,-.591479,-.374554,-.714011,-.610736,-.384533,-.69216,-.580889,-.381176,-.719169,-.597674,-.397137,-.696402,-.553362,-.385327,-.738426,-.575701,-.38963,-.718833,-.574419,-.41261,-.7069,-.539994,-.39494,-.743217,-.500961,-.350627,-.791223,-.525407,-.358165,-.771752,-.455611,-.300882,-.837764,-.483108,-.318613,-.815516,-.411054,-.261757,-.873196,-.407117,-.239967,-.881252,-.43379,-.277413,-.857234,-.416761,-.237831,-.877316,-.444807,-.244209,-.86166,-.261483,-.531938,-.805353,-.442793,-.207801,-.872189,-.452528,-.215705,-.865261,-.352,-.303537,-.885372,.449599,.225288,.864315,-.456648,-.228767,-.859706,-.419721,-.288461,-.860561,-.42967,-.329997,-.84051,-.480972,-.362224,-.798395,-.528245,-.38319,-.757683,-.551866,-.388501,-.737877,-.565691,-.382946,-.730277,-.495529,-.820246,-.285653,-.849727,-.324809,-.415204,-.480117,-.745598,-.46205,-.796228,-.25547,-.548387,-.918516,.243019,-.311838,-.840968,.286294,-.45909,-.488144,-.689291,-.535295,-.764763,-.227821,-.602649,-.497391,-.656362,-.567217,-.74865,-.218207,-.625996,-.810633,.27311,-.51793,-.803278,.249275,-.54088,-.760796,-.231605,-.60622,-.511765,-.655751,-.55501,-.52501,-.684439,-.505844,-.793298,-.257179,-.551805,-.826411,.225135,-.516037,-.862514,.217261,-.456954,-.831965,-.282357,-.477554,-.816401,-.271554,-.509598,-.52736,-.710257,-.466201,-.54857,-.753044,-.363231,-.701132,-.699728,.136906,-.906491,-.373547,.196722,-.881771,.224433,-.414777,-.873867,.2266,-.430067,-.988861,.068484,.132115,.360942,.887875,.285195,.74456,.407331,.528794,.782983,.328745,.528001,.406873,.866878,.287942,.805841,.166448,.568194,.770959,-.370678,.517838,.804468,.250404,.538591,.464187,.829737,.309915,.765496,-.377697,.52089,.600726,-.500809,.623096,.690817,.105869,.715201,.69393,.122196,.709555,.602405,-.488205,.631428,.398175,.77691,.487686,.453932,.83166,.319742,.780877,.195685,.593219,.482467,.825312,.293283,.710257,-.414533,.568896,-.092105,.434309,.896023,.422468,.104465,.900296,.558458,.557482,.614246,-.809137,.209876,.548814,-.897488,-.066042,.435987,-.656148,-.629536,-.416059,-.643666,-.623157,-.444227,.772088,.619129,-.143284,.38432,-.411847,-.826197,.887326,.126713,-.443342,.232734,-.556291,-.797723,-.839198,.021119,.543382,-.715262,.065828,.6957,-.810755,-.487228,-.324351,-.936064,-.337168,-.100223,.81579,-.081576,-.572527,.017975,-.599536,-.800104,.690878,-.223823,-.687429,-.176122,-.569201,-.803095,-.430891,-.373791,.821314,.067232,-.833522,.548326,-.916135,-.400311,.019745,-.715201,-.698355,-.026734,.571551,-.267586,-.775689,-.340434,-.42375,-.839351,.114811,.881466,-.458022,-.700278,-.186987,-.688925,.485885,.108188,.867275,.500504,.668996,.549455,.825037,.463607,.322977,.642903,.588549,-.490158,.213935,.673482,-.707541,-.354625,.122776,-.926878,-.588549,.13538,-.797021,.070956,-.548906,.83285,-.210334,-.580432,.786645,-.764061,-.644337,.031953,-.812494,-.580401,.054292,.612873,-.264077,-.744713,.045228,.743004,-.667745,-.647084,.130161,-.751183,-.748405,-.207556,-.629902,-.313395,-.378826,.870754,-.481033,.597949,.641102,-.848079,-.510788,.14066,-.97232,-.085726,-.217231,-.456343,.87817,.143284,-.374828,.926969,.013886,-.825098,.512803,-.237037,-.709647,.622517,-.329844,.298288,-.935392,.189825,-.338176,-.894589,-.292032,.34666,-.937071,.040925,-.175878,-.912625,-.368969,-.340678,.940153,-.003143,-.33549,.941954,.011444,-.654439,.682424,-.32548,-.626484,.723991,-.288583,.352763,-.935636,-.009064,-.106052,-.924741,-.36549,.346751,-.937681,-.021424,-.065706,-.936644,-.343974,-.358257,.933409,.018555,-.371807,.927519,.037782,-.634053,.74279,-.215003,-.676107,.711692,-.190619,.33668,-.940733,-.040468,-.040071,-.949156,-.312143,.342723,-.938231,-.047273,-.062899,-.953917,-.293344,-.584826,.528214,.615558,-.350597,.934904,.054689,-.539903,.428602,.724418,-.674459,.656148,-.33842,-.340403,.940092,.017548,-.722587,.640553,-.259865,-.421094,-.253029,.870968,-.116642,-.776147,.619617,-.883419,-.394604,.252571,-.327311,-.742607,.584246,.360179,-.931639,-.047731,.278878,-.954619,.104282,-.107944,-.945494,-.307138,-.10004,-.975829,-.194189,-.275948,.941649,-.192663,-.291055,.93881,-.184118,-.774102,.355876,-.523515,-.763878,.371868,-.527421,-.262917,.952452,-.153935,-.287912,.940519,-.180242,.25837,-.9476,.187719,.258858,-.944792,.200751,-.195898,-.980377,.020447,-.486221,-.819208,-.304086,-.439497,-.852321,-.283456,-.902585,.025361,-.429731,-.237953,.957823,-.161016,-.736442,.46205,-.494095,-.182195,.93466,-.305216,-.661367,.455519,-.595874,.208655,-.922849,.32371,.207953,-.940947,.267037,-.462203,-.866665,-.187628,-.475173,-.836085,-.274056,-.237465,.939695,-.246071,-.720145,.407727,-.561357,.232612,-.945585,.227363,-.501785,-.809564,-.304636,-.52617,-.708182,-.470717,-.813837,-.270211,-.51442,-.879604,.225776,-.418683,-.364696,.929929,.046876,-.714591,.668477,-.20603,.354503,-.933836,-.047639,-.09888,-.949889,-.296426,-.861873,-.222205,-.455824,-.874813,-.2884,-.389233,-.876675,-.301889,-.374523,-.881924,-.240577,-.405347,-.82461,-.23603,-.514054,-.859737,-.334483,-.385907,-.799371,-.178137,-.573779,-.804437,-.242866,-.54207,-.806391,-.192816,-.559038,-.831019,-.366375,-.4185,-.855861,-.306589,-.416456,-.809503,-.225532,-.542009,-.781518,-.195898,-.592273,-.771233,-.186956,-.608448,-.760674,-.193487,-.619587,-.747856,-.205054,-.631367,-.759758,-.228309,-.608783,-.792962,-.256996,-.552385,-.814631,-.270119,-.513169,-.817377,-.269478,-.50914,-.763543,-.236763,-.600757,-.786493,-.31489,-.531236,-.225562,.972076,-.064547,.726249,.410443,.551408,.118992,.917875,.378552,.538163,.775903,.329081,-.512131,.82168,-.249977,-.325236,.696768,.639302,.188513,.937712,.291787,.116977,.661031,.741142,-.09357,.995453,.016846,.442793,.654195,.613117,.352184,.829402,.433607,.336802,.571856,.748009,.479171,.206244,.853114,.669912,.394604,.628864,.407147,.184881,.894436,-.195288,-.674184,-.712241,-.020234,-.725059,-.688345,-.451308,-.62331,-.638569,-.676778,-.531571,-.509262,-.79107,-.40968,-.454207],metadata:{bones:0,morphTargets:0,version:3,normals:5487,generator:"io_three",faces:4892,uvs:1,vertices:5580,materials:1},animations:[],name:"rose1Geometry",uvs:[[.175597,.841452,.175749,.834589,.20033,.840927,.200084,.84831,.175445,.848315,.199838,.855693,.15111,.834594,.151168,.828251,.151053,.840936,.175203,.84975,.150796,.842457,.19961,.857042,.174961,.851185,.15054,.843978,.199382,.858392,.213271,.86343,.212984,.855769,.225637,.870611,.226459,.878551,.213559,.871092,.22728,.88649,.213276,.87232,.226943,.887597,.212994,.873548,.226606,.888705,.251105,.889727,.246333,.880698,.266208,.882845,.274929,.892964,.241562,.871669,.257487,.872727,.252582,.891793,.25406,.893859,.278222,.895988,.281514,.899012,.19935,.858585,.174943,.851289,.199317,.858779,.174926,.851393,.150537,.843992,.150535,.844007,.172898,.857452,.148411,.85059,.197384,.864314,.170869,.86351,.146288,.857172,.195451,.869848,.226499,.889055,.212924,.87382,.226392,.889406,.212855,.874092,.209629,.87896,.221874,.893607,.206403,.883829,.217356,.897809,.278867,.899091,.252683,.894073,.276219,.899171,.251306,.894288,.242018,.896653,.262162,.899698,.23273,.899017,.248104,.900225,.150212,.840687,.15027,.834345,.149372,.840438,.149429,.834095,.150327,.828002,.149487,.827753,.149699,.843729,.149956,.842208,.148858,.84348,.149115,.841959,.149697,.843743,.149694,.843758,.148856,.843494,.148854,.843509,.145447,.856923,.147571,.850341,.144607,.856674,.14673,.850092,.166754,.861804,.173195,.860804,.17505,.886859,.168095,.887851,.160314,.862804,.16114,.888842,.165413,.835758,.171339,.834749,.159488,.836766,.158901,.862799,.15799,.836761,.159811,.888838,.157488,.862795,.156492,.836756,.158483,.888833,.176996,.905125,.178943,.923391,.171807,.925561,.169951,.906706,.164671,.927732,.162906,.908287,.161672,.908207,.163533,.927575,.160439,.908126,.162395,.927419,.162874,.948676,.170955,.943751,.170103,.961941,.161077,.96962,.179037,.938827,.17913,.954263,.160416,.950525,.157958,.952375,.157299,.973475,.153521,.977331,.158292,.888832,.157385,.862794,.158101,.888832,.157282,.862794,.156478,.836756,.156463,.836756,.150999,.861751,.149662,.835705,.152336,.887797,.144715,.860708,.14286,.834653,.14657,.886763,.162035,.927369,.160164,.908101,.161675,.92732,.159888,.908076,.154336,.905616,.156335,.923434,.148783,.903155,.150996,.919547,.152612,.974653,.157324,.951011,.151703,.971975,.156689,.949647,.148732,.940048,.141129,.956662,.140775,.930448,.130554,.94135,.159454,.83587,.16538,.834861,.159421,.834973,.165347,.833965,.171306,.833853,.171273,.832956,.156459,.83586,.157957,.835865,.156426,.834963,.157923,.834968,.156445,.83586,.15643,.83586,.156411,.834963,.156397,.834963,.142827,.833757,.149629,.834808,.142794,.832861,.149595,.833912,.146479,.857265,.149902,.863416,.127339,.871664,.123635,.865049,.143056,.851113,.11993,.858435,.169324,.849481,.172465,.855169,.166182,.843792,.142499,.849712,.165592,.842307,.119406,.857118,.141942,.848311,.165001,.840822,.118883,.8558,.111097,.869676,.094854,.867687,.090228,.861066,.106931,.863058,.085601,.854444,.102766,.85644,.10234,.855202,.085273,.853287,.101914,.853965,.084945,.852131,.068828,.877656,.075433,.878556,.060637,.896046,.052056,.900868,.082037,.879455,.069219,.891223,.06656,.877067,.064292,.876478,.047848,.900847,.04364,.900825,.118807,.855611,.141901,.848209,.118732,.855422,.141861,.848108,.164995,.840808,.16499,.840793,.140268,.841643,.163114,.833862,.117422,.849424,.138675,.835178,.161238,.826931,.116112,.843425,.084841,.851765,.101824,.853688,.084737,.851399,.101735,.85341,.101594,.847382,.085766,.84534,.101453,.841354,.086795,.839282,.045372,.89888,.065107,.875323,.047105,.896935,.065921,.874167,.069024,.862669,.052281,.879997,.072127,.851171,.057458,.86306,.167037,.8435,.170277,.849132,.167893,.843208,.171231,.848783,.173517,.854764,.174569,.854358,.165856,.84053,.166447,.842015,.166712,.840238,.167302,.841723,.165851,.840516,.165845,.840501,.166706,.840224,.166701,.840209,.16229,.826525,.164067,.833513,.163341,.82612,.165021,.833165,.146995,.834848,.143564,.840451,.13039,.818859,.134156,.812875,.150426,.829245,.137923,.80689,.159834,.856822,.156738,.862043,.16293,.8516,.151334,.828184,.163892,.850475,.138776,.805892,.152242,.827122,.164854,.84935,.139629,.804894,.115437,.802614,.11202,.809108,.093651,.799358,.096719,.792353,.118855,.79612,.099787,.785349,.1197,.79525,.100623,.784608,.120545,.794381,.10146,.783868,.087852,.764488,.087832,.774463,.078945,.756573,.075918,.743626,.087811,.784439,.081972,.76952,.087508,.762003,.087164,.759518,.074393,.739397,.072868,.735168,.139752,.804751,.152308,.827045,.139874,.804608,.152374,.826968,.164863,.849339,.164873,.849328,.157115,.823014,.169952,.84499,.144279,.801037,.161857,.819059,.175031,.840652,.148683,.797467,.101724,.783634,.120738,.794192,.101989,.7834,.120932,.794004,.126184,.791662,.10809,.782287,.131437,.789321,.114192,.781175,.075299,.73649,.088512,.760062,.077731,.737811,.08986,.760605,.099391,.763513,.090692,.744738,.108922,.76642,.103653,.751666,.163571,.852247,.160474,.857468,.164211,.852893,.161115,.858115,.157378,.86269,.158018,.863337,.165495,.849997,.164533,.851122,.166135,.850643,.165173,.851768,.165504,.849986,.165513,.849975,.166144,.850632,.166153,.850622,.175671,.841298,.170592,.845637,.176312,.841945,.171232,.846283,.160931,.826471,.154916,.823164,.168402,.802377,.174847,.806015,.166947,.829779,.181292,.809654,.147015,.846928,.141429,.84395,.152602,.849905,.168137,.830674,.153863,.850853,.182411,.810495,.169328,.831568,.155125,.851801,.183531,.811336,.188225,.79596,.181362,.792708,.194323,.783039,.201602,.785904,.195087,.799211,.208881,.788769,.196082,.80005,.209752,.789604,.197076,.800888,.210622,.79044,.223599,.771586,.21409,.772029,.226577,.758153,.238317,.754404,.204581,.772471,.214838,.761903,.225899,.771113,.228198,.770639,.242045,.752622,.245774,.750839,.183691,.811457,.169414,.831633,.183852,.811578,.1695,.831698,.155137,.85181,.155149,.851819,.174204,.836445,.160285,.856899,.188122,.815992,.178907,.841192,.16542,.861979,.192393,.820406,.210898,.790704,.197294,.80108,.211173,.790968,.197512,.801273,.200779,.806626,.213436,.797261,.204046,.81198,.2157,.803554,.244995,.753429,.227946,.772067,.244215,.756019,.227694,.773494,.226804,.78354,.240171,.769819,.225914,.793587,.236128,.783619,.152112,.850601,.146526,.847623,.151622,.851296,.146036,.848319,.140939,.844646,.14045,.845342,.154635,.852497,.153373,.851549,.154145,.853193,.152884,.852244,.154647,.852506,.154659,.852515,.154157,.853202,.154169,.853211,.164931,.862675,.159795,.857595,.164441,.863371,.159305,.858291,.594579,.651156,.604567,.651156,.604561,.661151,.594572,.661151,.604555,.671146,.594566,.671146,.584583,.661151,.584589,.651156,.584577,.671146,.596974,.741338,.566606,.740572,.561093,.761756,.59877,.763038,.636446,.76432,.627342,.742104,.595179,.719639,.572119,.719389,.618239,.719888,.611005,.695862,.594344,.695479,.603771,.671836,.593508,.671319,.577683,.695096,.583246,.670803,.577723,.695384,.594384,.695767,.583327,.671379,.59359,.671896,.611045,.69615,.603852,.672412,.635372,.728086,.627632,.742049,.634933,.762984,.644728,.745313,.643112,.714123,.654523,.727642,.626017,.710859,.620332,.721115,.631701,.700604,.619565,.682447,.615795,.689484,.60743,.66429,.605573,.668109,.612024,.696521,.603716,.671928,.63588,.763509,.628381,.742464,.636121,.728501,.645675,.745838,.620882,.721419,.626566,.711164,.643861,.714538,.65547,.728167,.632251,.700909,.612398,.696729,.616169,.689692,.603915,.672038,.605772,.668219,.61994,.682655,.607628,.6644,.875223,.816573,.842424,.816581,.840487,.812555,.874289,.812551,.838551,.808529,.873356,.808529,.908022,.816565,.908091,.812547,.908161,.808529,.840382,.80412,.874286,.80412,.842214,.79971,.875216,.79971,.908189,.80412,.908218,.79971,.875191,.796882,.842193,.79689,.842172,.794069,.875166,.794054,.908161,.79404,.908189,.796875,.875143,.790708,.842195,.790799,.842218,.787528,.87512,.787362,.908022,.787196,.908091,.790618,.842271,.853189,.842324,.848358,.875103,.848335,.875112,.853177,.907883,.848313,.907952,.853166,.842218,.858019,.87512,.858019,.908022,.858019,.842376,.841795,.842428,.835231,.875126,.835347,.875115,.841841,.907825,.835462,.907854,.841887,.842448,.831096,.875151,.831168,.842469,.82696,.875176,.826988,.907854,.83124,.907883,.827017,.842447,.821771,.875199,.821781,.907952,.821791,.804966,.816665,.804096,.812597,.767508,.816749,.767704,.812639,.803225,.808529,.767899,.808529,.804165,.80412,.767948,.80412,.805105,.79971,.767997,.79971,.805035,.796901,.767878,.796912,.804965,.794092,.767758,.794114,.805804,.790807,.769413,.790814,.806643,.787521,.771068,.787514,.806643,.858019,.80643,.853163,.771068,.858019,.770588,.853137,.806216,.848307,.770107,.848255,.80542,.841727,.768464,.84166,.804625,.835148,.766821,.835065,.804694,.831072,.76694,.831049,.804764,.826996,.767059,.827033,.804865,.821831,.767284,.821891,.765129,.816704,.765392,.812617,.76275,.816659,.763081,.812594,.765655,.808529,.763411,.808529,.765761,.80412,.763575,.80412,.765868,.79971,.763739,.79971,.765766,.796913,.763655,.796914,.765665,.794116,.763572,.794118,.766344,.790814,.763275,.790814,.767024,.787513,.762979,.787511,.76514,.858019,.764878,.853137,.759212,.858019,.759168,.853137,.764615,.848255,.759123,.848255,.764513,.841632,.760561,.841603,.76441,.835009,.762,.834952,.764511,.831007,.762083,.830964,.764612,.827005,.762166,.826976,.764871,.821854,.762458,.821818,.6945,.816538,.69462,.812533,.62625,.816416,.626159,.812473,.694739,.808529,.626068,.808529,.694792,.80412,.626009,.80412,.694844,.79971,.62595,.79971,.694872,.796893,.626089,.796872,.6949,.794076,.626228,.794034,.694887,.790769,.626498,.790723,.694873,.787461,.626767,.787412,.691907,.858019,.691992,.85314,.624603,.858019,.624816,.853143,.692076,.848261,.62503,.848266,.691899,.841646,.623237,.841689,.691722,.835032,.621445,.835111,.692158,.830989,.622234,.831013,.692594,.826946,.623023,.826915,.693547,.821742,.624636,.821666,.626209,.816417,.624995,.812473,.623831,.812473,.626168,.816417,.623781,.808529,.621494,.808529,.623691,.80412,.621374,.80412,.623602,.79971,.621254,.79971,.623732,.796868,.621375,.796865,.623862,.794026,.621496,.794019,.624151,.790693,.621804,.790664,.62444,.78736,.622113,.787308,.624712,.787213,.627003,.787272,.622422,.787153,.624985,.787065,.627238,.787132,.622731,.786998,.624985,.848265,.623193,.841686,.623148,.841684,.62494,.848264,.621401,.835108,.621357,.835105,.622212,.831012,.62219,.83101,.624616,.821666,.624595,.821666,.547835,.812482,.548088,.816434,.471838,.81249,.470009,.816452,.547581,.808529,.473668,.808529,.546568,.80412,.471762,.80412,.545555,.79971,.469857,.79971,.545627,.796848,.469879,.796831,.545699,.793985,.469901,.793952,.54588,.790565,.469955,.790466,.546061,.787144,.470009,.786981,.624608,.853141,.624277,.858019,.547143,.858019,.547336,.853161,.470009,.858019,.470063,.85318,.547528,.848302,.470117,.848341,.547585,.841846,.472023,.842008,.547643,.83539,.473928,.835676,.547106,.831169,.472023,.831329,.54657,.826948,.470117,.826981,.547329,.821691,.470063,.821716,.910387,.812547,.910482,.808529,.912683,.812547,.912804,.808529,.910292,.816565,.912562,.816565,.910522,.80412,.910561,.79971,.912854,.80412,.912904,.79971,.910482,.794037,.910521,.796873,.912804,.794034,.912854,.796872,.910292,.787196,.910387,.790617,.912562,.787196,.912683,.790615,.910102,.848326,.910197,.853173,.91232,.84834,.912441,.853179,.910292,.858019,.912562,.858019,.910023,.8355,.910062,.841913,.91222,.835539,.91227,.841939,.910062,.831263,.910102,.827025,.91227,.831286,.91232,.827033,.910197,.821795,.912441,.821799,.93666,.808529,.93653,.812547,.960517,.808529,.960377,.812547,.936399,.816565,.960236,.816565,.936768,.79971,.936714,.80412,.960575,.80412,.960633,.79971,.93666,.794034,.936714,.796872,.960575,.796872,.960517,.794033,.93653,.790615,.936399,.787196,.960377,.790615,.960236,.787196,.936269,.853181,.936138,.848342,.959956,.848344,.960096,.853182,.936399,.858019,.960236,.858019,.936084,.841944,.93603,.835546,.95984,.835553,.959898,.841949,.936138,.827035,.936084,.83129,.959956,.827036,.959898,.831295,.936269,.8218,.960096,.8218,.465221,.812483,.464333,.816437,.458604,.812476,.458658,.816423,.466109,.808529,.45855,.808529,.465145,.80412,.458528,.80412,.464181,.79971,.458506,.79971,.464203,.796846,.458528,.796861,.464226,.793981,.45855,.794011,.464279,.790549,.458604,.790632,.464333,.787117,.458658,.787253,.464333,.858019,.464387,.853234,.458658,.858019,.458712,.853289,.464441,.84845,.458766,.848559,.465405,.842075,.458788,.842142,.466369,.8357,.45881,.835724,.465405,.831342,.458788,.831355,.464441,.826983,.458766,.826986,.464387,.82171,.458712,.821704,.401903,.816426,.401849,.812478,.345148,.816429,.345094,.812479,.401795,.808529,.34504,.808529,.401773,.80412,.345018,.80412,.401751,.79971,.344996,.79971,.401773,.796855,.345018,.796849,.401795,.793999,.34504,.793987,.401849,.790621,.345094,.790611,.401903,.787243,.345148,.787234,.400019,.858019,.401015,.853312,.341381,.858019,.343318,.853335,.402011,.848605,.345256,.848652,.402033,.842152,.345278,.842163,.402055,.835699,.3453,.835674,.402975,.831347,.347162,.831338,.403894,.826994,.349023,.827003,.402899,.82171,.347085,.821716,.315816,.816453,.316516,.812491,.286484,.816476,.287937,.812503,.317215,.808529,.28939,.808529,.31644,.80412,.287861,.80412,.315664,.79971,.286332,.79971,.315686,.796846,.286355,.796844,.315708,.793982,.286377,.793978,.315762,.792284,.286431,.793957,.315816,.790585,.286484,.793936,.313933,.858019,.314928,.853324,.286484,.858019,.286538,.853312,.315924,.848628,.286592,.848605,.315946,.842123,.286615,.842083,.315969,.835617,.286637,.835561,.316888,.83132,.286615,.831301,.317808,.827022,.286592,.827041,.316812,.821737,.286538,.821759,.099927,.254853,.097114,.355583,.042043,.356796,.04489,.254163,.154965,.255543,.152185,.35437,.094301,.456313,.039197,.459428,.149405,.453197,.32325,.353144,.319964,.25412,.407227,.251782,.410597,.352986,.494491,.249444,.497944,.352828,.326536,.452168,.413966,.45419,.501396,.456213,.29161,.451842,.289954,.352856,.256683,.451516,.256658,.352569,.288298,.25387,.256633,.253621,.204422,.353469,.203044,.452357,.205799,.254582,.140451,.677577,.075226,.667761,.086021,.604762,.154631,.60383,.01,.657945,.017411,.605695,.096816,.541763,.168811,.530082,.024821,.553445,.095559,.499038,.159108,.49164,.032009,.506436,.29088,.490593,.254332,.490261,.327429,.490925,.290151,.529345,.25198,.529007,.328322,.529683,.28383,.61523,.24995,.626678,.31771,.603782,.277508,.701116,.247919,.72435,.307098,.677881,.20672,.490951,.210395,.529545,.194185,.700964,.20229,.615254,.415977,.538815,.412263,.603538,.503631,.547946,.506816,.603294,.408549,.668262,.51,.658643,.414971,.496503,.502514,.50208,.469261,.341932,.469261,.141684,.435768,.141684,.435768,.341932,.402275,.141684,.402275,.341932,.469261,.542179,.435768,.542179,.402275,.542179,.47738,.600318,.441855,.609704,.40633,.619089,.447943,.677228,.4855,.658456,.410385,.696,.136226,.141684,.085363,.141684,.085363,.341932,.136226,.341932,.0345,.141684,.0345,.341932,.085363,.542179,.136226,.542179,.0345,.542179,.102547,.605167,.162331,.608601,.042763,.601733,.119731,.668156,.188437,.675023,.051025,.661288,.202965,.542179,.202965,.341932,.269705,.542179,.269705,.341932,.202965,.141684,.269705,.141684,.33599,.341932,.33599,.542179,.33599,.141684,.227345,.684908,.215155,.613543,.266252,.694792,.267979,.618486,.337154,.618787,.338319,.695396,.055,.28126,.055,.141901,.101992,.141901,.101992,.28126,.148985,.141901,.148985,.28126,.055,.420619,.101992,.420619,.148985,.420619,.061353,.46108,.124048,.469196,.186743,.477311,.146104,.517772,.067707,.501541,.2245,.534003,.363687,.141901,.387878,.141901,.387878,.28126,.363687,.28126,.412069,.141901,.412069,.28126,.387878,.420619,.363687,.420619,.412069,.420619,.388091,.467353,.357647,.47264,.418535,.462066,.388304,.514086,.351607,.524661,.425,.503512,.312696,.420619,.312696,.28126,.261704,.420619,.261704,.28126,.312696,.141901,.261704,.141901,.205344,.420619,.205344,.28126,.205344,.141901,.321795,.532331,.317245,.476475,.291982,.54,.276843,.48031,.258241,.537002,.231793,.47881,.111276,.30409,.079413,.30409,.079413,.118859,.111276,.118859,.143139,.118859,.143139,.30409,.111276,.489321,.079413,.489321,.143139,.489321,.105219,.556418,.074707,.5431,.135731,.569736,.099161,.623515,.07,.596879,.128323,.650151,.36927,.118859,.409635,.118859,.409635,.30409,.36927,.30409,.45,.118859,.45,.30409,.409635,.489321,.36927,.489321,.45,.489321,.403795,.545044,.36238,.545679,.44521,.544409,.397956,.600767,.355491,.602037,.440421,.599498,.313031,.30409,.313031,.489321,.256793,.30409,.256793,.489321,.313031,.118859,.256793,.118859,.199966,.30409,.199966,.489321,.199966,.118859,.302765,.56267,.292499,.636018,.24315,.57966,.229507,.67,.18944,.574698,.178915,.660076,.174601,.342575,.123156,.342575,.12221,.232639,.173656,.232639,.226047,.342575,.225101,.232639,.175547,.452511,.124101,.452511,.226992,.452511,.173658,.540226,.126465,.530837,.220851,.549615,.171769,.627942,.128829,.609164,.21471,.64672,.271819,.342575,.270874,.232639,.316646,.232639,.317592,.342575,.272765,.452511,.318537,.452511,.266623,.549615,.312396,.549615,.260482,.64672,.306255,.64672,.356745,.232639,.357691,.342575,.396844,.232639,.39779,.342575,.358636,.452511,.398735,.452511,.356747,.540226,.401099,.530837,.354859,.627942,.403463,.609164,.181857,.385508,.092815,.385508,.087413,.282249,.176455,.282249,.270899,.385508,.265497,.282249,.187259,.488766,.098218,.488766,.276301,.488766,.191964,.569609,.111723,.562335,.272206,.576883,.196669,.650452,.125228,.635904,.26811,.665,.327527,.385508,.322125,.282249,.378754,.282249,.384156,.385508,.33293,.488766,.389558,.488766,.328834,.576883,.385463,.576883,.324739,.665,.381367,.665,.402969,.282249,.408371,.385508,.427185,.282249,.432587,.385508,.413774,.488766,.437989,.488766,.418479,.569609,.451495,.562335,.423184,.650452,.465,.635904,.069425,.326689,.069425,.152418,.106593,.152418,.106593,.326689,.143762,.152418,.143762,.326689,.069425,.50096,.106593,.50096,.143762,.50096,.067212,.551557,.125036,.559236,.18286,.566916,.14348,.617513,.065,.602154,.221959,.632872,.378255,.152418,.416627,.152418,.416627,.326689,.378255,.326689,.455,.152418,.455,.326689,.416627,.50096,.378255,.50096,.455,.50096,.394529,.560224,.33631,.567659,.452749,.552789,.372431,.619488,.294365,.634358,.450497,.604618,.320529,.50096,.320529,.326689,.262804,.50096,.262804,.326689,.320529,.152418,.262804,.152418,.203283,.50096,.203283,.326689,.203283,.152418,.278436,.652179,.299483,.576569,.262506,.67,.262655,.58548,.242233,.651436,.222758,.576198,.155094,.093205,.155094,.024698,.167268,.024698,.167268,.093205,.179442,.024698,.179442,.093205,.155094,.161712,.167268,.161712,.179442,.161712,.153201,.598789,.155403,.58084,.167893,.575545,.164542,.602859,.180383,.57025,.175883,.60693,.161191,.630174,.150999,.616738,.171384,.643609,.295496,.024698,.31211,.024698,.31211,.093205,.295496,.093205,.328724,.024698,.328724,.093205,.31211,.161712,.295496,.161712,.328724,.161712,.296336,.571949,.312668,.576664,.309317,.603979,.291836,.608629,.329001,.581379,.326799,.599329,.305966,.631294,.287336,.645309,.324597,.617279,.265326,.093205,.265326,.024698,.265326,.161712,.235155,.093205,.235155,.024698,.235155,.161712,.207299,.093205,.207299,.161712,.207299,.024698,.261355,.610114,.256425,.650305,.230875,.611598,.225513,.655302,.266286,.569922,.236237,.567895,.203379,.609264,.198448,.649455,.20831,.569072,.167581,.527074,.179913,.524268,.155248,.529881,.179442,.478285,.167268,.478604,.155094,.478922,.167268,.320158,.155094,.320317,.179442,.319999,.207299,.319883,.235155,.319768,.207299,.478055,.235155,.477824,.207804,.523564,.235696,.522859,.265326,.319653,.295496,.319538,.265326,.477594,.295496,.477363,.265806,.523758,.295916,.524656,.312389,.526893,.328862,.52913,.31211,.477122,.328724,.476881,.31211,.319417,.328724,.319297,.3703,.615982,.3703,.598571,.351546,.593435,.351546,.619931,.332792,.588299,.332792,.623879,.351546,.646426,.3703,.633394,.332792,.659458,.213609,.589948,.201654,.594521,.201654,.621017,.213609,.625527,.1897,.599094,.1897,.616506,.201654,.647512,.213609,.661107,.1897,.633917,.242782,.626967,.242782,.665953,.271955,.628407,.271955,.6708,.242782,.587981,.271955,.586015,.302373,.626143,.302373,.665129,.302373,.587157,.351546,.546418,.332792,.543696,.3703,.54914,.332792,.499092,.351546,.499401,.3703,.49971,.351546,.192013,.351546,.345707,.3703,.345861,.3703,.192013,.332792,.192013,.332792,.345552,.302373,.192013,.302373,.345441,.271955,.192013,.271955,.345329,.302373,.498869,.271955,.498645,.302373,.543013,.271955,.54233,.242782,.192013,.242782,.345217,.213609,.192013,.213609,.345105,.242782,.498422,.213609,.498198,.242782,.543201,.213609,.544073,.201654,.546243,.1897,.548412,.201654,.497964,.1897,.49773,.201654,.344988,.201654,.192013,.1897,.344871,.1897,.192013,.182318,.63844,.182915,.619501,.197547,.613914,.196638,.642734,.212179,.608328,.210959,.647028,.19573,.671554,.181721,.657378,.209739,.685729,.315086,.610121,.326682,.615095,.325774,.643915,.313865,.648822,.338279,.62007,.337682,.639009,.324865,.672735,.312645,.687523,.337085,.657948,.288108,.650388,.286771,.692794,.26235,.651954,.260896,.698066,.289445,.607982,.263804,.605843,.236654,.649491,.235317,.691898,.237991,.607085,.197462,.562772,.212052,.559811,.182873,.565734,.211924,.511295,.197377,.51163,.182831,.511966,.197377,.177275,.197377,.344453,.182831,.344621,.182831,.177275,.211924,.177275,.211924,.344285,.237717,.177275,.237717,.344163,.26351,.177275,.26351,.344042,.237717,.511052,.26351,.510808,.237854,.559068,.263657,.558326,.289184,.177275,.289184,.34392,.314858,.177275,.314858,.343799,.289184,.510565,.314858,.510322,.289314,.559273,.314972,.560221,.326607,.562581,.338242,.564941,.326531,.510067,.338204,.509813,.326531,.343671,.326531,.177275,.338204,.343544,.338204,.177275,.107957,.615324,.105,.597957,.144012,.592834,.148512,.619262,.183025,.587712,.189067,.623199,.153012,.645689,.110914,.63269,.19511,.658687,.381832,.589356,.395459,.593917,.399959,.620345,.387875,.624844,.409086,.598479,.412043,.615846,.404459,.646772,.393918,.660332,.415,.633212,.342029,.62628,.348651,.665166,.296183,.627716,.303383,.67,.335408,.587394,.288984,.585433,.242625,.625458,.249247,.664344,.236004,.586572,.144432,.545938,.183656,.543223,.105208,.548654,.184288,.498734,.144852,.499042,.105416,.49935,.144852,.192445,.144852,.345744,.105416,.345898,.105416,.192445,.184288,.192445,.184288,.34559,.237362,.192445,.237362,.345478,.290436,.192445,.290436,.345367,.237362,.498511,.290436,.498288,.236683,.542542,.28971,.541861,.336698,.192445,.336698,.345255,.38296,.192445,.38296,.345144,.336698,.498065,.38296,.497842,.336053,.54273,.382396,.543599,.395834,.545763,.409272,.547927,.396209,.497609,.409458,.497375,.396209,.345027,.396209,.192445,.409458,.34491,.409458,.192445,.233017,.082872,.233017,.0226,.224096,.0226,.224096,.082872,.215175,.0226,.215175,.082872,.233017,.143144,.224096,.143144,.215175,.143144,.235182,.527681,.232663,.511889,.223381,.507231,.227213,.531262,.214099,.502572,.219245,.534843,.231046,.555293,.2377,.543473,.224391,.567113,.11424,.0226,.098429,.0226,.098429,.082872,.11424,.082872,.082617,.0226,.082617,.082872,.098429,.143144,.11424,.143144,.082617,.143144,.11328,.504067,.09779,.508216,.101622,.532247,.118426,.536338,.0823,.512364,.084818,.528156,.105454,.556278,.123572,.568609,.087337,.543948,.140963,.082872,.140963,.0226,.140963,.143144,.167686,.082872,.167686,.0226,.167686,.143144,.19143,.082872,.19143,.143144,.19143,.0226,.145503,.537644,.151142,.573004,.172581,.53895,.178712,.5774,.139865,.502284,.166449,.5005,.195913,.536896,.201552,.572257,.190274,.501536,.223739,.464586,.214637,.462117,.23284,.467056,.215175,.421662,.224096,.421942,.233017,.422222,.224096,.282543,.233017,.282683,.215175,.282403,.19143,.282302,.167686,.2822,.19143,.42146,.167686,.421257,.190852,.461498,.167068,.460879,.140963,.282099,.11424,.281998,.140963,.421054,.11424,.420851,.140414,.461669,.11376,.462459,.098109,.464427,.082459,.466395,.098429,.420639,.082617,.420427,.098429,.281891,.082617,.281785,.375,.097355,.375,.03,.351116,.03,.351116,.097355,.327232,.03,.327232,.097355,.375,.16471,.351116,.16471,.327232,.16471,.375,.594438,.375,.57679,.351116,.571584,.351116,.59844,.327232,.566378,.327232,.602441,.351116,.625295,.375,.612086,.327232,.638504,.175449,.03,.160224,.03,.160224,.097355,.175449,.097355,.145,.03,.145,.097355,.160224,.16471,.175449,.16471,.145,.16471,.175449,.56805,.160224,.572685,.160224,.59954,.175449,.604112,.145,.577321,.145,.594968,.160224,.626396,.175449,.640175,.145,.612616,.212602,.097355,.212602,.03,.212602,.16471,.249755,.097355,.249755,.03,.249755,.16471,.288493,.097355,.288493,.16471,.288493,.03,.212602,.605572,.212602,.645088,.249755,.607031,.249755,.65,.212602,.566056,.249755,.564063,.288493,.604736,.288493,.644252,.288493,.565221,.351116,.523929,.327232,.521169,.375,.526688,.327232,.47596,.351116,.476273,.375,.476586,.351116,.320491,.375,.320648,.327232,.320335,.288493,.320222,.249755,.320108,.288493,.475733,.249755,.475507,.288493,.520477,.249755,.519785,.212602,.319995,.175449,.319882,.212602,.47528,.175449,.475054,.212602,.520668,.175449,.521552,.160224,.523751,.145,.52595,.160224,.474816,.145,.474579,.160224,.319763,.145,.319645,.130845,.107817,.130845,.037815,.144101,.037815,.144101,.107817,.157358,.037815,.157358,.107817,.130845,.17782,.144101,.17782,.157358,.17782,.129021,.624439,.131143,.606098,.144704,.600687,.141475,.628598,.158265,.595277,.15393,.632757,.138247,.656509,.1269,.64278,.149594,.670238,.278874,.037815,.295853,.037815,.295853,.107817,.278874,.107817,.312833,.037815,.312833,.107817,.295853,.17782,.278874,.17782,.312833,.17782,.279682,.597014,.296391,.601831,.293163,.629742,.275347,.634494,.3131,.606649,.310979,.624991,.289935,.657653,.271012,.671974,.308857,.643332,.247431,.107817,.247431,.037815,.247431,.17782,.215988,.107817,.215988,.037815,.215988,.17782,.186673,.107817,.186673,.17782,.186673,.037815,.243606,.636011,.238856,.67708,.211865,.637528,.206699,.682186,.248356,.594942,.21703,.59287,.182897,.635143,.178147,.676212,.187647,.594074,.144403,.551158,.157811,.54829,.130994,.554026,.157358,.501304,.144101,.501629,.130845,.501955,.144101,.339725,.130845,.339887,.157358,.339562,.186673,.339444,.215988,.339326,.186673,.501069,.215988,.500833,.18716,.547571,.216509,.546852,.247431,.339209,.278874,.339091,.247431,.500598,.278874,.500362,.247894,.54777,.279278,.548688,.296122,.550973,.312966,.553259,.295853,.500116,.312833,.499869,.295853,.338968,.312833,.338845,.040029,.051586,.095146,.05401,.097537,.154431,.04246,.152874,.150263,.056434,.152614,.155988,.284855,.154232,.281412,.054594,.31227,.054794,.316117,.154457,.253594,.154007,.250555,.054393,.203104,.154998,.200409,.055413,.332792,.12556,.302373,.12556,.332792,.059108,.302373,.059108,.271955,.12556,.271955,.059108,.242782,.059108,.213609,.059108,.213609,.12556,.242782,.12556,.3703,.059108,.351546,.059108,.351546,.12556,.3703,.12556,.201654,.059108,.201654,.12556,.1897,.059108,.1897,.12556,.314858,.032711,.326531,.032711,.326531,.104993,.314858,.104993,.338204,.032711,.338204,.104993,.289184,.032711,.289184,.104993,.26351,.032711,.26351,.104993,.38296,.059882,.396209,.059882,.396209,.126164,.38296,.126164,.409458,.059882,.409458,.126164,.211924,.104993,.237717,.104993,.211924,.032711,.237717,.032711,.055,.066735,.101992,.066735,.101992,.104318,.055,.104318,.148985,.066735,.148985,.104318,.205344,.104318,.205344,.066735,.261704,.104318,.261704,.066735,.079413,.018951,.111276,.018951,.111276,.068905,.079413,.068905,.143139,.018951,.143139,.068905,.36927,.018951,.409635,.018951,.409635,.068905,.36927,.068905,.45,.018951,.45,.068905,.313031,.018951,.313031,.068905,.256793,.018951,.256793,.068905,.199966,.068905,.199966,.018951,.069425,.058422,.106593,.058422,.106593,.10542,.069425,.10542,.143762,.058422,.143762,.10542,.105416,.059882,.144852,.059882,.144852,.126164,.105416,.126164,.184288,.059882,.184288,.126164,.399436,.050468,.403332,.151125,.486601,.046142,.490546,.147793,.203283,.10542,.203283,.058422,.262804,.10542,.262804,.058422,.182831,.032711,.197377,.032711,.197377,.104993,.182831,.104993,.336698,.059882,.336698,.126164,.290436,.059882,.290436,.126164,.237362,.126164,.237362,.059882,.312696,.066735,.363687,.066735,.363687,.104318,.312696,.104318,.202965,.033677,.136226,.033677,.136226,.087681,.202965,.087681,.269705,.033677,.269705,.087681,.402275,.087681,.33599,.087681,.402275,.033677,.33599,.033677,.085363,.033677,.085363,.087681,.0345,.033677,.0345,.087681,.469261,.033677,.435768,.033677,.435768,.087681,.469261,.087681,.378255,.058422,.416627,.058422,.416627,.10542,.378255,.10542,.455,.058422,.455,.10542,.387878,.066735,.387878,.104318,.412069,.066735,.412069,.104318,.116537,.039081,.167983,.039081,.170819,.13586,.119374,.13586,.219428,.039081,.222265,.13586,.2652,.039081,.268037,.13586,.310973,.039081,.313809,.13586,.055,.100448,.144042,.100448,.160248,.191349,.071207,.191349,.233083,.100448,.24929,.191349,.320529,.058422,.320529,.10542,.346341,.100448,.370556,.100448,.386763,.191349,.362547,.191349,.394772,.100448,.410978,.191349,.351072,.039081,.353908,.13586,.391171,.039081,.394008,.13586,.289712,.100448,.305919,.191349,.094969,.045115,.137685,.046994,.149908,.038644,.180223,.039977,.1804,.048872,.210537,.04131,.258126,.04729,.282041,.047446,.265697,.040188,.282669,.040298,.305955,.047601,.299641,.040408,.219263,.048081,.238117,.040749,.321283,.054154,.297708,.054154,.309773,.0492,.293043,.0492,.274134,.054154,.276313,.0492,.251525,.054154,.260268,.0492,.228916,.054154,.244223,.0492,.350351,.054154,.335817,.054154,.330403,.0492,.320088,.0492,.219651,.054154,.237648,.0492,.210386,.054154,.231073,.0492,.302413,.027322,.31146,.027322,.289968,.021934,.296389,.021934,.320507,.027322,.302809,.021934,.262619,.027322,.282516,.027322,.261727,.021934,.275848,.021934,.359692,.054941,.36996,.054941,.336424,.05,.343711,.05,.380228,.054941,.350998,.05,.222639,.027322,.242629,.027322,.233355,.021934,.247541,.021934,.089592,.063367,.126011,.063367,.124184,.06,.15003,.06,.16243,.063367,.175876,.06,.206109,.063367,.206873,.06,.249788,.063367,.237871,.06,.127078,.014476,.151771,.014476,.174742,.01,.192266,.01,.176465,.014476,.20979,.01,.351716,.014476,.382999,.014476,.334163,.01,.356363,.01,.414282,.014476,.378564,.01,.264547,.014476,.308131,.014476,.2723,.01,.303231,.01,.220506,.014476,.241045,.01,.115038,.054211,.143843,.054211,.160651,.05,.181093,.05,.172649,.054211,.201536,.05,.144595,.054941,.175158,.054941,.183775,.05,.205465,.05,.205722,.054941,.227155,.05,.373509,.044249,.347582,.038029,.441062,.040896,.395523,.03565,.218778,.054211,.234273,.05,.264907,.054211,.267009,.05,.200092,.027322,.211366,.027322,.217354,.021934,.225354,.021934,.287986,.054941,.323839,.054941,.285536,.05,.31098,.05,.246854,.054941,.256345,.05,.289306,.063367,.265917,.06,.328825,.063367,.293962,.06,.254837,.028839,.203114,.028839,.239969,.024,.203262,.024,.15139,.028839,.166555,.024,.357578,.028839,.306208,.028839,.312882,.024,.276425,.024,.111972,.028839,.138581,.024,.072553,.028839,.110606,.024,.409493,.028839,.383536,.028839,.349725,.024,.331303,.024,.354381,.054211,.38412,.054211,.330507,.05,.351612,.05,.413859,.054211,.372717,.05,.347573,.063367,.307267,.06,.366321,.063367,.320572,.06,.146278,.03618,.186149,.03618,.17602,.03328,.204315,.03328,.226019,.03618,.23261,.03328,.261493,.03618,.257785,.03328,.296966,.03618,.282959,.03328,.092441,.097724,.161448,.097724,.129881,.095,.178854,.095,.230455,.097724,.227827,.095,.309644,.054211,.298758,.05,.318229,.097724,.336996,.097724,.290118,.095,.303437,.095,.355763,.097724,.316755,.095,.328043,.03618,.305014,.03328,.35912,.03618,.327069,.03328,.274342,.097724,.258973,.095,.146667,.239253,.146667,.34086,.08,.34086,.08,.239253,.213333,.239253,.213333,.34086,.146667,.442466,.08,.442466,.213333,.442466,.28,.239253,.28,.34086,.346667,.34086,.346667,.239253,.28,.442466,.346667,.442466,.413333,.34086,.413333,.239253,.48,.34086,.48,.239253,.413333,.442466,.48,.442466,.382495,.240294,.379942,.345618,.463529,.345618,.466082,.240294,.298909,.240294,.296355,.345618,.377389,.450941,.460976,.450941,.293802,.450941,.23064,.240294,.228087,.345618,.159819,.345618,.162372,.240294,.225534,.450941,.157266,.450941,.106868,.345618,.109421,.240294,.053918,.345618,.056471,.240294,.104315,.450941,.051365,.450941,.394753,.160366,.399531,.22877,.42095,.22877,.416171,.160366,.373334,.160366,.378112,.22877,.404309,.297173,.425728,.297173,.382891,.297173,.323246,.160366,.328024,.22877,.273157,.160366,.277936,.22877,.332802,.297173,.282714,.297173,.199178,.22877,.1944,.160366,.12042,.22877,.115642,.160366,.203956,.297173,.125198,.297173,.328958,.158584,.33065,.227598,.354223,.227598,.35253,.158584,.305385,.158584,.307078,.227598,.332343,.296612,.355915,.296612,.308771,.296612,.271657,.158584,.273349,.227598,.237928,.158584,.239621,.227598,.275042,.296612,.241313,.296612,.195735,.227598,.194042,.158584,.151849,.227598,.150157,.158584,.197428,.296612,.153542,.296612,.160532,.157174,.163042,.226671,.087691,.226671,.085181,.157174,.235884,.157174,.238394,.226671,.165552,.296169,.090201,.296169,.240904,.296169,.296174,.157174,.298684,.226671,.356465,.157174,.358975,.226671,.301195,.296169,.361485,.296169,.404205,.226671,.401695,.157174,.449435,.226671,.446925,.157174,.406715,.296169,.451945,.296169,.436534,.661989,.430267,.644705,.394067,.644705,.403319,.665892,.4428,.679274,.412571,.68708,.469748,.658086,.466468,.644705,.473028,.671467,.278446,.647246,.240669,.647246,.247472,.668623,.285248,.668623,.254275,.69,.292051,.69,.323025,.668623,.316222,.647246,.329827,.69,.195844,.647246,.199826,.664685,.151018,.647246,.15218,.660747,.203808,.682124,.153342,.674248,.337968,.644705,.281869,.644705,.291121,.665892,.34722,.665892,.300373,.68708,.356472,.68708,.350931,.664685,.346949,.647246,.354914,.682124,.378838,.660747,.377676,.647246,.38,.674248,.205872,.644705,.212138,.661989,.129875,.644705,.133155,.658086,.218404,.679274,.136435,.671467,.372289,.649257,.429361,.649257,.43932,.666818,.390482,.670783,.486434,.649257,.488157,.662852,.449278,.684379,.408676,.69231,.48988,.676448,.169217,.666818,.159259,.649257,.237237,.649257,.255431,.670783,.179175,.684379,.273625,.69231,.083003,.662852,.08128,.649257,.084726,.676448,.322957,.670783,.304763,.649257,.34115,.69231,.342373,.037074,.318801,.037074,.323879,.097829,.347451,.097829,.295229,.037074,.300307,.097829,.220823,.034813,.281114,.034813,.288644,.095994,.228353,.095994,.341404,.034813,.348935,.095994,.386634,.034813,.394165,.095994,.431865,.034813,.439395,.095994,.2615,.037074,.266578,.097829,.227771,.037074,.232849,.097829,.314227,.054857,.245958,.054857,.238299,.147576,.306568,.147576,.17769,.054857,.170031,.147576,.344664,.039931,.294576,.039931,.308911,.100149,.358999,.100149,.244488,.039931,.258823,.100149,.4814,.054857,.397813,.054857,.390154,.147576,.473741,.147576,.12474,.054857,.117081,.147576,.071789,.054857,.06413,.147576,.387502,.039931,.366083,.039931,.380418,.100149,.401837,.100149,.16573,.039931,.180065,.100149,.086972,.039931,.101307,.100149,.183886,.037074,.188964,.097829,.14,.037074,.145078,.097829,.07012,.034813,.145471,.034813,.153002,.095994,.07765,.095994,.213333,.060361,.28,.060361,.28,.149807,.213333,.149807,.346667,.060361,.346667,.149807,.08,.060361,.146667,.060361,.146667,.149807,.08,.149807,.413333,.060361,.413333,.149807,.48,.060361,.48,.149807,.318036,.033537,.299767,.033537,.293698,.03,.280733,.03,.281499,.033537,.267769,.03,.228054,.031252,.27478,.031252,.235286,.02769,.268446,.02769,.321505,.031252,.301606,.02769,.356558,.031252,.326482,.02769,.391612,.031252,.351359,.02769,.255359,.033537,.249218,.03,.229219,.033537,.230667,.03,.307634,.052079,.254726,.052079,.301042,.0493,.263494,.0493,.201818,.052079,.225947,.0493,.324388,.036426,.285569,.036426,.304111,.03292,.276563,.03292,.246751,.036426,.249014,.03292,.437194,.052079,.372414,.052079,.392987,.0493,.347015,.0493,.160782,.052079,.196824,.0493,.119745,.052079,.167702,.0493,.357587,.036426,.340987,.036426,.327672,.03292,.315892,.03292,.185714,.036426,.205697,.03292,.124676,.036426,.162381,.03292,.195208,.033537,.20653,.03,.161196,.033537,.182393,.03,.11126,.031252,.169657,.031252,.152399,.02769,.193843,.02769,.227763,.05768,.27943,.05768,.242194,.055,.27886,.055,.331097,.05768,.315527,.055,.12443,.05768,.176097,.05768,.16886,.055,.205527,.055,.382763,.05768,.352194,.055,.43443,.05768,.38886,.055,.413333,.473286,.346667,.473286,.48,.473286,.413333,.504106,.346667,.504106,.48,.504106,.414233,.430039,.441303,.430039,.387163,.430039,.424158,.562904,.456879,.562904,.391436,.562904,.314468,.564716,.31162,.430664,.276343,.430664,.277645,.564716,.241067,.430664,.240821,.564716,.196822,.430664,.152577,.430664,.196217,.564716,.151612,.564716,.376374,.482889,.458258,.482889,.29449,.482889,.37536,.514837,.455541,.514837,.295178,.514837,.334777,.430039,.336752,.562904,.282391,.430039,.282068,.562904,.337927,.430664,.364235,.430664,.343511,.564716,.372554,.564716,.28,.473286,.213333,.473286,.28,.504106,.213333,.504106,.226222,.482889,.157954,.482889,.22691,.514837,.158642,.514837,.204688,.430039,.126986,.430039,.205421,.562904,.128774,.562904,.415373,.431159,.365616,.431159,.465131,.431159,.424031,.566149,.369746,.566149,.478316,.566149,.103301,.482889,.048648,.482889,.102286,.514837,.045931,.514837,.146667,.473286,.08,.473286,.146667,.504106,.08,.504106,.163146,.431159,.08679,.431159,.239502,.431159,.16074,.566149,.08338,.566149,.2381,.566149,.302559,.431159,.303923,.566149,.278163,.618253,.277904,.591484,.240772,.591551,.240722,.618386,.315603,.61812,.315036,.591418,.315912,.632683,.278304,.63275,.240696,.632816,.151227,.618245,.151123,.632746,.195909,.632781,.195975,.618316,.196096,.591516,.15142,.591481,.346667,.548441,.413333,.548784,.413333,.577455,.346667,.58672,.48,.549127,.48,.568189,.413333,.606125,.346667,.625,.48,.58725,.48,.526617,.413333,.526445,.346667,.526274,.429185,.630165,.428102,.615626,.393127,.615476,.393597,.63009,.464773,.63024,.463077,.615776,.42613,.589265,.459978,.58934,.392282,.58919,.371369,.588372,.373876,.560882,.296161,.560482,.292837,.595591,.289513,.6307,.368862,.615861,.449901,.581152,.451591,.561282,.448211,.601022,.374618,.53786,.453566,.53806,.29567,.53766,.337143,.589071,.337534,.615238,.282005,.588953,.281941,.615001,.337751,.629971,.281905,.629853,.346332,.632514,.376751,.632346,.375827,.617445,.345715,.617782,.344613,.591249,.37419,.59108,.28,.548098,.28,.526102,.213333,.547754,.213333,.52593,.213333,.586377,.28,.586549,.213333,.625,.28,.625,.227398,.537484,.159125,.537308,.227885,.560131,.159609,.559779,.224565,.595415,.156293,.59524,.152976,.6307,.221245,.6307,.129466,.614348,.12967,.629526,.205788,.629689,.205704,.614674,.205562,.588789,.12912,.588626,.427417,.618752,.428389,.634005,.371817,.633829,.371344,.618401,.483489,.619103,.484961,.63418,.480902,.592626,.425724,.592451,.370545,.592275,.100884,.559477,.098336,.587669,.042159,.559174,.04038,.580098,.095788,.615861,.0386,.601022,.101585,.537157,.044045,.537006,.081677,.63354,.082074,.617823,.159818,.617899,.159538,.633578,.237562,.617975,.2374,.633616,.237831,.592062,.160279,.592024,.082727,.591986,.304453,.618188,.304188,.592168,.304608,.633723,.146667,.547411,.146667,.525759,.08,.547068,.08,.525587,.146667,.606125,.146667,.576768,.08,.58725,.08,.567159,.46824,.259154,.406082,.257284,.406086,.360665,.468234,.364489,.343925,.255414,.343938,.35684,.406089,.464045,.468229,.469824,.34395,.458267,.190608,.357381,.190597,.255678,.131168,.257851,.131169,.361793,.071738,.260025,.071729,.366205,.19062,.459083,.13117,.465734,.07172,.472385,.228952,.458879,.228941,.357245,.267285,.458675,.267273,.35711,.228929,.255612,.267261,.255545,.305605,.356975,.305618,.458471,.305593,.25548,.422039,.664648,.418041,.607652,.344028,.59912,.344078,.66092,.5,.668377,.492054,.616185,.414043,.550657,.343977,.537321,.484108,.563993,.410066,.507351,.343964,.497794,.476169,.516908,.228965,.498245,.267299,.497988,.190632,.498501,.228979,.537611,.267312,.537302,.190645,.537919,.229062,.607171,.267429,.613651,.190695,.60069,.229145,.67673,.267545,.69,.190745,.663461,.305631,.497891,.305645,.537311,.305812,.67546,.305728,.606386,.123249,.551848,.119311,.610737,.055854,.565777,.047927,.620784,.115373,.669626,.04,.675791,.127209,.508791,.063787,.519081,.048391,.366642,.05263,.260535,.10318,.24736,.107197,.357144,.15373,.234185,.166003,.347646,.044152,.472749,.111214,.466928,.178276,.461107,.424144,.363926,.345328,.359481,.344186,.257033,.422963,.259223,.50296,.36837,.501741,.261412,.34647,.46193,.425324,.468629,.504179,.475329,.304421,.461724,.303282,.359345,.262373,.461518,.261235,.359209,.302142,.256966,.260097,.2569,.213619,.353427,.220325,.461313,.206914,.245542,.113985,.665754,.113767,.609964,.200409,.599746,.22037,.658751,.007601,.672757,.027126,.620183,.11355,.554174,.180448,.540741,.046652,.567608,.112382,.510551,.179362,.500924,.045402,.520178,.305516,.501378,.263492,.50112,.347539,.501637,.30661,.541032,.264612,.540721,.348609,.541343,.303824,.603317,.269367,.598812,.338281,.607821,.301038,.665601,.274122,.656902,.327953,.6743,.221427,.501022,.22253,.540731,.247246,.657827,.234888,.599279,.427597,.555374,.423886,.616318,.506584,.569405,.509492,.624815,.420176,.677263,.512399,.680226,.426461,.512002,.505382,.522367,.066014,.370546,.106665,.266344,.150714,.24971,.127297,.359371,.194763,.233075,.188579,.348195,.025364,.474748,.103879,.469032,.182395,.463315,.418466,.367879,.339908,.363514,.340349,.262905,.418906,.265055,.497023,.372244,.497463,.267205,.339468,.464123,.418026,.470702,.496584,.477282,.3002,.463921,.30064,.36338,.261371,.363246,.260932,.463719,.30108,.26284,.261811,.262774,.224975,.355721,.221663,.463517,.228287,.247924,.114215,.670113,.108601,.612412,.193815,.60529,.20608,.669061,.02235,.671165,.023387,.619535,.102987,.554712,.18155,.541519,.024424,.567904,.103433,.511872,.181973,.502417,.024894,.521326,.299775,.502863,.260496,.50261,.339053,.503117,.29935,.541806,.260061,.5415,.338638,.542111,.289647,.603755,.256642,.60594,.322653,.60157,.279945,.665704,.253222,.670379,.306668,.66103,.221235,.502513,.220806,.54151,.229651,.66972,.225229,.605615,.417161,.55589,.408623,.612827,.495684,.569669,.494593,.624084,.400084,.669765,.493501,.6785,.417594,.513296,.496134,.523475,.39177,.25954,.389441,.362765,.46844,.366584,.470819,.261407,.312721,.257672,.310441,.358946,.387111,.46599,.466061,.47176,.308161,.46022,.160025,.359486,.164737,.257936,.111514,.260106,.10668,.363892,.053335,.368297,.05829,.262277,.155313,.461036,.101847,.467677,.048381,.474317,.194064,.460832,.197563,.359351,.232814,.460628,.235102,.359216,.201063,.25787,.237389,.257804,.272771,.359081,.270487,.460424,.275055,.257738,.37253,.666291,.377477,.609381,.294162,.600862,.284534,.662569,.460525,.670014,.460792,.617901,.382424,.552471,.303791,.539156,.461058,.565787,.384768,.509231,.305976,.499688,.46356,.518774,.1924,.500138,.230561,.499882,.154238,.500394,.190736,.539445,.228309,.539137,.153163,.539753,.181462,.603304,.219499,.604179,.143425,.60243,.172188,.667163,.21069,.669221,.133687,.665106,.268269,.499785,.26605,.539146,.247612,.665895,.256831,.60252,.086411,.553661,.078633,.612461,.019659,.567568,.01384,.622493,.070854,.671262,.008021,.677418,.094129,.510669,.03402,.520943,.435378,.253461,.440603,.350455,.504126,.354044,.498819,.255216,.371936,.251706,.377081,.346867,.445829,.44745,.509433,.452871,.382225,.442028,.20359,.347374,.204567,.251954,.124883,.253994,.123872,.351514,.0452,.256033,.044154,.355654,.202614,.442794,.122861,.449034,.043108,.455274,.239227,.442603,.238582,.347247,.27584,.442411,.273573,.34712,.237936,.251892,.271306,.25183,.325327,.346994,.329033,.442219,.321621,.251768,.383247,.66804,.457499,.653599,.450015,.591155,.373705,.592119,.53175,.639158,.526325,.590191,.442531,.528711,.364163,.516199,.5209,.541223,.44418,.48808,.373194,.479113,.515166,.497047,.278077,.479296,.239888,.479536,.2017,.479777,.240549,.51647,.280313,.516181,.200786,.51676,.246203,.590834,.2843,.588088,.208106,.59358,.251857,.665198,.288287,.659996,.215427,.6704,.325635,.479205,.322238,.51619,.335767,.664018,.329003,.590104,.120918,.529828,.121378,.594043,.041049,.542896,.034649,.594506,.121838,.658257,.02825,.646115,.121889,.489431,.042079,.499085,.165906,.155194,.167074,.052451,.113909,.052575,.112711,.15634,.060745,.052697,.059517,.157487,.301191,.161081,.301302,.059322,.340571,.059324,.34046,.161115,.261922,.161047,.262033,.059321,.189129,.146196,.225526,.153622,.183495,.059318,.222764,.059319,.201929,.15516,.202795,.05245,.237953,.155126,.238516,.052448,.31328,.155058,.275616,.155092,.313839,.052445,.276178,.052446,.041169,.04988,.09989,.049802,.101535,.148581,.0469,.155208,.158611,.049723,.156171,.141954,.419111,.059446,.419008,.162251,.49765,.059568,.497556,.163387,.471979,.0526,.392909,.052522,.39234,.156031,.471399,.157004,.204807,.155414,.205047,.058873,.125395,.058989,.125139,.156491,.045743,.059104,.045472,.157569,.237775,.155382,.237613,.058872,.270743,.15535,.270179,.05887,.207995,.147634,.209076,.049725,.259819,.153313,.25954,.049727,.228924,.152747,.228918,.049882,.190587,.049884,.190592,.152781,.267255,.152713,.26725,.04988,.343919,.152645,.305587,.152679,.343913,.049877,.305581,.049879,.468264,.050033,.406088,.049955,.406085,.153619,.468252,.154594,.131179,.050007,.131173,.153929,.07177,.05013,.071754,.155078,.496302,.059013,.432849,.05894,.434113,.156201,.497561,.157115,.369395,.058867,.370666,.155287,.343905,.153382,.343623,.04973,.422368,.049854,.422666,.154538,.501113,.049978,.501427,.155695,.301862,.153347,.301582,.049729,.320704,.155318,.319787,.058868,.060891,.044687,.122193,.052002,.136453,.150856,.083778,.155516,.204126,.047519,.162923,.047614,.241178,.042586,.211937,.042654,.121721,.047709,.182697,.042721,.271672,.054435,.302105,.054436,.28131,.049548,.302908,.049549,.332539,.054437,.324506,.04955,.210805,.054432,.241238,.054433,.238115,.049547,.259713,.049548,.259494,.047516,.23181,.047517,.280471,.042584,.260824,.042585,.317869,.047514,.288681,.047515,.321898,.042582,.301185,.042583,.094943,.04487,.142769,.04481,.148718,.03986,.185647,.039817,.190594,.044749,.222576,.039774,.393407,.054532,.367703,.049617,.454275,.054626,.4109,.049684,.440427,.047634,.379148,.047574,.408875,.042668,.365387,.042625,.21264,.054238,.15091,.054328,.220234,.049603,.176425,.049667,.08918,.054417,.132617,.04973,.263118,.054236,.237879,.054237,.256056,.049601,.238145,.049603,.227387,.04475,.245699,.039775,.264181,.044751,.268822,.039776,.267788,.044941,.238081,.044942,.268326,.040002,.247243,.040003,.208374,.044944,.226161,.040004,.327201,.044939,.297495,.04494,.31049,.04,.289408,.040001,.423574,.045059,.375387,.044999,.378883,.040086,.344687,.040043,.162333,.045039,.193486,.040071,.116291,.045135,.160812,.040139,.438363,.054347,.389187,.05429,.380424,.04968,.345525,.04964,.34001,.054233,.310625,.0496,.329345,.044754,.390373,.04485,.315067,.039778,.358377,.039846,.4514,.044946,.401687,.039914,.296763,.044753,.291945,.039777,.301564,.054235,.283341,.049601,.115787,.043094,.163296,.048763,.170682,.0415,.204398,.045523,.444811,.244017,.447707,.353163,.504408,.354477,.501478,.24327,.388144,.244765,.391006,.351849,.450604,.462309,.507339,.465685,.393868,.458933,.214878,.35052,.218261,.243223,.128415,.24069,.124946,.35035,.038568,.238156,.035013,.350179,.211495,.457818,.121477,.460009,.031459,.462201,.247455,.457465,.249159,.350209,.283415,.457112,.283441,.349897,.250864,.242953,.283466,.242682,.337224,.350873,.338642,.458022,.335805,.243724,.470244,.679652,.459129,.617275,.388488,.610379,.403088,.678516,.5374,.680788,.52977,.624172,.448014,.554899,.373889,.542242,.52214,.567556,.449309,.508604,.383879,.500588,.51474,.516621,.285836,.499094,.248206,.499454,.210575,.499814,.248957,.541443,.288257,.541077,.209656,.54181,.268574,.618808,.316565,.627288,.220582,.610328,.288191,.696173,.344873,.7135,.231508,.678846,.334857,.499841,.331073,.541659,.373981,.696008,.352527,.618834,.119406,.551704,.12323,.615949,.029157,.561599,.025879,.621571,.127054,.680194,.0226,.681544,.120442,.505857,.030308,.5119,.113657,.25635,.112013,.364909,.044292,.366216,.045952,.255607,.181361,.257094,.179733,.363602,.110369,.473468,.042632,.476825,.178105,.47011,.347808,.362281,.343519,.25556,.413469,.253041,.417867,.36211,.483419,.250521,.487927,.36194,.352097,.469001,.422266,.47118,.492435,.47336,.315629,.468649,.312888,.36197,.279161,.468298,.277968,.36166,.310146,.255292,.276774,.255023,.228851,.362631,.228633,.469204,.229068,.256058,.194404,.688511,.115927,.689641,.117316,.6276,.19639,.620741,.037451,.690771,.038241,.63446,.118704,.56556,.198377,.552971,.039031,.578149,.114536,.519514,.188241,.51154,.040831,.527487,.279171,.510055,.317108,.510413,.355046,.51077,.318587,.552176,.27918,.551812,.357995,.55254,.315923,.62327,.274798,.62585,.357047,.62069,.313258,.694364,.270417,.699889,.3561,.688839,.233706,.510798,.238779,.552391,.23241,.6942,.235594,.623296,.428562,.562382,.433943,.626281,.499129,.572223,.510839,.631873,.439324,.690181,.522549,.691522,.425414,.516781,.495782,.522792,.110334,.27182,.108951,.373623,.037074,.374849,.03847,.271123,.182199,.272517,.180827,.372397,.107567,.475426,.035678,.478575,.179456,.472277,.350803,.371158,.346201,.271079,.413011,.268716,.41773,.370999,.479821,.266353,.484658,.370839,.355404,.471237,.422449,.473282,.489494,.475326,.317988,.470908,.314939,.370867,.280572,.470579,.279074,.370577,.311889,.270827,.277576,.270575,.229951,.371487,.230014,.471428,.229887,.271546,.11924,.678148,.118349,.619968,.201222,.613535,.202188,.677088,.036293,.679207,.035475,.6264,.117457,.561788,.200257,.549982,.034657,.573593,.112512,.518607,.189856,.51113,.035168,.526084,.281159,.509737,.320031,.510072,.358903,.510408,.322074,.549237,.281746,.548895,.362402,.549579,.323377,.621397,.282951,.629307,.363804,.613487,.324681,.693557,.284156,.709719,.365206,.677396,.235508,.510433,.241002,.549439,.243172,.693404,.242087,.621421,.429893,.558808,.437584,.618731,.497384,.568037,.511364,.623974,.445274,.678654,.525343,.679912,.426171,.516045,.493439,.521681,.426241,.250155,.427617,.361028,.499096,.362363,.497708,.249396,.354774,.250914,.356138,.359693,.428993,.4719,.500485,.47533,.357502,.468471,.187102,.358343,.191679,.249348,.125238,.246775,.120545,.358169,.058797,.244201,.053988,.357996,.182526,.467338,.115852,.469564,.049178,.47179,.219735,.466979,.222768,.358026,.256944,.46662,.258434,.35771,.225801,.249074,.259924,.248799,.307286,.358701,.307223,.467546,.307349,.249857,.334896,.691527,.417385,.692681,.418271,.629318,.335856,.622313,.499874,.693835,.500687,.636324,.419158,.565955,.336815,.553098,.5015,.578812,.424076,.518928,.347159,.510784,.500992,.527071,.256361,.509267,.217704,.509633,.179047,.509998,.215672,.552286,.255777,.551914,.175568,.552658,.21189,.626889,.249606,.631517,.174173,.62226,.208107,.701491,.243435,.71112,.172779,.691862,.30176,.510026,.296296,.552506,.289165,.701324,.292731,.626915,.10845,.56271,.102045,.617009,.041331,.572761,.029916,.611758,.09564,.671309,.0185,.650755,.112151,.516137,.045255,.522276,.254409,.13499,.257954,.027026,.226183,.027244,.222222,.135233,.286596,.134746,.289725,.026809,.390565,.136893,.33858,.135819,.392985,.02902,.341355,.027915,.31,.170127,.308111,.069426,.341652,.069629,.343926,.170354,.276073,.169899,.27457,.069224,.355564,.141336,.308492,.140245,.356355,.031757,.309634,.030633,.261419,.139155,.262913,.02951,.043681,.037285,.111434,.039898,.112546,.148124,.044817,.146446,.179187,.04251,.180274,.149802,.307979,.147909,.305812,.040527,.338415,.040743,.340967,.148152,.274992,.147667,.273209,.040311,.227633,.148734,.226198,.04141,.036797,.066387,.108703,.068837,.109519,.170328,.037634,.168755,.180609,.071286,.181404,.171902,.228739,.1709,.22759,.070255,.22768,.139402,.229558,.029731,.196203,.029952,.193941,.13965,.506482,.023767,.449733,.026394,.447272,.135206,.50398,.133519,.136437,.022556,.132426,.131623,.046691,.017869,.04263,.128013,.499372,.026421,.427863,.029089,.427052,.139622,.49854,.137908,.408384,.065257,.410698,.166987,.475117,.060885,.477469,.163619,.408285,.036081,.410877,.144561,.478155,.031419,.480787,.14097,.129839,.025191,.127539,.135983,.063476,.020429,.061137,.132315,.27716,.019113,.252538,.019281,.264596,.011417,.247122,.011537,.227915,.01945,.229648,.011656,.357187,.020827,.317174,.01997,.321389,.012633,.292993,.012025,.274269,.062045,.300263,.062202,.273967,.054867,.292415,.054979,.326257,.06236,.310862,.05509,.334148,.023434,.297939,.022563,.311941,.01511,.286244,.014493,.261731,.021692,.260548,.013875,.093689,.030312,.146197,.032336,.143695,.023338,.18096,.024774,.198705,.034361,.218224,.026211,.271573,.032656,.29684,.032824,.269936,.025001,.287867,.02512,.322107,.032991,.305799,.025239,.235139,.033508,.24408,.025606,.089995,.059847,.145722,.061745,.143192,.053307,.18274,.054654,.201449,.063644,.222288,.056002,.237859,.062845,.248128,.055434,.23588,.021864,.242203,.013996,.21003,.022035,.223857,.014118,.445147,.016756,.401167,.018791,.383813,.009744,.352601,.011189,.158363,.015817,.180288,.009078,.088809,.012184,.130928,.0065,.444986,.019298,.389567,.021366,.3906,.012176,.35127,.013643,.377975,.058971,.347565,.052686,.429692,.055583,.384268,.050281,.376256,.029378,.344227,.022675,.430405,.025765,.382656,.020111,.158598,.018345,.187357,.011499,.107167,.014655,.150857,.00888,.319309,.055235,.379725,.055235,.402544,.05832,.324589,.05832,.314029,.05215,.356905,.05215,.44014,.055235,.4805,.05832,.39978,.05215,.220622,.055235,.269966,.055235,.26092,.05832,.197251,.05832,.243993,.05215,.279011,.05215,.098485,.05832,.144078,.055235,.18235,.055235,.147868,.05832,.189672,.05215,.216833,.05215,.395401,.111315,.317446,.111315,.473357,.111315,.388258,.16431,.310303,.16431,.466214,.16431,.253777,.111315,.190107,.111315,.246634,.16431,.182964,.16431,.140724,.111315,.091341,.111315,.084198,.16431,.133581,.16431,.383496,.284709,.386449,.437633,.306858,.437633,.305541,.284709,.461452,.284709,.466039,.437633,.389401,.590557,.308176,.590557,.470626,.590557,.389188,.605769,.309384,.609204,.468992,.602334,.388975,.62098,.310592,.62785,.467357,.61411,.17188,.437633,.178202,.284709,.241871,.284709,.239369,.437633,.165557,.590557,.236867,.590557,.238075,.609204,.239282,.62785,.166765,.609204,.167973,.62785,.116491,.437633,.061103,.437633,.079436,.284709,.128819,.284709,.042769,.590557,.104163,.590557,.10395,.605769,.103736,.62098,.041134,.602334,.0395,.61411,.385877,.224509,.307922,.224509,.463833,.224509,.244253,.224509,.180583,.224509,.1312,.224509,.081817,.224509,.769898,.508716,.771035,.507587,.773731,.510765,.77266,.511957,.772173,.506457,.774803,.509574,.776427,.513944,.775422,.515198,.777433,.512691,.757961,.465702,.759331,.465606,.765183,.486596,.76393,.487209,.7607,.46551,.766436,.485983,.772789,.425335,.773827,.425932,.766579,.445769,.765375,.445518,.774864,.426528,.767782,.446019,.78773,.416708,.80267,.408082,.803587,.407352,.788707,.416642,.804505,.406622,.789684,.416575,.835199,.403082,.819393,.405217,.819036,.405106,.835401,.402129,.834997,.404035,.819751,.405329,.864729,.405124,.849964,.404103,.85042,.403196,.865439,.404262,.864019,.405986,.849508,.405011,.8798,.409752,.872265,.407438,.873069,.406667,.880699,.409072,.878901,.410432,.87146,.408209,.890386,.414974,.885093,.412363,.88603,.411796,.891362,.414519,.88941,.415429,.884155,.41293,.889646,.421604,.888613,.422016,.8895,.418495,.890504,.418061,.88758,.422428,.888495,.418929,.887848,.433199,.886774,.433452,.887694,.427734,.888747,.427402,.885701,.433705,.886641,.428066,.881435,.458738,.880416,.458531,.883595,.445992,.884641,.445969,.879397,.458324,.882549,.446015,.874042,.484005,.873205,.483366,.87681,.470949,.877739,.471371,.872367,.482727,.875882,.470526,.839818,.52045,.856512,.501908,.857123,.502882,.840204,.52176,.839433,.519141,.8559,.500934,.800965,.52598,.820392,.523215,.820367,.52459,.800529,.52742,.8014,.52454,.820417,.521841,.788696,.519962,.787976,.521309,.789417,.518616,.776293,.502534,.778695,.505426,.780413,.498612,.782587,.501278,.781097,.508317,.784761,.503944,.765592,.465248,.770942,.483891,.770483,.464987,.775448,.4818,.778585,.428717,.772088,.446983,.782306,.430905,.776394,.447946,.805384,.411927,.791984,.420322,.806263,.417232,.794284,.424069,.834206,.407525,.819795,.409726,.833415,.411014,.819839,.414123,.861271,.409246,.847739,.408385,.858523,.412506,.845969,.41176,.875356,.413151,.868314,.411199,.871812,.415871,.865168,.414189,.88547,.417477,.880413,.415314,.88153,.419524,.876671,.417697,.883518,.424193,.884494,.420835,.879455,.425959,.880493,.422741,.881568,.434787,.882543,.42949,.877435,.43587,.878445,.430914,.875554,.457649,.878561,.446218,.871711,.456973,.874573,.446421,.869249,.480466,.872401,.469057,.86613,.478204,.868921,.467589,.838075,.514457,.853662,.497462,.836718,.509774,.851424,.493989,.80302,.519443,.820548,.51695,.80464,.514346,.820679,.51206,.792059,.51388,.7947,.509145,.786689,.492796,.788528,.495102,.792964,.48698,.794468,.488927,.790367,.497409,.795973,.490874,.777949,.464747,.782319,.478772,.785415,.464507,.78919,.475743,.788099,.434424,.783024,.449585,.793893,.437942,.789654,.451225,.808495,.423113,.798297,.428768,.810728,.428994,.80231,.433468,.831974,.416913,.820235,.420013,.830533,.422812,.82063,.425903,.853655,.417991,.842814,.417452,.848787,.423476,.83966,.423144,.869189,.421883,.861422,.419937,.857676,.425685,.866566,.427895,.874048,.423709,.870096,.437952,.871553,.432439,.862757,.440035,.864661,.433965,.873011,.426927,.865104,.456135,.8676,.447044,.858497,.455297,.860627,.447666,.860794,.474958,.862949,.465547,.855457,.471712,.856977,.463505,.834646,.502398,.84772,.488678,.832575,.495023,.844016,.483368,.807169,.506484,.820908,.504441,.809698,.498622,.821137,.496822,.798768,.501946,.802836,.494748,.799568,.486162,.803162,.48145,.798063,.484215,.794289,.472979,.80643,.490036,.814887,.468228,.809025,.474839,.815081,.485831,.823731,.481625,.821538,.461095,.832777,.472231,.841823,.462838,.828189,.453963,.845752,.456054,.849681,.449271,.834527,.448604,.840864,.443245,.854181,.443567,.85868,.437862,.847734,.439467,.854604,.435689,.860585,.431792,.851695,.429583,.843697,.431306,.835698,.433029,.827578,.437253,.819458,.441478,.811924,.447281,.80439,.453085,.799339,.463032,.714333,.528904,.710724,.530164,.710676,.526111,.71429,.524784,.707116,.531423,.707061,.527439,.710627,.522059,.714248,.520663,.707006,.523456,.69006,.571846,.688716,.571191,.69972,.550677,.702196,.550375,.687372,.570537,.697244,.55098,.661851,.589964,.661007,.589156,.674861,.580173,.675956,.580905,.660162,.588347,.673767,.579442,.642102,.594225,.622353,.598486,.621075,.598982,.641041,.594069,.619796,.599479,.639979,.593913,.586337,.596622,.603706,.597802,.604062,.598052,.585772,.597619,.586903,.595626,.60335,.597552,.559977,.589788,.573157,.593205,.572347,.594147,.558922,.590675,.561032,.588902,.573968,.592264,.5475,.584253,.553739,.587021,.552555,.587857,.546188,.585039,.548813,.583467,.554923,.586184,.536437,.580273,.537989,.57959,.542745,.581922,.541313,.582656,.53954,.578908,.544176,.581187,.543801,.571796,.540895,.575693,.539429,.576307,.54242,.572341,.545183,.571251,.542361,.57508,.55043,.560122,.547116,.565959,.545819,.566393,.549219,.560444,.551641,.559799,.548412,.565525,.564114,.535496,.565012,.535665,.557721,.547893,.556666,.54797,.565911,.535834,.558776,.547817,.580896,.510734,.581449,.511353,.573231,.523509,.572505,.523115,.582002,.511971,.573956,.523902,.635902,.476638,.63558,.478082,.608515,.494717,.608399,.493686,.635259,.479527,.608631,.495749,.693529,.497684,.664555,.487883,.66552,.486725,.695139,.496812,.691918,.498557,.663589,.489042,.702078,.509872,.704693,.508737,.699462,.511006,.700118,.532014,.700048,.528293,.693121,.532606,.693036,.529146,.699978,.524571,.692951,.525687,.682545,.568198,.691332,.550106,.677717,.565859,.685419,.549232,.657071,.585434,.669808,.576816,.653979,.582521,.665848,.57419,.620732,.594121,.638901,.589778,.621668,.588764,.637824,.585643,.596898,.588095,.610815,.588108,.599894,.583563,.614281,.584664,.56484,.58572,.582869,.583907,.568647,.582538,.58877,.579551,.553476,.580628,.559158,.583174,.558139,.577789,.563393,.580164,.544945,.576391,.54921,.57851,.550349,.573874,.554244,.575832,.550069,.569273,.547507,.572832,.554956,.567294,.552653,.570584,.555987,.558656,.553028,.563964,.560332,.557512,.557644,.562403,.569201,.536489,.562594,.547572,.572492,.537145,.566412,.547329,.584039,.514238,.57662,.525364,.586075,.516504,.579284,.526825,.634,.484682,.609019,.49946,.63274,.489837,.609408,.503171,.686249,.501937,.660124,.493309,.68058,.505316,.65666,.497577,.693114,.513254,.686766,.515502,.682433,.534264,.682355,.531281,.671744,.535922,.671674,.533415,.682277,.528298,.671603,.530908,.670093,.562208,.676263,.548236,.662469,.558557,.667107,.54724,.64893,.577859,.659512,.570034,.643881,.573198,.653175,.565877,.621319,.582703,.635125,.580281,.620971,.576643,.632426,.57492,.6014,.57885,.61186,.581776,.597907,.572136,.609439,.576889,.574873,.577569,.590637,.575209,.581099,.5726,.590503,.571868,.56268,.571855,.568776,.574712,.57416,.569261,.567221,.565921,.558785,.569898,.567438,.555859,.564263,.561234,.574543,.554207,.570882,.560064,.561088,.566608,.578042,.538398,.57274,.547129,.583592,.539651,.579067,.546929,.589556,.520276,.583799,.529337,.593037,.524048,.588314,.531849,.630539,.497953,.610048,.509115,.628339,.506069,.610688,.515059,.67169,.510874,.651114,.504414,.662799,.516431,.645569,.51125,.676983,.519586,.667201,.52367,.663973,.532902,.656342,.534895,.664043,.535409,.659406,.546726,.659571,.525663,.633355,.538789,.644849,.536842,.645209,.524046,.630847,.522429,.622505,.543507,.616596,.529283,.602346,.536136,.611655,.548224,.59579,.541689,.589234,.547242,.603266,.551529,.594877,.554834,.583279,.552024,.577323,.556805,.58749,.557119,.580104,.559403,.573662,.562662,.580602,.566002,.588497,.565993,.596392,.565985,.606352,.564209,.616313,.562434,.627465,.559214,.638618,.555994,.649012,.55136,.773519,.511155,.776281,.514396,.773725,.517336,.770937,.514108,.771169,.520276,.768354,.517062,.768149,.51088,.770757,.507914,.76554,.513847,.761787,.525169,.759598,.521504,.750841,.525946,.752406,.530061,.757408,.517839,.749276,.521832,.751147,.530752,.74954,.526305,.748239,.526663,.749889,.531443,.747933,.521858,.74659,.521883,.724679,.522823,.724484,.518411,.726869,.519661,.728279,.523923,.729253,.520911,.731878,.525023,.724874,.527235,.729689,.528185,.734503,.529135,.735746,.525562,.734527,.520939,.739613,.526101,.739801,.520968,.736964,.530184,.739424,.531233,.743195,.521425,.743926,.526382,.744657,.531338,.687472,.436242,.691569,.435449,.69213,.437893,.687923,.438713,.68702,.433771,.691008,.433005,.695666,.434656,.696337,.437072,.694996,.43224,.636607,.41571,.637118,.413773,.662295,.425007,.662265,.427211,.637628,.411836,.662324,.422803,.617015,.383014,.617817,.381763,.627467,.397768,.626811,.399362,.618619,.380512,.628123,.396174,.610745,.337017,.614281,.35939,.61351,.360305,.610006,.337596,.611485,.336438,.615052,.358475,.611201,.295396,.611991,.29574,.611368,.316378,.610604,.316496,.612781,.296084,.612133,.316261,.609791,.26184,.610805,.263103,.611398,.279422,.610496,.278618,.611819,.264367,.6123,.280225,.605726,.248135,.608266,.255619,.607093,.254219,.604395,.246599,.607058,.249671,.609438,.257019,.603089,.242606,.601633,.241005,.59887,.235411,.600451,.237077,.604545,.244207,.602032,.238743,.607298,.241476,.608674,.243004,.604562,.240041,.603084,.238443,.610049,.244533,.606041,.241638,.618183,.247621,.619307,.249002,.613991,.246003,.61274,.244548,.620432,.250383,.615241,.247458,.641438,.259162,.630373,.254082,.629512,.252805,.64084,.257989,.642035,.260334,.631233,.255358,.662804,.269313,.652121,.264237,.651799,.263137,.662758,.268284,.66285,.270342,.652442,.265338,.710351,.327848,.686577,.298581,.687066,.298039,.711375,.327793,.709328,.327904,.686089,.299123,.717279,.413311,.716144,.411473,.713248,.369661,.714327,.370552,.71501,.409635,.712169,.368769,.705905,.423065,.706808,.425192,.705003,.420937,.685744,.428264,.689397,.427573,.684468,.422757,.687785,.42214,.693049,.426881,.691102,.421523,.639431,.404883,.662588,.416574,.641234,.397931,.662851,.410344,.621262,.375818,.630347,.390351,.623906,.371125,.63257,.384528,.614026,.334239,.617644,.355029,.616567,.33204,.620237,.351583,.615474,.29718,.61475,.315709,.618167,.298276,.617367,.315158,.615077,.268657,.615276,.282918,.618336,.272947,.618252,.285612,.611592,.255177,.613335,.261917,.616126,.260683,.617231,.266815,.607439,.244836,.609515,.250006,.612846,.250928,.614486,.255806,.614738,.250137,.611088,.247486,.619426,.255742,.616136,.253335,.624164,.25545,.619451,.252794,.627896,.260517,.623661,.25813,.643584,.264566,.633874,.260008,.645134,.268799,.636515,.264658,.662332,.273961,.652958,.269264,.661815,.277581,.653474,.27319,.705088,.327986,.68371,.300974,.700848,.328069,.681332,.302825,.710764,.403031,.707926,.365509,.706519,.396427,.703684,.362248,.701907,.414956,.698811,.408975,.681632,.409372,.684377,.408889,.678797,.395986,.680969,.395637,.687122,.408406,.683142,.395289,.643811,.389144,.662722,.399258,.646387,.380358,.662592,.388172,.628149,.366008,.63598,.377576,.632392,.360892,.63939,.370625,.621412,.33153,.624781,.348769,.626257,.33102,.629325,.345956,.62311,.302842,.622261,.317186,.628053,.307407,.627155,.319214,.62238,.278916,.622745,.290879,.626423,.284884,.627238,.296146,.621377,.265373,.621878,.272144,.626628,.270062,.626526,.277473,.63162,.268253,.627324,.265578,.635345,.275989,.630986,.273026,.623027,.262902,.646694,.278368,.639157,.273311,.648254,.287937,.6418,.281963,.660452,.286001,.653573,.282185,.659089,.294422,.653672,.291179,.693465,.33034,.676958,.308171,.686081,.332612,.672585,.313517,.699005,.388186,.696235,.359263,.691491,.379944,.688786,.356278,.693064,.398296,.687316,.387616,.618756,.259354,.678578,.386131,.674014,.376973,.676405,.386479,.6602,.378665,.682752,.378458,.659919,.347579,.666966,.362276,.677876,.359277,.673,.340095,.662771,.323498,.652956,.33348,.652541,.306902,.645993,.319381,.648248,.301107,.643956,.295313,.642825,.311035,.639657,.302688,.640126,.288953,.636296,.282594,.638452,.295944,.637246,.289199,.631835,.287041,.631411,.280034,.632845,.296045,.633855,.305048,.63499,.315124,.636125,.325201,.64114,.339718,.646156,.354235,.653178,.36645,.740631,.534111,.745238,.533921,.741838,.536988,.74582,.536505,.749846,.533732,.749803,.536022,.745143,.549204,.749747,.54895,.748449,.56142,.753674,.561395,.754351,.548696,.758899,.56137,.75785,.574599,.752843,.575108,.757237,.588797,.762027,.587802,.762858,.574089,.766817,.586808,.77955,.660259,.778398,.658771,.774596,.659758,.774523,.661576,.77445,.663394,.780701,.661747,.784577,.658941,.782201,.657783,.786953,.6601,.689712,.445002,.693367,.445677,.713856,.47854,.709689,.478309,.697021,.446352,.718024,.47877,.734346,.511402,.729665,.511616,.739028,.511189,.743365,.517341,.7397,.517485,.736205,.513544,.74014,.512798,.736036,.517629,.732271,.51429,.735276,.512473,.730968,.512953,.739584,.511993,.770328,.508315,.77309,.511556,.775851,.514797,.766316,.510618,.762304,.512921,.764483,.510356,.759069,.511996,.77341,.51765,.773095,.517965,.770968,.520504,.770768,.520732,.755778,.517447,.749252,.521974,.754148,.517056,.749227,.522116,.761741,.525379,.761694,.525588,.752513,.530253,.75262,.530444,.747947,.522334,.746643,.522694,.747961,.52281,.746696,.523505,.751261,.53094,.751376,.531128,.75001,.531627,.750131,.531811,.719366,.519537,.719485,.523803,.719603,.52807,.726975,.528788,.734347,.529507,.724261,.529392,.73419,.529879,.72431,.520299,.729255,.521061,.721752,.520936,.729256,.52121,.739266,.531597,.736806,.530552,.736648,.53092,.739107,.531961,.734096,.52121,.738937,.521359,.733664,.52148,.738072,.52175,.74997,.533911,.749931,.536195,.750095,.534089,.750059,.536367,.740546,.534344,.740461,.534577,.741827,.53709,.741816,.537193,.7544,.5488,.75887,.561406,.75445,.548904,.75884,.561441,.745124,.549275,.745104,.549347,.748421,.56146,.748393,.5615,.762819,.574092,.766768,.586779,.762779,.574095,.766718,.586749,.752804,.575114,.752765,.575119,.757188,.588767,.757138,.588737,.786941,.660411,.784567,.659253,.78693,.660722,.784558,.659564,.782194,.658095,.782186,.658407,.780689,.662058,.774437,.663705,.780677,.662369,.774425,.664016,.774588,.66007,.774512,.661887,.77458,.660382,.774502,.662199,.729935,.512184,.709881,.478403,.710074,.478497,.730205,.512752,.689828,.444622,.689944,.444241,.71841,.477529,.739297,.511751,.697524,.443307,.739565,.512313,.718797,.476287,.698028,.440262,.735738,.518104,.735439,.518579,.732539,.514849,.732807,.515409,.743525,.518025,.740407,.513355,.743685,.518709,.740674,.513913,.731237,.513517,.731506,.514081,.739852,.512553,.74012,.513113,.765917,.624277,.770213,.623286,.774509,.622295,.774481,.622437,.774452,.622578,.765888,.624418,.765859,.62456,.723007,.525164,.731723,.525545,.735156,.5262,.738589,.526855,.739562,.518644,.742384,.522627,.73674,.514661,.734885,.512533,.735813,.513597,.748413,.527658,.743501,.527256,.744619,.531886,.745278,.534333,.745937,.53678,.749777,.549125,.753616,.561471,.757772,.574607,.761928,.587743,.770156,.623569,.778383,.659394,.77953,.660882,.714435,.477392,.693986,.442252,.693058,.440072,.697183,.438667,.688933,.441477,.697073,.441343,.696622,.43938,.696964,.44402,.696907,.441687,.689099,.442454,.68837,.440285,.689265,.44343,.688817,.441858,.692862,.441773,.693114,.443725,.692496,.439833,.764918,.516364,.768789,.51416,.757921,.521322,.750924,.52628,.749668,.526969,.754336,.153813,.752927,.154426,.751419,.151847,.752785,.151182,.751517,.155038,.750052,.152512,.749911,.149268,.751235,.14855,.748586,.149986,.751536,.184566,.750248,.184451,.751587,.169439,.752936,.169189,.74896,.184337,.750239,.169688,.724886,.209838,.72411,.209277,.737179,.196864,.738211,.197202,.723335,.208717,.736148,.196527,.708634,.214038,.692382,.218238,.691356,.218681,.707733,.213979,.69033,.219124,.706832,.213921,.661589,.218285,.676473,.218483,.676813,.218672,.661245,.219106,.661933,.217463,.676132,.218294,.635988,.214203,.648789,.216244,.648268,.217059,.635292,.215012,.636684,.213393,.649309,.215428,.624787,.210673,.630388,.212438,.629672,.213226,.624053,.21144,.625522,.209907,.631103,.21165,.618191,.207738,.621489,.209206,.620792,.209942,.617531,.208444,.618851,.207032,.622186,.208469,.619597,.20142,.620366,.200849,.619279,.204293,.618564,.204932,.621136,.200277,.619993,.203655,.623185,.191352,.624016,.190998,.622191,.195923,.621391,.196386,.624847,.190644,.622992,.195461,.635216,.17208,.635951,.172168,.629983,.181583,.629201,.181716,.636685,.172256,.630766,.18145,.649625,.155273,.650094,.155685,.643022,.163927,.642421,.163677,.650563,.156097,.643624,.164177,.69219,.13433,.671142,.145007,.670924,.144311,.692224,.133349,.692156,.13531,.671359,.145704,.730709,.137161,.711449,.135745,.711882,.134775,.731539,.136201,.729878,.138122,.711017,.136716,.74031,.143214,.741387,.142375,.739232,.144054,.746579,.157295,.745258,.154961,.741641,.159552,.740464,.157411,.743936,.152628,.739287,.15527,.744449,.183959,.745514,.170627,.739938,.183581,.74079,.171567,.720605,.206725,.732527,.195342,.717876,.204733,.728907,.194157,.690903,.214974,.705754,.21085,.691477,.210825,.704676,.207779,.663297,.214542,.6771,.214758,.664661,.211621,.678069,.211223,.639526,.210546,.651412,.212544,.642369,.2077,.653515,.20966,.628674,.207191,.6341,.208868,.631827,.204475,.637098,.206087,.621899,.204477,.625287,.205834,.624948,.201922,.628387,.203198,.62445,.198264,.623175,.201371,.627764,.196251,.626356,.199087,.628258,.189448,.626354,.193856,.631669,.188252,.629716,.192252,.639583,.17265,.633921,.181049,.642482,.173044,.637075,.180648,.652395,.157617,.645989,.165134,.654226,.159137,.648354,.166091,.692058,.138879,.672226,.148248,.691961,.142448,.673093,.150792,.726942,.141617,.7095,.140248,.724006,.145112,.707983,.14378,.735439,.147122,.731646,.150191,.734311,.163076,.733337,.161238,.726981,.166601,.726211,.165065,.732363,.1594,.72544,.16353,.733188,.183014,.73375,.173045,.726438,.182447,.72671,.174524,.713726,.201646,.723457,.19233,.709577,.198559,.718007,.190503,.691125,.206289,.702425,.203968,.690772,.201754,.700175,.200156,.667369,.207116,.679247,.206702,.670076,.202611,.680424,.202182,.647801,.203528,.657585,.205322,.653233,.199357,.661654,.200984,.635221,.19945,.641511,.201489,.645923,.196891,.638614,.194426,.631781,.198174,.638329,.186779,.635759,.191059,.64499,.185307,.641802,.189866,.633189,.195339,.647899,.173957,.643114,.180368,.653317,.174869,.649153,.180088,.657886,.161762,.652892,.16786,.661545,.164388,.657431,.169629,.691787,.148114,.674836,.154938,.691613,.15378,.676579,.159084,.719504,.150575,.705645,.149345,.715003,.156038,.703308,.154909,.725934,.154988,.720221,.159784,.720726,.166383,.716012,.169237,.721497,.167919,.721225,.175842,.715507,.162638,.700327,.175719,.708169,.172478,.705738,.163693,.69597,.164749,.69117,.178628,.683874,.168856,.671779,.172962,.682013,.181537,.665739,.176687,.659699,.180411,.674047,.183745,.666081,.185954,.653847,.183834,.647994,.187257,.65854,.18758,.650998,.189206,.644806,.191816,.652115,.194281,.660097,.194282,.668079,.194282,.677236,.192964,.686393,.191645,.695672,.189392,.704952,.187139,.713088,.18149,.800779,.150156,.804639,.150345,.803223,.15351,.799333,.153376,.8085,.150533,.807114,.153643,.801808,.156675,.797888,.156596,.805728,.156753,.83938,.125423,.84041,.126353,.822524,.138349,.82008,.13779,.841439,.127283,.824969,.138908,.872917,.121942,.873421,.122834,.856915,.124594,.856149,.123683,.873924,.123725,.857681,.125504,.893392,.126183,.913866,.130423,.915276,.130545,.894348,.126689,.916686,.130667,.895305,.127196,.947665,.14539,.93147,.137968,.93123,.13768,.948593,.144936,.946737,.145844,.931711,.138256,.970747,.161849,.959206,.15362,.960354,.153321,.972115,.161706,.969379,.161993,.958058,.153919,.980967,.17192,.975857,.166885,.977332,.166838,.982549,.171969,.979385,.171872,.974382,.166932,.990399,.180268,.988626,.18005,.984797,.175985,.986474,.176119,.986853,.179833,.983119,.175852,.980069,.183206,.984348,.181628,.986015,.18187,.981631,.183473,.978507,.182939,.98268,.181386,.969292,.188916,.974681,.186061,.97612,.18638,.970609,.189287,.967974,.188545,.973241,.185742,.946953,.2015,.946118,.20089,.957705,.194903,.958781,.195393,.945283,.200281,.956629,.194413,.921718,.213497,.921385,.212702,.933751,.206796,.934335,.207498,.921051,.211906,.933167,.206094,.855902,.215911,.856738,.214938,.889061,.21382,.88881,.214704,.857574,.213966,.889313,.212936,.80911,.18097,.832924,.197954,.831588,.198518,.807275,.181126,.810945,.180814,.83426,.19739,.805459,.168822,.802582,.168861,.808336,.168784,.8153,.152263,.81402,.155166,.822099,.153993,.820927,.156688,.812741,.158068,.819754,.159383,.845144,.13063,.830222,.141447,.848849,.133976,.835474,.143985,.875777,.126932,.86046,.128781,.87763,.130138,.863239,.132057,.913741,.13402,.894759,.130476,.910796,.137373,.894213,.133756,.943371,.147481,.928556,.140751,.940004,.149118,.9254,.143245,.964452,.162499,.953911,.15499,.959524,.163006,.949764,.156062,.973738,.171697,.969095,.167098,.968091,.171523,.963808,.167264,.980602,.179088,.97717,.175393,.974351,.178344,.971221,.174933,.97295,.181987,.976776,.180538,.967393,.181034,.970872,.179689,.963247,.18719,.968098,.184588,.95852,.185834,.962956,.183434,.942246,.198044,.952746,.192617,.939208,.195807,.948864,.190821,.919825,.209007,.931035,.203526,.918599,.206108,.928904,.200957,.860656,.2105,.890241,.209754,.863739,.207034,.891169,.206571,.817537,.180103,.839097,.195302,.824128,.179393,.843933,.193214,.815139,.169086,.821941,.169388,.832833,.156342,.831825,.158667,.843566,.158691,.842724,.160645,.830818,.160991,.841882,.162599,.854728,.139277,.84378,.14781,.860607,.144578,.852086,.151635,.880678,.135251,.867703,.137264,.883726,.140363,.872167,.142471,.90882,.141725,.894749,.138488,.906844,.146078,.895285,.143221,.934544,.15171,.921682,.146718,.929084,.154303,.917964,.15019,.951575,.163751,.943059,.157731,.943626,.164496,.936355,.159399,.961424,.173715,.956499,.168733,.949191,.170202,.954756,.175907,.964554,.177125,.950892,.183541,.955983,.181006,.943265,.181247,.949011,.178577,.961074,.178471,.934178,.19208,.942535,.18781,.929148,.188353,.936207,.1848,.916498,.201358,.925338,.196719,.914397,.196608,.921773,.19248,.868778,.201576,.892638,.201467,.873818,.196118,.894108,.196363,.834574,.178143,.851676,.18986,.84502,.176893,.859419,.186505,.832696,.169567,.843451,.169746,.849828,.163615,.857775,.16463,.85067,.161661,.859191,.154604,.851397,.170761,.880887,.169075,.869331,.166853,.864375,.176679,.877353,.182596,.892994,.169562,.893551,.182963,.909749,.183329,.905101,.17005,.918077,.18167,.926404,.180011,.914381,.17086,.92366,.17167,.933943,.178982,.941483,.177953,.93168,.173165,.9397,.17466,.947228,.175284,.941663,.169578,.934017,.166282,.926372,.162986,.916172,.160525,.905973,.158064,.89414,.156391,.882307,.154719,.870749,.154662,.752467,.152613,.750917,.149981,.754364,.148541,.755943,.151168,.75781,.147101,.759419,.149724,.757522,.153796,.754017,.155245,.761027,.152347,.766228,.143425,.767,.146463,.774581,.143202,.774645,.13975,.767772,.1495,.774517,.146653,.776119,.139641,.776469,.1432,.778356,.143198,.777594,.139531,.776818,.146759,.779119,.146864,.798833,.15346,.797387,.156688,.795428,.155091,.795573,.151617,.793468,.153493,.792314,.149774,.800278,.150231,.795719,.148143,.791159,.146054,.789243,.148061,.789317,.151578,.786173,.146347,.785165,.149662,.78917,.144544,.787181,.143033,.782142,.148263,.782265,.144773,.782387,.141282,.794373,.230075,.790466,.22936,.791012,.227465,.795026,.228195,.793719,.231956,.789921,.231256,.78656,.228645,.786999,.226735,.786122,.230556,.831806,.261258,.830531,.262459,.812452,.246267,.813416,.244726,.829256,.26366,.811488,.247808,.834599,.291655,.833368,.292228,.831949,.277344,.833203,.276456,.832136,.292802,.830696,.278231,.81783,.330411,.825599,.31132,.826588,.311072,.818576,.330489,.817083,.330333,.82461,.311568,.795505,.362282,.795182,.361493,.806506,.345952,.807041,.346386,.794859,.360704,.805971,.345519,.778712,.389078,.778572,.387606,.786877,.37455,.787108,.37568,.778433,.386135,.786646,.37342,.775477,.400792,.777025,.394199,.777259,.395809,.775806,.40254,.775148,.399044,.776791,.39259,.775065,.405898,.775475,.407739,.775144,.412938,.774652,.411004,.774654,.404058,.77416,.409071,.771337,.404468,.770961,.402714,.772807,.406859,.773241,.408703,.770585,.400959,.772372,.405015,.765811,.39452,.76558,.392977,.76827,.397845,.768574,.399494,.765348,.391434,.767966,.396196,.75382,.37377,.7597,.383374,.759767,.384718,.753723,.374916,.753917,.372625,.759632,.382029,.743395,.354135,.748608,.363953,.74833,.364907,.742937,.354898,.743854,.353372,.748885,.362999,.735513,.293258,.739454,.323696,.738858,.323874,.734779,.292851,.736247,.293665,.74005,.323518,.762528,.238906,.762646,.240506,.74908,.266882,.748654,.265879,.762764,.242107,.749505,.267886,.774603,.234576,.774763,.232821,.774443,.236331,.792542,.236253,.789067,.235605,.791364,.24055,.788214,.239954,.785593,.234957,.785063,.239359,.824823,.268038,.808683,.252145,.82039,.272416,.805877,.256483,.827997,.295037,.82641,.281538,.823857,.297273,.822124,.284844,.814485,.330139,.821241,.312588,.811886,.329946,.817872,.313609,.793801,.357981,.804143,.34406,.792743,.355258,.802315,.342602,.778317,.380996,.786059,.369489,.7782,.375858,.785472,.365558,.774256,.392789,.776286,.386893,.773364,.386533,.775782,.381196,.772733,.402101,.773495,.397445,.771307,.395131,.772335,.390832,.769549,.394632,.771141,.398366,.768514,.388306,.76991,.391718,.764891,.385878,.76722,.390255,.764435,.380321,.766474,.384314,.754936,.368582,.759914,.37723,.755955,.364539,.760195,.37243,.746208,.350799,.750572,.359691,.748562,.348225,.752259,.356382,.739506,.295357,.742857,.323078,.742764,.29705,.745663,.322638,.763479,.247983,.751493,.27167,.764195,.253859,.75348,.275454,.774536,.24147,.774629,.246609,.789127,.251345,.786539,.250836,.78689,.26214,.784865,.261718,.783952,.250328,.78284,.261297,.814213,.277697,.80167,.264521,.808035,.282978,.797463,.272559,.817707,.29935,.81596,.288523,.811556,.301427,.809796,.292203,.807682,.328056,.812694,.313703,.803477,.326166,.807517,.313797,.791054,.3495,.799368,.338778,.789364,.343742,.796421,.334954,.778973,.368348,.785013,.358924,.779745,.360838,.784555,.35229,.771968,.380006,.775471,.374177,.770573,.373479,.775159,.367158,.766076,.371956,.76781,.376424,.767717,.36359,.769145,.368534,.769543,.380892,.759311,.356896,.762694,.364426,.762667,.349253,.765192,.356421,.753546,.343,.756429,.349948,.758531,.337775,.760599,.343514,.749066,.298604,.751306,.320802,.755367,.300158,.756949,.318966,.766697,.261718,.757881,.280161,.769198,.269577,.762282,.284867,.775324,.256023,.776019,.265437,.770939,.385862,.78309,.269242,.78334,.277187,.785115,.269664,.795688,.280083,.776269,.273382,.783374,.299906,.783357,.288546,.77282,.286707,.76937,.300032,.769905,.315631,.782862,.312296,.77044,.331231,.782349,.324687,.770489,.338142,.770538,.345052,.78038,.332769,.77841,.340851,.770209,.351854,.769881,.358656,.775227,.347286,.772044,.353721,.775895,.35728,.77252,.362907,.779891,.349788,.783887,.342297,.7884,.333862,.792913,.325427,.795189,.313047,.797465,.300666,.796576,.290375,.787146,.140576,.78283,.139234,.787111,.13812,.783273,.137185,.778515,.137891,.779436,.136251,.789043,.128155,.784714,.126857,.790975,.11819,.786155,.11653,.780386,.12556,.781336,.11487,.788287,.10539,.793113,.106624,.795251,.095059,.790419,.094251,.783462,.104156,.785587,.093443,.799765,.036989,.800141,.038466,.804047,.038966,.804934,.037642,.805822,.036317,.799388,.035512,.794595,.036337,.796235,.037966,.792954,.034708,.796305,.223297,.793248,.221659,.789342,.190147,.793175,.191609,.790191,.22002,.785509,.188684,.785436,.158634,.790044,.15992,.780828,.157349,.779745,.151354,.783294,.152392,.784446,.156521,.780372,.155844,.786842,.15343,.788519,.157198,.784941,.157578,.789282,.158559,.7806,.156596,.754176,.154529,.752626,.151897,.751076,.149265,.757648,.153258,.761119,.151988,.757773,.152721,.76121,.151628,.754493,.14801,.754621,.147479,.757909,.146754,.758008,.146408,.767705,.149317,.774292,.146647,.767638,.149134,.774066,.14664,.765968,.143252,.765709,.143079,.774028,.13975,.773411,.13975,.776182,.146645,.778073,.146643,.775547,.146531,.777027,.146422,.775494,.139641,.774869,.139641,.776961,.139532,.776327,.139533,.797638,.156642,.799083,.153418,.800529,.150194,.795715,.148094,.790901,.145995,.795711,.148046,.790643,.145935,.795429,.155058,.793221,.153473,.79543,.155025,.792973,.153454,.786922,.14298,.788911,.144487,.788652,.144431,.786662,.142927,.789089,.151733,.784958,.149993,.788862,.151889,.78475,.150325,.777876,.137895,.778791,.136258,.777237,.137899,.778146,.136265,.786889,.140559,.786632,.140541,.786857,.138137,.786602,.138155,.779931,.1256,.781071,.114942,.779477,.12564,.780807,.115015,.788784,.128198,.788525,.128241,.790711,.118258,.790447,.118327,.783191,.104256,.785312,.09357,.782921,.104356,.785036,.093697,.792843,.106723,.792573,.106821,.794975,.095187,.794699,.095314,.792711,.034596,.794352,.036223,.792467,.034484,.79411,.036109,.795994,.03785,.795752,.037735,.799144,.035401,.805578,.036206,.798901,.035289,.805334,.036094,.803805,.038851,.804692,.037529,.803563,.038737,.804449,.037415,.789376,.159609,.792547,.191487,.79192,.191366,.788708,.159298,.795718,.223365,.795132,.223433,.785071,.188516,.780159,.157042,.789984,.21999,.77949,.156736,.784634,.188348,.789778,.219959,.786404,.153443,.785966,.153456,.78785,.156893,.787181,.156588,.778888,.151092,.779702,.155541,.77803,.15083,.779033,.155239,.788613,.158251,.787944,.157943,.77993,.156292,.779261,.155987,.799649,.067013,.79528,.066359,.790911,.065704,.790653,.06571,.790394,.065716,.79939,.067019,.799131,.067025,.795571,.151535,.791808,.149694,.788757,.14816,.785706,.146626,.781998,.152143,.780889,.148373,.783107,.155914,.784099,.158017,.783603,.156965,.776677,.142977,.781192,.144802,.781495,.14123,.781935,.13922,.782374,.13721,.784001,.126941,.785627,.116671,.787747,.105588,.789868,.094506,.794763,.066371,.799658,.038236,.799279,.036762,.788277,.189857,.792455,.221696,.791734,.224581,.788388,.223347,.795079,.225814,.788891,.222523,.787797,.225056,.789393,.221699,.788595,.223378,.795532,.225168,.795346,.22697,.795985,.224522,.795665,.225746,.79213,.224562,.792689,.22311,.791571,.226013,.759609,.149018,.756197,.1501,.766674,.146106,.773739,.143195,.775208,.143086]],influencesPerVertex:2,skinWeights:[],skinIndices:[],vertices:[1.95007,.681836,60.0479,2.34694,.080507,60.1131,3.86239,1.92727,60.1608,3.45094,2.57047,60.126,1.62884,1.15707,59.9995,3.12016,3.07436,60.101,.542767,-.704105,60.132,.916105,-1.27628,60.2311,.237804,-.249036,60.0584,1.4378,1.4176,59.9792,.051297,.005879,60.0273,2.92747,3.34215,60.0926,1.34711,1.52476,59.9758,-.039855,.11379,60.022,2.83727,3.44715,60.0936,4.42279,4.56742,60.6764,4.80785,3.86585,60.7818,5.61325,5.56926,61.7491,5.34476,6.39487,61.535,4.11363,5.11348,60.6015,5.13168,7.04407,61.3814,3.93377,5.3967,60.5774,5.01048,7.39298,61.3281,3.8465,5.50244,60.5819,4.94175,7.52768,61.3326,6.77418,8.73222,62.2604,6.78046,7.88275,62.4573,8.52967,9.17556,63.3516,8.83025,10.2708,63.1744,6.76428,6.84386,62.6902,7.88522,7.95843,63.2866,6.78089,9.23113,62.1844,6.75691,9.4436,62.184,9.00593,10.9703,63.0815,9.04244,11.29,63.0732,2.77433,3.50483,60.0984,1.28736,1.58346,59.9783,2.59798,3.62912,60.1209,1.11537,1.72316,59.9964,-.098617,.172028,60.0254,-.274221,.318441,60.0519,.719239,2.0388,60.0403,-.685031,.656665,60.1165,2.19988,3.89965,60.1735,.186164,2.46272,60.0998,-1.23966,1.11296,60.204,1.66655,4.26026,60.2443,4.84738,7.57208,61.3602,3.77499,5.55574,60.5981,4.57026,7.59134,61.4896,3.57196,5.64752,60.672,3.1247,5.83639,60.8448,3.99298,7.6254,61.7924,2.52922,6.0857,61.0771,3.23589,7.67213,62.1995,8.84833,11.3041,63.0983,6.61882,9.47422,62.2135,8.25687,11.0318,63.2238,6.20333,9.36436,62.3555,5.39592,9.1437,62.6805,7.1607,10.4916,63.4663,4.35717,8.85844,63.0832,5.76522,9.7538,63.5197,-.402619,-.864747,60.0181,-.106835,-1.30825,60.0457,-.553774,-1.01032,59.894,-.270085,-1.42915,59.8415,.244546,-1.84509,60.097,.002665,-1.79977,59.8857,-.678282,-.504028,60.0047,-.586933,-.61217,60.0071,-.829151,-.649906,59.9266,-.737774,-.758081,59.9233,-.736773,-.446102,60.0052,-.914536,-.297388,60.0117,-.887603,-.592025,59.9214,-1.06568,-.442982,59.8876,-1.87108,.499659,60.0704,-1.32954,.046873,60.0303,-1.83196,.233549,59.8626,-1.45766,-.112968,59.8265,-.147772,2.09411,60.0479,.531706,2.33372,60.1131,-.599266,4.51004,60.1608,-1.3229,4.26641,60.126,-.686603,1.8974,59.9995,-1.89184,4.06736,60.101,.814498,.356306,60.132,1.45999,.580134,60.2311,.299169,.170493,60.0584,-.985614,1.77506,59.9792,.006706,.051196,60.0273,-2.19829,3.94518,60.0926,-1.11152,1.71298,59.9758,-.120052,-.011143,60.022,-2.322,3.88306,60.0936,-1.62503,6.43913,60.7818,-2.73375,7.87834,61.7491,-3.51993,7.88145,61.535,-2.38893,6.24322,60.6764,-4.14237,7.87898,61.3814,-2.98618,6.08126,60.6015,-3.30146,5.97768,60.5774,-4.48593,7.86523,61.3281,-3.42474,5.91893,60.5819,-4.62979,7.83391,61.3326,-5.57917,9.53454,62.2604,-4.92949,9.19583,62.4573,-6.49328,10.3456,63.3516,-7.19615,11.1193,63.1744,-4.11627,8.78707,62.6902,-5.47806,9.50577,63.2866,-5.98568,9.72251,62.1844,-6.18678,9.75933,62.184,-7.68658,11.5757,63.0815,-7.96704,11.7051,63.0732,-2.39319,3.83595,60.0984,-1.18294,1.66921,59.9783,-2.55645,3.6949,60.1209,-1.3601,1.53612,59.9964,-.190776,-.05407,60.0254,-.375322,-.189037,60.0519,-1.76219,1.22812,60.0403,-.802883,-.505821,60.1165,-2.91525,3.37407,60.1735,-2.30248,.813435,60.0998,-1.37981,-.93359,60.204,-3.39418,2.94383,60.2443,-4.69917,7.75031,61.3602,-3.49419,5.86209,60.5981,-4.8092,7.46664,61.4896,-3.6354,5.68487,60.672,-3.93424,5.29068,60.8448,-5.04094,6.86752,61.7924,-4.33019,4.76522,61.0771,-5.3493,6.08033,62.1995,-8.04851,11.5035,63.0983,-6.26075,9.62407,62.2135,-8.07327,10.7471,63.2238,-6.33063,9.13358,62.3555,-6.48794,8.15747,62.6805,-8.10141,9.33566,63.4663,-6.65334,6.93883,63.0832,-7.73297,7.88308,63.5197,.741658,-.599861,60.0181,1.24355,-.420156,60.0457,.846343,-.781743,59.894,1.32136,-.607806,59.8415,1.84945,-.209086,60.097,1.74695,-.432818,59.8857,.324965,-.780069,60.0047,.451994,-.717596,60.0071,.430011,-.961748,59.9266,.557079,-.899255,59.9233,.25461,-.822809,60.0052,.067308,-.959315,60.0117,.359709,-1.00446,59.9214,.172013,-1.14119,59.8876,-.937472,-1.69462,60.0704,-.367126,-1.27871,60.0303,-.669803,-1.72104,59.8626,-.243026,-1.44169,59.8265,-1.95877,.508481,59.8748,-1.96977,1.22895,59.9393,-4.23495,.63312,59.789,-4.23713,-.130404,59.7538,-1.94402,-.065038,59.8275,-4.232,-.733155,59.7293,-.039374,.886125,60.1272,-.049488,1.56932,60.2258,-.025073,.338377,60.0545,-1.92399,-.387586,59.8089,-.004849,.023008,60.0251,-4.21557,-1.06269,59.7222,-1.90607,-.526848,59.8071,.013216,-.117139,60.0214,-4.19727,-1.19988,59.7248,-6.11822,-.171343,60.2477,-7.80885,-.766502,61.0707,-8.0415,-1.44582,60.8354,-6.17143,-.949529,60.1371,-8.22475,-1.98555,60.6652,-6.20569,-1.56077,60.059,-6.20865,-1.88929,60.0345,-8.32157,-2.28846,60.6032,-6.19434,-2.02399,60.0402,-8.34435,-2.42671,60.6057,-10.7507,-1.5336,61.3265,-10.2426,-1.19188,61.5686,-12.6486,-.485101,62.2559,-13.6095,-.541928,61.994,-9.6023,-.803921,61.8585,-11.3026,-.584291,62.3083,-11.0623,-1.77424,61.223,-11.1785,-1.92752,61.2124,-14.2083,-.698601,61.8483,-14.4518,-.873873,61.8187,-4.1764,-1.28253,59.7315,-1.88821,-.608623,59.8111,-4.09845,-1.48282,59.7609,-1.82189,-.819463,59.835,.030418,-.197985,60.0263,.095381,-.416419,60.0586,-1.66602,-1.29992,59.8928,.249466,-.92382,60.1369,-3.91722,-1.92652,59.8296,-1.45583,-1.94578,59.9709,.457658,-1.60858,60.2429,-3.67346,-2.51943,59.9219,-8.2957,-2.52513,60.6378,-6.16539,-2.10886,60.0591,-8.08963,-2.74981,60.7856,-6.05247,-2.30361,60.1431,-5.79707,-2.72182,60.3389,-7.65815,-3.22252,61.1273,-5.45601,-3.2768,60.602,-7.09389,-3.84655,61.5854,-14.3217,-1.05015,61.8552,-11.0939,-2.059,61.2494,-13.7131,-1.48954,62.0345,-10.7112,-2.37315,61.4254,-9.96173,-3.02912,61.8173,-12.5442,-2.37896,62.3802,-8.98262,-3.8659,62.3072,-10.9087,-3.32502,62.5768,.847559,.505956,60.0905,.838665,1.03901,60.1174,1.06365,.545722,59.9847,1.05845,1.05149,59.9316,.831894,1.68061,60.1683,1.02781,1.51086,59.9733,.883331,.053295,60.08,.865476,.193743,60.0809,1.09533,.093469,60.0203,1.07797,.23396,60.0154,.900726,-.027142,60.0821,.967988,-.248681,60.0945,1.11322,.013091,60.0166,1.18408,-.208892,59.9888,1.3296,-1.43811,60.185,1.12631,-.763431,60.1271,1.45941,-1.19363,59.9878,1.33783,-.699153,59.941,-.628436,-1.56151,60.0479,-1.2728,-1.23918,60.1131,-1.6923,-3.56812,60.1608,-1.01437,-3.91942,60.126,-.112627,-1.81246,59.9995,-.475965,-4.19042,60.101,-.555436,.33839,60.132,-1.16484,.647236,60.2311,-.063796,.09677,60.0584,.183085,-1.94257,59.9792,.225181,-.03074,60.0273,-.175196,-4.32599,60.0926,.315206,-1.99001,59.9758,.358077,-.078617,60.022,-.044576,-4.37182,60.0936,-1.86567,-6.0745,60.6764,-2.54993,-5.65946,60.7818,-3.3206,-7.50119,61.7491,-2.67528,-8.08195,61.535,-1.32491,-6.39283,60.6015,-2.16615,-8.53764,61.3814,-1.02753,-6.54817,60.5774,-1.88673,-8.7792,61.3281,-.899082,-6.59611,60.5819,-1.75986,-8.86149,61.3326,-2.50576,-10.861,62.2604,-2.94184,-10.128,62.4573,-2.84634,-12.2071,63.3516,-2.51182,-13.3099,63.1744,-3.48858,-9.21671,62.6902,-3.22725,-10.8027,63.2866,-2.26212,-11.2965,62.1844,-2.13512,-11.4685,62.184,-2.3142,-14.0036,63.0815,-2.186,-14.2986,63.0732,.038768,-4.3903,60.0984,.396301,-2.01098,59.9783,.253638,-4.40976,60.1209,.615105,-2.04597,59.9964,.438085,-.099672,60.0254,.663369,-.138668,60.0519,1.11598,-2.12125,60.0403,1.18825,-.226173,60.1165,.733665,-4.445,60.1735,1.78959,-2.22184,60.0998,1.89673,-.344023,60.204,1.37585,-4.49063,60.2443,-1.65593,-8.85276,61.3602,-.810506,-6.60651,60.5981,-1.40631,-8.73088,61.4896,-.588787,-6.58448,60.672,-.10701,-6.52441,60.8448,-.88934,-8.47173,61.7924,.533345,-6.44259,61.0771,-.210317,-8.13366,62.1995,-2.01085,-14.2138,63.0983,-2.00022,-11.426,62.2135,-1.63475,-13.6823,63.2238,-1.69532,-11.1231,62.3555,-1.11231,-10.5278,62.6805,-1.00276,-12.6623,63.4663,-.396676,-9.75782,63.0832,-.493597,-11.2975,63.5197,-.050362,.950202,60.0181,-.528272,1.1864,60.0457,-.02558,1.15185,59.894,-.480677,1.37273,59.8415,-1.101,1.47562,60.097,-.902193,1.55731,59.8857,.368728,.775642,60.0047,.235547,.823621,60.0071,.393113,.97741,59.9266,.25989,1.0254,59.9233,.448346,.754722,60.0052,.676651,.714814,60.0117,.472674,.95651,59.9214,.701411,.916471,59.8876,1.90357,.502823,60.0704,1.20819,.624177,60.0303,1.7033,.713721,59.8626,1.20588,.826661,59.8265,1.38239,-1.55433,60.0479,.983929,-2.1546,60.1131,3.22561,-3.00782,60.1608,3.65691,-2.37776,60.126,1.69433,-1.07294,59.9995,3.99149,-1.87639,60.101,-.436056,-.774736,60.132,-.816868,-1.34196,60.2311,-.136321,-.316206,60.0584,1.8595,-.795293,59.9792,.025455,-.044922,60.0273,4.16271,-1.59439,60.0926,1.9227,-.669939,59.9758,.089171,.081148,60.022,4.22412,-1.47033,60.0936,5.76682,-2.87742,60.6764,5.27148,-3.50599,60.7818,7.08935,-3.813,61.7491,7.74442,-3.24326,61.535,6.14867,-2.37948,60.6015,8.25877,-2.79346,61.3814,6.3391,-2.10325,60.5774,8.53258,-2.54556,61.3281,6.40234,-1.9816,60.5819,8.62971,-2.42967,61.3326,10.5265,-3.38888,62.2604,9.74611,-3.72979,62.4573,11.7718,-4.29212,63.3516,12.9046,-4.11516,63.1744,8.77719,-4.1433,62.6902,10.3492,-4.35429,63.2866,10.9884,-3.20011,62.1844,11.1746,-3.09502,62.184,13.6172,-4.00355,63.0815,13.9256,-3.91227,63.0732,4.25262,-1.38986,60.0984,1.95339,-.592004,59.9783,4.29812,-1.17896,60.1209,2.01479,-.379095,59.9964,.11982,.157994,60.0254,.18598,.376846,60.0519,2.15055,.108869,60.0403,.3368,.887154,60.1165,4.39159,-.706804,60.1735,2.33248,.765206,60.0998,.540114,1.57599,60.204,4.51515,-.074969,60.2443,8.63371,-2.32545,61.3602,6.42345,-1.89495,60.5981,8.54316,-2.06284,61.4896,6.42861,-1.6722,60.672,6.4277,-1.1867,60.8448,8.34895,-1.51814,61.7924,6.42453,-.541142,61.0771,8.09615,-.802974,62.1995,13.8628,-3.72808,63.0983,11.1488,-2.95595,62.2135,13.3811,-3.29002,63.2238,10.8853,-2.61642,62.3555,10.3658,-1.96262,62.6805,12.4483,-2.51775,63.4663,9.69108,-1.14039,63.0832,11.1735,-1.70131,63.5197,-.953319,.032729,60.0181,-1.246,-.412834,60.0457,-1.14638,.114986,59.894,-1.42107,-.309801,59.8415,-1.60286,-.946041,60.097,-1.65566,-.705679,59.8857,-.728986,.427422,60.0047,-.792838,.301081,60.0071,-.922216,.509299,59.9266,-.986088,.382919,59.9233,-.698519,.503897,60.0052,-.631085,.725636,60.0117,-.891776,.58572,59.9214,-.82416,.807872,59.8876,-.271151,1.91757,60.0704,-.476346,1.24216,60.0303,-.500821,1.77758,59.8626,-.673539,1.29764,59.8265,1.25922,.327631,30.0834,1.24959,.418308,30.1237,1.27631,.424839,30.182,1.32249,.315333,30.11,1.24662,.418887,30.298,1.25573,.328309,30.2807,1.23865,.231101,30.182,1.21633,.247163,30.1237,1.21335,.247742,30.298,.480219,.479053,30.6414,.429051,.215921,30.7419,.145913,.198895,30.9394,.210559,.53147,30.8124,.275205,.864045,30.9394,.531348,.742193,30.7419,.761377,.424402,30.4474,.723175,.228686,30.5221,.799273,.620177,30.5221,1.06976,.503246,30.2825,1.04741,.368803,30.2304,1.01777,.235776,30.2825,.42895,.215941,31.278,.480079,.479081,31.3786,.210559,.53147,31.7441,.145913,.198895,31.617,.722363,.228844,30.9209,.760259,.424619,30.9957,.531247,.742213,31.278,.275205,.864045,31.617,.798461,.620335,30.9209,1.01547,.236223,30.5549,1.04432,.369403,30.5997,1.06746,.503694,30.5549,.40982,.117255,31.01,.121671,.074179,31.2782,.708501,.155361,30.7215,1.01063,.187816,30.4151,.550478,.840879,31.01,.299448,.988761,31.2782,.813135,.69366,30.7215,1.0811,.55039,30.4151,-.645186,1.44814,51.2834,-.694771,1.37161,51.3237,-.719639,1.38334,51.382,-.686616,1.49751,51.31,-.69282,1.36929,51.498,-.642903,1.44542,51.4807,-.56845,1.51021,51.382,-.561212,1.48368,51.3237,-.559261,1.48135,51.498,-.135082,.840218,51.8414,.070277,1.01251,51.9419,.301032,.847557,52.1394,.041496,.629781,52.0124,-.21804,.412004,52.1394,-.340416,.667897,51.9419,-.319189,1.05963,51.6474,-.166333,1.18769,51.7221,-.471846,.931332,51.7221,-.608468,1.19243,51.4825,-.506489,1.28284,51.4304,-.399738,1.36757,51.4825,.070344,1.01243,52.478,-.134991,.840109,52.5786,.041496,.629781,52.9441,.301032,.847557,52.817,-.165801,1.18705,52.1209,-.318458,1.05876,52.1957,-.34035,.667818,52.478,-.21804,.412004,52.817,-.471314,.930698,52.1209,-.398231,1.36578,51.7549,-.504466,1.28043,51.7997,-.60696,1.19063,51.7549,.147315,1.07708,52.21,.398358,.929223,52.4782,-.108784,1.23544,51.9215,-.364005,1.40035,51.6151,-.417388,.603243,52.21,-.315366,.330338,52.4782,-.528863,.882948,51.9215,-.646951,1.16293,51.6151,1.22201,-.091744,48.2834,1.23144,-.001048,48.3237,1.25893,-214e-6,48.382,1.28133,-.116928,48.31,1.22865,138e-6,48.498,1.21874,-.090357,48.4807,1.18181,-.181888,48.382,1.16332,-.161537,48.3237,1.16053,-.160351,48.498,.49151,.218332,48.8414,.386753,-.028412,48.9419,.106262,.013802,49.1394,.238641,.325669,49.0124,.371021,.637536,49.1394,.596232,.465091,48.9419,.755161,.106419,48.6474,.677103,-.077077,48.7221,.832934,.290037,48.7221,1.0732,.119424,48.4825,1.02338,-.007435,48.4304,.966735,-.131392,48.4825,.386657,-.028371,49.478,.491379,.218388,49.5786,.238641,.325669,49.9441,.106262,.013802,49.817,.676341,-.076754,49.1209,.754114,.106864,49.1957,.596137,.465132,49.478,.371021,.637536,49.817,.832172,.29036,49.1209,.964576,-.130476,48.7549,1.02049,-.006205,48.7997,1.07104,.12034,48.7549,.347428,-.120923,49.21,.056619,-.103148,49.4782,.647504,-.145749,48.9215,.949776,-.176819,48.6151,.635462,.557643,49.21,.420664,.754486,49.4782,.861771,.359032,48.9215,1.0941,.163179,48.6151,1.26802,1.3151,41.8834,1.18079,1.34167,41.9237,1.18522,1.36881,41.982,1.30406,1.36854,41.91,1.1791,1.33916,42.098,1.26603,1.31216,42.0807,1.34884,1.25845,41.982,1.32533,1.24418,41.9237,1.32364,1.24166,42.098,.824256,.657195,42.4414,1.04648,.507281,42.5419,.95152,.239998,42.7394,.670642,.429453,42.6124,.389764,.618907,42.7394,.602013,.807077,42.5419,.98442,.894648,42.2474,1.14965,.783011,42.3221,.819016,1.00603,42.3221,1.03234,1.20932,42.0825,1.14736,1.13622,42.0304,1.25823,1.05696,42.0825,1.04642,.507195,43.078,.824177,.657077,43.1786,.670642,.429453,43.5441,.95152,.239998,43.417,1.14919,.782325,42.7209,.983784,.893704,42.7957,.601955,.806991,43.078,.389764,.618907,43.417,.818553,1.00534,42.7209,1.25692,1.05501,42.3549,1.1456,1.13361,42.3997,1.03103,1.20738,42.3549,1.12979,.451026,42.81,1.05685,.168953,43.0782,1.21141,.740852,42.5215,1.29959,1.03164,42.2151,.518647,.863246,42.81,.284435,.689953,43.0782,.75679,1.0475,42.5215,.993376,1.23819,42.2151,-1.22856,.460472,34.8834,-1.19878,.374285,34.9237,-1.22334,.361912,34.982,-1.29297,.458223,34.91,-1.19575,.374391,35.098,-1.22501,.460596,35.0807,-1.23023,.559156,34.982,-1.20487,.548527,34.9237,-1.20184,.548633,35.098,-.435463,.488168,35.4414,-.444799,.756066,35.5419,-.172748,.836348,35.7394,-.160924,.497755,35.6124,-.1491,.159161,35.7394,-.426089,.220271,35.5419,-.721709,.478172,35.2474,-.728513,.677465,35.3221,-.714594,.27889,35.3221,-1.00445,.331977,35.0825,-1.01292,.468003,35.0304,-1.01396,.604288,35.0825,-.444696,.75607,36.078,-.435321,.488173,36.1786,-.160924,.497755,36.5441,-.172748,.836348,36.417,-.727686,.677494,35.7209,-.720571,.478212,35.7957,-.425985,.220274,36.078,-.1491,.159161,36.417,-.713767,.278919,35.7209,-1.01162,.604369,35.3549,-1.00977,.468112,35.3997,-1.00211,.332059,35.3549,-.448256,.85653,35.81,-.177182,.963321,36.0782,-.730709,.752212,35.5215,-1.01779,.652625,35.2151,-.422529,.119811,35.81,-.144666,.032189,36.0782,-.711571,.204171,35.5215,-1.0049,.28349,35.2151,.849653,.383374,52.469,.898245,.400032,49.5715,.849522,.64109,49.5728,.800172,.62841,52.4705,.713336,.845962,49.5729,.661851,.836648,52.4712,.909503,.266685,54.5914,.854724,.53779,54.5965,.701654,.768177,54.6006,.508214,.982047,49.5717,.453537,.974901,52.471,.26681,1.03078,49.5694,.208423,1.02436,52.4698,.471174,.921112,54.6031,.200009,.975815,54.6036,-.036713,.974883,52.4679,.025334,.982102,49.5665,-.179913,.846018,49.5633,-.245074,.836606,52.4655,-.301634,.768145,54.5987,-.071154,.921093,54.602,-.38345,.628341,52.463,-.316166,.641072,49.5602,-.364911,.399962,49.5579,-.432986,.383292,52.4608,-.509503,.266649,54.5887,-.454712,.537754,54.594,-.316186,.158904,49.5565,-.179997,-.045972,49.5565,-.245183,-.069983,52.4585,-.383505,.138256,52.4592,-.301654,-.234844,54.5795,-.454724,-.004457,54.5836,.025127,-.182064,49.5577,.26653,-.230799,49.56,.208246,-.257698,52.4599,-.036869,-.208237,52.4587,.199991,-.442482,54.5765,-.071173,-.387779,54.5771,.508003,-.182125,49.5629,.453381,-.20822,52.4619,.713246,-.046038,49.5661,.661741,-.069943,52.4642,.471154,-.38776,54.5781,.701634,-.234811,54.5815,.849499,.158915,49.5691,.800117,.138323,52.4667,.854712,-.004421,54.5861,1.0316,.195805,46.5199,.982825,.436238,46.5271,1.16487,-.033372,44.1387,1.11606,.20635,44.1543,.846636,.640596,46.5321,.979847,.410075,44.1667,.641539,.776443,46.5339,.774786,.545458,44.1739,.400124,.825173,46.5326,.533452,.594004,44.175,.158561,.776661,46.5282,.291971,.545669,44.1699,-.046748,.640887,46.5214,.0867,.410356,44.1593,-.182951,.43639,46.5131,-.049527,.206499,44.1446,-.231598,.195845,46.5046,-.098199,-.033324,44.1281,-.182817,-.044588,46.4974,-.049385,-.273043,44.1125,-.046621,-.248958,46.4925,.086843,-.476791,44.1002,.158481,-.384824,46.4908,.291911,-.612209,44.0932,.399894,-.433569,46.4922,.533245,-.660784,44.0922,.641447,-.385061,46.4967,.774713,-.612454,44.0973,.846747,-.249277,46.5034,.97997,-.477123,44.1078,.982948,-.044758,46.5116,1.11619,-.273227,44.1224,1.20632,-.070755,42.7872,1.15756,.168485,42.8082,1.0978,.066839,40.7606,1.04905,.305872,40.7783,1.0213,.371699,42.8261,.912735,.508824,40.7943,.816303,.506437,42.8379,.707789,.64315,40.8059,.575197,.554541,42.8422,.466882,.690953,40.8117,.334082,.506298,42.8383,.226067,.642773,40.8107,.129024,.371474,42.8268,.021184,.508251,40.8031,-.007373,.16826,42.8091,-.115333,.305381,40.7898,-.056309,-.070948,42.788,-.164455,.066464,40.7729,-.007548,-.310184,42.7669,-.115704,-.172565,40.7551,.128721,-.513427,42.7491,.020617,-.375544,40.7392,.33373,-.648212,42.7376,.22557,-.509913,40.7278,.574839,-.696354,42.7334,.466481,-.557752,40.7223,.815945,-.648118,42.7374,.707296,-.509578,40.7234,1.02099,-.513269,42.7488,.912173,-.375032,40.7308,1.15738,-.310004,42.7663,1.04868,-.172117,40.7439,.831155,.291767,36.6916,.782255,.530811,36.6945,.564579,.466658,32.6259,.51551,.705732,32.612,.645871,.733784,36.6983,.379057,.908767,32.6015,.440947,.868248,36.7024,.174137,1.04347,32.596,.200051,.916226,36.7061,-.066803,1.09171,32.5962,-.040847,.868148,36.7089,-.307871,1.04374,32.6018,-.245785,.733607,36.7104,-.512916,.909124,32.6122,-.382204,.5306,36.7102,-.649203,.705911,32.626,-.431149,.291555,36.7086,-.697911,.466686,32.6409,-.38225,.052515,36.7056,-.648845,.227612,32.6548,-.245865,-.150469,36.7019,-.512395,.024586,32.6653,-.040939,-.284951,36.698,-.307479,-.110104,32.6709,.199961,-.332945,36.6944,-.066538,-.158336,32.671,.440863,-.284869,36.6917,.174534,-.110364,32.6653,.645801,-.15032,36.6901,.379585,.024242,32.6549,.782215,.052706,36.6901,.515873,.227443,32.641,.447908,.474988,30.4664,.398808,.714005,30.444,.382214,.572621,28.1099,.431242,.333364,28.1319,.26231,.916971,30.4259,.245724,.775774,28.0916,.057393,1.05158,30.415,.04078,.910392,28.0799,-.183502,1.09977,30.4123,-.200106,.958489,28.0763,-.424509,1.05185,30.4185,-.441025,.910472,28.0812,-.629525,.917329,30.4324,-.645984,.775873,28.0938,-.765842,.714196,30.4525,-.78238,.572645,28.1128,-.814577,.475033,30.4754,-.831245,.333324,28.1349,-.765479,.236015,30.4977,-.782218,.094064,28.1569,-.628985,.033066,30.5159,-.645732,-.109072,28.1752,-.424074,-.101517,30.527,-.440793,-.243663,28.187,-.183182,-.149686,30.5297,-.19991,-.291738,28.1907,.057829,-.101759,30.5236,.04101,-.24372,28.1859,.26285,.032742,30.5096,.245973,-.109137,28.1732,.399172,.235847,30.4894,.382374,.094064,28.1541,.382436,.354713,23.5719,.431359,.114617,23.5873,.382668,.224343,18.9584,.431504,-.016654,18.9667,.246018,.558625,23.5588,.246332,.429087,18.9514,.040993,.693783,23.5504,.041221,.564903,18.9468,-.200049,.742061,23.5475,-.200015,.613453,18.9452,-.441088,.693779,23.5506,-.441249,.564897,18.9468,-.646099,.558609,23.5592,-.646352,.429075,18.9514,-.782482,.354676,23.5723,-.782679,.224326,18.9584,-.831361,.114563,23.5877,-.831505,-.016674,18.9667,-.782439,-.125534,23.6032,-.782669,-.257672,18.975,-.646023,-.329436,23.6163,-.646334,-.462411,18.982,-.441001,-.464577,23.6248,-.441224,-.598222,18.9866,-.199961,-.512841,23.6278,-.199988,-.646767,18.9883,.041078,-.464558,23.6247,.041245,-.598211,18.9866,.246091,-.329399,23.616,.246349,-.462392,18.982,.382478,-.125483,23.6029,.382677,-.25765,18.975,1.00186,.540369,55.6632,.814369,.822526,55.67,1.16929,.601361,56.5313,.942645,.942432,56.5398,1.06898,.20834,55.6552,1.25042,.200006,56.5214,.532076,1.00982,55.6744,.199967,1.07681,55.676,.601407,1.16883,56.5454,.199953,1.24981,56.5474,-.414401,.822502,55.6697,-.132131,1.0098,55.6743,-.542692,.942405,56.5398,-.201484,1.16881,56.5454,-.668976,.208327,55.6548,-.601879,.54035,55.6629,-.85042,.199994,56.5214,-.769314,.601342,56.5313,-.414369,-.40586,55.64,-.601864,-.123702,55.6468,-.542645,-.542432,56.503,-.769292,-.201361,56.5115,.200033,-.660146,55.634,-.132076,-.593153,55.6356,.200046,-.84981,56.4954,-.201407,-.768831,56.4974,.532131,-.593137,55.6357,.814401,-.405836,55.6403,.601484,-.768812,56.4974,.942692,-.542405,56.503,1.00188,-.123684,55.6471,1.16931,-.201343,56.5115,1.03486,1.03463,58.0879,1.28966,.651201,58.0784,1.10132,1.10106,60.1104,1.37639,.687117,60.1001,1.38086,.200006,58.0672,1.47485,.200007,60.0881,.199948,1.38017,58.0964,.651253,1.28914,58.0942,.687172,1.37583,60.1172,.199943,1.47412,60.1196,-.634918,1.0346,58.0879,-.25134,1.28912,58.0942,-.287266,1.37581,60.1172,-.701377,1.10103,60.1104,-.889681,.65118,58.0784,-.980859,.199993,58.0672,-.976419,.687094,60.1001,-1.07485,.199993,60.0881,-.889657,-.251202,58.0561,-.634865,-.634626,58.0466,-.701319,-.701061,60.0658,-.976393,-.287117,60.076,-.251253,-.889139,58.0403,.200052,-.980174,58.0381,.200056,-1.07411,60.0566,-.287172,-.975833,60.059,1.03492,-.634596,58.0466,.65134,-.889118,58.0403,1.10138,-.701029,60.0658,.687266,-.97581,60.059,1.28968,-.251181,58.0561,1.37642,-.287094,60.076,.372353,.303898,16.4658,.421152,.062502,16.4708,.299451,.45812,14.3954,.348245,.216667,14.4,.236054,.50901,16.4614,.163157,.663285,14.3915,.030906,.645124,16.4586,-.041996,.799441,14.3888,-.210419,.693799,16.4576,-.283333,.848135,14.3879,-.451743,.645123,16.4586,-.52467,.799441,14.3888,-.65689,.509008,16.4614,-.729824,.663285,14.3915,-.793188,.303896,16.4658,-.866118,.45812,14.3954,-.841986,.0625,16.4708,-.914912,.216667,14.4,-.793187,-.178896,16.4759,-.866118,-.024785,14.4046,-.656887,-.384008,16.4803,-.729824,-.22995,14.4086,-.45174,-.52012,16.4831,-.52467,-.366106,14.4112,-.210415,-.568795,16.4842,-.283333,-.414799,14.4121,.030909,-.520119,16.4831,-.041996,-.366106,14.4112,.236056,-.384005,16.4803,.163157,-.22995,14.4086,.372354,-.178893,16.4759,.299451,-.024785,14.4046,.181578,.289584,10.8063,.132784,.531036,10.8016,.014912,.3,6.65001,-.033882,.541453,6.64538,-.00351,.736201,10.7977,-.170176,.746618,6.64145,-.208663,.872358,10.7951,-.37533,.882774,6.63884,-.45,.921051,10.7942,-.616667,.931468,6.63791,-.691337,.872358,10.7951,-.858004,.882774,6.63884,-.89649,.736201,10.7977,-1.06316,.746618,6.64145,-1.03278,.531036,10.8016,-1.19945,.541453,6.64538,-1.08158,.289584,10.8063,-1.24825,.3,6.65001,-1.03278,.048131,10.8109,-1.19945,.058548,6.65465,-.89649,-.157033,10.8148,-1.06316,-.146617,6.65859,-.691337,-.293189,10.8175,-.858004,-.282772,6.6612,-.45,-.341883,10.8184,-.616667,-.331466,6.66214,-.208663,-.293189,10.8175,-.37533,-.282772,6.6612,-.00351,-.157033,10.8148,-.170176,-.146617,6.65859,.132784,.048131,10.8109,-.033882,.058548,6.65465,-.058005,.3,3.24376,-.106799,.541453,3.23913,-.068421,.3,.400012,-.117216,.541453,.39538,-.243093,.746618,3.2352,-.25351,.746618,.391449,-.448246,.882774,3.23259,-.458663,.882774,.388844,-.689583,.931468,3.23166,-.7,.931468,.387914,-.93092,.882774,3.23259,-.941337,.882774,.388844,-1.13607,.746618,3.2352,-1.14649,.746618,.391449,-1.27237,.541453,3.23913,-1.28278,.541453,.39538,-1.32116,.3,3.24376,-1.33158,.3,.400012,-1.27237,.058548,3.2484,-1.28278,.058548,.404647,-1.13607,-.146617,3.25234,-1.14649,-.146617,.408587,-.93092,-.282772,3.25495,-.941337,-.282772,.411204,-.689583,-.331466,3.25589,-.7,-.331466,.41214,-.448246,-.282772,3.25495,-.458663,-.282772,.411204,-.243093,-.146617,3.25234,-.25351,-.146617,.408587,-.106799,.058548,3.2484,-.117216,.058548,.404647,-3.28887,-.710133,64.7627,-3.32792,-.696203,66.7768,-3.08788,-2.18921,66.8042,-3.03995,-2.20341,64.7568,-3.32141,.544801,64.7621,-3.35297,.562255,66.7518,-3.43192,-.627245,68.4962,-3.24958,-2.11574,68.5736,-3.42024,.629007,68.4346,-1.63065,3.1416,66.7214,-1.63089,3.07496,64.7274,-.40255,3.45984,64.7007,-.398607,3.53238,66.7224,1.20396,3.77935,64.6628,1.20804,3.85458,66.7216,-1.68564,3.24454,68.4079,-.449506,3.64312,68.4458,1.15627,3.96962,68.4948,-2.32122,2.72605,68.3895,-2.25559,2.63612,66.7186,-2.68031,2.13662,68.3879,-2.60928,2.05986,66.7201,-2.2466,2.58071,64.7363,-2.59006,2.0187,64.7402,-3.03695,1.42943,66.7317,-3.10071,1.49837,68.4004,-3.01096,1.40211,64.7514,-5.06763,1.94328,73.5161,-4.96243,.504266,73.1976,-4.3737,.080815,71.9546,-4.33053,1.44109,72.0259,-4.68692,-.758584,72.7313,-4.31269,-1.44524,71.9188,-3.89041,-.248384,70.7876,-3.77234,1.02768,70.7111,-3.90753,-1.75251,70.9157,-3.59538,-.481945,69.7386,-3.51095,.767659,69.6377,-3.5355,-1.96426,69.8737,-2.45295,2.85527,69.5854,-2.80957,2.26436,69.5844,-1.80264,3.37925,69.6135,-2.76872,3.12383,70.7093,-3.14131,2.56292,70.7339,-2.0745,3.61411,70.6919,-3.36198,3.61302,72.1753,-3.79269,3.12754,72.2679,-2.57406,4.00575,72.0177,-4.11978,4.23381,73.8775,-4.63466,3.85055,74.0634,-3.20823,4.49079,73.5226,-3.19761,1.63015,69.5939,-3.49134,1.92006,70.7146,-4.94969,3.09642,73.8744,-4.11986,2.44026,72.1767,-.796356,4.01888,70.7404,-1.22563,4.38989,71.9301,.835332,4.37448,70.832,.418595,4.75092,71.8704,-1.80634,4.81447,73.2051,-.427116,4.97512,72.7231,-.558431,3.78506,69.6865,1.04908,4.11953,69.7864,1.65684,2.97809,66.4795,1.64385,2.97436,63.5043,2.22082,2.59041,63.5043,2.236,2.59319,66.4869,2.70761,2.11617,63.5043,2.72571,2.1179,66.4922,1.74781,3.00417,69.4751,2.34231,2.61263,69.5338,2.85244,2.13001,69.5767,1.98454,3.04655,71.3964,2.60247,2.65722,71.6081,3.1602,2.15941,71.7462,2.96562,2.70276,73.0054,2.39412,2.98552,72.4278,3.57659,2.1992,73.295,3.3286,-.635459,63.5043,3.13277,-1.24667,63.5043,3.14946,-1.23922,66.4836,3.34874,-.626972,66.4867,2.83776,-1.81417,63.5043,2.85099,-1.81038,66.4807,3.26624,-1.18708,69.5072,3.48975,-.567563,69.5325,2.94355,-1.78384,69.4843,3.55069,-1.05697,71.5236,3.83221,-.423284,71.6081,3.17504,-1.69163,71.4145,3.94025,-.861357,72.8349,4.29554,-.228083,73.0299,3.52592,-1.41025,72.3962,3.53908,.092242,69.5607,3.37628,.05389,66.4902,3.43585,.788976,69.5837,3.266,.776525,66.4931,3.35302,.048411,63.5043,3.24174,.774746,63.5043,3.0599,1.49207,66.4941,3.21303,1.49795,69.5919,3.03803,1.49123,63.5043,4.46939,.311396,73.199,3.93446,.185382,71.6962,4.40639,.860129,73.3373,3.84833,.819216,71.7682,3.58492,1.51222,71.7938,4.08807,1.53152,73.3864,-2.84038,.192302,66.4795,-2.83362,.180595,63.5043,-2.60065,.833313,63.5043,-2.60295,.851908,66.4887,-2.25827,1.42038,63.5043,-2.25904,1.44354,66.496,-2.88769,.274255,69.4751,-2.61901,.982075,69.5487,-2.26443,1.60569,69.6068,-2.97698,.503776,71.4001,-2.65481,1.30201,71.6552,-2.27752,1.99949,71.8404,-2.68516,1.75638,73.0987,-2.95313,.986502,72.4576,-2.29523,2.53228,73.4759,.261398,2.6886,63.5043,.901832,2.64645,63.5043,.890141,2.65886,66.4868,.24703,2.70263,66.4925,1.52384,2.4975,63.5043,1.51696,2.50941,66.4807,.808306,2.74568,69.5334,.146459,2.80088,69.5791,1.46881,2.59281,69.4843,.605906,2.95598,71.6064,-.097788,3.03949,71.7538,1.32263,2.79098,71.4213,.311427,3.23743,72.9991,-.428238,3.36231,73.3096,.959697,3.03442,72.4507,-.5148,2.68649,69.617,-.421409,2.56431,66.4973,-1.16048,2.43355,69.639,-1.09523,2.28446,66.5,-.408067,2.54685,63.5043,-1.0859,2.26316,63.5043,-1.76386,2.08217,69.637,-1.73583,1.91591,66.4998,-1.73182,1.89216,63.5043,-1.04846,3.38468,73.5371,-.741606,2.98322,71.8723,-1.53333,3.28552,73.669,-1.31894,2.79564,71.941,-1.92404,3.03218,73.6567,-1.83194,2.48592,71.9345,-2.10318,-2.30835,66.491,-1.56223,-2.74035,66.4795,-1.54896,-2.73777,63.5043,-2.09027,-2.30499,63.5043,-2.53388,-1.79013,63.5043,-2.55124,-1.79451,66.5006,-2.19359,-2.33187,69.5667,-1.65512,-2.7584,69.4751,-2.67277,-1.82519,69.6436,-2.41412,-2.38667,71.7121,-1.88837,-2.78369,71.4046,-2.9679,-1.8997,71.9555,-2.71787,-2.44771,73.2113,-2.24716,-2.71309,72.4933,-3.36721,-2.0005,73.6968,-2.91268,1.00515,63.5043,-2.66433,1.59697,63.5043,-2.67818,1.59372,66.4818,-2.93127,1.00095,66.4866,-2.32098,2.1366,63.5043,-2.33449,2.13398,66.4807,-2.77517,1.57095,69.4936,-3.06139,.971546,69.5318,-2.42902,2.1156,69.4843,-3.01078,1.51306,71.4806,-3.37739,.900134,71.606,-2.65929,2.05033,71.41,-3.33005,1.42016,72.749,-3.80492,.803517,73.0258,-2.97479,1.84542,72.3603,-3.02578,.320483,66.4966,-3.22991,.281765,69.6117,-2.98438,-.413547,66.5054,-3.23161,-.45758,69.6818,-2.99662,.326014,63.5043,-2.94906,-.407256,63.5043,-2.83691,-1.14443,66.5063,-3.03529,-1.18405,69.6895,-2.80857,-1.13877,63.5043,-3.72566,.187736,71.8557,-4.39638,.06052,73.5053,-3.83203,-.56452,72.0746,-4.64436,-.709202,73.9255,-3.51706,-1.28028,72.0987,-4.16888,-1.41047,73.9718,-.960935,-2.76806,67.1363,-1.73672,-1.88682,67.1278,-1.76038,-1.61646,64.7639,-.982008,-2.50015,64.7639,-.206033,-3.40354,67.1425,-.225198,-3.13744,64.7639,-.957145,-3.00071,69.4553,-1.71487,-2.13665,69.3876,-.215596,-3.62348,69.5053,-.968168,-3.29982,71.5672,-1.65953,-2.49176,71.3067,-.262262,-3.88971,71.7305,-.970014,-3.65803,73.5095,-1.44461,-3.00625,72.7117,-.330472,-4.19192,73.8656,.510582,-3.58844,67.1448,.49209,-3.32298,64.7639,1.16626,-3.01571,64.7639,1.18543,-3.2818,67.1425,.496305,-3.8039,69.523,1.17586,-3.50175,69.5053,.438192,-4.05924,71.7856,1.1292,-3.76797,71.7305,.354497,-4.34672,73.9715,1.06099,-4.07018,73.8656,1.80091,-2.25668,64.7639,1.82198,-2.52459,67.1363,2.414,-1.25124,64.7639,2.43765,-1.52161,67.1278,1.82577,-2.75724,69.4553,2.45951,-1.77144,69.3876,1.8075,-3.05698,71.5672,2.45688,-2.13162,71.3067,1.75493,-3.41963,73.5095,2.26595,-2.68162,72.7117,-.300793,-2.79145,67.1348,-1.2995,-2.18388,67.1278,-1.40117,-1.93224,64.7639,-.398442,-2.54976,64.7639,.606304,-3.17227,67.14,.511625,-2.93793,64.7639,-.234975,-2.95435,69.4435,-1.20555,-2.4164,69.3876,.651332,-3.28372,69.4847,-.172428,-3.09945,71.5297,-1.05055,-2.72239,71.3036,.659938,-3.30502,71.666,-.090124,-3.23519,73.4353,-.706752,-3.02954,72.687,.649779,-3.27987,73.7419,1.34545,-3.13739,67.1418,1.25182,-2.90565,64.7639,1.80669,-2.41469,64.7639,1.90137,-2.64903,67.14,1.38314,-3.23068,69.4993,1.9464,-2.76048,69.4847,1.37392,-3.20787,71.7115,1.955,-2.78178,71.666,1.33966,-3.12306,73.8292,1.94485,-2.75663,73.7419,2.19169,-1.50327,64.7639,2.28934,-1.74497,67.1348,2.48403,-.362522,64.7639,2.5857,-.614158,67.1278,2.35516,-1.90787,69.4435,2.67965,-.846682,69.3876,2.41096,-2.05569,71.5297,2.78069,-1.17446,71.3036,2.44605,-2.21051,73.4353,2.74676,-1.63423,72.687,-2.42023,2.22989,66.4795,-2.41905,2.21642,63.5043,-1.93207,2.70953,63.5043,-1.92314,2.73047,66.4868,-1.37365,3.09689,63.5043,-1.35998,3.12251,66.4945,-2.42848,2.32416,69.4751,-1.86064,2.87702,69.5332,-1.26427,3.3018,69.5945,-2.40553,2.57678,71.3955,-1.70348,3.23589,71.6063,-1.03184,3.73724,71.8018,-1.46052,3.73814,73.0013,-2.13181,3.0523,72.4204,-.717374,4.32636,73.4017,1.44591,3.18143,63.5043,2.00853,2.87258,63.5043,1.99767,2.89109,66.4877,1.4308,3.20337,66.4951,2.50931,2.47471,63.5043,2.50811,2.48841,66.4807,1.92161,3.02064,69.5406,1.32507,3.35697,69.5997,2.49972,2.58434,69.4843,1.73187,3.33697,71.6292,1.06827,3.72998,71.8182,2.43896,2.83088,71.4228,1.44665,3.77451,73.044,.720844,4.23464,73.4333,2.12874,3.24096,72.4631,.696601,3.52188,69.6578,.768933,3.35915,66.5024,.042598,3.55807,69.6844,.044737,3.38935,66.5057,.779266,3.3359,63.5043,.045042,3.36525,63.5043,-.621552,3.50834,69.655,-.6877,3.32779,66.502,-.69715,3.30199,63.5043,.283274,4.45176,73.7814,.520937,3.91708,71.9995,.030377,4.52214,73.9411,.037404,3.9678,72.0827,-.243561,4.5401,73.7649,-.460905,3.94684,71.9909,.624597,-1.11279,64.9234,.535322,-1.08358,64.1664,.325898,-1.00726,63.8771,.337058,-1.01091,64.8871,.084266,-.873658,63.8357,.084266,-.873658,64.8819,.637351,-1.11696,66.2545,.338652,-1.01143,66.2537,.084266,-.873658,66.2531,.534773,-1.12909,72.1257,.615772,-1.12088,71.7291,.311704,-1.01632,71.7105,.207591,-1.03441,72.1929,.052343,-.879451,71.6974,-.078779,-.903247,72.2506,.053103,-1.05677,72.5955,.353037,-1.11666,72.3864,-.263053,-.936687,72.7607,-.108684,856e-6,63.8357,.03843,.164358,63.8771,.045948,.169341,64.8867,-.108684,856e-6,64.8816,.177285,.265813,64.1664,.237432,.305675,64.9228,.047022,.170053,66.2502,-.108684,856e-6,66.2507,.246024,.311369,66.2496,-.143362,-.005437,71.7098,.017686,.164729,71.7197,-.086332,.145335,72.2075,-.274966,-.02932,72.2677,.223229,.307232,71.7307,.146114,.289103,72.1331,-.237296,.114321,72.6112,-.459309,-.062773,72.7784,-.006982,.232373,72.397,-.185486,-.214014,64.8817,-.185486,-.214014,63.8357,-.185486,-.214014,66.2513,-.178526,-.452005,64.8817,-.178526,-.452005,63.8357,-.178526,-.452005,66.2519,-.08952,-.681337,64.8818,-.08952,-.681337,66.2524,-.08952,-.681337,63.8357,-.37322,-.248083,72.3041,-.583667,-.286274,72.8823,-.372962,-.48729,72.3128,-.592439,-.52712,72.9143,-.223265,-.22087,71.7019,-.216757,-.458943,71.6961,-.275163,-.715026,72.293,-.485565,-.753209,72.8708,-.125519,-.68787,71.6935,.346319,-1.01004,71.0319,.095692,-.871585,71.0049,.640208,-1.11644,71.0657,.090757,-.87248,69.865,.343299,-1.01059,69.8777,.63969,-1.11653,69.8932,.339233,-1.01133,68.1019,.637643,-1.11691,68.1056,.085078,-.873511,68.0986,-.088582,-.681167,68.0961,-.177565,-.451831,68.0944,-.082017,-.679975,69.8571,-.170837,-.45061,69.8539,-.076202,-.67892,70.9898,-.165044,-.449559,70.9862,-.184593,-.213852,68.0931,-.107941,991e-6,68.0923,-.17834,-.212717,69.8546,-.102744,.001934,69.8588,-.173236,-.211791,70.9923,-.098911,.00263,71.0071,.053257,.171184,71.0293,.248152,.311755,71.0555,.051191,.170809,69.866,.24812,.31175,69.8747,.047543,.170147,68.0919,.246286,.311417,68.0916,.977545,1.30457,72.3154,.864895,1.31574,71.7491,1.23408,1.04076,71.7226,1.38187,1.03936,72.4114,1.53007,.724102,71.7038,1.7166,.724102,72.4939,1.59938,1.02959,72.9863,1.21806,1.22639,72.6878,1.97873,.724102,73.2222,1.44767,-.841664,71.7216,1.16266,-1.08429,71.7357,1.31084,-1.0834,72.4323,1.63488,-.841664,72.5182,.828537,-1.2654,71.7514,.939877,-1.25828,72.326,1.52703,-1.07717,73.0087,1.89712,-.841664,73.2475,1.16915,-1.20845,72.703,1.85436,-.495756,72.5702,2.15373,-.495756,73.3959,1.9489,-.083877,72.5827,2.26112,-.083877,73.4416,1.64104,-.495756,71.7102,1.72669,-.083877,71.702,1.90716,.338726,72.5544,2.20646,.338726,73.3796,1.69428,.338726,71.6982,1.18484,1.04076,70.7535,1.4684,.724102,70.7149,.830133,1.31574,70.8017,1.47542,.724102,69.0871,1.18914,1.04076,69.1052,.830871,1.31574,69.1272,1.19575,1.04076,63.9299,1.19492,1.04076,66.5691,.833782,1.31574,66.5745,.834198,1.31574,63.931,1.48466,.724102,63.9289,1.4835,.724102,66.5645,1.64307,.338726,63.928,1.64174,.338726,66.561,1.67231,-.083877,63.9272,1.67094,-.083877,66.5585,1.6324,.338726,69.0758,1.66137,-.083877,69.0712,1.62413,.338726,70.6934,1.65313,-.083877,70.6882,1.5873,-.495756,63.9264,1.58603,-.495756,66.5567,1.39834,-.841664,63.9256,1.39728,-.841664,66.5555,1.57714,-.495756,69.0721,1.38989,-.841664,69.0781,1.56988,-.495756,70.6969,1.38444,-.841664,70.718,1.11206,-1.08429,70.7497,.793083,-1.2654,70.7871,1.115,-1.08429,69.0884,.79313,-1.2654,69.1009,1.12019,-1.08429,66.5549,1.12093,-1.08429,63.9248,.795738,-1.2654,66.5545,.796111,-1.2654,63.924,-.588844,1.08583,72.3154,-.671177,1.00813,71.7491,-.22144,1.10636,71.7226,-.123431,1.21698,72.4114,.211728,1.122,71.7038,.334101,1.26277,72.4939,.026646,1.37473,72.9863,-.372052,1.21606,72.6878,.506078,1.46061,73.2222,1.33937,.032578,71.7216,1.3355,-.341699,71.7357,1.43204,-.229285,72.4323,1.46219,.17387,72.5182,1.25298,-.712684,71.7514,1.32065,-.623984,72.326,1.56917,-.062039,73.0087,1.63423,.371781,73.2475,1.43346,-.41826,72.703,1.34512,.566447,72.5702,1.54153,.792385,73.3959,1.0963,.908015,72.5827,1.30113,1.14365,73.4416,1.20517,.405454,71.7102,.950515,.740312,71.702,.749968,1.15376,72.5544,.946331,1.37965,73.3796,.61031,.993104,71.6982,-.253745,1.0692,70.7535,.171272,1.07546,70.7149,-.693983,.981899,70.8017,.175877,1.08076,69.0871,-.250926,1.07244,69.1052,-.693499,.982456,69.1272,-.24659,1.07743,63.9299,-.247132,1.07681,66.5691,-.691589,.984653,66.5745,-.691317,.984967,63.931,.181935,1.08773,63.9289,.181177,1.08685,66.5645,.576712,.954455,63.928,.575837,.953448,66.561,.914835,.699267,63.9272,.913938,.698235,66.5585,.569711,.946401,69.0758,.90766,.691012,69.0712,.564284,.940157,70.6934,.902253,.684793,70.6882,1.16991,.364894,63.9264,1.16908,.363935,66.5567,1.307,-.004653,63.9256,1.30631,-.00545,66.5555,1.16325,.357222,69.0721,1.30146,-.01103,69.0781,1.15848,.351743,70.6969,1.29788,-.015144,70.718,1.30231,-.379888,70.7497,1.22972,-.739442,70.7871,1.30423,-.37767,69.0884,1.22975,-.739407,69.1009,1.30764,-.373753,66.5549,1.30812,-.373194,63.9248,1.23146,-.737438,66.5545,1.23171,-.737157,63.924,-1.01262,-.769364,72.3154,-.957152,-.868047,71.7491,-.943659,-.407905,71.7226,-1.02728,-.286048,72.4114,-.85404,.016178,71.7038,-.961027,.168972,72.4939,-1.14404,-.102266,72.9863,-1.08653,-.527507,72.6878,-1.11138,.383703,73.2222,.475822,.846769,71.7216,.838045,.752472,71.7357,.752326,.87334,72.4323,.368441,1.00012,72.5182,1.17805,.58265,71.7514,1.10835,.669771,72.326,.623223,1.04686,73.0087,.218028,1.21494,73.2475,.93603,.828995,72.703,-.040798,.981506,72.5702,-.212509,1.22674,73.3959,-.432415,.822705,72.5827,-.611495,1.07846,73.4416,.081557,.806766,71.7102,-.304962,.640682,71.702,-.754648,.546115,72.5544,-.926323,.791292,73.3796,-.632548,.371738,71.6982,-.915415,-.448242,70.7535,-.81867,-.034335,70.7149,-.937213,-.896523,70.8017,-.822696,-.028585,69.0871,-.917879,-.444722,69.1052,-.937636,-.895919,69.1272,-.921671,-.439308,63.9299,-.921197,-.439985,66.5691,-.939306,-.893534,66.5745,-.939544,-.893193,63.931,-.827992,-.021021,63.9289,-.82733,-.021967,66.5645,-.603175,.329789,63.928,-.60241,.328696,66.561,-.273768,.596132,63.9272,-.272984,.595012,66.5585,-.597054,.321047,69.0758,-.267494,.587173,69.0712,-.592309,.31427,70.6934,-.262768,.580422,70.6882,.112382,.762743,63.9264,.113111,.761702,66.5567,.504117,.806359,63.9256,.504723,.805494,66.5555,.118213,.754416,69.0721,.508963,.799438,69.0781,.122377,.748469,70.6969,.512091,.794972,70.718,.867069,.711022,70.7497,1.19838,.553608,70.7871,.865383,.713429,69.0884,1.19836,.553646,69.1009,.862407,.71768,66.5549,.861982,.718287,63.9248,1.19686,.555783,66.5545,1.19665,.556088,63.924,1.05118,-1.10082,64.2572,.953823,-1.14904,63.3816,.717029,-1.25483,63.0469,.729198,-1.2488,64.2153,.394604,-1.33415,62.9991,.394604,-1.33415,64.2092,1.06509,-1.09393,65.797,.730936,-1.24794,65.7961,.394604,-1.33415,65.7953,1.00259,-1.19221,72.5884,1.05341,-1.11589,72.1297,.716359,-1.27536,72.1082,.659162,-1.38052,72.6662,.377335,-1.36663,72.093,.306404,-1.50003,72.7329,.569459,-1.53237,73.1318,.855216,-1.33449,72.89,.206721,-1.68751,73.3229,-.692389,-.677001,62.9991,-.760604,-.398959,63.0469,-.760446,-.387915,64.2148,-.692389,-.677001,64.2089,-.767874,-.186136,63.3816,-.76661,-.097781,64.2565,-.760424,-.386337,65.792,-.692389,-.677001,65.7926,-.766429,-.085159,65.7913,-.711148,-.712282,72.1074,-.776293,-.416183,72.1189,-.832004,-.522496,72.6831,-.78234,-.846174,72.7526,-.77876,-.10835,72.1315,-.816008,-.190686,72.5969,-.909759,-.679479,73.15,-.88206,-1.03372,73.3434,-.867553,-.373606,72.9023,-.516856,-.943683,64.209,-.516856,-.943683,62.9991,-.516856,-.943683,65.7933,-.254611,-1.1611,64.209,-.254611,-1.1611,62.9991,-.254611,-1.1611,65.7939,.058747,-1.3009,64.2091,.058747,-1.3009,65.7946,.058747,-1.3009,62.9991,-.618412,-1.13468,72.7948,-.732254,-1.34879,73.4636,-.359792,-1.35892,72.8049,-.478519,-1.58221,73.5006,-.537293,-.982119,72.0982,-.275292,-1.2,72.0915,-.041678,-1.48977,72.782,-.155495,-1.70383,73.4503,.039273,-1.33753,72.0884,.735084,-1.24014,71.3232,.400785,-1.32253,71.2919,1.06663,-1.09103,71.3623,.398115,-1.32755,69.9734,.73345,-1.24321,69.9881,1.06635,-1.09155,70.0059,.731251,-1.24735,67.9339,1.06524,-1.09364,67.9382,.395043,-1.33332,67.9301,.059254,-1.29995,67.9273,-.254091,-1.16013,67.9253,.062805,-1.29327,69.9643,-.250452,-1.15328,69.9605,.065951,-1.28735,71.2745,-.247318,-1.14739,71.2704,-.516373,-.942774,67.9238,-.691987,-.676245,67.9229,-.512991,-.936412,69.9613,-.689175,-.670958,69.9662,-.51023,-.93122,71.2774,-.687102,-.667058,71.2945,-.757051,-.379994,71.3202,-.765278,-.082994,71.3504,-.758169,-.382096,69.9745,-.765296,-.083027,69.9846,-.760142,-.385807,67.9223,-.766288,-.084893,67.922,1.23544,.351254,64.4498,1.2522,.249417,63.618,1.28254,.004907,63.3,1.28044,.017637,64.41,1.26505,-.310044,63.2546,1.26505,-.310044,64.4042,1.23304,.365802,65.9126,1.28015,.019455,65.9118,1.26505,-.310044,65.911,1.30496,.281727,72.3644,1.24974,.349099,71.9286,1.301,-.001404,71.9082,1.38066,-.082575,72.4383,1.28976,-.334753,71.8938,1.39125,-.436246,72.5017,1.49369,-.206245,72.8807,1.39329,.108322,72.651,1.53388,-.57888,73.0622,.366119,-1.11504,63.2546,.094574,-1.09979,63.3,.084584,-1.09658,64.4095,.366119,-1.11504,64.4039,-.100793,-1.04728,63.618,-.180711,-1.02159,64.4492,.083157,-1.09612,65.9078,.366119,-1.11504,65.9084,-.192128,-1.01792,65.9072,.392961,-1.14188,71.9075,.105864,-1.11882,71.9184,.186973,-1.19897,72.4544,.494827,-1.24375,72.5205,-.174485,-1.03556,71.9304,-.110029,-1.09227,72.3725,.307995,-1.31321,72.8979,.637514,-1.38644,73.0817,.041835,-1.18991,72.6626,.657151,-1.02964,64.404,.657151,-1.02964,63.2546,.657151,-1.02964,65.9091,.927516,-.851785,64.404,.927516,-.851785,63.2546,.927516,-.851785,65.9097,1.14155,-.605932,64.4041,1.14155,-.605932,65.9103,1.14155,-.605932,63.2546,.802464,-1.17496,72.5605,.965356,-1.33785,73.1958,1.07802,-1.00229,72.5701,1.2479,-1.17217,73.231,.686393,-1.05889,71.8987,.957108,-.881377,71.8924,1.28525,-.749625,72.5483,1.44811,-.912484,73.1833,1.16942,-.633796,71.8895,1.27421,.02539,71.1625,1.2562,-.3012,71.1328,1.23083,.368014,71.1996,1.26002,-.30502,69.8802,1.27655,.023052,69.8942,1.23123,.367613,69.9111,1.2797,.019905,67.9426,1.23281,.366028,67.9467,1.26442,-.309416,67.9391,1.14083,-.605206,67.9364,.926772,-.851041,67.9344,1.13575,-.600125,69.8715,.921565,-.845834,69.868,1.13125,-.595623,71.1162,.917081,-.84135,71.1123,.656459,-1.02895,67.9331,.365544,-1.11447,67.9322,.651619,-1.02411,69.8687,.361521,-1.11044,69.8733,.647669,-1.02016,71.119,.358554,-1.10748,71.1352,.078331,-1.09129,71.1596,-.193776,-1.01627,71.1883,.07993,-1.09289,69.8812,-.193751,-1.0163,69.8909,.082754,-1.09571,67.9317,-.192331,-1.01772,67.9314,1.23544,.351254,64.4498,1.2522,.249417,63.618,1.28254,.004907,63.3,1.28044,.017637,64.41,1.26505,-.310044,63.2546,1.26505,-.310044,64.4042,1.23304,.365802,65.9126,1.28015,.019455,65.9118,1.26505,-.310044,65.911,1.30496,.281727,72.3644,1.24974,.349099,71.9286,1.301,-.001404,71.9082,1.38066,-.082575,72.4383,1.28976,-.334753,71.8938,1.39125,-.436246,72.5017,1.49369,-.206245,72.8807,1.39329,.108322,72.651,1.53388,-.57888,73.0622,.366119,-1.11504,63.2546,.094574,-1.09979,63.3,.084584,-1.09658,64.4095,.366119,-1.11504,64.4039,-.100793,-1.04728,63.618,-.180711,-1.02159,64.4492,.083157,-1.09612,65.9078,.366119,-1.11504,65.9084,-.192128,-1.01792,65.9072,.392961,-1.14188,71.9075,.105864,-1.11882,71.9184,.186973,-1.19897,72.4544,.494827,-1.24375,72.5205,-.174485,-1.03556,71.9304,-.110029,-1.09227,72.3725,.307995,-1.31321,72.8979,.637514,-1.38644,73.0817,.041835,-1.18991,72.6626,.657151,-1.02964,64.404,.657151,-1.02964,63.2546,.657151,-1.02964,65.9091,.927516,-.851785,64.404,.927516,-.851785,63.2546,.927516,-.851785,65.9097,1.14155,-.605932,64.4041,1.14155,-.605932,65.9103,1.14155,-.605932,63.2546,.802464,-1.17496,72.5605,.965356,-1.33785,73.1958,1.07802,-1.00229,72.5701,1.2479,-1.17217,73.231,.686393,-1.05889,71.8987,.957108,-.881377,71.8924,1.28525,-.749625,72.5483,1.44811,-.912484,73.1833,1.16942,-.633796,71.8895,1.27421,.02539,71.1625,1.2562,-.3012,71.1328,1.23083,.368014,71.1996,1.26002,-.30502,69.8802,1.27655,.023052,69.8942,1.23123,.367613,69.9111,1.2797,.019905,67.9426,1.23281,.366028,67.9467,1.26442,-.309416,67.9391,1.14083,-.605206,67.9364,.926772,-.851041,67.9344,1.13575,-.600125,69.8715,.921565,-.845834,69.868,1.13125,-.595623,71.1162,.917081,-.84135,71.1123,.656459,-1.02895,67.9331,.365544,-1.11447,67.9322,.651619,-1.02411,69.8687,.361521,-1.11044,69.8733,.647669,-1.02016,71.119,.358554,-1.10748,71.1352,.078331,-1.09129,71.1596,-.193776,-1.01627,71.1883,.07993,-1.09289,69.8812,-.193751,-1.0163,69.8909,.082754,-1.09571,67.9317,-.192331,-1.01772,67.9314,-.611972,-.379994,64.9234,-.574827,-.293104,64.1664,-.478191,-.089442,63.8771,-.482834,-.100303,64.8871,-.311151,.144572,63.8357,-.311151,.144572,64.8819,-.617278,-.392406,66.2545,-.483498,-.101855,66.2537,-.311151,.144572,66.2531,-.630311,-.291597,72.1257,-.621684,-.37117,71.7291,-.488999,-.075335,71.7105,-.509267,.027106,72.1929,-.317668,.175988,71.6974,-.344439,.305026,72.2506,-.533887,.179017,72.5955,-.612044,-.113716,72.3864,-.382062,.486371,72.7607,.758469,.315098,63.8357,.955314,.167411,63.8771,.961261,.159935,64.8867,.758469,.315098,64.8816,1.07664,.02914,64.1664,1.12422,-.030667,64.9228,.962111,.158867,66.2502,.758469,.315098,66.2507,1.13102,-.039211,66.2496,.751389,.349224,71.7098,.956121,.187737,71.7197,.934254,.290113,72.2075,.72452,.478737,72.2677,1.12636,-.016779,71.7307,1.10558,.059199,72.1331,.89902,.438754,72.6112,.686883,.66015,72.7784,1.03902,.210477,72.397,.497786,.394955,64.8817,.497786,.394955,63.8357,.497786,.394955,66.2513,.207478,.393198,64.8817,.207478,.393198,63.8357,.207478,.393198,66.2519,-.073675,.310831,64.8818,-.073675,.310831,66.2524,-.073675,.310831,63.8357,.459457,.579706,72.3041,.416491,.786808,72.8823,.167781,.584544,72.3128,.122971,.800533,72.9143,.490073,.432134,71.7019,.199673,.430821,71.6961,-.111577,.493524,72.293,-.154534,.700582,72.8708,-.081024,.346259,71.6935,-.481932,-.109401,71.0319,-.308818,.133329,71.0049,-.616695,-.395218,71.0657,-.309826,.138185,69.865,-.482549,-.106428,69.8777,-.6168,-.394708,69.8932,-.483379,-.102427,68.1019,-.617218,-.392694,68.1056,-.310985,.143774,68.0986,-.073483,.309909,68.0961,.207674,.392252,68.0944,-.072143,.303449,69.8571,.209048,.385632,69.8539,-.070956,.297726,70.9898,.210231,.379931,70.9862,.497969,.394076,68.0931,.758621,.314367,68.0923,.499245,.387923,69.8546,.759682,.309252,69.8588,.500287,.382901,70.9923,.760464,.305481,71.0071,.963384,.152731,71.0293,1.13145,-.041305,71.0555,.962962,.154764,69.866,1.13144,-.041273,69.8747,.962217,.158354,68.0919,1.13107,-.039469,68.0916,-2.88331,-1.9969,61.2444,-3.11281,-.616359,61.2819,-3.29063,-.686298,62.782,-3.04425,-2.16512,62.7543,-3.14399,.540538,61.3047,-3.32393,.554046,62.7973,-2.27453,2.54648,62.7765,-2.17027,2.39073,61.2878,-1.60829,2.83913,61.2677,-1.67012,3.02958,62.7596,-2.60816,1.99843,62.782,-2.47905,1.88262,61.2939,-3.01972,1.39656,62.7928,-2.86116,1.32437,61.3038,1.47235,.717769,62.0254,1.62928,.336006,62.0253,1.38622,.673439,60.9138,1.53275,.316966,60.9138,1.65824,-.082635,62.0252,1.5598,-.073942,60.9138,1.48116,-.45493,60.9138,1.30637,-.774894,60.9138,1.38684,-.833318,62.025,1.57403,-.490653,62.0251,.784544,1.2207,60.9138,1.11898,.966346,60.9138,1.18615,1.03146,62.0255,.827991,1.30386,62.0257,1.04977,-.999327,60.9138,1.11204,-1.07367,62.0249,.749313,-1.16685,60.9138,.790261,-1.25308,62.0248,1.22189,-659e-6,60.9138,1.22293,-.34156,60.9138,1.29747,-.36924,62.0249,1.29637,-.004153,62.025,1.15224,-.678225,60.9138,1.22177,-.72979,62.0248,1.09508,.341172,60.9138,1.16056,.361929,62.0251,.859133,.650467,60.9138,.907873,.693167,62.0252,.479219,.749527,60.9138,.810244,.66806,60.9138,.855514,.712009,62.0249,.501005,.799255,62.025,1.11981,.518026,60.9138,1.18704,.55133,62.0248,.181843,1.07798,62.0254,.57292,.945963,62.0253,.1812,1.00979,60.9138,.54637,.886516,60.9138,-2.60818,.170695,60.7508,-2.39269,.774459,60.7508,-2.57466,.825956,61.6484,-2.80544,.179357,61.6484,-2.07599,1.31749,60.7508,-2.23548,1.40752,61.6484,-1.71397,1.87488,61.6484,-1.58903,1.7539,60.7508,-1.07411,2.2424,61.6484,-.991551,2.09707,60.7508,-1.41987,-2.52879,60.7508,-1.92059,-2.12847,60.7508,-2.06906,-2.28293,61.6484,-1.53282,-2.71164,61.6484,-2.33093,-1.65222,60.7508,-2.50851,-1.77289,61.6484,-2.68132,.933411,60.7508,-2.45159,1.48085,60.7508,-2.63774,1.58246,61.6484,-2.88376,.996185,61.6484,-2.134,1.98,60.7508,-2.29761,2.11703,61.6484,-2.75896,.305208,60.7508,-2.96691,.323413,61.6484,-2.71497,-.373067,60.7508,-2.9198,-.402982,61.6484,-2.78062,-1.12764,61.6484,-2.58501,-1.04972,60.7508,-2.22471,2.05384,60.7508,-1.77425,2.50996,60.7508,-1.91234,2.68459,61.6484,-2.39476,2.1961,61.6484,-1.25772,2.86827,60.7508,-1.35916,3.06832,61.6484,-.856168,-.822559,60.9138,-.839635,-.402715,60.9138,-.911416,-.434734,62.0255,-.929122,-.884364,62.0257,-.752982,-.0158,60.9138,-.818616,-.020369,62.0254,-.475727,3.19089,61.2156,-.455815,3.40763,62.7145,1.00908,3.48487,61.1437,1.13499,3.72288,62.6519,-.689,3.27149,61.6484,-.631953,3.05799,60.7508,.046234,3.33416,61.6484,.054575,3.1165,60.7508,-.626557,.914739,60.9138,-.215185,1.00027,60.9138,-.242664,1.06778,62.0255,-.683222,.976188,62.0257,.116864,.709182,60.9138,.112942,.756048,62.0251,-.240324,.555067,60.9138,-.269587,.590999,62.0252,-.595906,.327152,62.0253,-.545026,.308699,60.9138,-.364551,2.35948,60.7508,.254704,2.4906,60.7508,.260561,2.66385,61.6484,-.402628,2.52343,61.6484,3.11446,.048425,60.7508,3.09186,-.584155,60.7508,3.299,-.629046,61.6484,3.3232,.048413,61.6484,3.01152,.720285,60.7508,3.21296,.767938,61.6484,2.68384,2.09679,61.6484,3.01116,1.47771,61.6484,2.51745,1.9611,60.7508,2.82308,1.38303,60.7508,2.91072,-1.14953,60.7508,3.10502,-1.23453,61.6484,2.63784,-1.67446,60.7508,2.81277,-1.79671,61.6484,1.53347,2.75493,60.7508,2.06717,2.39978,60.7508,2.20161,2.56658,61.6484,1.63005,2.94693,61.6484,1.35038,2.94647,60.7508,1.8708,2.66078,60.7508,1.99131,2.84611,61.6484,1.43397,3.15206,61.6484,2.33402,2.29275,60.7508,2.4874,2.45196,61.6484,.847105,2.45162,60.7508,.894991,2.6221,61.6484,1.42246,2.31383,60.7508,1.51117,2.47454,61.6484,-1.67197,-.845438,61.0043,-.951977,-1.66286,61.0043,-1.00341,-2.10802,62.5823,-1.77448,-1.2326,62.5823,-.251927,-2.25235,61.0043,-.25369,-2.73933,62.5823,.411564,-2.42398,61.0043,.456873,-2.92313,62.5823,1.03517,-2.13975,61.0043,1.12472,-2.61873,62.5823,-1.52614,-1.1823,61.0043,-.59862,-1.7535,61.0043,-.531566,-2.18266,62.5823,-1.52489,-1.57094,62.5823,.243191,-2.11256,61.0043,.369969,-2.5672,62.5823,.733732,3.08935,60.7508,.773574,3.30508,61.6484,1.44113,-1.62856,61.0043,1.79725,-.785507,61.0043,2.03428,-1.14599,62.5823,1.65289,-2.04886,62.5823,2.06767,.26969,61.0043,2.32388,-.015933,62.5823,1.62222,-1.43765,61.0043,1.75342,-1.86682,62.5823,2.18933,-.507618,61.0043,2.36077,-.870815,62.5823,.927869,-2.0827,61.0043,1.10322,-2.53522,62.5823,-2.41634,-1.62115,60.5518,-2.573,-.491293,60.581,-1.96518,-1.04405,60.3849,-1.837,-.324918,60.364,-2.59406,.464049,60.602,-1.81775,.348101,60.3733,-2.04472,1.57284,60.5941,-1.78998,1.99228,60.5888,-1.42325,1.14436,60.3678,-1.24036,1.44553,60.3639,-1.32558,2.36259,60.5707,-.906844,1.71143,60.3508,-2.36031,1.11194,60.6023,-1.64987,.813407,60.3737,1.17704,.56578,60.4259,1.29832,.270727,60.4259,.894025,.420125,60.2656,.981154,.208168,60.2656,1.32071,-.052829,60.4259,.997234,-.024264,60.2656,1.25562,-.368174,60.4259,.95048,-.250798,60.2656,1.11095,-.633009,60.4259,.846551,-.441047,60.2656,.693798,1.02449,60.4303,.957686,.808937,60.4264,.654431,.79142,60.3008,.749895,.600022,60.27,.900244,-.819823,60.4264,.707452,-.582896,60.27,.663343,-.965836,60.4303,.623122,-.741329,60.3008,1.04102,.007828,60.4259,1.04338,-.274217,60.4264,.796317,.01931,60.2656,.808913,-.182431,60.27,.995351,-.552039,60.4303,.850749,-.375913,60.3008,.740767,.546766,60.4259,.936062,.290762,60.4259,.580624,.406465,60.2656,.720917,.22256,60.2656,.42631,.628759,60.4259,.700554,.562423,60.4264,.354728,.465366,60.2656,.553578,.425684,60.27,.958552,.445903,60.4303,.751811,.39778,60.3008,.17964,.84418,60.4259,.481891,.742145,60.4259,.177528,.620118,60.2656,.394656,.546819,60.2656,-2.1524,.166104,60.3786,-1.95369,.651451,60.3751,-1.66709,.252766,60.2711,-1.37615,.496637,60.2435,-1.68864,1.09887,60.3746,-1.16458,.803076,60.2395,-1.28558,1.46008,60.3746,-.875039,1.06256,60.2395,-.79105,1.74412,60.3746,-.519783,1.26661,60.2395,-1.17449,-2.10123,60.3786,-1.56363,-1.75543,60.3751,-1.00577,-1.61605,60.2711,-1.1011,-1.2624,60.2435,-1.89965,-1.35918,60.3746,-1.31617,-.962702,60.2395,-2.18967,.780959,60.3746,-2.00348,1.235,60.3751,-1.52451,.574702,60.2395,-1.41952,.907613,60.2435,-1.76826,1.65463,60.3786,-1.45191,1.25626,60.2711,-2.21753,-.300416,60.3746,-2.25394,.260994,60.3746,-1.54452,-.202122,60.2395,-1.57067,.201176,60.2395,-2.10996,-.860481,60.3746,-1.46725,-.604455,60.2395,-1.82515,1.74037,60.3786,-1.44057,2.08988,60.3751,-1.36026,1.49712,60.2711,-.998578,1.54414,60.2435,-1.01136,2.38245,60.3746,-.678045,1.72516,60.2395,-.689295,-.670753,60.4303,-.666596,-.324742,60.4264,-.521701,-.455722,60.3008,-.439757,-.218042,60.27,-.593586,-.004705,60.4259,-.377932,.010307,60.2656,-.392357,2.65685,60.525,-.263909,1.94812,60.3234,.810039,2.92444,60.4666,.407997,2.3177,60.3223,-.493409,2.53948,60.3746,-.305968,1.83796,60.2395,.074831,2.58791,60.3746,.102237,1.87276,60.2395,-.486785,.776716,60.4303,-.148179,.837698,60.4264,-.285491,.65329,60.3008,-.056001,.625666,60.27,-.169257,.467804,60.4259,.126389,.595365,60.4259,-.073108,.349741,60.2656,.139274,.441377,60.2656,-.42146,.263884,60.4259,-.254282,.203252,60.2656,-.27208,1.96132,60.3746,-.146973,1.42264,60.2395,.240479,2.06985,60.3746,.221233,1.5006,60.2395,2.5223,.604555,60.3746,2.6075,.048454,60.3746,1.86042,.447979,60.2395,1.92163,.048494,60.2395,2.5888,-.475133,60.3746,1.90819,-.327634,60.2395,2.11336,1.63158,60.3746,2.36633,1.15311,60.3746,1.56665,1.18576,60.2395,1.74838,.842045,60.2395,2.44289,-.943673,60.3751,1.83262,-.668428,60.2435,2.24514,-1.38221,60.3786,1.89527,-1.01293,60.2711,1.32628,2.30761,60.3786,1.74408,1.99705,60.3751,1.20049,1.80957,60.2711,1.32628,1.46557,60.2435,1.14737,2.44717,60.3746,1.57946,2.21474,60.3751,.872715,1.77166,60.2395,1.19283,1.63399,60.2435,1.97221,1.93829,60.3786,1.54295,1.64058,60.2711,.730622,2.04093,60.3751,.57196,1.5042,60.2435,1.20553,1.95032,60.3786,.903483,1.60973,60.2711,-1.36525,-.604552,60.3238,-.768508,-1.25612,60.3214,-.940229,-.614027,60.1892,-.505714,-.899939,60.1702,-.18896,-1.74047,60.3211,-.088552,-1.22186,60.1674,.360213,-1.88252,60.3211,.305956,-1.32391,60.1674,.876376,-1.64727,60.3211,.67675,-1.1549,60.1674,-1.27145,-.888738,60.3238,-.508541,-1.33881,60.3214,-.830421,-.800005,60.1892,-.317384,-.957966,60.1702,.187542,-1.63276,60.3211,.177658,-1.14551,60.1674,.636971,2.56544,60.3746,.506061,1.85661,60.2395,1.17908,-1.23216,60.3211,1.47537,-.537259,60.3214,.889945,-.857726,60.1674,1.11393,-.379676,60.1702,1.70991,.315806,60.3238,1.3604,.085144,60.1892,1.36307,-1.06963,60.3214,1.03214,-.765394,60.1702,1.83801,-.324304,60.3238,1.41366,-.408088,60.1892,.754252,-1.60805,60.3211,.584764,-1.12775,60.1674,1.82133,-1.32165,64.7639,2.07863,-1.32165,67.0856,1.13469,-2.02003,67.0856,.873157,-2.02003,64.7639,2.52216,-.623258,64.7639,2.77632,-.623258,67.0856,2.23071,-1.32165,69.0494,1.31643,-2.02003,69.0494,2.90648,-.623258,69.0494,2.76951,.075129,64.7639,3.02257,.075129,67.0856,2.77632,.773516,67.0856,2.52216,.773516,64.7639,3.14498,.075129,69.0494,2.90648,.773516,69.0494,2.07863,1.4719,67.0856,1.82133,1.4719,64.7639,1.13469,2.17029,67.0856,.873157,2.17029,64.7639,2.23071,1.4719,69.0494,1.31643,2.17029,69.0494,-1.66358,1.05807,64.7639,-1.91756,1.01785,67.0856,-1.09464,1.85528,67.0856,-.836329,1.89619,64.7639,-2.24652,.258653,64.7639,-2.49729,.218935,67.0856,-2.06669,.994228,69.0494,-1.27414,1.82685,69.0494,-2.62399,.198868,69.0494,-2.38158,-.46983,64.7639,-2.63122,-.509369,67.0856,-2.27879,-1.16064,67.0856,-2.02802,-1.12092,64.7639,-2.74999,-.528182,69.0494,-2.40549,-1.18071,69.0494,-1.48055,-1.74131,67.0856,-1.22657,-1.70108,64.7639,-.439132,-2.28346,67.0856,-.180818,-2.24254,64.7639,-1.62969,-1.76493,69.0494,-.618632,-2.31189,69.0494,-.46259,1.04878,62.8729,-.600973,1.10611,64.2918,.046644,1.27432,64.2918,.187183,1.2153,62.8729,-.981731,.829482,62.8729,-1.1186,.885381,64.2918,-.698784,1.15558,66.0857,-.066256,1.33563,66.0857,-1.20577,.924814,66.0857,-1.26138,.513426,62.8729,-1.39789,.568362,64.2918,-1.27977,.091812,62.8729,-1.4172,.146301,64.2918,-1.48261,.601059,66.0857,-1.50837,.175863,66.0857,-1.19819,-.37205,64.2918,-1.05867,-.426562,62.8729,-.84918,-.942921,64.2918,-.706931,-.997715,62.8729,-1.30398,-.342321,66.0857,-.974044,-.911226,66.0857,1.52017,.661075,62.8729,1.59895,.789058,64.2918,1.66377,.1231,64.2918,1.58299,-.006747,62.8729,1.38479,1.20813,62.8729,1.46191,1.33484,64.2918,1.6666,.879826,66.0857,1.74548,.226921,66.0857,1.51798,1.41667,66.0857,1.11637,1.53378,62.8729,1.19248,1.66029,64.2918,.702824,1.6179,62.8729,.77864,1.74539,64.2918,1.24152,1.74075,66.0857,.82559,1.83271,66.0857,.232409,1.61016,64.2918,.156243,1.48061,62.8729,-.386031,1.35475,64.2918,-.462901,1.22255,62.8729,.281811,1.71189,66.0857,-.331702,1.47502,66.0857,.689096,-1.33887,62.8729,.811272,-1.42638,64.2918,.142414,-1.4446,64.2918,.018518,-1.35496,62.8729,1.24426,-1.24198,62.8729,1.36528,-1.32775,64.2918,.8971,-1.5002,66.0857,.240282,-1.53335,66.0857,1.44301,-1.3894,66.0857,1.58784,-.996932,62.8729,1.70873,-1.08169,64.2918,1.7006,-.59026,62.8729,1.82249,-.674785,64.2918,1.78558,-1.13622,66.0857,1.90632,-.727712,66.0857,1.72569,-.120452,64.2918,1.60177,-.035435,62.8729,1.51405,.514298,64.2918,1.38754,.600203,62.8729,1.82373,-.17683,66.0857,1.63023,.451712,66.0857,-1.13038,1.38193,73.1746,-1.00563,1.34883,72.8371,-1.45704,1.04596,72.8556,-1.63296,1.09029,73.2346,-1.31573,1.41662,73.5218,-1.86855,1.14874,73.6408,-.529694,1.62348,73.09,-.453703,1.61301,72.8119,-.7897,1.57518,73.3337,1.39093,1.96567,72.864,.953781,2.10384,72.8576,1.05124,2.23957,73.2349,1.49958,2.11477,73.2558,1.18197,2.42013,73.6408,1.64516,2.31431,73.6811,1.8149,1.78072,73.2347,1.71642,1.64555,72.8567,1.94577,1.96119,73.6408,.414281,2.07523,72.8385,.48449,2.17365,73.1748,-.181044,1.95565,72.8126,-.127712,2.00966,73.0901,.597845,2.30801,73.5218,.100892,2.1247,73.3337,-1.72418,.672167,72.8615,-1.79027,.220999,72.8539,-1.96669,.264256,73.2344,-1.91959,.71966,73.2555,-2.20235,.322551,73.6408,-2.18184,.783271,73.6811,2.00782,1.25832,73.1746,1.93954,1.15863,72.8367,2.09362,1.40926,73.5218,2.13142,.652202,73.0897,2.10682,.580734,72.8098,2.13769,.900867,73.3337,-1.67204,-.301104,72.8339,-1.7961,-.265837,73.1742,-1.45328,-.8619,72.807,-1.51696,-.820209,73.0894,-1.96943,-.20134,73.5218,-1.67984,-.627996,73.3337,2.18599,-.855068,72.8519,2.18728,-.323118,72.8339,2.3034,-.376053,73.1742,2.35358,-.920664,73.2341,2.09897,.267974,72.8093,2.15206,.21384,73.0897,2.46217,-.463953,73.5218,2.57716,-1.008,73.6408,2.2701,-.001906,73.3337,1.28405,-1.83181,73.1738,1.16654,-1.78059,72.831,1.67564,-1.58381,72.8504,1.84257,-1.65044,73.234,1.46127,-1.89339,73.5218,2.06606,-1.73792,73.6408,.64032,-1.94508,73.0891,.567805,-1.91822,72.805,.907167,-1.94838,73.3337,2.20638,-1.35012,73.255,2.02043,-1.27859,72.8578,2.45574,-1.44524,73.6811,1.2869,-.319273,60.7197,1.22879,.298462,60.7197,1.39909,.474854,61.6287,1.46132,-.186707,61.6287,1.10356,.804488,60.7197,1.26498,1.01678,61.6287,.861221,-.933281,60.7197,1.17903,-.706611,60.7197,1.4021,-.866361,61.6287,1.06174,-1.10911,61.6287,1.28333,-.33044,60.7197,1.5138,-.463503,61.6287,1.19192,.182773,60.7197,1.4159,.086121,61.6287,.993748,.770738,60.7197,1.20367,.7158,61.6287,.855274,1.10571,60.7197,.999075,1.33938,61.6287,.472744,1.18352,60.7197,.589406,1.4227,61.6287,-1.4245,.344363,61.0043,-1.54943,-.329484,61.0043,-1.99254,-.407144,62.5823,-1.85875,.31451,62.5823,-1.22239,-.931746,61.0043,-1.64229,-1.05213,62.5823,-.552646,.632519,60.7197,-.811323,.340167,60.7197,-1.05272,.430194,61.6287,-.775692,.743287,61.6287,-.828331,-.049826,60.7197,-1.07094,.012533,61.6287,-.120073,1.85909,61.0043,-.885279,1.08383,61.0043,-1.28127,1.10644,62.5823,-.461775,1.9367,62.5823,-.481047,-1.46839,61.0043,-.848359,-1.62685,62.5823,.486275,-1.96924,61.0043,.18759,-2.16324,62.5823,.5286,.989396,60.7197,-.07244,.835368,60.7197,-.261418,.960527,61.6287,.382264,1.12548,61.6287,-.62381,-.529322,60.7197,-.851905,-.500982,61.6287,-.298456,-1.05764,60.7197,-.503468,-1.06678,61.6287,-.032843,1.05653,60.7197,.04795,1.2867,61.6287,-.605552,.817826,60.7197,-.56539,1.03107,61.6287,-.272593,-1.03778,60.7197,.347691,-1.02291,60.7197,.511774,-1.2051,61.6287,-.152517,-1.22103,61.6287,1.6973,-.572869,61.0043,1.9261,.073139,61.0043,2.37551,.07488,62.5823,2.13047,-.616959,62.5823,1.6973,.719147,61.0043,2.13047,.76672,62.5823,.171974,-1.86489,61.0043,1.04904,-1.21888,61.0043,1.43622,-1.3088,62.5823,.496934,-2.00064,62.5823,1.04904,1.36516,61.0043,1.43622,1.45856,62.5823,.171974,2.01116,61.0043,.496934,2.1504,62.5823,1.07048,-.301245,60.3087,1.01395,.200238,60.306,.883371,-.12824,60.2086,.781302,.160515,60.1875,.909086,.617675,60.3057,.697195,.450174,60.1845,.688428,-.726248,60.3057,.951482,-.538633,60.3057,.536116,-.503189,60.1845,.725086,-.368413,60.1845,1.03781,-.227276,60.3057,.787103,-.144743,60.1845,.96376,.196637,60.306,.745645,.153401,60.1875,.811019,.677162,60.3087,.718098,.453929,60.2086,.703579,.867,60.3057,.549565,.629281,60.1845,.386957,.931402,60.3057,.322114,.675545,60.1845,-1.03496,.31153,60.3211,-1.13836,-.246215,60.3211,-.680372,.239796,60.1674,-.754651,-.16087,60.1674,-.867664,-.744709,60.3211,-.560195,-.518972,60.1674,-.36657,.507186,60.3057,-.580677,.265205,60.3057,-.207031,.374873,60.1845,-.360838,.201041,60.1845,-.594755,-.057593,60.3057,-.370952,-.030846,60.1845,.023522,1.56453,60.3238,-.591289,.923495,60.3214,-.07438,1.13449,60.1892,-.380955,.678734,60.1702,-.256563,-1.18988,60.3214,-.139462,-.845986,60.1702,.526536,-1.61138,60.3238,.295255,-1.19929,60.1892,.517486,.808138,60.3087,.029536,.67578,60.306,.348719,.631582,60.2086,.067603,.501049,60.1875,-.427029,-.454258,60.306,-.261791,-.31423,60.1875,-.168623,-.89004,60.3087,-.155462,-.616309,60.2086,-.030757,.827959,60.306,.027589,.613391,60.1875,-.499457,.64207,60.3087,-.270286,.564947,60.2086,-.239511,-.823151,60.3087,.264694,-.801733,60.306,-.053875,-.648564,60.2086,.241296,-.566885,60.1875,1.31864,-.465792,60.3211,1.50802,.068911,60.3211,.980944,-.320923,60.1674,1.11699,.06319,60.1674,1.31864,.603613,60.3211,.980944,.447303,60.1674,.077128,-1.53859,60.3238,.784699,-1.00092,60.3214,.242,-1.11626,60.1892,.616491,-.708425,60.1702,.784699,1.1388,60.3214,.616491,.835302,60.1702,.077128,1.6769,60.3238,.242,1.24662,60.1892,2.33027,1.4719,70.2971,2.95365,.773516,70.2969,1.48687,2.17029,70.2972,2.40214,1.4719,71.061,2.95946,.773516,71.0596,1.64814,2.17029,71.0624,-.790985,1.21586,68.3498,-.193377,1.4233,68.3499,-1.27337,.961868,68.3497,-.86633,1.27103,70.3968,-.306222,1.50789,70.3973,-1.32228,.992094,70.3962,1.61941,1.53035,70.3973,1.57323,1.48204,68.3499,1.28049,1.80292,68.3499,1.30919,1.84783,70.3979,.859725,1.91076,68.35,.883247,1.97273,70.3982,.321619,1.82331,68.35,-.280493,1.62933,68.3499,.351234,1.9211,70.3982,-.238633,1.77318,70.3979,-2.16248,.979057,70.2969,-1.44246,1.80019,70.2971,-2.66616,.192188,70.2967,-2.2302,.968331,71.0599,-1.60157,1.77499,71.0615,-2.66636,.192158,71.0584,-1.5445,.622526,68.3496,-1.58728,.636018,70.3954,-1.58518,.190075,68.3495,-1.64394,.195779,70.3945,1.74863,.965854,68.3497,1.86002,.343145,68.3496,1.82354,1.03632,70.3963,1.96979,.445999,70.3952,3.17367,.075129,70.2967,2.95362,-.623258,70.2965,3.15616,.075129,71.0582,2.95921,-.623258,71.0568,-2.77324,-.531864,70.2966,-2.44763,-1.18738,70.2964,-2.74961,-.52812,71.057,-2.44762,-1.18738,71.0557,-1.41461,-.327725,68.3494,-1.12881,-.89208,68.3493,-1.5096,-.321615,70.3935,-1.27108,-.881094,70.3924,1.93208,-.224304,68.3494,1.98179,-.7672,68.3493,1.78057,.389873,68.3495,2.02741,-.26061,70.3936,2.04184,-.794928,70.3925,1.92096,.338152,70.3947,-1.72536,-1.78008,70.2962,-.786715,-2.33851,70.2961,-1.79227,-1.79068,71.0544,-.944153,-2.36344,71.0532,2.33015,-1.32165,70.2964,1.48663,-2.02003,70.2962,2.40118,-1.32165,71.0554,1.64619,-2.02003,71.054,.977175,-1.58801,68.349,.348205,-1.65569,68.349,1.50434,-1.44905,68.3491,1.04211,-1.66747,70.3907,.442957,-1.77212,70.3904,1.54921,-1.49837,70.3911,1.84487,-1.17941,68.3492,1.88756,-1.2111,70.3917,1.33258,1.88427,72.1419,1.32499,1.87244,71.5758,.895984,2.00745,71.5766,.902106,2.02414,72.143,1.65806,1.56971,72.1394,1.64552,1.55694,71.574,1.67172,1.58567,72.5149,1.34371,1.9004,72.5176,.91165,2.0425,72.5175,-.203698,1.89637,72.1421,-.19515,1.92394,72.5112,.38425,2.02638,72.5151,.375437,2.00392,72.1429,.36758,1.97703,71.5765,-.215038,1.85639,71.5759,3.06158,.773516,72.3177,2.57371,1.4719,72.2689,2.75239,1.46827,72.9168,3.28099,.773516,73.083,1.91375,2.17029,72.2009,2.05952,2.14119,72.6905,2.99726,1.4428,73.6009,3.57804,.773516,73.9274,2.38934,1.93749,73.158,1.78932,2.17029,71.6675,2.4691,1.4719,71.6727,2.97161,.773516,71.6755,-.949019,1.32963,72.5111,-.929142,1.31806,72.1374,-1.36192,1.01727,72.135,-1.38033,1.025,72.5117,-.42408,1.59669,72.5094,-.401906,1.58071,72.1395,-.908757,1.3028,71.5726,-.370851,1.55707,71.5741,-1.34906,1.0091,71.5708,-2.62064,.921534,72.8578,-2.4108,.945657,72.2469,-2.78705,.183355,72.2821,-3.06179,.161756,72.9832,-3.43528,.132252,73.7419,-2.90797,.868648,73.4894,-2.0066,1.68292,72.6834,-1.8633,1.73353,72.1974,-2.3264,1.43687,73.12,-2.2954,.958746,71.6675,-1.74063,1.75296,71.665,-2.677,.191761,71.6683,-1.61039,.643127,71.5687,-1.62149,.646542,72.132,-1.67643,.19828,71.5661,-1.69202,.199482,72.1284,-1.63999,.651479,72.5105,-1.71231,.202784,72.507,1.90433,1.11265,72.5098,2.08489,.553305,72.5034,2.06394,.532936,72.1311,1.88726,1.09501,72.1356,1.86659,1.07597,71.5713,2.0334,.504736,71.568,3.23375,.075129,72.3313,3.14895,.075129,71.6739,3.06055,-.623258,72.3065,2.97087,-.623258,71.6674,3.28028,-.623258,73.0753,3.46893,.075129,73.1391,3.57804,-.623258,73.9274,3.79413,.075129,74.0426,-2.741,-.525275,71.666,-2.45782,-1.18771,71.6604,-2.84916,-.532029,72.291,-2.5676,-1.19607,72.2711,-3.14814,-.554178,73.0247,-2.84264,-1.21772,72.9756,-3.21678,-1.24733,73.7419,-3.56135,-.585526,73.8292,-1.39178,-.872805,72.1199,-1.4197,-.870053,72.4953,-1.61286,-.314835,72.5017,-1.58919,-.317572,72.1243,-1.56339,-.318882,71.5631,-1.35266,-.875492,71.5599,2.1078,-.290328,72.1245,2.13111,-.299371,72.5018,2.11148,-.82558,72.5012,2.09138,-.817123,72.1203,2.04075,.294948,72.1292,2.0679,.284408,72.502,2.0019,.30896,71.5667,2.08173,-.280691,71.5633,2.07532,-.809928,71.5603,-1.9701,-1.81291,72.2249,-2.1822,-1.83003,72.8425,-1.20017,-2.40399,72.1643,-1.35471,-2.39746,72.6596,-2.47983,-1.83299,73.4884,-1.74182,-2.24171,73.1117,-1.85574,-1.79999,71.6516,-1.07964,-2.3849,71.6412,.541555,-1.8939,72.4895,.522446,-1.87127,72.1118,1.09571,-1.73453,72.1129,1.11362,-1.75161,72.4935,1.58541,-1.53925,72.1145,1.60279,-1.55173,72.497,1.57368,-1.52601,71.5561,1.07835,-1.7128,71.555,.496696,-1.83915,71.5542,1.92192,-1.23669,72.1169,1.91078,-1.2284,71.5578,1.94,-1.24624,72.4996,2.56988,-1.32165,72.2465,2.46635,-1.32165,71.6566,1.90593,-2.02003,72.1674,1.78369,-2.02003,71.6434,2.99701,-1.29255,73.5998,2.74972,-1.31801,72.9013,2.38738,-1.78724,73.1496,2.0539,-1.99093,72.6664,3.70469,4.17557,64.6049,4.59633,2.90456,64.5626,4.79482,2.90817,66.5692,3.90831,4.1823,66.6442,5.24824,1.75732,64.5318,5.44306,1.75862,66.5145,5.05251,2.93331,68.2767,4.1849,4.23033,68.3981,5.68712,1.76685,68.1877,5.28883,-1.74104,66.5271,5.09331,-1.74003,64.5394,4.28972,-2.84711,64.5761,4.48865,-2.85071,66.5915,3.21215,-4.06379,64.6252,3.41567,-4.07088,66.6776,5.52884,-1.74888,68.2039,4.7338,-2.87571,68.3052,3.66824,-4.11911,68.4408,5.8729,-.816325,68.16,5.63432,-.815561,66.499,5.94569,-339e-6,68.1506,5.70692,-591e-6,66.4927,5.44027,-.815614,64.5233,5.51324,-802e-6,64.5197,5.69417,.816724,66.4935,5.93328,.817977,68.1528,5.5006,.816371,64.5201,7.40027,3.17546,72.6219,6.53299,3.15403,71.5397,7.3671,1.84179,71.4743,8.46113,1.87038,72.7,6.3831,4.24045,72.3569,5.57275,4.59601,71.6485,5.825,3.07693,70.4905,6.49114,1.81343,70.3573,4.96787,4.50532,70.6878,5.36115,2.99431,69.4987,5.979,1.78659,69.3705,4.52354,4.34717,69.6749,6.16653,-.81844,69.3297,6.24732,2e-6,69.3194,5.81096,-1.7681,69.3877,6.76453,-.821052,70.3374,6.89437,772e-6,70.3398,6.32312,-1.79394,70.3794,7.8733,-.823215,71.5383,8.1196,.002245,71.576,7.2228,-1.82056,71.5114,9.28877,-.825023,72.8861,9.69191,.004139,72.9725,8.35525,-1.84695,72.7582,6.2287,.820738,69.322,6.8263,.824719,70.3275,9.33581,.8345,72.8599,7.92935,.829433,71.5217,5.47657,-3.01844,70.5287,6.2462,-3.09482,71.6028,4.39454,-4.39388,70.7445,5.10798,-4.48651,71.7382,7.21149,-3.117,72.7174,6.07323,-4.14637,72.4694,5.0144,-2.93641,69.5287,3.95438,-4.23593,69.7197,-2.55497,5.53495,66.6442,-2.57468,5.41397,64.6049,-1.36122,5.7879,64.4266,-1.27408,5.874,66.4715,-.245114,5.93382,64.3339,-.119299,6.01172,66.3723,-2.55526,5.66257,68.3981,-1.17932,5.99236,68.2427,.03197,6.13834,68.1382,4.16734,3.23958,66.5915,3.19662,4.35589,66.5271,3.11722,4.17722,64.5394,4.08641,3.05785,64.5761,5.22775,1.8524,66.6776,5.14476,1.66657,64.6252,3.29408,4.57522,68.2039,4.26701,3.46355,68.3052,5.33059,2.08308,68.4408,2.47105,5.23994,68.1584,2.37201,5.02425,66.4945,1.7315,5.64205,68.1382,1.61686,5.44271,66.4571,2.29147,4.84968,64.5171,1.52397,5.28803,64.4702,.821944,5.8174,66.3912,.967648,5.97901,68.1172,.703567,5.70603,64.3778,-.302373,8.16334,72.5451,-.667725,7.31937,71.5007,.83218,7.55664,71.3655,1.36793,8.50917,72.491,-1.79266,7.66987,72.3356,-2.39069,6.97709,71.6459,-.914325,6.62312,70.4781,.41032,6.79434,70.3225,-2.45773,6.30734,70.6878,-1.07134,6.20501,69.4929,.174764,6.35462,69.36,-2.50314,5.88424,69.6749,2.58254,5.50361,69.3233,1.85731,5.90286,69.3076,3.39909,4.83185,69.3869,2.76473,6.02415,70.2879,2.08887,6.44504,70.2574,3.54036,5.29153,70.3731,3.06746,6.97467,71.3837,2.508,7.44814,71.3183,3.74379,6.09335,71.4914,3.4427,8.18331,72.5892,3.04043,8.72725,72.4778,3.98461,7.10073,72.7198,1.11075,6.21778,69.309,1.36752,6.71645,70.2584,2.45193,8.7636,72.4457,1.8431,7.61963,71.3059,4.50795,4.1128,70.5359,4.683,4.75834,71.6257,5.59241,2.6713,70.7445,5.74428,3.20214,71.7408,4.84174,5.58987,72.7633,5.57185,4.14106,72.4908,4.37342,3.71626,69.5296,5.4428,2.33506,69.7197,-6.46536,-.197828,66.638,-6.14042,.064051,64.5554,-5.9341,1.3489,64.3555,-6.14583,1.22194,66.4356,-5.61675,2.39908,64.2597,-5.75206,2.38716,66.3238,-6.91112,-.506504,68.3981,-6.43599,1.06614,68.2314,-5.93463,2.36521,68.1217,-1.76455,5.29242,66.5915,-3.13608,4.73803,66.5271,-2.99299,4.60477,64.5394,-1.61908,5.15674,64.5761,-.107716,5.84343,66.6776,.040972,5.70447,64.6252,-3.31173,4.90158,68.2039,-1.94387,5.45958,68.3052,-.292346,6.01578,68.4408,-4.20731,4.34223,68.1579,-4.03381,4.18299,66.4931,-4.65647,3.65456,66.4453,-4.8221,3.79088,68.1341,-3.89289,4.05322,64.5151,-4.52384,3.5421,64.4537,-5.23626,3.13314,66.357,-5.39004,3.20994,68.1054,-5.11722,3.06559,64.3294,-7.87526,2.65295,72.6634,-7.39885,1.94205,71.5604,-6.98872,3.51643,71.4725,-7.63835,4.37003,72.6963,-8.0273,1.0276,72.3746,-7.85195,.10357,71.6507,-6.9793,1.41049,70.497,-6.4619,2.84209,70.3567,-7.52077,-.313701,70.6878,-6.68761,1.11414,69.4939,-6.13904,2.47838,69.3622,-7.23633,-.531844,69.6749,-4.42176,4.53301,69.324,-5.03435,3.97974,69.3112,-3.52082,5.08523,69.3847,-4.85939,4.88593,70.2937,-5.47546,4.38668,70.2904,-3.91388,5.37412,70.3553,-5.67089,5.50956,71.4019,-6.29467,5.14334,71.4214,-4.61652,5.84126,71.436,-6.70684,6.29564,72.6243,-7.34052,6.10891,72.6757,-5.50512,6.41553,72.6134,-5.58969,3.37228,69.3127,-5.97764,3.77971,70.3,-7.54343,5.52719,72.6951,-6.66965,4.54709,71.4358,-2.4823,5.90098,70.5191,-3.04214,6.28142,71.5724,-.763276,6.45484,70.7445,-1.21654,6.77173,71.736,-3.78598,6.709,72.6574,-2.16596,6.91765,72.4518,-2.14854,5.64274,69.5275,-.494069,6.20391,69.7197,-2.23237,-4.4692,64.5626,-2.39543,-4.57922,66.5692,-.891718,-5.32889,66.6442,-.725679,-5.21707,64.6049,-3.4563,-3.74017,64.5318,-3.61725,-3.84893,66.5145,-2.59862,-4.71639,68.2767,-1.10112,-5.47006,68.3981,-3.81615,-3.98334,68.1877,-5.65963,-.948639,66.5271,-5.4842,-.871147,64.5394,-5.47827,.54636,64.5761,-5.66426,.473284,66.5915,-5.48176,2.19986,66.6776,-5.28376,2.27365,64.6252,-5.85975,-1.03327,68.2039,-5.90461,.395672,68.3052,-5.78053,2.12105,68.4408,-5.53746,-1.9717,68.16,-5.34775,-1.86767,66.499,-5.07105,-2.63509,68.1506,-4.87665,-2.5112,66.4927,-5.18022,-1.77801,64.5233,-4.71407,-2.40905,64.5197,-4.37393,-3.1558,66.4935,-4.57118,-3.2882,68.1528,-4.21336,-3.04821,64.5201,-4.45244,-6.05049,72.6127,-3.73488,-5.56138,71.5349,-5.12448,-4.92182,71.4357,-5.97059,-5.54354,72.6258,-3.01655,-6.37246,72.3569,-2.12134,-6.23391,71.6485,-3.17924,-5.13688,70.4889,-4.44629,-4.42659,70.345,-1.64006,-5.88601,70.6878,-2.82916,-4.87563,69.4985,-4.04778,-4.14206,69.369,-1.33391,-5.63365,69.6749,-5.74062,-2.09616,69.3252,-5.29918,-2.78952,69.3133,-6.06683,-1.12476,69.3862,-6.15374,-2.38899,70.3018,-5.7595,-3.12941,70.2904,-6.43758,-1.3465,70.3671,-6.9452,-2.97373,71.4272,-6.61834,-3.78286,71.4214,-7.10856,-1.80337,71.4727,-7.96556,-3.73436,72.6728,-7.71705,-4.62475,72.6757,-7.96152,-2.40252,72.684,-4.80696,-3.45033,69.3176,-5.25459,-3.77542,70.2919,-7.07656,-5.13647,72.6466,-6.05857,-4.37388,71.4106,-6.58431,.148938,70.5272,-7.15878,-.20916,71.598,-6.65191,1.91278,70.7445,-7.1421,1.58152,71.7382,-7.82849,-.727546,72.7081,-7.56038,.759383,72.4694,-6.18649,.319745,69.5285,-6.18123,2.04875,69.7197,4.09844,-3.56615,64.5626,4.16716,-3.74722,66.5692,5.32306,-2.49671,66.6442,5.24741,-2.30683,64.6049,3.00785,-4.49978,64.5318,3.06751,-4.67641,66.5145,4.22513,-3.99292,68.2767,5.41914,-2.78985,68.3981,3.10051,-4.89206,68.1877,-.439267,-5.33449,66.5271,-.432919,-5.14423,64.5394,-1.64325,-4.55745,64.5761,-1.65672,-4.75136,66.5915,-3.06313,-3.65637,64.6252,-3.07809,-3.85477,66.6776,-.446969,-5.56803,68.2039,-1.67324,-4.99031,68.3052,-3.0965,-4.10101,68.4408,.461807,-5.63758,68.16,.450848,-5.40711,66.499,1.23857,-5.46233,68.1506,1.21219,-5.23782,66.4927,.441023,-5.21934,64.5233,1.18255,-5.05337,64.5197,2.07415,-5.082,66.4935,2.10236,-5.29577,68.1528,2.02744,-4.9028,64.5201,3.27583,-6.94746,73.2082,4.4282,-5.94831,72.9861,4.35467,-5.27591,71.7231,3.14066,-6.15925,71.7391,5.33911,-4.9875,72.4835,5.66408,-4.25091,71.6644,4.27397,-4.70942,70.5485,3.0631,-5.52139,70.442,5.624,-3.68323,70.6878,4.24473,-4.29635,69.506,3.07441,-5.13348,69.3811,5.5213,-3.19357,69.6749,1.25244,-5.72379,69.3249,.474886,-5.90058,69.3377,-.450913,-5.82481,69.3983,.50978,-6.33706,70.4016,1.28121,-6.2038,70.3833,-.432378,-6.19902,70.4641,.582948,-7.06663,71.7389,1.35104,-7.05493,71.7118,-.376643,-6.77294,71.7759,.679209,-7.97231,73.2712,1.44659,-8.12921,73.2333,-.298606,-7.46695,73.2661,2.08848,-5.53626,69.33,2.08877,-5.97468,70.3917,2.2749,-7.7454,73.2452,2.15924,-6.75656,71.7223,-1.70047,-5.62376,70.5867,-1.69444,-6.17886,71.7861,-3.16687,-4.78715,70.7445,-3.17905,-5.415,71.754,-1.62674,-6.84097,73.0813,-2.7594,-6.14579,72.5959,-1.68925,-5.25251,69.536,-3.11947,-4.37724,69.7197,-5.32832,-.819815,62.5752,-4.92104,-.765035,61.095,-4.91118,.542738,61.1015,-5.31917,.581919,62.5928,-4.72809,2.14072,61.1101,-5.12406,2.29326,62.6165,-3.77326,3.93863,62.5615,-3.47795,3.64746,61.0901,-2.64398,4.15909,61.095,-2.88068,4.48509,62.5752,-4.40223,3.42751,62.5183,-4.06743,3.15889,61.0751,-5.51352,2.27783,62.3576,-5.00009,2.94483,62.4266,-5.14263,2.01803,60.9901,-4.63399,2.68022,61.0395,-5.03169,-1.71157,62.5675,-4.64593,-1.59495,61.0922,-4.57388,-2.32996,62.5657,-4.22013,-2.16956,61.0915,-3.32968,-3.64516,62.5715,-4.07962,-2.9602,62.5659,-3.05923,-3.39631,61.0936,-3.7594,-2.75687,61.0916,-2.57971,4.72332,61.1058,-1.35601,5.18971,61.0647,-1.42016,5.64386,62.4884,-2.65524,5.19987,62.6062,-.257164,5.39997,61.0441,-.291212,5.83027,62.4293,-1.3716,4.66792,61.1015,-1.51846,5.03058,62.5928,.165896,5.17233,61.1101,.127562,5.57148,62.6165,-.531126,-4.76148,61.1058,-1.92617,-4.07028,61.0987,-2.11641,-4.36696,62.5861,-.62268,-5.10723,62.6062,-.420719,-4.99192,62.5752,-.359787,-4.65639,61.095,-1.47371,-4.11116,61.1015,-1.61556,-4.40875,62.5928,-2.78583,-3.27475,61.1101,-3.02121,-3.51386,62.6165,.435552,-5.06775,62.5675,.435794,-4.72778,61.0922,1.1578,-4.90511,62.5657,1.10505,-4.57669,61.0915,.655929,5.59559,62.4637,.630172,5.19133,61.0561,1.46732,5.15271,62.5302,1.37205,4.77465,61.0792,5.27882,-.807644,62.5675,4.89377,-.75099,61.0922,4.57167,-1.60597,61.095,4.93425,-1.72333,62.5752,5.35144,-486e-6,62.5657,4.96176,.002687,61.0915,5.08888,1.7412,62.5715,5.3391,.809029,62.5659,4.71674,1.62903,61.0936,4.95036,.758576,61.0916,3.28653,3.86639,61.1058,4.11274,2.69042,61.0987,4.44219,2.87781,62.5861,3.55762,4.13708,62.6062,3.82607,-2.62978,61.1015,4.13644,-2.81988,62.5928,2.82636,-3.7549,61.1101,3.06668,-4.02496,62.6165,4.83191,-2.04196,61.1058,3.77008,-3.20805,61.0987,4.0224,-3.43679,62.5861,5.15977,-2.18819,62.6062,2.76616,-4.07125,61.0936,2.94572,-4.3615,62.5715,3.04374,4.03532,62.5752,2.83437,3.72817,61.095,3.72973,2.69077,61.1015,4.003,2.9249,62.5928,4.70722,1.40126,61.1101,5.05032,1.54466,62.6165,2.22631,4.70424,62.563,2.07245,4.35342,61.0906,1.98301,-4.75862,62.5659,1.87072,-4.44107,61.0916,-5.82655,-.211562,60.8807,-5.52385,1.00873,60.9362,-5.85596,1.24376,62.3799,-6.09379,-.014555,62.4606,-4.03023,-.675767,60.4274,-4.02852,.404309,60.4298,-2.84501,-.56389,60.2478,-2.89354,.197244,60.2528,-3.92459,1.71281,60.436,-3.16752,1.03424,60.2826,-3.33115,2.61149,60.4243,-2.83905,3.01733,60.4263,-2.3509,1.89536,60.2473,-1.99062,2.18084,60.2474,-2.14811,3.44093,60.4274,-1.49329,2.48427,60.2478,-4.24824,1.64925,60.3819,-3.81061,2.21052,60.4159,-3.03458,1.22323,60.2203,-2.71005,1.62009,60.2439,-3.4512,-1.83658,60.4264,-3.8031,-1.36183,60.4265,-2.42919,-1.39756,60.2473,-2.68192,-1.05662,60.2474,-2.4906,-2.85157,60.4269,-3.07009,-2.32233,60.4264,-1.73917,-2.12664,60.2475,-2.15545,-1.74646,60.2473,-2.14507,3.92131,60.4342,-1.09329,4.2387,60.4245,-1.46157,3.22567,60.2816,-.708497,3.02768,60.2522,-.159422,4.40183,60.4208,-.028122,3.06145,60.2475,-1.09973,3.86686,60.4298,-.775741,2.826,60.2528,.138783,4.31856,60.436,-.135116,3.40093,60.2826,-.440609,-4.00965,60.4342,-1.55807,-3.41294,60.4288,-.576717,-3.16317,60.2816,-1.10804,-2.55549,60.2522,-.215336,-3.94658,60.4274,-1.13675,-3.50116,60.4298,-.020621,-3.0076,60.2478,-.682208,-2.73187,60.2528,-2.22241,-2.85119,60.436,-1.46029,-2.57482,60.2826,.994297,-3.88103,60.4264,.44194,-4.00585,60.4265,.84798,-2.96057,60.2473,.451387,-3.0502,60.2474,.57053,4.25066,60.422,.485866,2.98503,60.2473,1.16848,3.93305,60.4248,.897007,2.80941,60.2473,4.12212,.010571,60.4264,4.06579,-.613247,60.4265,3.00784,.021277,60.2473,2.96736,-.426853,60.2474,3.79908,-1.3209,60.4274,2.77576,-.935205,60.2478,3.91939,1.35671,60.4269,4.11273,.636222,60.4264,2.86221,.988301,60.2475,3.0011,.470724,60.2473,2.7883,3.21774,60.4342,3.42604,2.2364,60.4288,2.43374,2.39137,60.2816,2.55582,1.62851,60.2522,3.18832,-2.16956,60.4298,2.38478,-1.55419,60.2528,2.40657,-3.10975,60.436,2.15773,-2.29493,60.2826,4.09352,-1.82818,60.4342,3.19934,-2.75455,60.4288,3.20158,-1.8091,60.2816,2.44758,-2.19184,60.2522,2.36662,-3.46337,60.4269,1.83348,-2.66062,60.2475,2.36976,3.08088,60.4274,3.11341,2.22788,60.4298,1.75008,2.22519,60.2478,2.30369,1.65473,60.2528,3.94099,1.20105,60.436,3.03404,1.21339,60.2826,1.7403,3.59672,60.4264,1.29914,2.59227,60.2474,1.62653,-3.76915,60.4264,1.30196,-2.88024,60.2473,-4.91438,-.224545,60.2138,-4.59206,.79226,60.3081,-3.88808,.054505,60.1233,-3.3251,.622108,60.1678,1.97242,3.36234,64.7627,2.00989,3.3801,66.7768,.784436,4.26608,66.8042,.74051,4.24223,64.7568,2.8828,2.49797,64.7621,2.91747,2.50795,66.7518,2.13219,3.40488,68.4962,.950728,4.32847,68.5736,3.01223,2.50832,68.4346,3.52347,-.533785,66.7214,3.47652,-.486495,64.7274,2.88011,-1.62722,64.7007,2.92861,-1.6813,66.7224,1.97006,-2.98912,64.6628,2.02037,-3.04519,66.7216,3.63515,-.567697,68.4079,3.0429,-1.72361,68.4458,2.13832,-3.08994,68.4948,3.71794,.24836,68.3895,3.60795,.26554,66.7186,3.55507,.919062,68.3879,3.45057,.923112,66.7201,3.5624,.298363,64.7363,3.40786,.938624,64.7402,3.30719,1.6713,66.7317,3.40102,1.66764,68.4004,3.26949,1.67224,64.7514,4.03153,3.70402,72.9688,3.30765,3.579,71.8391,4.30099,2.64861,71.8069,5.24248,2.8799,73.0956,2.92674,4.38517,72.6571,2.17658,4.60609,71.9095,2.72712,3.46402,70.7511,3.56578,2.49806,70.6411,1.67281,4.53687,70.9157,2.35087,3.41807,69.734,3.17725,2.47725,69.629,1.26002,4.42353,69.8737,3.74813,.931472,69.571,3.91061,.258283,69.5734,3.81597,-.57738,69.6048,4.38082,.348699,70.6129,4.27317,1.03428,70.6267,4.19411,-.531382,70.6218,5.28475,.560801,71.8742,5.32573,1.28835,71.9329,4.87247,-.406891,71.7987,6.44697,.845085,73.2994,6.69308,1.63321,73.4203,5.72904,-.236259,73.1021,3.57087,1.65112,69.5818,4.0406,1.71086,70.6183,6.22955,2.23618,73.2962,4.99139,1.92597,71.8756,3.5567,-1.74122,70.7038,4.12862,-1.694,71.8146,2.65154,-3.14928,70.832,3.21239,-3.12078,71.8611,4.84761,-1.57546,72.9763,3.96894,-2.68131,72.6489,3.22065,-1.7466,69.6819,2.32012,-3.12015,69.7864,-3.32454,-2.5225,64.7627,-3.36488,-2.53209,66.7768,-2.35041,-3.6535,66.8042,-2.30249,-3.63929,64.7568,-4.03531,-1.48774,64.7621,-4.07129,-1.4903,66.7518,-3.48966,-2.5309,68.4962,-2.52604,-3.67995,68.5736,-4.16406,-1.47095,68.4346,-4.03164,1.61096,66.7214,-3.99555,1.55494,64.7274,-3.175,2.54674,64.7007,-3.2112,2.60972,66.7224,-2.00168,3.68967,64.6628,-2.03923,3.75498,66.7216,-4.13383,1.66735,68.4079,-3.3142,2.67487,68.4458,-2.14531,3.82327,68.4948,-4.38448,.886342,68.3895,-4.28046,.846669,66.7186,-4.36461,.196433,68.3879,-4.26324,.170745,66.7201,-4.24274,.805093,64.7363,-4.22469,.146693,64.7402,-4.27855,-.590905,66.7317,-4.36957,-.567816,68.4004,-4.24187,-.599665,64.7514,-6.3129,-1.37073,73.0214,-5.39594,-2.42861,72.9596,-4.66848,-2.45682,71.8343,-5.39657,-1.34024,71.7683,-4.47066,-3.32457,72.6571,-3.78282,-3.69663,71.9095,-4.08159,-2.46505,70.7495,-4.68506,-1.34583,70.6287,-3.27567,-3.73366,70.9157,-3.70601,-2.49833,69.7338,-4.31672,-1.40626,69.6274,-2.84833,-3.70862,69.8737,-4.54688,.224434,69.5648,-4.56841,.916693,69.5689,-4.30639,1.71442,69.6032,-5.00106,.926017,70.5773,-5.01769,.233031,70.5773,-4.6698,1.74805,70.6095,-5.81739,.906485,71.7631,-5.94433,.203355,71.7783,-5.32029,1.76731,71.7601,-6.86188,.870054,73.086,-7.14279,.15032,73.1234,-6.14095,1.7785,73.0279,-4.52569,-.516343,69.5774,-4.95149,-.477116,70.5827,-6.93844,-.535843,73.0829,-5.81428,-.489842,71.7645,-3.81082,2.79892,70.7023,-4.37519,2.87164,71.8098,-2.63497,3.98802,70.832,-3.1895,4.07675,71.8611,-5.09652,2.90517,72.9671,-4.02088,3.80418,72.6489,-3.48299,2.73432,69.6817,-2.31685,3.89062,69.7864,-2.54223,3.83995,64.7627,-2.54969,3.88073,66.7768,-3.72265,2.92635,66.8042,-3.71098,2.87774,64.7568,-1.47169,4.49559,64.7621,-1.47236,4.53166,66.7518,-2.54197,4.00528,68.4962,-3.73988,3.10312,68.5736,-1.44818,4.62329,68.4346,1.62258,4.32976,66.7214,1.56475,4.29664,64.7274,2.51224,3.42531,64.7007,2.57703,3.45816,66.7224,3.59219,2.19378,64.6628,3.65938,2.22787,66.7216,1.68424,4.42885,68.4079,2.64748,3.55761,68.4458,3.73313,2.33022,68.4948,.917416,4.72003,68.3895,.872353,4.61823,66.7186,.227412,4.7363,68.3879,.196453,4.6364,66.7201,.82886,4.58273,64.7363,.170418,4.59917,64.7402,-.563351,4.69156,66.7317,-.53553,4.78125,68.4004,-.574018,4.65539,64.7514,-2.33933,5.91732,72.9688,-2.40592,5.18576,71.8391,-1.25015,5.90444,71.8069,-1.22988,6.87371,73.0956,-3.28322,5.02647,72.6571,-3.69076,4.35905,71.9095,-2.44512,4.59524,70.7511,-1.29501,5.15532,70.6411,-3.75428,3.85453,70.9157,-2.49812,4.21992,69.734,-1.37547,4.77464,69.629,-3.75164,3.42647,69.8737,.265394,4.92599,69.571,.957695,4.9087,69.5734,1.74039,4.601,69.6048,.992062,5.3863,70.6129,.301976,5.45976,70.6267,1.79383,4.97816,70.6218,1.02114,6.31431,71.8742,.328987,6.54221,71.9329,1.84915,5.66563,71.7987,1.04735,7.51051,73.2994,.349775,7.95222,73.4203,1.90603,6.53718,73.1021,-.475612,4.94104,69.5818,-.411742,5.41022,70.6183,-.352616,7.66054,73.2962,-.373438,6.38428,71.8756,2.79747,4.04934,70.7038,2.89988,4.61399,71.8146,3.92328,2.81059,70.832,4.04091,3.35971,71.8611,2.97147,5.33916,72.9763,3.81222,4.20422,72.6489,2.71569,3.72335,69.6819,3.80936,2.498,69.7864,2.99577,-2.69948,64.7627,3.00323,-2.74026,66.7768,4.17619,-1.78588,66.8042,4.16452,-1.73727,64.7568,1.92523,-3.35512,64.7621,1.9259,-3.39119,66.7518,2.99551,-2.86481,68.4962,4.19342,-1.96265,68.5736,1.90172,-3.48282,68.4346,-1.16904,-3.18929,66.7214,-1.11121,-3.15617,64.7274,-2.0587,-2.28484,64.7007,-2.12349,-2.3177,66.7224,-3.13865,-1.05331,64.6628,-3.20584,-1.0874,66.7216,-1.2307,-3.28838,68.4079,-2.19394,-2.41714,68.4458,-3.27959,-1.18975,68.4948,-.463876,-3.57956,68.3895,-.418813,-3.47776,66.7186,.226127,-3.59583,68.3879,.257086,-3.49594,66.7201,-.37532,-3.44227,64.7363,.283122,-3.45871,64.7402,1.01689,-3.55109,66.7317,.989069,-3.64078,68.4004,1.02756,-3.51492,64.7514,1.65594,-5.4859,73.0461,2.78944,-4.74593,72.9627,2.85767,-4.02918,71.8359,1.68937,-4.63515,71.7812,3.73676,-3.886,72.6571,4.1443,-3.21858,71.9095,2.89808,-3.44962,70.75,1.74397,-3.97363,70.6328,4.20782,-2.71407,70.9157,2.95158,-3.07881,69.7339,1.82843,-3.62902,69.6279,4.20518,-2.286,69.8737,.185856,-3.76491,69.5669,-.505766,-3.75342,69.5701,-1.28714,-3.45538,69.6009,-.551405,-4.12731,70.5864,.133242,-4.15439,70.5937,-1.34258,-3.79647,70.5909,-.607859,-4.80346,71.7913,.067295,-4.88642,71.8298,-1.40277,-4.39633,71.7021,-.671105,-5.65891,73.1401,-.006169,-5.82235,73.2224,-1.46624,-5.14936,72.9166,.927505,-3.78575,69.5789,.852113,-4.15123,70.5946,.72714,-5.80894,73.154,.785824,-4.87343,71.8015,-2.33734,-2.90372,70.6319,-2.42619,-3.45742,71.5942,-3.456,-1.67012,70.696,-3.54786,-2.21924,71.47,-2.48185,-4.16778,72.579,-3.30372,-3.06376,72.1047,-2.26133,-2.58224,69.673,-3.3541,-1.35753,69.7694,3.55899,.33922,62.7765,3.38239,.353979,61.2878,3.30207,-.360466,61.2677,3.4732,-.429762,62.7596,3.40737,.962666,62.782,3.24144,.931613,61.2939,2.89216,2.49013,62.7973,3.2728,1.67927,62.7928,2.76262,2.35079,61.3047,3.11688,1.59654,61.3038,.788319,4.57881,62.7765,.72701,4.33364,61.2878,1.39632,4.07115,61.2677,1.5089,4.29692,62.7596,.146874,4.59372,62.782,.132578,4.347,61.2939,1.9144,-3.36071,62.7973,1.03266,-3.51852,62.7928,1.80751,-3.18959,61.3047,.987276,-3.33656,61.3038,.305642,-3.46303,62.782,.312767,-3.28478,61.2939,-2.20804,-3.37706,61.2444,-3.15241,-2.34423,61.2819,-3.32955,-2.503,62.782,-2.3175,-3.60906,62.7543,-3.80865,-1.39096,61.3047,-4.03302,-1.4809,62.7973,-4.23808,.761645,62.7765,-3.99971,.691071,61.2878,-3.7726,1.3732,61.2677,-3.99429,1.49599,62.7596,-4.21939,.120299,62.782,-3.98194,.096755,61.2939,-4.23676,-.608626,62.7928,-3.99835,-.579539,61.3038,-3.42931,2.75734,61.2444,-2.34848,3.64636,61.2819,-2.5194,3.84239,62.782,-3.67691,2.88961,62.7543,-1.36217,4.25181,61.3047,-1.46188,4.4914,62.7973,-.580144,4.64921,62.7928,-.541931,4.39878,61.3038,-.335804,-3.44812,62.7765,-.281664,-3.27142,61.2878,-.950976,-3.00892,61.2677,-1.05638,-3.16623,62.7596,.784059,3.9607,61.2444,1.92253,3.14679,61.2819,1.99156,3.34363,62.782,.771656,4.21511,62.7543,2.74996,-1.41004,61.2156,2.88189,-1.55573,62.7145,1.90792,-2.66783,61.1437,1.97994,-2.90351,62.6519,3.87466,-1.69511,61.2444,2.79382,-2.58413,61.2819,2.97192,-2.7117,62.782,4.12943,-1.75892,62.7543,2.26724,3.2662,61.2156,2.44345,3.43433,62.7145,3.26424,2.12731,61.1437,3.51187,2.21428,62.6519,-3.01434,2.28505,61.2156,-3.18179,2.47441,62.7145,-1.92919,3.34029,61.1437,-2.01933,3.60521,62.6519,-1.82189,-2.20398,61.2156,-1.99094,-2.30364,62.7145,-2.81889,-1.06509,61.1437,-3.05935,-1.08359,62.6519,2.73288,.790955,60.5941,2.84935,.314241,60.5888,2.01429,.58335,60.3678,2.09793,.241073,60.3639,2.78281,-.275988,60.5707,2.05012,-.182786,60.3508,2.33729,1.96343,60.602,2.63013,1.34002,60.6023,1.7302,1.42534,60.3733,1.94052,.977615,60.3737,.13355,3.62895,60.5941,.624164,3.61807,60.5888,.143672,2.62349,60.3678,.495934,2.61569,60.3639,1.17706,3.40103,60.5707,.892977,2.45981,60.3508,1.52929,-2.65435,60.602,.851333,-2.77586,60.6023,1.14753,-1.89601,60.3733,.660626,-1.98328,60.3737,.294383,-2.733,60.5941,.260703,-1.95249,60.3678,-1.86997,-2.80013,60.5518,-2.60845,-1.93747,60.581,-1.65481,-2.06295,60.3849,-1.87288,-1.38676,60.364,-3.14525,-1.14766,60.602,-2.21384,-.811362,60.3733,-3.28842,.08144,60.5941,-3.30323,.571951,60.5888,-2.31665,.071293,60.3678,-2.3273,.423481,60.3639,-3.11543,1.13545,60.5707,-2.19242,.828138,60.3508,-3.30207,-.47699,60.6023,-2.32647,-.329693,60.3737,-2.8214,2.3648,60.5518,-1.91856,3.05577,60.581,-2.04702,2.08662,60.3849,-1.3387,2.25818,60.364,-1.10136,3.5503,60.602,-.743155,2.56701,60.3733,-.4234,3.67181,60.6023,-.256251,2.65428,60.3737,-.19623,-2.72212,60.5888,-.091559,-1.9447,60.3639,-.749127,-2.50508,60.5707,-.488602,-1.78882,60.3508,.736135,3.31532,60.5518,1.64674,2.62445,60.581,.841766,2.53873,60.3849,1.26689,1.91795,60.364,2.33087,-1.14356,60.525,1.76182,-.801676,60.3234,1.66895,-2.18029,60.4666,1.54079,-1.51647,60.3223,3.25036,-1.45906,60.5518,2.34663,-2.15859,60.581,2.45958,-1.33738,60.3849,1.7441,-1.5774,60.364,1.89813,2.74135,60.525,1.41635,2.03235,60.3234,2.72838,1.84346,60.4666,2.05093,1.71226,60.3223,-2.49421,1.89045,60.525,-1.79155,1.37634,60.3234,-1.6398,2.76933,60.4666,-1.49544,2.04898,60.3223,-1.47007,-1.84417,60.525,-1.01095,-1.35158,60.3234,-2.29943,-.937729,60.4666,-1.63836,-.963024,60.3223,.003825,-.844241,60.3057,.415553,-.719078,60.306,.429599,-.947226,60.7197,-.068649,-1.1005,60.7197,.055189,-.585342,60.1845,.346058,-.507859,60.1875,.873883,-.508915,60.3087,.98903,-.678877,60.7197,.640989,-.443892,60.2086,-.534007,-.55827,60.3057,-.315733,-.796498,60.3057,-.454727,-1.04282,60.7197,-.718439,-.755006,60.7197,-.331173,-.37991,60.1845,-.174371,-.551045,60.1845,-.96034,.357621,60.7197,-.743275,.350943,60.3087,-.66057,-.146893,60.306,-.869981,-.256227,60.7197,-.547365,.187968,60.2086,-.430324,-.095049,60.1875,.360963,-1.18131,61.6287,-.172633,-1.34547,61.6287,.960084,-.893926,61.6287,.262966,-1.38062,62.8729,-.27568,-1.54633,62.8729,.867756,-1.09051,62.8729,-.586102,-1.28369,61.6287,-.868523,-.975455,61.6287,-.693062,-1.48397,62.8729,-.978156,-1.17281,62.8729,-1.03082,-.44129,61.6287,-1.12759,.216108,61.6287,-1.23967,.030026,62.8729,-1.14199,-.633593,62.8729,.146473,-1.63171,66.3673,.103873,-1.77821,69.1865,-.42812,-1.88232,69.1889,-.389641,-1.77571,66.3673,.745359,-1.36966,66.3673,.692224,-1.56748,69.1833,.057089,-1.94685,71.741,-.476431,-2.03225,71.76,.642546,-1.75881,71.7153,-.001083,-2.12038,73.0376,-.545209,-2.24511,73.0977,.578599,-1.88733,72.9529,-.08334,-2.30355,73.5218,-.626541,-2.49512,73.6408,.369081,-2.04545,73.3337,-1.17274,-1.4864,69.1889,-1.10617,-1.39473,66.3673,-.810675,-1.70327,66.3673,-.85679,-1.79098,69.1898,-1.24915,-1.62139,71.76,-.91473,-1.92947,71.7668,-.992352,-2.15468,73.1187,-1.08178,-2.43207,73.6811,-1.33023,-1.82771,73.0977,-1.41331,-2.07678,73.6408,-1.38538,-.986363,69.1865,-1.54165,-.379711,69.1833,-1.40422,-.226706,66.3673,-1.28658,-.869744,66.3673,-1.67562,-.526216,71.7153,-1.48836,-1.12512,71.741,-1.56702,-1.28776,73.0376,-1.6241,-1.48431,73.5218,-1.74367,-.652556,72.9529,-1.72898,-.92989,73.3337,.193284,-1.51567,64.327,-.345045,-1.67866,64.327,.797337,-1.22907,64.327,-.762884,-1.61505,64.327,-1.04928,-1.30422,64.327,-1.21518,-.766778,64.327,-1.31536,-.105731,64.327,3.09357,4.4537,34.1354,3.02691,4.50958,34.1986,2.61648,4.23377,33.8257,2.67289,4.17087,33.7529,2.92023,4.59308,34.3011,2.52579,4.32813,33.9438,2.1638,4.1317,33.6346,2.20885,4.06755,33.5574,2.09104,4.22829,33.7595,4.14154,5.79649,35.8099,4.05049,5.81883,35.8306,3.58557,5.06716,34.9069,3.66588,5.0263,34.8626,3.90599,5.85087,35.8649,3.45768,5.1276,34.9789,3.91613,7.37476,37.6822,3.83242,7.37507,37.676,4.13832,6.63012,36.7946,4.23014,6.62349,36.7943,3.70071,7.36442,37.649,3.99283,6.63692,36.7939,3.26491,7.94893,38.3813,2.39092,8.3613,38.915,2.34072,8.37216,38.9225,3.19549,7.95503,38.3864,2.2655,8.35109,38.8631,3.08847,7.9367,38.3435,.379404,8.82914,39.5749,1.38123,8.65406,39.306,1.40858,8.65108,39.3281,.38325,8.83658,39.636,.375163,8.80523,39.4611,1.34129,8.63039,39.2199,-1.4715,8.93518,39.8949,-.60494,8.92125,39.766,-.622199,8.92962,39.8488,-1.50576,8.93714,39.9859,-1.41503,8.92617,39.7521,-.576023,8.90249,39.6337,-2.66135,8.75997,40.0246,-2.14131,8.87486,39.9741,-2.18766,8.86792,40.0693,-2.71612,8.74296,40.1223,-2.57108,8.77854,39.8707,-2.06502,8.87863,39.8246,-3.37414,8.50484,39.9892,-3.08608,8.61959,40.0516,-3.14713,8.59253,40.1506,-3.43975,8.47168,40.0869,-3.26577,8.54759,39.8347,-2.98528,8.65312,39.8954,-3.58365,8.39214,39.5379,-3.51243,8.41971,39.4529,-3.48938,8.45246,39.7774,-3.55813,8.42023,39.8702,-3.39556,8.45482,39.3193,-3.37612,8.49411,39.6309,-3.62773,8.16407,38.6035,-3.55156,8.18488,38.5421,-3.5319,8.34674,39.0557,-3.60562,8.32343,39.1306,-3.42757,8.21134,38.4463,-3.41139,8.37608,38.9383,-3.62672,7.496,37.1786,-3.54803,7.51911,37.1541,-3.55729,7.90174,37.8784,-3.6354,7.88111,37.9219,-3.42093,7.55175,37.1166,-3.43064,7.92919,37.8108,-3.31619,6.42968,35.655,-3.24423,6.46397,35.6688,-3.49486,7.05569,36.4475,-3.57179,7.02753,36.4542,-3.12892,6.51608,35.6914,-3.37105,7.09739,36.4381,-1.76456,5.00384,33.9584,-2.65552,5.72542,34.7597,-2.71818,5.68531,34.7204,-1.81136,4.95765,33.8957,-1.69074,5.0749,34.0594,-2.55576,5.78702,34.823,.454854,4.17493,33.378,-.669982,4.47433,33.5085,-.693275,4.42131,33.4318,.458003,4.11582,33.2964,.448717,4.26512,33.5095,-.633921,4.5557,33.6317,1.43498,4.09066,33.4617,1.46197,4.02786,33.3809,1.39091,4.1858,33.592,2.74187,4.72495,34.4745,2.37369,4.47771,34.1433,2.49374,4.89848,34.7187,2.16173,4.6755,34.4241,1.96863,4.382,33.9703,1.79768,4.58648,34.2669,3.6657,5.8995,35.9236,3.2446,5.22217,35.101,3.33189,5.96023,36.007,2.94857,5.34517,35.2732,3.48267,7.33428,37.5867,3.75109,6.64342,36.7917,3.17849,7.28589,37.4997,3.41471,6.64664,36.79,2.14468,8.27505,38.691,2.91343,7.87624,38.2198,1.97549,8.1565,38.4463,2.66861,7.78275,38.0441,.370346,8.7503,39.2549,1.27836,8.55967,39.0247,.365629,8.65747,38.9698,1.19077,8.44647,38.7505,-1.31951,8.90117,39.5172,-.525757,8.86238,39.4137,-1.18938,8.8436,39.1968,-.452318,8.78775,39.1124,-2.42382,8.79532,39.6198,-1.93908,8.87257,39.5791,-2.25416,8.78724,39.2912,-1.78461,8.83609,39.2462,-3.08406,8.60282,39.585,-2.81694,8.69303,39.6384,-2.84731,8.64651,39.2755,-2.60123,8.71286,39.293,-3.1973,8.50051,39.1056,-3.18194,8.54886,39.3932,-2.92161,8.54181,38.8506,-2.90298,8.59732,39.0916,-3.21593,8.24482,38.2913,-3.20554,8.41336,38.7494,-2.90889,8.26952,38.09,-2.90859,8.44409,38.5143,-3.20549,7.5989,37.0569,-3.21517,7.96593,37.7016,-2.8956,7.64729,36.9806,-2.90362,7.99701,37.5579,-2.93486,6.59805,35.7312,-3.16186,7.16095,36.4247,-2.65857,6.69883,35.7924,-2.86237,7.23381,36.4125,-1.56825,5.1901,34.2292,-2.38892,5.88588,34.9302,-1.39709,5.34613,34.4695,-2.1534,6.01484,35.0845,.437202,4.41067,33.7306,-.574953,4.68765,33.8389,.420303,4.60854,34.0411,-.493462,4.86808,34.1302,1.31618,4.33823,33.8115,1.21138,4.54317,34.1199,2.19276,5.09376,35.0114,1.90475,4.90278,34.7651,1.88232,5.26555,35.274,1.64214,5.12463,35.0974,1.59423,4.82242,34.6265,1.4109,5.04973,34.9739,2.91537,6.01452,36.0964,2.58184,5.47725,35.475,2.41659,5.99892,36.1069,2.15686,5.56464,35.6254,2.78306,7.20856,37.3845,2.98595,6.62904,36.7726,2.23148,7.03399,37.1555,2.42551,6.51756,36.6488,1.74099,8.0072,38.1687,2.34216,7.65905,37.8379,1.34989,7.80056,37.812,1.85323,7.45599,37.5326,.339982,8.52262,38.6269,1.05898,8.2972,38.4315,.184691,8.34483,38.2259,.783194,8.10076,38.0439,-1.05089,8.74209,38.816,-.378743,8.66923,38.7488,-.99625,8.61381,38.428,-.419667,8.51494,38.3485,-2.15542,8.72335,38.9305,-1.64066,8.75171,38.8551,-1.54114,8.63373,38.4493,-2.113,8.60356,38.492,-2.55083,8.65696,38.9389,-2.51936,8.27289,37.8747,-2.53439,8.45477,38.2769,-2.11067,8.2725,37.7162,-2.12761,8.44958,38.0726,-2.58698,8.57073,38.6476,-2.49106,7.68606,36.9097,-2.5028,8.01141,37.4062,-1.98126,7.73209,36.9158,-2.04277,8.03121,37.3248,-2.28696,6.80544,35.8889,-2.4649,7.30344,36.4197,-1.73668,6.92022,36.074,-1.91715,7.3782,36.5097,-1.16278,5.53595,34.779,-1.83467,6.16401,35.2927,-.771555,5.76001,35.176,-1.33802,6.33546,35.5939,.413537,4.84554,34.4237,-.3741,5.08848,34.4965,.492132,5.09511,34.8342,-.128095,5.33903,34.9273,1.09261,4.78511,34.4982,1.02399,5.03544,34.8919,1.27173,5.24104,35.2342,1.26139,5.53648,35.5698,1.63832,5.41221,35.4679,1.82705,5.81759,35.912,.783209,5.32681,35.2265,.642326,6.34333,36.2143,.972139,5.91578,35.8905,.331347,5.61235,35.4061,-.14652,6.02351,35.6698,.282269,6.80487,36.5318,-.594417,6.53916,36.0188,-.95448,7.05568,36.3947,-.077569,7.24971,36.8324,-1.19263,7.47565,36.741,-1.3718,7.80908,37.0666,-.412796,7.62928,37.108,-.74345,7.94003,37.3635,-1.5609,8.086,37.3926,-1.75562,8.30929,37.722,-1.08843,8.18779,37.6055,-1.41762,8.37112,37.8352,-1.70073,8.49637,38.0864,-1.16448,8.4859,38.0989,-.680506,8.34262,37.9473,-.194142,8.13399,37.7779,.276938,7.85728,37.5742,.725318,7.52281,37.3385,1.13953,7.14164,37.0708,1.48163,6.71461,36.7421,1.71402,6.25271,36.3355,4.00171,.981671,33.5018,4.05914,.761323,33.5538,4.18297,1.20589,33.977,4.12467,1.45294,33.935,4.14206,.4988,33.6408,4.26589,.914054,34.0485,4.35608,1.30663,34.4517,4.30332,1.54115,34.4193,4.4304,1.02153,34.5074,3.69432,-1.23415,32.405,3.74209,-1.32165,32.4843,3.8977,-.160797,32.9782,3.84448,-.004923,32.9114,3.81586,-1.44317,32.6113,3.97689,-.355882,33.087,3.58918,-3.57154,32.4824,3.62288,-3.61171,32.557,3.65216,-2.46177,32.346,3.61004,-2.41293,32.264,3.68535,-3.6551,32.6766,3.72005,-2.53479,32.4763,3.61683,-4.78543,32.9801,3.68952,-5.98723,33.6667,3.70538,-6.03043,33.7079,3.6385,-4.83416,33.0394,3.76333,-6.01615,33.7801,3.69707,-4.85216,33.138,3.93036,-7.98296,35.337,3.82162,-7.08585,34.4857,3.79726,-7.08554,34.4612,3.89248,-8.03547,35.3293,3.99798,-7.87873,35.3511,3.88336,-7.02666,34.5297,3.97401,-9.29391,37.0389,3.97735,-8.72414,36.2214,3.9317,-8.80818,36.2326,3.92548,-9.39252,37.0682,4.05106,-9.13751,36.9922,4.05031,-8.58806,36.2039,3.90546,-9.96909,38.2518,3.9454,-9.68855,37.7043,3.89575,-9.796,37.7481,3.85588,-10.0833,38.307,3.98612,-9.78862,38.1634,4.02504,-9.5184,37.6344,3.83283,-10.3711,39.1246,3.88008,-10.2495,39.0529,3.87087,-10.1818,38.7206,3.82239,-10.3015,38.7855,3.95897,-10.0579,38.938,3.95102,-9.99308,38.6168,4.10476,-9.80162,39.2599,3.9644,-10.0995,39.2014,3.91778,-10.2172,39.2765,4.05882,-9.91183,39.3368,4.18022,-9.62765,39.1369,4.04191,-9.91381,39.081,4.5069,-8.92804,39.4654,4.27949,-9.42943,39.3378,4.2352,-9.53047,39.4169,4.46603,-9.01715,39.5478,4.57235,-8.7869,39.3342,4.35131,-9.26969,39.2114,5.08273,-7.48976,39.9589,5.11105,-7.4349,39.8685,4.80005,-8.24113,39.6481,4.76478,-8.31435,39.7345,5.15515,-7.34766,39.7246,4.85575,-8.12494,39.5104,5.71562,-5.32987,40.1609,5.72414,-5.32126,40.0704,5.40053,-6.53987,40.0713,5.38014,-6.57473,40.1639,5.73728,-5.30752,39.9264,5.43193,-6.48429,39.9241,6.20635,-1.71484,38.9167,6.19071,-1.78097,38.8536,6.08623,-3.612,39.6808,6.09396,-3.58464,39.7623,6.16648,-1.88648,38.7531,6.07461,-3.6557,39.5511,5.17975,.749277,36.326,5.79611,-.266745,37.6362,5.80025,-.165034,37.6712,5.16179,.891258,36.3313,5.20298,.541051,36.3184,5.7877,-.426507,37.5807,4.67941,1.21103,35.2309,4.64082,1.40341,35.2135,4.73273,.957854,35.261,4.26772,.15648,33.791,4.38945,.537128,34.1736,4.42044,-.285029,34.0063,4.53534,.05283,34.354,4.54014,.641493,34.6052,4.66843,.146952,34.7466,3.9356,-1.62683,32.8243,4.10082,-.623919,33.2717,4.09726,-1.87703,33.1248,4.25941,-.976755,33.5343,3.79906,-3.70657,32.8772,3.83419,-2.65183,32.6938,3.96129,-3.77772,33.1582,3.99413,-2.81558,32.9989,3.89333,-5.90689,33.9077,3.81969,-4.82108,33.3073,4.07674,-5.7451,34.089,3.99454,-4.77209,33.5455,4.11758,-7.68323,35.377,4.00933,-6.8663,34.6087,4.28136,-7.40557,35.4155,4.18439,-6.63447,34.722,4.17857,-8.8776,36.9164,4.17156,-8.35833,36.1757,4.35228,-8.5168,36.8217,4.33665,-8.03501,36.1391,4.1206,-9.49489,38.0236,4.1576,-9.23796,37.5232,4.29842,-9.11821,37.8744,4.33763,-8.86022,37.3989,4.09175,-9.74837,38.7502,4.08738,-9.68364,38.4483,4.26306,-9.36059,38.5145,4.276,-9.27207,38.2442,4.30515,-9.34602,38.9324,4.17303,-9.61055,38.8797,4.46135,-8.99241,38.6541,4.3477,-9.21254,38.599,4.68064,-8.55297,39.1145,4.47031,-9.00778,38.9998,4.82477,-8.23053,38.8049,4.62464,-8.6613,38.702,5.22642,-7.20167,39.4844,4.94709,-7.93113,39.2803,5.31889,-6.99475,39.1468,5.06842,-7.65837,38.9567,5.75796,-5.28431,39.686,5.48202,-6.39106,39.6782,5.78245,-5.25047,39.3479,5.54519,-6.25824,39.3327,6.12711,-2.06311,38.5851,6.0559,-3.72882,39.3343,6.07412,-2.31203,38.3482,6.02955,-3.83149,39.0291,5.23477,.212612,36.3066,5.77162,-.69113,37.4879,5.27041,-.240903,36.2905,5.74791,-1.06247,37.3569,4.81029,.592807,35.3142,4.90068,.103724,35.3913,4.5786,-.813583,34.276,4.68052,-.532912,34.5802,4.7296,-1.3091,34.5646,4.81723,-1.11932,34.8194,4.79262,-.449057,34.9198,4.89792,-1.02792,35.0768,4.29321,-2.16846,33.5093,4.43825,-1.39615,33.8694,4.52556,-2.38046,33.9904,4.63464,-1.76537,34.2749,4.17353,-3.86253,33.5289,4.20062,-3.00278,33.3962,4.4794,-3.87805,34.0744,4.48027,-3.10364,33.9429,4.29646,-5.57992,34.3374,4.21348,-4.73116,33.8643,4.59024,-5.40738,34.7557,4.52219,-4.65408,34.3618,4.47936,-7.07419,35.4877,4.39325,-6.37496,34.8868,4.72313,-6.74619,35.7018,4.66223,-6.11649,35.2079,4.55828,-8.08636,36.7374,4.53551,-7.6432,36.119,4.77025,-7.68364,36.7456,4.761,-7.26667,36.2242,4.49052,-8.7372,37.8178,4.5484,-8.42518,37.3057,4.76804,-7.98981,37.2702,4.72163,-8.30154,37.843,4.45837,-8.92003,38.2332,4.98442,-7.85141,38.422,4.7896,-8.27369,38.3352,5.11149,-7.51254,38.0181,4.93738,-7.89594,37.9411,4.59984,-8.65848,38.3191,5.41466,-6.7425,38.7147,5.20076,-7.33027,38.5498,5.46556,-6.50751,38.1635,5.29294,-7.03684,38.0752,5.79758,-5.20567,38.9008,5.60507,-6.09316,38.8826,5.75915,-5.14959,38.2493,5.61551,-5.92514,38.2628,6.00321,-2.61989,38.0259,5.98762,-3.95697,38.6205,5.87876,-2.94564,37.5121,5.88984,-4.08402,38.0016,5.29937,-.793649,36.2544,5.711,-1.51944,37.1705,5.29577,-1.34606,36.1189,5.62927,-1.99425,36.8302,4.98682,-.491611,35.4779,5.0498,-1.09454,35.5097,4.98204,-1.48456,35.2035,5.03037,-2.04462,35.1983,4.85159,-1.7029,34.8032,4.7927,-2.32385,34.5909,5.2096,-1.77109,35.7506,5.33267,-3.52166,35.79,5.20015,-2.75369,35.4892,5.46539,-2.4145,36.2465,5.66195,-3.24916,36.7279,5.37524,-4.33117,36.0742,5.69311,-4.19874,37.1002,5.62077,-5.09463,37.3351,5.35829,-5.10389,36.329,5.5291,-5.79512,37.4384,5.42338,-6.35859,37.4865,5.32293,-5.76845,36.5534,5.26983,-6.34227,36.7773,5.29244,-6.87422,37.5546,5.13827,-7.35453,37.6439,5.19211,-6.85607,37.0262,5.09327,-7.3048,37.2758,4.95882,-7.7126,37.497,4.95159,-7.44305,36.9707,4.99656,-6.99604,36.5526,5.01135,-6.48392,36.1501,5.0025,-5.89227,35.7779,4.97856,-5.2268,35.4346,4.94602,-4.50242,35.1206,4.90106,-3.75072,34.8594,4.84285,-3.00937,34.6773,2.68421,4.01004,33.8038,2.56253,3.95046,33.7121,2.61359,3.82405,33.6195,2.76313,3.8741,33.7245,2.75579,3.60639,33.4459,2.8962,3.6512,33.5622,2.92292,3.93333,33.8008,2.82833,4.04523,33.8637,3.04577,3.70722,33.6565,2.94551,3.31651,33.2106,3.05072,3.34856,33.3559,3.14538,3.04659,33.2053,3.08704,3.03393,33.0214,3.17182,3.39297,33.4825,3.23663,3.0793,33.3654,3.10786,2.82217,32.9679,3.12578,2.81637,33.1944,3.09383,2.61818,33.2839,3.08052,2.62003,32.9793,3.20362,2.84237,33.3871,3.18703,2.64538,33.5743,3.98303,1.60795,33.9189,4.02368,1.66944,34.048,3.96548,1.77027,33.9882,3.89712,1.73872,33.8161,3.82786,1.91543,33.8756,3.75648,1.90239,33.6864,3.9353,1.57922,33.7566,3.85261,1.71346,33.625,3.72298,1.90019,33.4757,3.54916,2.05132,33.5884,3.61069,2.08053,33.7936,3.3299,2.20626,33.5047,3.40445,2.24946,33.7941,3.55101,2.04003,33.3548,3.34313,2.16137,33.2038,3.22178,2.42514,33.7092,3.15786,2.40214,33.4029,3.14897,2.36834,33.1159,7.0457,2.38221,40.2049,6.6202,2.85467,39.8341,6.52998,2.7967,39.7025,6.96609,2.31301,40.0803,7.14978,2.47256,40.3734,6.73843,2.92513,40.0088,6.33332,3.28559,39.924,6.23507,3.23879,39.7945,6.46652,3.34099,40.1006,8.77261,.951716,42.0789,8.81055,1.04718,42.1663,7.83566,1.67441,41.0801,7.77496,1.59043,40.9719,8.8616,1.19244,42.3034,7.91636,1.79483,41.236,10.7122,.989256,44.0045,10.7054,1.07598,44.0592,9.75374,.852386,43.1607,9.73738,.756146,43.0925,10.6895,1.2101,44.154,9.77334,1.00133,43.2751,12.8025,2.35004,45.6911,11.7389,1.61168,44.9124,11.7733,1.54199,44.8641,12.8658,2.30071,45.6489,12.7005,2.42654,45.7625,11.6808,1.71952,44.9956,14.919,3.9943,46.9128,14.8082,4.0072,46.9218,13.8283,3.1825,46.3579,13.9175,3.15281,46.3287,14.6312,4.02558,46.9414,13.6861,3.22815,46.4081,16.6502,5.27428,47.8478,16.5104,5.26876,47.8076,15.7304,4.72847,47.4014,15.858,4.72789,47.4173,16.2847,5.25523,47.7532,15.5252,4.72588,47.3841,17.499,5.751,48.4494,17.0787,5.58461,48.1508,17.2265,5.58928,48.2099,17.6529,5.75105,48.5219,17.2519,5.7462,48.3402,16.8404,5.57225,48.0653,17.8276,5.85825,48.7055,17.9873,5.85372,48.7868,18.1197,5.93274,48.935,17.9573,5.93972,48.8501,17.572,5.86067,48.5805,17.6978,5.94586,48.7185,17.574,6.09187,48.7873,17.4216,6.09509,48.7096,17.7892,6.01369,48.8279,17.9487,6.00753,48.9109,17.1785,6.09525,48.5888,17.5349,6.01854,48.699,16.4641,6.35587,48.5061,16.3331,6.34977,48.4407,16.9587,6.19964,48.5781,17.1021,6.20029,48.6499,16.1233,6.33391,48.3412,16.7297,6.19335,48.4671,14.4538,6.78799,48.1549,15.4721,6.55765,48.2925,15.5856,6.57156,48.3508,14.5464,6.81125,48.2065,14.3036,6.74186,48.0818,15.2891,6.52785,48.2065,11.7292,7.09789,47.6108,13.3093,6.98991,48.0044,13.3772,7.02268,48.0503,11.7598,7.13808,47.6495,11.677,7.02422,47.5602,13.1981,6.92802,47.9416,7.46112,6.62075,45.2761,9.54116,7.02591,46.731,9.51699,7.06856,46.7564,7.38433,6.6561,45.2741,7.57795,6.55637,45.2897,9.57537,6.94885,46.7018,5.70808,4.79525,41.4231,5.82295,4.80451,41.5148,6.23273,5.79659,43.3301,6.12612,5.81216,43.2831,5.99579,4.81129,41.6604,6.39577,5.76494,43.4125,5.97742,3.93328,40.4144,5.86857,3.90253,40.2961,6.13398,3.96909,40.5874,7.29742,2.60331,40.6345,6.90627,3.02101,40.2774,7.48601,2.78606,41.0549,7.11967,3.15699,40.7219,6.66216,3.41381,40.3756,6.91781,3.51366,40.8169,8.93768,1.42594,42.5272,8.03341,1.98123,41.4833,9.04604,1.74075,42.823,8.18847,2.23561,41.8489,10.6601,1.42832,44.3116,9.80127,1.24342,43.4652,10.6338,1.72477,44.4858,9.85005,1.56996,43.6943,12.5329,2.55183,45.8749,11.5839,1.89549,45.1309,12.3183,2.72535,45.9688,11.4663,2.13688,45.2646,14.3382,4.05342,46.9706,13.4524,3.30248,46.4845,13.9442,4.0888,46.9632,13.1456,3.40533,46.5277,15.9048,5.22601,47.6766,15.1816,4.71648,47.3607,15.3746,5.17471,47.5932,14.7069,4.69489,47.3143,16.8449,5.73371,48.175,16.442,5.54568,47.9398,16.3166,5.71769,48.0042,15.8978,5.50308,47.8114,17.295,5.9491,48.5196,17.1598,5.86034,48.3896,16.9046,5.9425,48.3369,16.6702,5.86236,48.195,16.7804,6.08414,48.3985,17.1265,6.016,48.4969,16.2683,6.03279,48.1777,16.6474,5.98084,48.2694,15.7711,6.29464,48.185,16.3491,6.17094,48.2927,15.2733,6.20261,47.9966,15.8286,6.10254,48.0907,14.051,6.65,47.9645,14.9811,6.46412,48.0703,13.7029,6.48954,47.7759,14.5463,6.33979,47.8828,11.5889,6.88695,47.4802,13.0114,6.80982,47.8407,11.4793,6.66937,47.3296,12.7615,6.616,47.6622,7.76968,6.43658,45.3175,9.63062,6.80674,46.6582,8.05046,6.24561,45.3248,9.72187,6.58407,46.5616,6.27446,4.811,41.9009,6.66272,5.70102,43.553,6.6663,4.79049,42.227,7.04515,5.58826,43.7231,6.3768,4.01357,40.8647,6.70789,4.06453,41.2759,7.70151,3.02063,41.6562,7.36866,3.33732,41.3807,7.90554,3.26746,42.2615,7.64547,3.5229,42.0873,7.21865,3.63969,41.4474,7.53022,3.74839,42.0944,9.16504,2.12428,43.1487,8.36239,2.55282,42.3232,9.16216,2.58656,43.4033,8.4673,2.92685,42.7674,10.6029,2.09805,44.6273,9.90142,1.97301,43.9105,10.4442,2.60729,44.7433,9.8067,2.49668,44.0674,12.0753,2.95493,45.9964,11.3335,2.44782,45.3483,11.7764,3.3043,46.0267,11.1074,2.89257,45.4265,13.4875,4.14165,46.8875,12.7959,3.54625,46.4942,13.0355,4.27553,46.8158,12.4225,3.78662,46.468,14.7401,5.11068,47.5166,14.1437,4.67092,47.2341,14.1437,5.10502,47.4283,13.61,4.71702,47.1453,15.7316,5.70612,47.8801,15.2594,5.45314,47.7155,15.1536,5.71517,47.7938,14.6439,5.44179,47.6298,14.6681,6.03461,47.8037,15.2159,5.96176,47.9007,14.0981,5.80771,47.6012,14.6241,5.7555,47.7167,15.7072,5.91237,47.973,13.2905,6.23885,47.5086,14.0188,6.13303,47.6544,12.8899,5.88132,47.2377,13.5212,5.85002,47.4192,11.3649,6.35001,47.0822,12.4738,6.32509,47.3867,11.2434,5.87501,46.796,12.1811,5.89914,47.0923,8.41613,5.95974,45.2787,9.8557,6.25885,46.3827,8.80997,5.51308,45.1901,10.0013,5.76796,46.1577,7.15069,4.72745,42.6058,7.52892,5.40083,43.8846,7.6357,4.57137,42.9606,8.03304,5.07638,44.012,7.11047,4.10935,41.8177,7.52905,4.09932,42.3735,16.1917,5.88015,48.0639,7.83893,3.81958,42.6158,8.3488,3.74048,43.2368,8.14154,3.44289,42.7556,8.83688,3.1625,43.4118,8.02055,4.23149,43.1679,9.59394,4.08413,44.9635,8.93636,3.89919,44.1079,8.4862,4.5605,44.083,9.18604,4.86072,45.0798,10.1436,5.07374,45.9326,10.3689,4.28152,45.7267,11.1343,5.21748,46.5365,11.1621,4.49075,46.3153,11.9367,5.32602,46.8593,12.5914,5.42184,47.0388,11.8673,4.71334,46.6799,12.4954,4.94632,46.9066,13.1816,5.51214,47.2178,13.6995,5.55478,47.3916,13.0613,5.17364,47.0922,13.4775,5.33151,47.2422,13.7204,5.20884,47.3183,14.1452,5.49917,47.524,13.2279,4.89652,47.0839,12.6692,4.5489,46.8252,12.0666,4.18204,46.5373,11.421,3.82835,46.1365,10.7377,3.52302,45.5531,10.0628,3.29595,44.8524,9.43676,3.17218,44.1231,3.2356,2.15395,32.9391,3.0943,2.31593,32.8838,3.07685,2.07264,32.5921,2.94972,2.22337,32.5465,3.03567,2.51893,32.7853,2.89625,2.41371,32.4611,2.80547,1.9078,32.0171,2.6737,2.06531,31.9651,2.43826,1.6864,31.2868,2.29973,1.85577,31.2287,2.61262,2.26045,31.8765,2.22992,2.06088,31.1368,1.86494,1.60308,30.4012,2.00036,1.42729,30.4511,1.47184,1.08011,29.2524,1.34618,1.25346,29.2183,1.79778,1.81392,30.3191,1.28901,1.46164,29.1512,-.004063,.224041,25.3145,.243336,.387851,26.0217,.359181,.219964,26.0372,.119039,.031386,25.3346,.056752,.027607,25.1741,-.047223,.220777,25.1365,-.062549,.447001,25.2583,.196191,.589258,25.966,-.115893,.423698,25.1021,5.81357,2.38522,38.6194,5.68168,2.49338,38.5562,4.87366,2.42914,36.8917,4.99986,2.30172,36.9491,5.64405,2.64449,38.4585,4.83582,2.60002,36.7853,4.06837,2.38343,35.233,4.18892,2.23556,35.2795,4.02894,2.57667,35.1306,3.34611,2.5965,33.8932,3.36982,2.41765,33.9929,3.53823,2.39524,34.2147,3.51034,2.58236,34.1276,3.49741,2.28596,34.0325,3.651,2.25499,34.2421,3.68461,2.37668,34.4526,3.79869,2.2255,34.4862,3.64935,2.57423,34.3608,2.8803,4.1333,33.8901,2.66891,4.08539,33.7886,2.49738,3.98788,33.6625,2.99087,3.97874,33.8013,3.11111,3.73999,33.6674,2.97557,4.01675,33.7684,3.06839,3.73554,33.599,2.56387,3.82694,33.5497,2.58962,3.87156,33.5338,2.71488,3.60352,33.3766,2.78203,3.63787,33.3865,3.23261,3.42096,33.5103,3.3071,3.11153,33.3986,3.21009,3.42182,33.4352,3.32227,3.12839,33.3025,2.92711,3.32149,33.133,2.99202,3.35359,33.1583,3.10435,3.05515,32.9246,3.17696,3.09174,32.9571,3.30704,2.89821,33.4003,3.32783,2.76796,33.5356,3.37755,2.93462,33.274,3.46916,2.78522,33.3987,3.16457,2.87167,32.8441,3.26466,2.91335,32.8713,3.15528,2.73919,32.8165,3.31328,2.74573,32.8443,4.09589,1.64223,34.1168,4.04875,1.54322,33.9404,3.9701,1.47726,33.7034,3.87349,1.69528,33.5355,3.75474,1.91189,33.3695,3.93073,1.64489,33.551,3.82533,1.92926,33.4147,4.02397,1.77818,34.0403,3.89709,1.93267,33.9243,4.0626,1.75987,33.998,3.92749,1.94423,33.8218,3.49011,2.13755,33.0993,3.62422,2.05547,33.2364,3.71224,2.10064,33.2657,3.57651,2.2622,33.0775,3.71992,2.11177,33.8311,3.59902,2.26014,33.8266,3.79467,2.14292,33.7046,3.6968,2.35946,33.6467,3.10574,2.64373,32.6897,2.96474,2.53545,32.3804,3.24736,2.63637,32.6664,3.0987,2.52657,32.3505,3.37179,2.13555,32.9024,3.43926,2.2538,32.8277,3.20479,2.05657,32.5668,3.26725,2.1711,32.4907,2.67371,2.37977,31.7992,2.28356,2.17976,31.063,2.80548,2.36519,31.7759,2.41474,2.15765,31.0458,2.93286,1.88884,31.997,2.98958,2.00377,31.923,2.5679,1.66281,31.2707,2.61999,1.78021,31.1979,1.85093,1.93327,30.2512,1.34605,1.57962,29.0881,1.97998,1.90756,30.2329,1.47165,1.55452,29.063,2.12919,1.40138,30.4329,2.18214,1.52054,30.3651,1.59745,1.055,29.2273,1.6545,1.17298,29.1642,-.059013,.492277,25.0411,-.005199,.562993,25.1894,.037214,.497508,25.0087,.117088,.533781,25.1492,.2572,.703187,25.8991,.379346,.678636,25.8589,.025438,.264883,25.061,.14069,.034172,25.1244,.1289,.305672,25.029,.209922,.101433,25.0807,.481373,.195424,25.997,.23983,.00235,25.2923,.542427,.309365,25.9301,.298765,.118188,25.2255,4.32552,2.233,35.2326,5.14385,2.30616,36.9135,5.22883,2.42113,36.8171,4.40299,2.35786,35.1301,5.96407,2.39613,38.6016,6.05481,2.50303,38.5246,4.92748,2.71145,36.6901,4.10872,2.70024,35.0285,5.74493,2.74809,38.3844,4.24762,2.69637,34.9821,5.07816,2.71235,36.6558,5.90557,2.7557,38.3695,3.66059,2.28942,33.9906,3.76419,2.40424,33.8776,3.79125,2.25425,34.1861,3.87836,2.37727,34.086,3.45258,2.72059,33.7908,3.59641,2.70808,34.0247,3.60659,2.73124,33.7208,3.73561,2.71002,33.9657,3.93167,2.22182,34.432,4.00871,2.34899,34.3307,3.72657,2.70159,34.2592,3.85972,2.6981,34.2048,.864168,.623319,27.5574,.747633,.787804,27.5362,.699742,.986498,27.4786,.760418,1.1002,27.4152,.882764,1.07772,27.3813,.986544,.600842,27.5235,1.04725,.714554,27.4601,4.00556,1.72742,33.7639,3.89535,1.94217,33.6075,3.7831,2.13391,33.4681,3.66417,2.33535,33.334,3.73228,2.59168,33.7678,3.61652,2.59752,33.4867,3.84942,2.56708,33.9961,4.36588,2.5498,35.0281,3.97363,2.54673,34.2386,3.41929,2.78414,33.0891,3.54084,2.57306,33.192,3.46599,2.52269,32.9396,3.37942,2.46514,32.7258,3.2198,2.36865,32.4007,2.93287,2.20329,31.8312,2.55173,1.9868,31.105,2.11518,1.73157,30.2829,1.59732,1.38116,29.0971,.999329,.913241,27.4025,.495237,.510761,25.8745,.238694,.341303,25.1671,5.19768,2.58846,36.7119,6.02733,2.65083,38.4298,6.41355,2.72171,39.3176,6.26442,2.8708,39.2776,6.49772,2.52784,39.429,6.11854,2.81276,39.2345,6.2101,2.86167,39.5121,6.02175,2.70098,39.265,6.12585,2.73314,39.4585,6.35729,2.45744,39.4163,6.46282,2.50694,39.6454,6.20146,2.44739,39.4021,6.28833,2.50527,39.5594,6.19552,2.61629,39.521,6.06886,2.55403,39.3414,6.33423,2.6985,39.5815,2.92979,3.69231,33.4818,2.78903,3.93905,33.6269,3.109,3.39389,33.2874,3.26608,3.12008,33.1178,3.34959,2.9404,33.0526,-3.53268,-3.5865,47.8705,-3.47897,-3.59763,47.9449,-3.13993,-3.34258,47.6229,-3.18515,-3.32505,47.5401,-3.3947,-3.61049,48.0636,-3.06905,-3.36526,47.755,-2.76287,-3.17279,47.4993,-2.79841,-3.15193,47.4141,-2.70721,-3.20093,47.6352,-4.39404,-4.58425,49.446,-4.32011,-4.5711,49.4803,-3.93812,-4.04476,48.5938,-4.00306,-4.04531,48.5369,-4.20386,-4.54728,49.535,-3.83613,-4.03994,48.6844,-4.22083,-5.35746,51.4068,-4.1525,-5.3349,51.4125,-4.39437,-5.02693,50.4634,-4.46936,-5.04826,50.4496,-4.04412,-5.29434,51.4048,-4.27619,-4.99048,50.4833,-3.70606,-5.47096,52.2074,-3.01774,-5.42873,52.86,-2.97653,-5.42117,52.8754,-3.65011,-5.45463,52.2221,-2.90917,-5.3956,52.8314,-3.56004,-5.41855,52.1963,-1.43192,-5.07545,53.7748,-2.22016,-5.28405,53.3829,-2.24729,-5.28493,53.3964,-1.44576,-5.06944,53.8256,-1.41086,-5.07962,53.677,-2.17618,-5.27225,53.3122,.008696,-4.55741,54.2983,-.661527,-4.82345,54.0796,-.662728,-4.80749,54.151,.017887,-4.5298,54.3768,-.009295,-4.59687,54.1733,-.661982,-4.84511,53.9641,.892218,-4.05012,54.5087,.513957,-4.30049,54.432,.529831,-4.26156,54.5129,.911899,-4.00035,54.5902,.856031,-4.12322,54.3778,.484526,-4.35707,54.3024,1.40881,-3.65269,54.5036,1.19293,-3.81222,54.5476,1.21498,-3.75252,54.6282,1.43331,-3.58718,54.5821,1.36404,-3.75006,54.3763,1.15239,-3.90057,54.4174,1.64219,-3.59972,54.1358,1.60925,-3.65978,54.0654,1.53199,-3.62336,54.3333,1.56024,-3.5587,54.4085,1.55158,-3.74921,53.9518,1.48141,-3.71958,54.2115,1.81485,-3.60643,53.326,1.77149,-3.65764,53.2722,1.68896,-3.68119,53.7276,1.727,-3.62586,53.7914,1.69827,-3.73433,53.186,1.62367,-3.7637,53.6252,1.94695,-3.38579,51.9973,1.89455,-3.43173,51.9735,1.84469,-3.57503,52.6615,1.89331,-3.52717,52.7012,1.80836,-3.50181,51.9357,1.76379,-3.64728,52.598,1.75642,-2.96372,50.4434,1.70423,-3.00837,50.4543,1.88631,-3.23413,51.2728,1.93976,-3.18854,51.2805,1.61976,-3.07755,50.4718,1.79915,-3.30442,51.2604,.522413,-2.65463,48.4953,1.24329,-2.79274,49.4484,1.2919,-2.75162,49.414,.561706,-2.61831,48.4383,.459608,-2.71012,48.5863,1.1652,-2.85626,49.5031,-1.33244,-2.76855,47.5222,-.387611,-2.65106,47.8511,-.365903,-2.6191,47.778,-1.33232,-2.74052,47.4401,-1.33297,-2.80949,47.6532,-.422323,-2.699,47.9677,-2.15401,-2.96731,47.442,-2.17404,-2.94306,47.3566,-2.12276,-3.00144,47.5782,-3.25607,-3.62555,48.2615,-2.95256,-3.3962,47.9754,-3.06618,-3.63811,48.5366,-2.79334,-3.4304,48.2819,-2.61582,-3.24126,47.862,-2.49106,-3.28916,48.1779,-4.01202,-4.50367,49.6261,-3.6681,-4.02668,48.8355,-3.74753,-4.43734,49.7523,-3.43719,-4.00115,49.0452,-3.86407,-5.22113,51.3743,-4.08076,-4.92638,50.5142,-3.61439,-5.11406,51.3301,-3.81049,-4.83234,50.5567,-2.79535,-5.33774,52.6877,-3.40904,-5.34701,52.1027,-2.63806,-5.24806,52.4801,-3.19941,-5.24055,51.9672,-1.37779,-5.07891,53.4965,-2.10264,-5.24013,53.1437,-1.33765,-5.06531,53.2421,-2.00329,-5.18441,52.9033,-.04347,-4.65454,53.9647,-.666602,-4.87479,53.7692,-.095553,-4.71482,53.6739,-.681314,-4.90136,53.4966,.793762,-4.23189,54.1607,.432732,-4.44059,54.0863,.723558,-4.344,53.8715,.36878,-4.52701,53.788,1.28315,-3.89845,54.166,1.08001,-4.03467,54.1989,1.16773,-4.06636,53.8973,.983119,-4.18546,53.8975,1.44776,-3.8873,53.766,1.38797,-3.86867,54.0092,1.28944,-4.05302,53.5357,1.2383,-4.05078,53.7427,1.56878,-3.85431,53.0426,1.50667,-3.89215,53.4562,1.37036,-4.0047,52.8472,1.32472,-4.05152,53.2364,1.65951,-3.6134,51.8724,1.62261,-3.76121,52.492,1.43879,-3.75667,51.784,1.41027,-3.9057,52.3443,1.47594,-3.18916,50.5008,1.64972,-3.41723,51.2397,1.26638,-3.33461,50.5418,1.43001,-3.56308,51.2109,.35426,-2.79955,48.7385,1.03331,-2.95894,49.5947,.20527,-2.92005,48.9521,.844013,-3.09501,49.7234,-1.33437,-2.87322,47.872,-.480497,-2.77535,48.1625,-1.33729,-2.95741,48.1775,-.562389,-2.87829,48.4354,-2.07161,-3.05268,47.8056,-2.0021,-3.11749,48.1226,-2.83878,-3.64218,48.8635,-2.60341,-3.46196,48.6506,-2.60324,-3.63152,49.161,-2.40848,-3.4895,49.0116,-2.3457,-3.33899,48.557,-2.21601,-3.39042,48.9216,-3.41963,-4.34089,49.8922,-3.15362,-3.95609,49.2902,-3.02644,-4.18276,49.9604,-2.82356,-3.87017,49.4893,-3.29281,-4.96405,51.2671,-3.46806,-4.69874,50.5928,-2.84617,-4.71706,51.1063,-3.02085,-4.47628,50.5349,-2.42911,-5.12248,52.2462,-2.92544,-5.09339,51.8095,-2.09231,-4.92371,51.9531,-2.52006,-4.85835,51.5714,-1.27896,-5.02501,52.9326,-1.86802,-5.09721,52.6228,-1.11484,-4.9261,52.5812,-1.61472,-4.94615,52.2928,-.15241,-4.75595,53.3216,-.693857,-4.90681,53.162,-.147122,-4.75347,52.9671,-.615791,-4.85907,52.8028,.703355,-4.39882,53.5505,.313752,-4.58528,53.4312,.289267,-4.60757,53.0593,.730834,-4.41017,53.159,1.00214,-4.2312,53.5902,1.10371,-4.16513,52.6244,1.07661,-4.21792,52.9996,.809172,-4.31613,52.4439,.791856,-4.3743,52.7811,1.07029,-4.21501,53.3365,1.13894,-3.91854,51.6853,1.12416,-4.06455,52.1743,.740776,-4.10013,51.6372,.77753,-4.22982,52.0549,.974714,-3.50465,50.6005,1.12715,-3.73053,51.1844,.523847,-3.71378,50.7101,.688275,-3.92778,51.2068,-392e-6,-3.07051,49.2226,.581897,-3.25945,49.8905,-.341401,-3.27442,49.5529,.163634,-3.47287,50.1158,-1.3538,-3.05982,48.5505,-.68042,-3.00754,48.7745,-1.44132,-3.19078,48.9384,-.905847,-3.18317,49.1577,-1.92689,-3.19245,48.5076,-1.893,-3.28514,48.901,-2.11237,-3.44486,49.2005,-2.10238,-3.60192,49.5515,-2.41275,-3.6349,49.3878,-2.55806,-3.91233,49.8302,-1.69938,-3.37284,49.2795,-1.54647,-3.91824,50.3657,-1.8461,-3.74739,49.9483,-1.30644,-3.42798,49.5583,-.879927,-3.55608,49.9418,-1.21323,-4.1083,50.791,-.469913,-3.7565,50.4181,-.135511,-3.97719,50.9051,-.880652,-4.28896,51.198,.084355,-4.16378,51.3269,.240573,-4.30403,51.7015,-.578267,-4.43092,51.5644,-.291872,-4.52463,51.8957,.391138,-4.39714,52.0626,.532669,-4.44595,52.413,-.006302,-4.5678,52.2012,.253768,-4.56775,52.4776,.458648,-4.53097,52.75,.024494,-4.67463,52.6888,-.365867,-4.73408,52.4662,-.770133,-4.74687,52.2118,-1.17139,-4.70928,51.9134,-1.56173,-4.62674,51.5767,-1.92933,-4.5046,51.2062,-2.23765,-4.33873,50.7834,-2.45055,-4.13046,50.3024,-4.39894,-.250035,46.8243,-4.44473,-.057876,46.8608,-4.62663,-.4312,47.2036,-4.58265,-.646258,47.1758,-4.51493,.171883,46.9235,-4.69344,-.176371,47.2532,-4.84177,-.506674,47.5835,-4.80322,-.710663,47.5631,-4.89946,-.258131,47.6208,-3.8911,1.63157,45.934,-3.93835,1.7094,45.995,-4.18894,.72283,46.3936,-4.14185,.586126,46.344,-4.01252,1.81794,46.093,-4.26195,.89466,46.4753,-3.70713,3.63484,46.014,-3.74392,3.67137,46.0728,-3.79217,2.68359,45.8896,-3.74761,2.63919,45.8256,-3.81102,3.71225,46.1659,-3.86397,2.75023,45.9912,-3.74281,4.68209,46.433,-3.84262,5.72229,47.0064,-3.85965,5.76039,47.0392,-3.76696,4.72532,46.4804,-3.91915,5.75121,47.0928,-3.82908,4.74408,46.5563,-4.18148,7.45873,48.3927,-4.01525,6.67745,47.6843,-3.99132,6.67592,47.6668,-4.14596,7.50208,48.3914,-4.24542,7.37232,48.3956,-4.07619,6.62967,47.7133,-4.38815,8.59853,49.8325,-4.3068,8.10358,49.1376,-4.2658,8.17381,49.1533,-4.34649,8.68126,49.8639,-4.45427,8.46731,49.7825,-4.37247,7.98984,49.113,-4.46257,9.18388,50.872,-4.43552,8.94087,50.4016,-4.39445,9.03125,50.4454,-4.42279,9.28012,50.9255,-4.52723,9.03185,50.786,-4.50135,8.79778,50.3315,-4.50014,9.53201,51.6231,-4.53605,9.42921,51.5559,-4.48665,9.36835,51.2749,-4.44884,9.46942,51.3365,-4.59615,9.2674,51.4476,-4.54917,9.20907,51.1759,-4.7746,9.05601,51.7015,-4.63428,9.30515,51.6707,-4.59953,9.40474,51.7408,-4.741,9.14916,51.773,-4.82991,8.90908,51.5868,-4.69221,9.14831,51.558,-5.18265,8.32508,51.822,-4.95003,8.74468,51.7441,-4.91854,8.83004,51.8173,-5.15503,8.40038,51.8974,-5.22688,8.20585,51.7017,-5.00116,8.60979,51.6271,-5.80213,7.11893,52.1637,-5.81648,7.07244,52.083,-5.48677,7.74947,51.9376,-5.46517,7.81139,52.0158,-5.83848,6.99846,51.9549,-5.52075,7.65119,51.8132,-6.46333,5.29353,52.2501,-6.45879,5.28588,52.1721,-6.12956,6.31806,52.2164,-6.12313,6.34775,52.2978,-6.4512,5.27365,52.048,-6.13891,6.27069,52.0871,-6.87514,2.20191,51.1272,-6.85042,2.25758,51.0757,-6.79051,3.83128,51.7924,-6.80926,3.8087,51.8606,-6.81162,2.34641,50.9936,-6.76126,3.86738,51.6838,-5.76718,.021804,49.0648,-6.4203,.931011,50.0948,-6.43308,.844089,50.1239,-5.75905,-.100894,49.0717,-5.77649,.201612,49.0552,-6.39852,1.06745,50.0487,-5.21642,-.404713,48.2019,-5.19001,-.571768,48.1923,-5.2543,-.184697,48.2203,-4.62629,.472517,47.0342,-4.79808,.153715,47.3428,-4.76489,.86,47.1965,-4.92428,.577396,47.4764,-4.98859,.073821,47.6891,-5.09415,.505242,47.792,-4.13443,1.98249,46.2578,-4.37983,1.13167,46.6156,-4.30068,2.20667,46.4913,-4.53375,1.44359,46.8173,-3.93211,3.76292,46.321,-3.98474,2.85736,46.1605,-4.10427,3.83321,46.5379,-4.15404,3.00725,46.3982,-4.0515,5.66405,47.1837,-3.95724,4.72403,46.6836,-4.23871,5.53453,47.313,-4.13976,4.69141,46.8624,-4.35916,7.20992,48.4016,-4.20088,6.4981,47.7635,-4.51575,6.97901,48.4122,-4.37504,6.30758,47.8362,-4.56395,8.24922,49.7009,-4.48187,7.79774,49.0728,-4.71482,7.94641,49.5972,-4.63154,7.52714,49.0194,-4.63575,8.78458,50.6492,-4.61146,8.56204,50.2192,-4.78349,8.46793,50.4985,-4.76448,8.24476,50.0894,-4.69749,9.00611,51.2703,-4.65614,8.9482,51.0145,-4.82859,8.67903,51.047,-4.80724,8.60168,50.8157,-4.92109,8.67133,51.3963,-4.79003,8.89227,51.3693,-5.03212,8.37263,51.139,-4.9184,8.55624,51.1074,-5.29976,8.00822,51.5005,-5.08547,8.38867,51.4314,-5.39492,7.73553,51.2181,-5.19196,8.09586,51.1576,-5.87323,6.87456,51.7412,-5.57604,7.48718,51.6055,-5.91563,6.69858,51.4421,-5.64775,7.25605,51.3143,-6.43749,5.25294,51.841,-6.15256,6.19112,51.8715,-6.41437,5.22259,51.5505,-6.16571,6.07743,51.5695,-6.7477,2.49516,50.8562,-6.71298,3.92782,51.5022,-6.65972,2.70492,50.6621,-6.64501,4.01267,51.2465,-5.78708,.485013,49.0409,-6.3605,1.29335,49.972,-5.79474,.875972,49.0224,-6.30608,1.61028,49.864,-5.31081,.132636,48.255,-5.37582,.557231,48.3083,-4.91149,1.32286,47.4043,-5.05145,1.08849,47.649,-5.05605,1.75717,47.6292,-5.17316,1.59987,47.8338,-5.19593,1.02385,47.9224,-5.28029,1.52678,48.0416,-4.50542,2.46838,46.7915,-4.71159,1.81408,47.0778,-4.75761,2.66416,47.1689,-4.91604,2.14276,47.3958,-4.33029,3.9181,46.8242,-4.37414,3.18,46.7079,-4.66234,3.94886,47.2465,-4.68026,3.28289,47.1346,-4.4659,5.40419,47.4945,-4.37015,4.66823,47.1038,-4.77905,5.27201,47.8102,-4.70232,4.61926,47.4848,-4.70833,6.70373,48.447,-4.58602,6.09515,47.9481,-4.95862,6.43438,48.5959,-4.86896,5.8874,48.1846,-4.8976,7.58531,49.4978,-4.81515,7.19934,48.9756,-5.09663,7.24892,49.4763,-5.03751,6.88674,49.0347,-4.95598,8.14886,50.4246,-4.95032,7.87986,49.9818,-5.15146,7.51546,49.9221,-5.17501,7.78515,50.4149,-4.97629,8.30737,50.7818,-5.49597,7.41433,50.8714,-5.30005,7.76773,50.8239,-5.56475,7.12611,50.5112,-5.38946,7.4471,50.4692,-5.11961,8.08964,50.8357,-5.95017,6.48316,51.0622,-5.72011,6.97728,50.9509,-5.92986,6.27973,50.5871,-5.74774,6.72604,50.5353,-6.36914,5.18163,51.1687,-6.16345,5.93514,51.1791,-6.25155,5.12718,50.6205,-6.09662,5.78695,50.6513,-6.54241,2.96389,50.3979,-6.5489,4.1157,50.9051,-6.35316,3.2345,49.9782,-6.37709,4.21611,50.3925,-5.78958,1.35172,48.9879,-6.22916,1.99979,49.7106,-5.74346,1.82502,48.8732,-6.09274,2.40154,49.4325,-5.43374,1.07296,48.3704,-5.46429,1.59379,48.3889,-5.34813,1.92358,48.1379,-5.36321,2.40668,48.1269,-5.17386,2.10247,47.8154,-5.06744,2.63165,47.643,-5.60175,2.18362,48.572,-5.63266,3.6928,48.5889,-5.51439,3.02524,48.3512,-5.85639,2.75107,48.9588,-6.05022,3.48001,49.3412,-5.6705,4.39192,48.8246,-6.08394,4.29954,49.6533,-6.01382,5.06739,49.8626,-5.65558,5.05659,49.0433,-5.91841,5.66564,49.9627,-5.80982,6.14519,50.0177,-5.62582,5.62733,49.2386,-5.58503,6.11936,49.436,-5.6847,6.58269,50.0932,-5.54431,6.98897,50.1898,-5.52943,6.55892,49.6579,-5.45892,6.94166,49.8832,-5.35623,7.28747,50.0891,-5.29153,7.05195,49.6431,-5.29362,6.6671,49.2819,-5.27514,6.22511,48.938,-5.24425,5.71397,48.623,-5.20778,5.13896,48.3346,-5.1706,4.5132,48.0723,-5.1312,3.86379,47.8565,-5.09074,3.22323,47.7097,-3.20214,-3.15077,47.578,-3.10229,-3.0906,47.5016,-3.15206,-3.00866,47.3882,-3.27546,-3.06336,47.4731,-3.28289,-2.81117,47.1662,-3.40105,-2.8593,47.2609,-3.41053,-3.14556,47.5242,-3.32343,-3.20922,47.6152,-3.53292,-2.93433,47.3264,-3.4561,-2.4513,46.8613,-3.55248,-2.48102,46.982,-3.65359,-2.08866,46.7609,-3.58739,-2.08263,46.6057,-3.6708,-2.53571,47.074,-3.75682,-2.12277,46.8819,-3.61229,-1.85274,46.5102,-3.65133,-1.84092,46.7035,-3.63499,-1.673,46.758,-3.5914,-1.68487,46.4955,-3.75003,-1.86416,46.8539,-3.76283,-1.69771,46.9866,-4.42635,-.744815,47.2221,-4.48301,-.796995,47.3242,-4.42792,-.884651,47.2826,-4.33969,-.856145,47.1512,-4.30354,-1.01925,47.1983,-4.21096,-1.00687,47.0522,-4.36484,-.72549,47.0885,-4.28083,-.843436,46.9893,-4.16016,-1.01363,46.8727,-4.0322,-1.15371,46.9768,-4.11929,-1.17966,47.1398,-3.84636,-1.30718,46.9138,-3.95897,-1.34648,47.144,-4.00788,-1.15062,46.775,-3.82368,-1.27771,46.6509,-3.79957,-1.50824,47.0881,-3.69633,-1.48691,46.8426,-3.65553,-1.46687,46.5939,-7.89184,-1.27309,51.9972,-7.48541,-1.70127,51.7688,-7.38188,-1.65678,51.676,-7.79805,-1.21842,51.9082,-8.01557,-1.34442,52.1183,-7.62127,-1.75483,51.8923,-7.28212,-2.08302,51.8997,-7.17279,-2.04845,51.8102,-7.4302,-2.12298,52.0219,-9.65569,.051256,53.243,-9.70692,-.028273,53.309,-8.69254,-.62159,52.579,-8.61728,-.553217,52.5001,-9.7796,-.149557,53.414,-8.79523,-.719908,52.694,-11.7096,.12657,54.637,-11.7088,.051835,54.6807,-10.7148,.1923,53.9932,-10.6888,.27382,53.9394,-11.7026,-.06398,54.7568,-10.7506,.065906,54.0843,-13.6727,-.94243,56.2275,-12.7141,-.356811,55.4467,-12.7438,-.295234,55.4113,-13.7296,-.89697,56.2021,-13.5806,-1.01313,56.2717,-12.6635,-.45233,55.5084,-15.4012,-2.26785,57.5867,-15.3069,-2.2839,57.5762,-14.5273,-1.61454,56.9418,-14.6058,-1.58486,56.9318,-15.1553,-2.30767,57.5637,-14.4015,-1.66044,56.9609,-16.7651,-3.29867,58.6602,-16.6536,-3.29975,58.6033,-16.0382,-2.86672,58.1324,-16.1432,-2.86072,58.1668,-16.4715,-3.29764,58.5204,-15.8679,-2.87341,58.0841,-17.4035,-3.67574,59.3073,-17.0906,-3.54885,58.9863,-17.2057,-3.54684,59.0605,-17.5214,-3.66961,59.3938,-17.2129,-3.68161,59.1746,-16.9032,-3.54803,58.875,-17.6434,-3.75553,59.5774,-17.7645,-3.74529,59.6723,-17.8554,-3.80858,59.8192,-17.7327,-3.82102,59.7208,-17.4485,-3.76784,59.43,-17.5358,-3.83662,59.5671,-17.4267,-3.96808,59.6049,-17.3111,-3.97691,59.5143,-17.598,-3.89178,59.6745,-17.7185,-3.88016,59.7707,-17.1259,-3.98675,59.3724,-17.4049,-3.90608,59.524,-16.549,-4.24144,59.1854,-16.4489,-4.24142,59.1087,-16.9471,-4.08603,59.3273,-17.0563,-4.08087,59.4115,-16.2877,-4.23622,58.9902,-16.772,-4.08979,59.196,-14.9312,-4.69834,58.5591,-15.7567,-4.45672,58.8423,-15.8436,-4.46415,58.9101,-15.0018,-4.71468,58.6178,-14.8145,-4.66474,58.4727,-15.6153,-4.43847,58.7397,-12.697,-5.08232,57.7723,-13.9951,-4.9213,58.2591,-14.0463,-4.94684,58.3093,-12.7184,-5.11581,57.8125,-12.6581,-5.02092,57.7174,-13.9088,-4.87252,58.1874,-9.06698,-4.86165,55.7834,-10.8837,-5.11536,56.9355,-10.8606,-5.15331,56.9609,-8.99823,-4.8957,55.7864,-9.17121,-4.80075,55.7878,-10.9156,-5.04733,56.9045,-7.06484,-3.3945,53.1547,-7.17991,-3.39644,53.2126,-7.80541,-4.21802,54.4431,-7.70518,-4.23668,54.4154,-7.35385,-3.39317,53.3062,-7.95925,-4.1827,54.4946,-7.10185,-2.65025,52.3646,-6.98641,-2.62982,52.2861,-7.26799,-2.67238,52.4799,-8.19544,-1.4476,52.3086,-7.81794,-1.82709,52.085,-8.4427,-1.59201,52.6243,-8.08851,-1.93001,52.4162,-7.65032,-2.17415,52.2145,-7.95399,-2.24422,52.5348,-9.89182,-.344759,53.5866,-8.9487,-.872397,52.8786,-10.0481,-.60768,53.8136,-9.15983,-1.0804,53.155,-11.6901,-.252571,54.8836,-10.8057,-.139682,54.2364,-11.6859,-.50809,55.0222,-10.8883,-.416561,54.4176,-13.4301,-1.12892,56.3399,-12.5797,-.608265,55.6088,-13.2456,-1.28802,56.3847,-12.4831,-.821202,55.7036,-14.9048,-2.34478,57.5403,-14.1958,-1.73524,56.9871,-14.5754,-2.39251,57.4694,-13.9352,-1.83747,56.9733,-16.1625,-3.28868,58.3933,-15.5817,-2.88031,58.008,-15.7269,-3.26733,58.2359,-15.1881,-2.88235,57.8909,-16.8963,-3.68744,58.9684,-16.5867,-3.54173,58.7037,-16.4781,-3.69556,58.7375,-16.147,-3.52809,58.506,-17.2289,-3.8555,59.3332,-17.1323,-3.78412,59.2012,-16.9295,-3.8655,59.1148,-16.7515,-3.80582,58.9566,-16.8211,-3.99316,59.1464,-17.0936,-3.9202,59.2863,-16.4232,-3.9698,58.876,-16.7254,-3.90921,59.0156,-16.0146,-4.21671,58.8006,-16.4787,-4.08586,58.9863,-15.6217,-4.15804,58.5598,-16.0699,-4.04838,58.7305,-14.6167,-4.596,58.3322,-15.375,-4.39618,58.5741,-14.3469,-4.47195,58.1158,-15.0336,-4.307,58.3445,-12.5912,-4.90621,57.6294,-13.7627,-4.77839,58.0708,-12.5135,-4.7229,57.4754,-13.5726,-4.62144,57.8781,-9.34168,-4.68866,55.7997,-10.9662,-4.92229,56.8571,-9.59042,-4.51116,55.7897,-11.0512,-4.72608,56.7617,-7.63472,-3.3782,53.4622,-8.21107,-4.11446,54.5837,-8.02752,-3.33995,53.6717,-8.56818,-3.99864,54.6857,-7.5269,-2.69712,52.6663,-7.88607,-2.72218,52.9484,-8.74976,-1.77793,53.0865,-8.43225,-2.0673,52.92,-9.04854,-1.97484,53.5543,-8.80875,-2.20738,53.4586,-8.33322,-2.33289,53.005,-8.72383,-2.40602,53.4868,-10.2233,-.928788,54.0635,-9.4107,-1.34042,53.5188,-10.2862,-1.3236,54.2725,-9.60054,-1.65258,53.8701,-11.6834,-.829675,55.1319,-10.9777,-.75898,54.5869,-11.5743,-1.27394,55.2227,-10.9384,-1.21201,54.7206,-13.0498,-1.496,56.3688,-12.3828,-1.09424,55.7536,-12.8111,-1.80938,56.3495,-12.2081,-1.4864,55.7945,-14.2051,-2.45743,57.3305,-13.6526,-1.97364,56.8878,-13.8419,-2.59176,57.1958,-13.3533,-2.19632,56.8049,-15.2017,-3.23971,58.0671,-14.7254,-2.88596,57.7308,-14.7131,-3.26044,57.8947,-14.2921,-2.94837,57.5683,-16.0048,-3.7104,58.5367,-15.6223,-3.51258,58.3203,-15.5321,-3.74297,58.369,-15.1169,-3.5293,58.147,-15.1355,-4.03885,58.2977,-15.5782,-3.95291,58.4695,-14.6779,-3.86743,58.0332,-15.1001,-3.80034,58.217,-15.9783,-3.88941,58.6112,-14.0317,-4.27258,57.8225,-14.617,-4.15078,58.0651,-13.7223,-3.9809,57.5281,-14.2234,-3.92769,57.7849,-12.4417,-4.45164,57.2362,-13.3619,-4.38196,57.5968,-12.3623,-4.04674,56.9616,-13.1439,-4.02656,57.2986,-9.91229,-4.24811,55.731,-11.1775,-4.43939,56.595,-10.2523,-3.84563,55.636,-11.3108,-4.00966,56.3875,-8.50863,-3.26044,53.9109,-9.01338,-3.8139,54.7705,-8.98318,-3.10117,54.1314,-9.46827,-3.51064,54.8272,-8.33031,-2.73749,53.3264,-8.7884,-2.70485,53.7133,-16.3704,-3.84111,58.7674,-9.08432,-2.44844,53.8614,-9.61503,-2.3525,54.2645,-9.34762,-2.11024,53.92,-10.0357,-1.83272,54.3299,-9.33821,-2.78986,54.2483,-10.8964,-2.58129,55.4146,-10.2393,-2.45646,54.83,-9.86262,-3.04571,54.8461,-10.5654,-3.26743,55.5254,-11.4304,-3.40554,56.18,-11.6119,-2.71379,56.0015,-12.2803,-3.48478,56.7116,-12.3044,-2.85767,56.5161,-12.9498,-3.54317,57.0602,-13.4825,-3.59777,57.3112,-12.8928,-3.01853,56.8957,-13.4019,-3.19249,57.1838,-13.9548,-3.65078,57.5591,-14.3649,-3.66602,57.7908,-13.8588,-3.36431,57.4334,-14.1922,-3.48279,57.6284,-14.3789,-3.36736,57.7324,-14.7165,-3.5997,57.9758,-13.9881,-3.11888,57.4538,-13.5438,-2.8428,57.1436,-13.06,-2.55223,56.8063,-12.5195,-2.27596,56.3941,-11.9109,-2.04491,55.8729,-11.2742,-1.88273,55.3143,-10.6509,-1.80881,54.7981,-3.71386,-1.29643,46.4197,-3.59244,-1.44304,46.3864,-3.54329,-1.25064,46.1314,-3.43641,-1.38848,46.1031,-3.54003,-1.61985,46.3159,-3.38786,-1.55251,46.0445,-3.23451,-1.13126,45.6735,-3.12405,-1.27609,45.6394,-2.81581,-.96345,45.1016,-2.69945,-1.11894,45.0632,-3.06791,-1.44369,45.58,-2.63579,-1.29538,45.0023,-2.2081,-.92708,44.4188,-2.32042,-.766272,44.4507,-1.69544,-.500037,43.5037,-1.59341,-.658206,43.4839,-2.14825,-1.10825,44.3658,-1.54392,-.83655,43.4423,.122924,.138851,40.3507,-.189499,.013664,40.917,-.280954,.16657,40.9223,.025704,.313095,40.3582,.100787,.313787,40.2333,.184905,.141847,40.2127,.171278,-.052454,40.3179,-.149754,-.158335,40.8838,.239081,-.034566,40.1954,-6.60845,-1.36649,50.8307,-6.47503,-1.47017,50.8061,-5.60182,-1.46061,49.5145,-5.72306,-1.34099,49.541,-6.41347,-1.59999,50.7496,-5.54606,-1.60715,49.4462,-4.73855,-1.46648,48.2226,-4.84377,-1.3301,48.2492,-4.69326,-1.63174,48.1519,-3.9557,-1.66486,47.2152,-3.97973,-1.51034,47.2914,-4.16748,-1.49818,47.4409,-4.14024,-1.65831,47.3774,-4.08878,-1.39046,47.3132,-4.2602,-1.3701,47.4557,-4.3269,-1.48119,47.6159,-4.42075,-1.34269,47.6361,-4.29165,-1.64978,47.5506,-3.36466,-3.30277,47.6381,-3.18588,-3.2256,47.5707,-3.0463,-3.12688,47.4646,-3.47075,-3.21692,47.5115,-3.59709,-2.99238,47.3182,-3.46037,-3.26638,47.4793,-3.56803,-3.00475,47.2496,-3.11399,-3.02742,47.3223,-3.13837,-3.09047,47.3003,-3.25528,-2.82486,47.0965,-3.3209,-2.88424,47.0873,-3.73804,-2.58248,47.0776,-3.83664,-2.16522,46.8888,-3.726,-2.59888,47.0004,-3.85365,-2.19399,46.7917,-3.44738,-2.4711,46.7814,-3.51792,-2.52129,46.7823,-3.60632,-2.11506,46.5078,-3.68807,-2.16118,46.5138,-3.85662,-1.91966,46.8454,-3.89573,-1.80447,46.9387,-3.91582,-1.96038,46.7227,-4.01017,-1.82088,46.8071,-3.66083,-1.90536,46.3914,-3.76571,-1.94869,46.3953,-3.65146,-1.79249,46.3511,-3.80168,-1.79781,46.3572,-4.56756,-.785211,47.3576,-4.49918,-.703252,47.2145,-4.3979,-.652029,47.0234,-4.30211,-.843827,46.8944,-4.18944,-1.03814,46.7651,-4.36793,-.815233,46.8827,-4.27224,-1.06473,46.7807,-4.5013,-.904777,47.3029,-4.38566,-1.04575,47.2172,-4.54503,-.904975,47.2447,-4.41426,-1.07018,47.1127,-3.94639,-1.25892,46.5463,-4.06958,-1.17332,46.6587,-4.16491,-1.21979,46.6658,-4.03453,-1.36919,46.5198,-4.2332,-1.21323,47.1509,-4.14201,-1.35424,47.1494,-4.2957,-1.24934,47.0275,-4.21741,-1.44337,46.9871,-3.59736,-1.72404,46.2373,-3.43979,-1.64813,45.9846,-3.71902,-1.71098,46.2103,-3.54821,-1.62831,45.959,-3.82874,-1.27428,46.3822,-3.88625,-1.37275,46.3215,-3.6469,-1.22487,46.1106,-3.69402,-1.31454,46.0554,-3.11149,-1.5351,45.5264,-2.67315,-1.38638,44.953,-3.21624,-1.508,45.5091,-2.77755,-1.35245,44.9414,-3.33579,-1.10057,45.6596,-3.3759,-1.18839,45.6093,-2.91897,-.928311,45.0911,-2.9551,-1.0181,45.043,-2.18602,-1.19963,44.3217,-1.58557,-.926548,43.4016,-2.2883,-1.16271,44.3094,-1.68404,-.890352,43.384,-2.42252,-.729193,44.4385,-2.46012,-.820416,44.3945,-1.79391,-.46384,43.4861,-1.83557,-.553836,43.4454,.198919,-.083671,40.1531,.130171,-.140967,40.2718,.124389,-.076421,40.1298,.036648,-.101686,40.2414,-.194074,-.244707,40.8394,-.287609,-.209243,40.8094,.13484,.115515,40.1587,.038953,.319223,40.197,.052967,.093705,40.1373,-.013958,.271921,40.1677,-.374528,.202026,40.8924,-.066266,.352142,40.3262,-.418886,.115646,40.848,-.109001,.263847,40.2818,-4.951,-1.31285,48.2093,-5.841,-1.32921,49.5055,-5.89396,-1.41603,49.4332,-5.00227,-1.40827,48.1326,-6.73658,-1.35976,50.8059,-6.79391,-1.43939,50.7494,-5.60273,-1.69073,49.3707,-4.74579,-1.72598,48.074,-6.47698,-1.67646,50.6893,-4.85429,-1.70755,48.0331,-5.72439,-1.6757,49.3319,-6.61128,-1.66656,50.6609,-4.22684,-1.38593,47.2677,-4.3097,-1.48011,47.1696,-4.37081,-1.35717,47.4071,-4.43601,-1.45321,47.3282,-4.04296,-1.76688,47.1259,-4.20428,-1.75673,47.2962,-4.16966,-1.76906,47.0576,-4.31374,-1.74617,47.2453,-4.52305,-1.3251,47.5921,-4.57695,-1.42274,47.516,-4.34559,-1.74757,47.4741,-4.44793,-1.73015,47.4298,-.931701,-.146687,42.1457,-.838749,-.296742,42.1356,-.797983,-.466458,42.1008,-.842476,-.552628,42.0594,-.937122,-.518885,42.0348,-1.02637,-.11295,42.121,-1.07089,-.199125,42.0796,-4.46917,-.886687,47.0482,-4.36414,-1.07702,46.9301,-4.25906,-1.24811,46.8259,-4.14992,-1.42817,46.7269,-4.27803,-1.64296,47.085,-4.14181,-1.65437,46.863,-4.40762,-1.61572,47.2624,-4.95824,-1.57234,48.0608,-4.54174,-1.59148,47.4504,-3.92949,-1.82621,46.5518,-4.03774,-1.63927,46.6231,-3.93725,-1.60065,46.4185,-3.83303,-1.55731,46.2475,-3.65028,-1.48452,45.992,-3.32324,-1.35958,45.5466,-2.89267,-1.19575,44.981,-2.40044,-1.00175,44.3414,-1.78608,-.732181,43.4038,-1.0301,-.368836,42.0448,-.379102,-.056345,40.8147,-.059019,.072324,40.2474,-5.84191,-1.55933,49.3617,-6.73853,-1.56605,50.6892,-7.19252,-1.60315,51.3762,-7.05387,-1.7419,51.3696,-7.29051,-1.43415,51.4415,-6.91812,-1.70894,51.3437,-7.06916,-1.74246,51.5506,-6.84615,-1.62576,51.3663,-6.98136,-1.645,51.5032,-7.17392,-1.38953,51.4317,-7.30249,-1.42475,51.6073,-7.03693,-1.39739,51.4301,-7.13821,-1.44055,51.5488,-7.05425,-1.54173,51.5345,-6.90757,-1.49924,51.4057,-7.18934,-1.59578,51.5792,-3.45132,-2.95795,47.1539,-3.30632,-3.18676,47.3626,-3.63294,-2.57257,46.877,-3.78938,-2.19162,46.6357,-3.86827,-1.97189,46.5359],faces:[43,0,1,2,3,0,0,1,2,3,0,1,2,3,43,4,0,3,5,0,4,0,3,5,4,0,3,5,43,0,6,7,1,0,0,6,7,1,0,6,7,1,43,6,0,4,8,0,6,0,4,8,6,0,4,8,43,9,10,8,4,0,9,10,8,4,9,10,8,4,43,9,4,5,11,0,9,4,5,11,9,4,5,11,43,9,12,13,10,0,9,12,13,10,9,12,13,10,43,11,14,12,9,0,11,14,12,9,11,14,12,9,43,15,16,17,18,0,15,16,17,18,15,16,17,18,43,19,15,18,20,0,19,15,18,20,19,15,18,20,43,3,2,16,15,0,3,2,16,15,3,2,16,15,43,5,3,15,19,0,5,3,15,19,5,3,15,19,43,5,19,21,11,0,5,19,21,11,5,19,21,11,43,19,20,22,21,0,19,20,22,21,19,20,22,21,43,11,21,23,14,0,11,21,23,14,11,21,23,14,43,21,22,24,23,0,21,22,24,23,21,22,24,23,43,25,26,27,28,0,25,26,27,28,25,26,27,28,43,20,18,26,25,0,20,18,26,25,20,18,26,25,43,29,30,27,26,0,29,30,27,26,29,30,27,26,43,18,17,29,26,0,18,17,29,26,18,17,29,26,43,24,22,31,32,0,24,22,31,32,24,22,31,32,43,22,20,25,31,0,22,20,25,31,22,20,25,31,43,32,31,33,34,0,32,31,33,34,32,31,33,34,43,31,25,28,33,0,31,25,28,33,31,25,28,33,43,35,36,12,14,0,35,36,12,14,35,36,12,14,43,35,37,38,36,0,35,37,38,36,35,37,38,36,43,36,39,13,12,0,36,39,13,12,36,39,13,12,43,36,38,40,39,0,36,38,40,39,36,38,40,39,43,38,41,42,40,0,38,41,42,40,38,41,42,40,43,37,43,41,38,0,37,43,41,38,37,43,41,38,43,41,44,45,42,0,41,44,45,42,41,44,45,42,43,43,46,44,41,0,43,46,44,41,43,46,44,41,43,47,48,23,24,0,47,48,23,24,47,48,23,24,43,49,50,48,47,0,49,50,48,47,49,50,48,47,43,48,35,14,23,0,48,35,14,23,48,35,14,23,43,50,37,35,48,0,50,37,35,48,50,37,35,48,43,51,43,37,50,0,51,43,37,50,51,43,37,50,43,52,51,50,49,0,52,51,50,49,52,51,50,49,43,53,46,43,51,0,53,46,43,51,53,46,43,51,43,54,53,51,52,0,54,53,51,52,54,53,51,52,43,55,56,32,34,0,55,56,32,34,55,56,32,34,43,57,58,56,55,0,57,58,56,55,57,58,56,55,43,56,47,24,32,0,56,47,24,32,56,47,24,32,43,58,49,47,56,0,58,49,47,56,58,49,47,56,43,59,52,49,58,0,59,52,49,58,59,52,49,58,43,60,59,58,57,0,60,59,58,57,60,59,58,57,43,61,54,52,59,0,61,54,52,59,61,54,52,59,43,60,62,61,59,0,60,62,61,59,60,62,61,59,43,8,63,64,6,0,8,63,64,6,8,63,64,6,43,63,65,66,64,0,63,65,66,64,63,65,66,64,43,6,64,67,7,0,6,64,67,7,6,64,67,7,43,66,68,67,64,0,66,68,67,64,66,68,67,64,43,10,13,69,70,0,10,13,69,70,10,13,69,70,43,69,71,72,70,0,69,71,72,70,69,71,72,70,43,10,70,63,8,0,10,70,63,8,10,70,63,8,43,70,72,65,63,0,70,72,65,63,70,72,65,63,43,73,39,40,74,0,73,39,40,74,73,39,40,74,43,75,73,74,76,0,75,73,74,76,75,73,74,76,43,73,69,13,39,0,73,69,13,39,73,69,13,39,43,71,69,73,75,0,71,69,73,75,71,69,73,75,43,77,78,42,45,0,77,78,42,45,77,78,42,45,43,77,79,80,78,0,77,79,80,78,77,79,80,78,43,74,40,42,78,0,74,40,42,78,74,40,42,78,43,80,76,74,78,0,80,76,74,78,80,76,74,78,43,81,82,83,84,0,81,82,83,84,81,82,83,84,43,85,81,84,86,0,85,81,84,86,85,81,84,86,43,81,87,88,82,0,81,87,88,82,81,87,88,82,43,85,89,87,81,0,85,89,87,81,85,89,87,81,43,90,91,89,85,0,90,91,89,85,90,91,89,85,43,90,85,86,92,0,90,85,86,92,90,85,86,92,43,90,93,94,91,0,90,93,94,91,90,93,94,91,43,92,95,93,90,0,92,95,93,90,92,95,93,90,43,96,97,98,99,0,96,97,98,99,96,97,98,99,43,99,98,100,101,0,99,98,100,101,99,98,100,101,43,84,83,96,99,0,84,83,96,99,84,83,96,99,43,86,84,99,101,0,86,84,99,101,86,84,99,101,43,92,86,101,102,0,92,86,101,102,92,86,101,102,43,101,100,103,102,0,101,100,103,102,101,100,103,102,43,92,102,104,95,0,92,102,104,95,92,102,104,95,43,104,102,103,105,0,104,102,103,105,104,102,103,105,43,106,107,108,109,0,106,107,108,109,106,107,108,109,43,98,107,106,100,0,98,107,106,100,98,107,106,100,43,110,111,108,107,0,110,111,108,107,110,111,108,107,43,97,110,107,98,0,97,110,107,98,97,110,107,98,43,105,103,112,113,0,105,103,112,113,105,103,112,113,43,100,106,112,103,0,100,106,112,103,100,106,112,103,43,113,112,114,115,0,113,112,114,115,113,112,114,115,43,112,106,109,114,0,112,106,109,114,112,106,109,114,43,116,117,93,95,0,116,117,93,95,116,117,93,95,43,116,118,119,117,0,116,118,119,117,116,118,119,117,43,117,120,94,93,0,117,120,94,93,117,120,94,93,43,117,119,121,120,0,117,119,121,120,117,119,121,120,43,119,122,123,121,0,119,122,123,121,119,122,123,121,43,118,124,122,119,0,118,124,122,119,118,124,122,119,43,122,125,126,123,0,122,125,126,123,122,125,126,123,43,124,127,125,122,0,124,127,125,122,124,127,125,122,43,128,129,104,105,0,128,129,104,105,128,129,104,105,43,130,131,129,128,0,130,131,129,128,130,131,129,128,43,129,116,95,104,0,129,116,95,104,129,116,95,104,43,131,118,116,129,0,131,118,116,129,131,118,116,129,43,132,124,118,131,0,132,124,118,131,132,124,118,131,43,133,132,131,130,0,133,132,131,130,133,132,131,130,43,134,127,124,132,0,134,127,124,132,134,127,124,132,43,135,134,132,133,0,135,134,132,133,135,134,132,133,43,136,137,113,115,0,136,137,113,115,136,137,113,115,43,138,139,137,136,0,138,139,137,136,138,139,137,136,43,137,128,105,113,0,137,128,105,113,137,128,105,113,43,139,130,128,137,0,139,130,128,137,139,130,128,137,43,140,133,130,139,0,140,133,130,139,140,133,130,139,43,141,140,139,138,0,141,140,139,138,141,140,139,138,43,142,135,133,140,0,142,135,133,140,142,135,133,140,43,141,143,142,140,0,141,143,142,140,141,143,142,140,43,89,144,145,87,0,89,144,145,87,89,144,145,87,43,144,146,147,145,0,144,146,147,145,144,146,147,145,43,87,145,148,88,0,87,145,148,88,87,145,148,88,43,147,149,148,145,0,147,149,148,145,147,149,148,145,43,91,94,150,151,0,91,94,150,151,91,94,150,151,43,150,152,153,151,0,150,152,153,151,150,152,153,151,43,91,151,144,89,0,91,151,144,89,91,151,144,89,43,151,153,146,144,0,151,153,146,144,151,153,146,144,43,154,120,121,155,0,154,120,121,155,154,120,121,155,43,156,154,155,157,0,156,154,155,157,156,154,155,157,43,154,150,94,120,0,154,150,94,120,154,150,94,120,43,152,150,154,156,0,152,150,154,156,152,150,154,156,43,158,159,123,126,0,158,159,123,126,158,159,123,126,43,158,160,161,159,0,158,160,161,159,158,160,161,159,43,155,121,123,159,0,155,121,123,159,155,121,123,159,43,161,157,155,159,0,161,157,155,159,161,157,155,159,43,162,163,164,165,0,162,163,164,165,162,163,164,165,43,166,162,165,167,0,166,162,165,167,166,162,165,167,43,162,168,169,163,0,162,168,169,163,162,168,169,163,43,166,170,168,162,0,166,170,168,162,166,170,168,162,43,171,172,170,166,0,171,172,170,166,171,172,170,166,43,171,166,167,173,0,171,166,167,173,171,166,167,173,43,171,174,175,172,0,171,174,175,172,171,174,175,172,43,173,176,174,171,0,173,176,174,171,173,176,174,171,43,177,178,179,180,0,177,178,179,180,177,178,179,180,43,180,179,181,182,0,180,179,181,182,180,179,181,182,43,165,164,177,180,0,165,164,177,180,165,164,177,180,43,167,165,180,182,0,167,165,180,182,167,165,180,182,43,167,182,183,173,0,167,182,183,173,167,182,183,173,43,182,181,184,183,0,182,181,184,183,182,181,184,183,43,173,183,185,176,0,173,183,185,176,173,183,185,176,43,183,184,186,185,0,183,184,186,185,183,184,186,185,43,187,188,189,190,0,187,188,189,190,187,188,189,190,43,179,188,187,181,0,179,188,187,181,179,188,187,181,43,191,192,189,188,0,191,192,189,188,191,192,189,188,43,178,191,188,179,0,178,191,188,179,178,191,188,179,43,186,184,193,194,0,186,184,193,194,186,184,193,194,43,184,181,187,193,0,184,181,187,193,184,181,187,193,43,194,193,195,196,0,194,193,195,196,194,193,195,196,43,193,187,190,195,0,193,187,190,195,193,187,190,195,43,197,198,174,176,0,197,198,174,176,197,198,174,176,43,197,199,200,198,0,197,199,200,198,197,199,200,198,43,198,201,175,174,0,198,201,175,174,198,201,175,174,43,198,200,202,201,0,198,200,202,201,198,200,202,201,43,200,203,204,202,0,200,203,204,202,200,203,204,202,43,199,205,203,200,0,199,205,203,200,199,205,203,200,43,203,206,207,204,0,203,206,207,204,203,206,207,204,43,205,208,206,203,0,205,208,206,203,205,208,206,203,43,209,210,185,186,0,209,210,185,186,209,210,185,186,43,211,212,210,209,0,211,212,210,209,211,212,210,209,43,210,197,176,185,0,210,197,176,185,210,197,176,185,43,212,199,197,210,0,212,199,197,210,212,199,197,210,43,213,205,199,212,0,213,205,199,212,213,205,199,212,43,214,213,212,211,0,214,213,212,211,214,213,212,211,43,215,208,205,213,0,215,208,205,213,215,208,205,213,43,216,215,213,214,0,216,215,213,214,216,215,213,214,43,217,218,194,196,0,217,218,194,196,217,218,194,196,43,219,220,218,217,0,219,220,218,217,219,220,218,217,43,218,209,186,194,0,218,209,186,194,218,209,186,194,43,220,211,209,218,0,220,211,209,218,220,211,209,218,43,221,214,211,220,0,221,214,211,220,221,214,211,220,43,222,221,220,219,0,222,221,220,219,222,221,220,219,43,223,216,214,221,0,223,216,214,221,223,216,214,221,43,222,224,223,221,0,222,224,223,221,222,224,223,221,43,170,225,226,168,0,170,225,226,168,170,225,226,168,43,225,227,228,226,0,225,227,228,226,225,227,228,226,43,168,226,229,169,0,168,226,229,169,168,226,229,169,43,228,230,229,226,0,228,230,229,226,228,230,229,226,43,172,175,231,232,0,172,175,231,232,172,175,231,232,43,231,233,234,232,0,231,233,234,232,231,233,234,232,43,172,232,225,170,0,172,232,225,170,172,232,225,170,43,232,234,227,225,0,232,234,227,225,232,234,227,225,43,235,201,202,236,0,235,201,202,236,235,201,202,236,43,237,235,236,238,0,237,235,236,238,237,235,236,238,43,235,231,175,201,0,235,231,175,201,235,231,175,201,43,233,231,235,237,0,233,231,235,237,233,231,235,237,43,239,240,204,207,0,239,240,204,207,239,240,204,207,43,239,241,242,240,0,239,241,242,240,239,241,242,240,43,236,202,204,240,0,236,202,204,240,236,202,204,240,43,242,238,236,240,0,242,238,236,240,242,238,236,240,43,243,244,245,246,0,243,244,245,246,243,244,245,246,43,247,243,246,248,0,247,243,246,248,247,243,246,248,43,243,249,250,244,0,243,249,250,244,243,249,250,244,43,247,251,249,243,0,247,251,249,243,247,251,249,243,43,252,253,251,247,0,252,253,251,247,252,253,251,247,43,252,247,248,254,0,252,247,248,254,252,247,248,254,43,252,255,256,253,0,252,255,256,253,252,255,256,253,43,254,257,255,252,0,254,257,255,252,254,257,255,252,43,258,259,260,261,0,258,259,260,261,258,259,260,261,43,262,258,261,263,0,262,258,261,263,262,258,261,263,43,246,245,259,258,0,246,245,259,258,246,245,259,258,43,248,246,258,262,0,248,246,258,262,248,246,258,262,43,254,248,262,264,0,254,248,262,264,254,248,262,264,43,264,262,263,265,0,264,262,263,265,264,262,263,265,43,254,264,266,257,0,254,264,266,257,254,264,266,257,43,266,264,265,267,0,266,264,265,267,266,264,265,267,43,268,269,270,271,0,268,269,270,271,268,269,270,271,43,263,261,269,268,0,263,261,269,268,263,261,269,268,43,272,273,270,269,0,272,273,270,269,272,273,270,269,43,261,260,272,269,0,261,260,272,269,261,260,272,269,43,267,265,274,275,0,267,265,274,275,267,265,274,275,43,265,263,268,274,0,265,263,268,274,265,263,268,274,43,275,274,276,277,0,275,274,276,277,275,274,276,277,43,274,268,271,276,0,274,268,271,276,274,268,271,276,43,278,279,255,257,0,278,279,255,257,278,279,255,257,43,278,280,281,279,0,278,280,281,279,278,280,281,279,43,279,282,256,255,0,279,282,256,255,279,282,256,255,43,279,281,283,282,0,279,281,283,282,279,281,283,282,43,281,284,285,283,0,281,284,285,283,281,284,285,283,43,280,286,284,281,0,280,286,284,281,280,286,284,281,43,284,287,288,285,0,284,287,288,285,284,287,288,285,43,286,289,287,284,0,286,289,287,284,286,289,287,284,43,290,291,266,267,0,290,291,266,267,290,291,266,267,43,292,293,291,290,0,292,293,291,290,292,293,291,290,43,291,278,257,266,0,291,278,257,266,291,278,257,266,43,293,280,278,291,0,293,280,278,291,293,280,278,291,43,294,286,280,293,0,294,286,280,293,294,286,280,293,43,295,294,293,292,0,295,294,293,292,295,294,293,292,43,296,289,286,294,0,296,289,286,294,296,289,286,294,43,297,296,294,295,0,297,296,294,295,297,296,294,295,43,298,299,275,277,0,298,299,275,277,298,299,275,277,43,300,301,299,298,0,300,301,299,298,300,301,299,298,43,299,290,267,275,0,299,290,267,275,299,290,267,275,43,301,292,290,299,0,301,292,290,299,301,292,290,299,43,302,295,292,301,0,302,295,292,301,302,295,292,301,43,303,302,301,300,0,303,302,301,300,303,302,301,300,43,304,297,295,302,0,304,297,295,302,304,297,295,302,43,303,305,304,302,0,303,305,304,302,303,305,304,302,43,251,306,307,249,0,251,306,307,249,251,306,307,249,43,306,308,309,307,0,306,308,309,307,306,308,309,307,43,249,307,310,250,0,249,307,310,250,249,307,310,250,43,309,311,310,307,0,309,311,310,307,309,311,310,307,43,253,256,312,313,0,253,256,312,313,253,256,312,313,43,312,314,315,313,0,312,314,315,313,312,314,315,313,43,253,313,306,251,0,253,313,306,251,253,313,306,251,43,313,315,308,306,0,313,315,308,306,313,315,308,306,43,316,282,283,317,0,316,282,283,317,316,282,283,317,43,318,316,317,319,0,318,316,317,319,318,316,317,319,43,316,312,256,282,0,316,312,256,282,316,312,256,282,43,314,312,316,318,0,314,312,316,318,314,312,316,318,43,288,320,321,285,0,288,320,321,285,288,320,321,285,43,320,322,323,321,0,320,322,323,321,320,322,323,321,43,317,283,285,321,0,317,283,285,321,317,283,285,321,43,323,319,317,321,0,323,319,317,321,323,319,317,321,43,324,325,326,327,0,324,325,326,327,324,325,326,327,43,328,324,327,329,0,328,324,327,329,328,324,327,329,43,324,330,331,325,0,324,330,331,325,324,330,331,325,43,328,332,330,324,0,328,332,330,324,328,332,330,324,43,333,334,332,328,0,333,334,332,328,333,334,332,328,43,333,328,329,335,0,333,328,329,335,333,328,329,335,43,333,336,337,334,0,333,336,337,334,333,336,337,334,43,335,338,336,333,0,335,338,336,333,335,338,336,333,43,339,340,341,342,0,339,340,341,342,339,340,341,342,43,343,339,342,344,0,343,339,342,344,343,339,342,344,43,327,326,340,339,0,327,326,340,339,327,326,340,339,43,329,327,339,343,0,329,327,339,343,329,327,339,343,43,335,329,343,345,0,335,329,343,345,335,329,343,345,43,345,343,344,346,0,345,343,344,346,345,343,344,346,43,335,345,347,338,0,335,345,347,338,335,345,347,338,43,347,345,346,348,0,347,345,346,348,347,345,346,348,43,349,350,351,352,0,349,350,351,352,349,350,351,352,43,344,342,350,349,0,344,342,350,349,344,342,350,349,43,353,354,351,350,0,353,354,351,350,353,354,351,350,43,342,341,353,350,0,342,341,353,350,342,341,353,350,43,348,346,355,356,0,348,346,355,356,348,346,355,356,43,346,344,349,355,0,346,344,349,355,346,344,349,355,43,356,355,357,358,0,356,355,357,358,356,355,357,358,43,355,349,352,357,0,355,349,352,357,355,349,352,357,43,359,360,336,338,0,359,360,336,338,359,360,336,338,43,359,361,362,360,0,359,361,362,360,359,361,362,360,43,360,363,337,336,0,360,363,337,336,360,363,337,336,43,360,362,364,363,0,360,362,364,363,360,362,364,363,43,362,365,366,364,0,362,365,366,364,362,365,366,364,43,361,367,365,362,0,361,367,365,362,361,367,365,362,43,365,368,369,366,0,365,368,369,366,365,368,369,366,43,367,370,368,365,0,367,370,368,365,367,370,368,365,43,371,372,347,348,0,371,372,347,348,371,372,347,348,43,373,374,372,371,0,373,374,372,371,373,374,372,371,43,372,359,338,347,0,372,359,338,347,372,359,338,347,43,374,361,359,372,0,374,361,359,372,374,361,359,372,43,375,367,361,374,0,375,367,361,374,375,367,361,374,43,376,375,374,373,0,376,375,374,373,376,375,374,373,43,377,370,367,375,0,377,370,367,375,377,370,367,375,43,378,377,375,376,0,378,377,375,376,378,377,375,376,43,379,380,356,358,0,379,380,356,358,379,380,356,358,43,381,382,380,379,0,381,382,380,379,381,382,380,379,43,380,371,348,356,0,380,371,348,356,380,371,348,356,43,382,373,371,380,0,382,373,371,380,382,373,371,380,43,383,376,373,382,0,383,376,373,382,383,376,373,382,43,384,383,382,381,0,384,383,382,381,384,383,382,381,43,385,378,376,383,0,385,378,376,383,385,378,376,383,43,384,386,385,383,0,384,386,385,383,384,386,385,383,43,332,387,388,330,0,332,387,388,330,332,387,388,330,43,387,389,390,388,0,387,389,390,388,387,389,390,388,43,330,388,391,331,0,330,388,391,331,330,388,391,331,43,390,392,391,388,0,390,392,391,388,390,392,391,388,43,334,337,393,394,0,334,337,393,394,334,337,393,394,43,393,395,396,394,0,393,395,396,394,393,395,396,394,43,334,394,387,332,0,334,394,387,332,334,394,387,332,43,394,396,389,387,0,394,396,389,387,394,396,389,387,43,397,363,364,398,0,397,363,364,398,397,363,364,398,43,399,397,398,400,0,399,397,398,400,399,397,398,400,43,397,393,337,363,0,397,393,337,363,397,393,337,363,43,395,393,397,399,0,395,393,397,399,395,393,397,399,43,401,402,366,369,0,401,402,366,369,401,402,366,369,43,401,403,404,402,0,401,403,404,402,401,403,404,402,43,398,364,366,402,0,398,364,366,402,398,364,366,402,43,404,400,398,402,0,404,400,398,402,404,400,398,402,43,405,406,407,408,0,405,406,407,408,405,406,407,408,43,407,409,410,408,0,407,409,410,408,407,409,410,408,43,411,412,405,408,0,411,412,405,408,411,412,405,408,43,410,413,411,408,0,410,413,411,408,410,413,411,408,43,414,415,416,417,0,414,415,416,417,414,415,416,417,43,418,419,414,417,0,418,419,414,417,418,419,414,417,43,420,421,415,414,0,420,421,415,414,420,421,415,414,43,419,422,420,414,0,419,422,420,414,419,422,420,414,43,422,423,424,420,0,422,423,424,420,422,423,424,420,43,423,406,405,424,0,423,425,426,424,423,406,405,424,43,424,425,421,420,0,424,427,421,420,424,425,421,420,43,405,412,425,424,0,426,428,427,424,405,412,425,424,43,426,427,428,429,0,415,414,417,416,426,427,428,429,43,430,431,427,426,0,421,420,414,415,430,431,427,426,43,428,427,432,433,0,417,414,419,418,428,427,432,433,43,427,431,434,432,0,414,420,422,419,427,431,434,432,43,430,435,436,431,0,421,429,430,420,430,435,436,431,43,435,413,410,436,0,429,431,432,430,435,413,410,436,43,436,437,434,431,0,430,433,422,420,436,437,434,431,43,410,409,437,436,0,432,434,433,430,410,409,437,436,43,438,426,429,439,0,435,436,437,438,438,426,429,439,43,415,438,439,416,0,439,435,438,440,415,438,439,416,43,440,430,426,438,0,441,442,436,435,440,430,426,438,43,421,440,438,415,0,443,441,435,439,421,440,438,415,43,421,425,441,440,0,443,444,445,441,421,425,441,440,43,425,412,411,441,0,444,446,447,445,425,412,411,441,43,441,435,430,440,0,445,448,442,441,441,435,430,440,43,411,413,435,441,0,447,449,448,445,411,413,435,441,43,433,432,442,443,0,450,451,452,453,433,432,442,443,43,432,434,444,442,0,451,454,455,452,432,434,444,442,43,443,442,419,418,0,453,452,456,457,443,442,419,418,43,442,444,422,419,0,452,455,458,456,442,444,422,419,43,434,437,445,444,0,454,459,460,455,434,437,445,444,43,437,409,407,445,0,459,461,462,460,437,409,407,445,43,445,423,422,444,0,460,463,458,455,445,423,422,444,43,407,406,423,445,0,462,464,463,460,407,406,423,445,43,446,447,448,449,0,405,406,407,408,446,447,448,449,43,448,450,451,449,0,407,409,410,408,448,450,451,449,43,452,453,446,449,0,411,412,405,408,452,453,446,449,43,451,454,452,449,0,410,413,411,408,451,454,452,449,43,455,456,457,458,0,414,415,416,417,455,456,457,458,43,459,460,455,458,0,418,419,414,417,459,460,455,458,43,461,462,456,455,0,420,421,415,414,461,462,456,455,43,460,463,461,455,0,419,422,420,414,460,463,461,455,43,463,464,465,461,0,422,423,424,420,463,464,465,461,43,464,447,446,465,0,423,425,426,424,464,447,446,465,43,465,466,462,461,0,424,427,421,420,465,466,462,461,43,446,453,466,465,0,426,428,427,424,446,453,466,465,43,467,468,469,470,0,415,414,417,416,467,468,469,470,43,471,472,468,467,0,421,420,414,415,471,472,468,467,43,469,468,473,474,0,417,414,419,418,469,468,473,474,43,468,472,475,473,0,414,420,422,419,468,472,475,473,43,471,476,477,472,0,421,429,430,420,471,476,477,472,43,476,454,451,477,0,429,431,432,430,476,454,451,477,43,477,478,475,472,0,430,433,422,420,477,478,475,472,43,451,450,478,477,0,432,434,433,430,451,450,478,477,43,479,467,470,480,0,435,436,437,438,479,467,470,480,43,456,479,480,457,0,439,435,438,440,456,479,480,457,43,481,471,467,479,0,441,442,436,435,481,471,467,479,43,462,481,479,456,0,443,441,435,439,462,481,479,456,43,462,466,482,481,0,443,444,445,441,462,466,482,481,43,466,453,452,482,0,444,446,447,445,466,453,452,482,43,482,476,471,481,0,445,448,442,441,482,476,471,481,43,452,454,476,482,0,447,449,448,445,452,454,476,482,43,474,473,483,484,0,450,451,452,453,474,473,483,484,43,473,475,485,483,0,451,454,455,452,473,475,485,483,43,484,483,460,459,0,453,452,456,457,484,483,460,459,43,483,485,463,460,0,452,455,458,456,483,485,463,460,43,475,478,486,485,0,454,459,460,455,475,478,486,485,43,478,450,448,486,0,459,461,462,460,478,450,448,486,43,486,464,463,485,0,460,463,458,455,486,464,463,485,43,448,447,464,486,0,462,464,463,460,448,447,464,486,43,487,488,489,490,0,405,406,407,408,487,488,489,490,43,489,491,492,490,0,407,409,410,408,489,491,492,490,43,493,494,487,490,0,411,412,405,408,493,494,487,490,43,492,495,493,490,0,410,413,411,408,492,495,493,490,43,496,497,498,499,0,414,415,416,417,496,497,498,499,43,500,501,496,499,0,418,419,414,417,500,501,496,499,43,502,503,497,496,0,420,421,415,414,502,503,497,496,43,501,504,502,496,0,419,422,420,414,501,504,502,496,43,504,505,506,502,0,422,423,424,420,504,505,506,502,43,505,488,487,506,0,423,425,426,424,505,488,487,506,43,506,507,503,502,0,424,427,421,420,506,507,503,502,43,487,494,507,506,0,426,428,427,424,487,494,507,506,43,508,509,510,511,0,415,414,417,416,508,509,510,511,43,512,513,509,508,0,421,420,414,415,512,513,509,508,43,510,509,514,515,0,417,414,419,418,510,509,514,515,43,509,513,516,514,0,414,420,422,419,509,513,516,514,43,512,517,518,513,0,421,429,430,420,512,517,518,513,43,517,495,492,518,0,429,431,432,430,517,495,492,518,43,518,519,516,513,0,430,433,422,420,518,519,516,513,43,492,491,519,518,0,432,434,433,430,492,491,519,518,43,520,508,511,521,0,435,436,437,438,520,508,511,521,43,497,520,521,498,0,439,435,438,440,497,520,521,498,43,522,512,508,520,0,441,442,436,435,522,512,508,520,43,503,522,520,497,0,443,441,435,439,503,522,520,497,43,503,507,523,522,0,443,444,445,441,503,507,523,522,43,507,494,493,523,0,444,446,447,445,507,494,493,523,43,523,517,512,522,0,445,448,442,441,523,517,512,522,43,493,495,517,523,0,447,449,448,445,493,495,517,523,43,515,514,524,525,0,450,451,452,453,515,514,524,525,43,514,516,526,524,0,451,454,455,452,514,516,526,524,43,525,524,501,500,0,453,452,456,457,525,524,501,500,43,524,526,504,501,0,452,455,458,456,524,526,504,501,43,516,519,527,526,0,454,459,460,455,516,519,527,526,43,519,491,489,527,0,459,461,462,460,519,491,489,527,43,527,505,504,526,0,460,463,458,455,527,505,504,526,43,489,488,505,527,0,462,464,463,460,489,488,505,527,43,528,529,530,531,0,405,406,407,408,528,529,530,531,43,530,532,533,531,0,407,409,410,408,530,532,533,531,43,534,535,528,531,0,411,412,405,408,534,535,528,531,43,533,536,534,531,0,410,413,411,408,533,536,534,531,43,537,538,539,540,0,414,415,416,417,537,538,539,540,43,541,542,537,540,0,418,419,414,417,541,542,537,540,43,543,544,538,537,0,420,421,415,414,543,544,538,537,43,542,545,543,537,0,419,422,420,414,542,545,543,537,43,545,546,547,543,0,422,423,424,420,545,546,547,543,43,546,529,528,547,0,423,425,426,424,546,529,528,547,43,547,548,544,543,0,424,427,421,420,547,548,544,543,43,528,535,548,547,0,426,428,427,424,528,535,548,547,43,549,550,551,552,0,415,414,417,416,549,550,551,552,43,553,554,550,549,0,421,420,414,415,553,554,550,549,43,551,550,555,556,0,417,414,419,418,551,550,555,556,43,550,554,557,555,0,414,420,422,419,550,554,557,555,43,553,558,559,554,0,421,429,430,420,553,558,559,554,43,558,536,533,559,0,429,431,432,430,558,536,533,559,43,559,560,557,554,0,430,433,422,420,559,560,557,554,43,533,532,560,559,0,432,434,433,430,533,532,560,559,43,561,549,552,562,0,435,436,437,438,561,549,552,562,43,538,561,562,539,0,439,435,438,440,538,561,562,539,43,563,553,549,561,0,441,442,436,435,563,553,549,561,43,544,563,561,538,0,443,441,435,439,544,563,561,538,43,544,548,564,563,0,443,444,445,441,544,548,564,563,43,548,535,534,564,0,444,446,447,445,548,535,534,564,43,564,558,553,563,0,445,448,442,441,564,558,553,563,43,534,536,558,564,0,447,449,448,445,534,536,558,564,43,556,555,565,566,0,450,451,452,453,556,555,565,566,43,555,557,567,565,0,451,454,455,452,555,557,567,565,43,566,565,542,541,0,453,452,456,457,566,565,542,541,43,565,567,545,542,0,452,455,458,456,565,567,545,542,43,557,560,568,567,0,454,459,460,455,557,560,568,567,43,560,532,530,568,0,459,461,462,460,560,532,530,568,43,568,546,545,567,0,460,463,458,455,568,546,545,567,43,530,529,546,568,0,462,464,463,460,530,529,546,568,43,569,570,571,572,0,405,406,407,408,569,570,571,572,43,571,573,574,572,0,407,409,410,408,571,573,574,572,43,575,576,569,572,0,411,412,405,408,575,576,569,572,43,574,577,575,572,0,410,413,411,408,574,577,575,572,43,578,579,580,581,0,414,415,416,417,578,579,580,581,43,582,583,578,581,0,418,419,414,417,582,583,578,581,43,584,585,579,578,0,420,421,415,414,584,585,579,578,43,583,586,584,578,0,419,422,420,414,583,586,584,578,43,586,587,588,584,0,422,423,424,420,586,587,588,584,43,587,570,569,588,0,423,425,426,424,587,570,569,588,43,588,589,585,584,0,424,427,421,420,588,589,585,584,43,569,576,589,588,0,426,428,427,424,569,576,589,588,43,590,591,592,593,0,415,414,417,416,590,591,592,593,43,594,595,591,590,0,421,420,414,415,594,595,591,590,43,592,591,596,597,0,417,414,419,418,592,591,596,597,43,591,595,598,596,0,414,420,422,419,591,595,598,596,43,594,599,600,595,0,421,429,430,420,594,599,600,595,43,599,577,574,600,0,429,431,432,430,599,577,574,600,43,600,601,598,595,0,430,433,422,420,600,601,598,595,43,574,573,601,600,0,432,434,433,430,574,573,601,600,43,602,590,593,603,0,435,436,437,438,602,590,593,603,43,579,602,603,580,0,439,435,438,440,579,602,603,580,43,604,594,590,602,0,441,442,436,435,604,594,590,602,43,585,604,602,579,0,443,441,435,439,585,604,602,579,43,585,589,605,604,0,443,444,445,441,585,589,605,604,43,589,576,575,605,0,444,446,447,445,589,576,575,605,43,605,599,594,604,0,445,448,442,441,605,599,594,604,43,575,577,599,605,0,447,449,448,445,575,577,599,605,43,597,596,606,607,0,450,451,452,453,597,596,606,607,43,596,598,608,606,0,451,454,455,452,596,598,608,606,43,607,606,583,582,0,453,452,456,457,607,606,583,582,43,606,608,586,583,0,452,455,458,456,606,608,586,583,43,598,601,609,608,0,454,459,460,455,598,601,609,608,43,601,573,571,609,0,459,461,462,460,601,573,571,609,43,609,587,586,608,0,460,463,458,455,609,587,586,608,43,571,570,587,609,0,462,464,463,460,571,570,587,609,43,610,611,612,613,0,465,466,467,468,610,611,612,613,43,613,612,614,615,0,468,467,469,470,613,612,614,615,43,616,610,613,617,0,471,465,468,472,616,610,613,617,43,617,613,615,618,0,472,468,470,473,617,613,615,618,43,615,614,619,620,0,470,469,474,475,615,614,619,620,43,620,619,621,622,0,475,474,476,477,620,619,621,622,43,618,615,620,623,0,473,470,475,478,618,615,620,623,43,623,620,622,624,0,478,475,477,479,623,620,622,624,43,625,626,627,628,0,480,481,482,483,625,626,627,628,43,625,628,629,630,0,480,483,484,485,625,628,629,630,43,622,621,626,625,0,477,476,481,480,622,621,626,625,43,624,622,625,630,0,479,477,480,485,624,622,625,630,43,631,632,633,634,0,486,487,488,489,631,632,633,634,43,631,634,635,636,0,486,489,490,491,631,634,635,636,43,628,627,632,631,0,483,482,487,486,628,627,632,631,43,628,631,636,629,0,483,486,491,484,628,631,636,629,43,637,638,639,640,0,492,493,494,495,637,638,639,640,43,640,639,641,642,0,495,494,496,497,640,639,641,642,43,633,637,640,634,0,498,492,495,499,633,637,640,634,43,634,640,642,635,0,499,495,497,500,634,640,642,635,43,643,644,645,646,0,501,502,503,504,643,644,645,646,43,646,645,647,648,0,504,503,505,506,646,645,647,648,43,638,643,646,639,0,493,501,504,494,638,643,646,639,43,639,646,648,641,0,494,504,506,496,639,646,648,641,43,644,649,650,645,0,502,507,508,503,644,649,650,645,43,649,651,652,650,0,507,509,510,508,649,651,652,650,43,645,650,653,647,0,503,508,511,505,645,650,653,647,43,653,650,652,654,0,511,508,510,512,653,650,652,654,43,651,655,656,652,0,509,513,514,510,651,655,656,652,43,655,611,610,656,0,513,466,465,514,655,611,610,656,43,654,652,656,657,0,512,510,514,515,654,652,656,657,43,657,656,610,616,0,515,514,465,471,657,656,610,616,43,658,659,612,611,0,516,517,467,466,658,659,612,611,43,660,661,659,658,0,518,519,517,516,660,661,659,658,43,659,662,614,612,0,517,520,469,467,659,662,614,612,43,661,663,662,659,0,519,521,520,517,661,663,662,659,43,662,664,619,614,0,520,522,474,469,662,664,619,614,43,663,665,664,662,0,521,523,522,520,663,665,664,662,43,664,666,621,619,0,522,524,476,474,664,666,621,619,43,665,667,666,664,0,523,525,524,522,665,667,666,664,43,626,621,666,668,0,481,476,524,526,626,621,666,668,43,666,667,669,668,0,524,525,527,526,666,667,669,668,43,626,668,670,627,0,481,526,528,482,626,668,670,627,43,668,669,671,670,0,526,527,529,528,668,669,671,670,43,627,670,672,632,0,482,528,530,487,627,670,672,632,43,670,671,673,672,0,528,529,531,530,670,671,673,672,43,632,672,674,633,0,487,530,532,488,632,672,674,633,43,672,673,675,674,0,530,531,533,532,672,673,675,674,43,633,674,676,637,0,498,534,535,492,633,674,676,637,43,674,675,677,676,0,534,536,537,535,674,675,677,676,43,637,676,678,638,0,492,535,538,493,637,676,678,638,43,676,677,679,678,0,535,537,539,538,676,677,679,678,43,638,678,680,643,0,493,538,540,501,638,678,680,643,43,678,679,681,680,0,538,539,541,540,678,679,681,680,43,643,680,682,644,0,501,540,542,502,643,680,682,644,43,680,681,683,682,0,540,541,543,542,680,681,683,682,43,684,649,644,682,0,544,507,502,542,684,649,644,682,43,683,685,684,682,0,543,545,544,542,683,685,684,682,43,684,686,651,649,0,544,546,509,507,684,686,651,649,43,685,687,686,684,0,545,547,546,544,685,687,686,684,43,686,688,655,651,0,546,548,513,509,686,688,655,651,43,687,689,688,686,0,547,549,548,546,687,689,688,686,43,688,658,611,655,0,548,516,466,513,688,658,611,655,43,689,660,658,688,0,549,518,516,548,689,660,658,688,43,690,691,661,660,0,550,551,519,518,690,691,661,660,43,690,692,693,691,0,550,552,553,551,690,692,693,691,43,691,694,663,661,0,551,554,521,519,691,694,663,661,43,691,693,695,694,0,551,553,555,554,691,693,695,694,43,694,696,665,663,0,554,556,523,521,694,696,665,663,43,694,695,697,696,0,554,555,557,556,694,695,697,696,43,696,698,667,665,0,556,558,525,523,696,698,667,665,43,697,699,698,696,0,557,559,558,556,697,699,698,696,43,698,700,669,667,0,558,560,527,525,698,700,669,667,43,699,701,700,698,0,559,561,560,558,699,701,700,698,43,669,700,702,671,0,527,560,562,529,669,700,702,671,43,701,703,702,700,0,561,563,562,560,701,703,702,700,43,671,702,704,673,0,529,562,564,531,671,702,704,673,43,703,705,704,702,0,563,565,564,562,703,705,704,702,43,673,704,706,675,0,531,564,566,533,673,704,706,675,43,705,707,706,704,0,565,567,566,564,705,707,706,704,43,675,706,708,677,0,536,568,569,537,675,706,708,677,43,707,709,708,706,0,570,571,569,568,707,709,708,706,43,677,708,710,679,0,537,569,572,539,677,708,710,679,43,709,711,710,708,0,571,573,572,569,709,711,710,708,43,679,710,712,681,0,539,572,574,541,679,710,712,681,43,711,713,712,710,0,573,575,574,572,711,713,712,710,43,681,712,714,683,0,541,574,576,543,681,712,714,683,43,712,713,715,714,0,574,575,577,576,712,713,715,714,43,683,714,716,685,0,543,576,578,545,683,714,716,685,43,714,715,717,716,0,576,577,579,578,714,715,717,716,43,716,718,687,685,0,578,580,547,545,716,718,687,685,43,716,717,719,718,0,578,579,581,580,716,717,719,718,43,718,720,689,687,0,580,582,549,547,718,720,689,687,43,718,719,721,720,0,580,581,583,582,718,719,721,720,43,720,690,660,689,0,582,550,518,549,720,690,660,689,43,720,721,692,690,0,582,583,552,550,720,721,692,690,43,692,722,723,693,0,552,584,585,553,692,722,723,693,43,722,724,725,723,0,584,586,587,585,722,724,725,723,43,693,723,726,695,0,553,585,588,555,693,723,726,695,43,723,725,727,726,0,585,587,589,588,723,725,727,726,43,695,726,728,697,0,555,588,590,557,695,726,728,697,43,726,727,729,728,0,588,589,591,590,726,727,729,728,43,697,728,730,699,0,557,590,592,559,697,728,730,699,43,728,729,731,730,0,590,591,593,592,728,729,731,730,43,732,701,699,730,0,594,561,559,592,732,701,699,730,43,733,732,730,731,0,595,594,592,593,733,732,730,731,43,734,703,701,732,0,596,563,561,594,734,703,701,732,43,735,734,732,733,0,597,596,594,595,735,734,732,733,43,734,736,705,703,0,596,598,565,563,734,736,705,703,43,737,736,734,735,0,599,598,596,597,737,736,734,735,43,736,738,707,705,0,598,600,567,565,736,738,707,705,43,737,739,738,736,0,599,601,600,598,737,739,738,736,43,738,740,709,707,0,602,603,571,570,738,740,709,707,43,739,741,740,738,0,604,605,603,602,739,741,740,738,43,740,742,711,709,0,603,606,573,571,740,742,711,709,43,741,743,742,740,0,605,607,606,603,741,743,742,740,43,742,744,713,711,0,606,608,575,573,742,744,713,711,43,743,745,744,742,0,607,609,608,606,743,745,744,742,43,744,746,715,713,0,608,610,577,575,744,746,715,713,43,745,747,746,744,0,609,611,610,608,745,747,746,744,43,717,715,746,748,0,579,577,610,612,717,715,746,748,43,748,746,747,749,0,612,610,611,613,748,746,747,749,43,719,717,748,750,0,581,579,612,614,719,717,748,750,43,750,748,749,751,0,614,612,613,615,750,748,749,751,43,719,750,752,721,0,581,614,616,583,719,750,752,721,43,752,750,751,753,0,616,614,615,617,752,750,751,753,43,721,752,722,692,0,583,616,584,552,721,752,722,692,43,752,753,724,722,0,616,617,586,584,752,753,724,722,43,724,754,755,725,0,586,618,619,587,724,754,755,725,43,756,755,754,757,0,620,619,618,621,756,755,754,757,43,725,755,758,727,0,587,619,622,589,725,755,758,727,43,758,755,756,759,0,622,619,620,623,758,755,756,759,43,727,758,760,729,0,589,622,624,591,727,758,760,729,43,760,758,759,761,0,624,622,623,625,760,758,759,761,43,729,760,762,731,0,591,624,626,593,729,760,762,731,43,760,761,763,762,0,624,625,627,626,760,761,763,762,43,762,764,733,731,0,626,628,595,593,762,764,733,731,43,762,763,765,764,0,626,627,629,628,762,763,765,764,43,766,735,733,764,0,630,597,595,628,766,735,733,764,43,764,765,767,766,0,628,629,631,630,764,765,767,766,43,768,737,735,766,0,632,599,597,630,768,737,735,766,43,768,766,767,769,0,632,630,631,633,768,766,767,769,43,770,739,737,768,0,634,601,599,632,770,739,737,768,43,770,768,769,771,0,634,632,633,635,770,768,769,771,43,770,772,741,739,0,634,636,637,601,770,772,741,739,43,772,770,771,773,0,636,634,635,638,772,770,771,773,43,772,774,743,741,0,636,639,640,637,772,774,743,741,43,775,774,772,773,0,641,639,636,638,775,774,772,773,43,774,776,745,743,0,642,643,609,607,774,776,745,743,43,777,776,774,775,0,644,643,642,645,777,776,774,775,43,776,778,747,745,0,643,646,611,609,776,778,747,745,43,777,779,778,776,0,644,647,646,643,777,779,778,776,43,747,778,780,749,0,611,646,648,613,747,778,780,749,43,779,781,780,778,0,647,649,648,646,779,781,780,778,43,751,749,780,782,0,615,613,648,615,751,749,780,782,43,781,783,782,780,0,649,615,615,648,781,783,782,780,43,753,751,782,784,0,617,615,615,650,753,751,782,784,43,785,784,782,783,0,651,650,615,615,785,784,782,783,43,753,784,754,724,0,617,650,618,586,753,784,754,724,43,757,754,784,785,0,621,618,650,651,757,754,784,785,43,786,756,757,787,0,652,620,621,653,786,756,757,787,43,788,786,787,789,0,654,652,653,655,788,786,787,789,43,790,759,756,786,0,656,623,620,652,790,759,756,786,43,791,790,786,788,0,657,656,652,654,791,790,786,788,43,792,761,759,790,0,658,625,623,656,792,761,759,790,43,793,792,790,791,0,659,658,656,657,793,792,790,791,43,794,763,761,792,0,660,627,625,658,794,763,761,792,43,795,794,792,793,0,661,660,658,659,795,794,792,793,43,765,763,794,796,0,629,627,660,662,765,763,794,796,43,796,794,795,797,0,662,660,661,663,796,794,795,797,43,767,765,796,798,0,631,629,662,664,767,765,796,798,43,798,796,797,799,0,664,662,663,665,798,796,797,799,43,769,767,798,800,0,633,631,664,666,769,767,798,800,43,800,798,799,801,0,666,664,665,667,800,798,799,801,43,771,769,800,802,0,635,633,666,668,771,769,800,802,43,802,800,801,803,0,668,666,667,669,802,800,801,803,43,773,771,802,804,0,670,671,672,673,773,771,802,804,43,804,802,803,805,0,673,672,674,675,804,802,803,805,43,775,773,804,806,0,645,670,673,676,775,773,804,806,43,806,804,805,807,0,676,673,675,677,806,804,805,807,43,777,775,806,808,0,644,645,676,678,777,775,806,808,43,808,806,807,809,0,678,676,677,679,808,806,807,809,43,779,777,808,810,0,647,644,678,680,779,777,808,810,43,810,808,809,811,0,680,678,679,681,810,808,809,811,43,812,781,779,810,0,682,649,647,680,812,781,779,810,43,813,812,810,811,0,683,682,680,681,813,812,810,811,43,814,783,781,812,0,684,615,649,682,814,783,781,812,43,815,814,812,813,0,685,684,682,683,815,814,812,813,43,816,785,783,814,0,686,651,615,684,816,785,783,814,43,817,816,814,815,0,687,686,684,685,817,816,814,815,43,787,757,785,816,0,653,621,651,686,787,757,785,816,43,789,787,816,817,0,655,653,686,687,789,787,816,817,43,818,617,618,819,0,688,472,473,689,818,617,618,819,43,820,818,819,821,0,690,688,689,691,820,818,819,821,43,822,616,617,818,0,692,471,472,688,822,616,617,818,43,823,822,818,820,0,693,692,688,690,823,822,818,820,43,824,623,624,825,0,694,478,479,695,824,623,624,825,43,826,824,825,827,0,696,694,695,697,826,824,825,827,43,819,618,623,824,0,689,473,478,694,819,618,623,824,43,821,819,824,826,0,691,689,694,696,821,819,824,826,43,630,629,828,829,0,485,484,698,699,630,629,828,829,43,829,828,830,831,0,699,698,700,701,829,828,830,831,43,825,624,630,829,0,695,479,485,699,825,624,630,829,43,827,825,829,831,0,697,695,699,701,827,825,829,831,43,636,635,832,833,0,491,490,702,703,636,635,832,833,43,833,832,834,835,0,703,702,704,705,833,832,834,835,43,629,636,833,828,0,484,491,703,698,629,636,833,828,43,828,833,835,830,0,698,703,705,700,828,833,835,830,43,642,641,836,837,0,497,496,706,707,642,641,836,837,43,837,836,838,839,0,707,706,708,709,837,836,838,839,43,635,642,837,832,0,500,497,707,710,635,642,837,832,43,832,837,839,834,0,710,707,709,711,832,837,839,834,43,648,647,840,841,0,506,505,712,713,648,647,840,841,43,841,840,842,843,0,713,712,714,715,841,840,842,843,43,641,648,841,836,0,496,506,713,706,641,648,841,836,43,836,841,843,838,0,706,713,715,708,836,841,843,838,43,844,653,654,845,0,716,511,512,717,844,653,654,845,43,846,844,845,847,0,718,716,717,719,846,844,845,847,43,647,653,844,840,0,505,511,716,712,647,653,844,840,43,840,844,846,842,0,712,716,718,714,840,844,846,842,43,848,657,616,822,0,720,515,471,692,848,657,616,822,43,849,848,822,823,0,721,720,692,693,849,848,822,823,43,845,654,657,848,0,717,512,515,720,845,654,657,848,43,847,845,848,849,0,719,717,720,721,847,845,848,849,43,820,821,850,851,0,690,691,722,723,820,821,850,851,43,851,850,852,853,0,723,722,724,725,851,850,852,853,43,823,820,851,854,0,693,690,723,726,823,820,851,854,43,855,854,851,853,0,727,726,723,725,855,854,851,853,43,826,827,856,857,0,696,697,728,729,826,827,856,857,43,858,857,856,859,0,730,729,728,731,858,857,856,859,43,850,821,826,857,0,722,691,696,729,850,821,826,857,43,850,857,858,852,0,722,729,730,724,850,857,858,852,43,831,830,860,861,0,701,700,732,733,831,830,860,861,43,862,861,860,863,0,734,733,732,735,862,861,860,863,43,856,827,831,861,0,728,697,701,733,856,827,831,861,43,856,861,862,859,0,728,733,734,731,856,861,862,859,43,864,835,834,865,0,736,705,704,737,864,835,834,865,43,866,864,865,867,0,738,736,737,739,866,864,865,867,43,860,830,835,864,0,732,700,705,736,860,830,835,864,43,860,864,866,863,0,732,736,738,735,860,864,866,863,43,868,839,838,869,0,740,709,708,741,868,839,838,869,43,868,869,870,871,0,740,741,742,743,868,869,870,871,43,834,839,868,865,0,711,709,740,744,834,839,868,865,43,865,868,871,867,0,744,740,743,745,865,868,871,867,43,872,843,842,873,0,746,715,714,747,872,843,842,873,43,872,873,874,875,0,746,747,748,749,872,873,874,875,43,838,843,872,869,0,708,715,746,741,838,843,872,869,43,870,869,872,875,0,742,741,746,749,870,869,872,875,43,846,847,876,877,0,718,719,750,751,846,847,876,877,43,877,876,878,879,0,751,750,752,753,877,876,878,879,43,873,842,846,877,0,747,714,718,751,873,842,846,877,43,874,873,877,879,0,748,747,751,753,874,873,877,879,43,849,823,854,880,0,721,693,726,754,849,823,854,880,43,881,880,854,855,0,755,754,726,727,881,880,854,855,43,876,847,849,880,0,750,719,721,754,876,847,849,880,43,876,880,881,878,0,750,754,755,752,876,880,881,878,43,882,788,789,883,0,756,654,655,757,882,788,789,883,43,884,882,883,885,0,758,756,757,759,884,882,883,885,43,886,791,788,882,0,760,657,654,756,886,791,788,882,43,887,886,882,884,0,761,760,756,758,887,886,882,884,43,888,793,791,886,0,762,659,657,760,888,793,791,886,43,889,888,886,887,0,763,762,760,761,889,888,886,887,43,890,795,793,888,0,764,661,659,762,890,795,793,888,43,891,890,888,889,0,765,764,762,763,891,890,888,889,43,797,795,890,892,0,663,661,764,766,797,795,890,892,43,892,890,891,893,0,766,764,765,767,892,890,891,893,43,799,797,892,894,0,665,663,766,768,799,797,892,894,43,894,892,893,895,0,768,766,767,769,894,892,893,895,43,801,799,894,896,0,667,665,768,770,801,799,894,896,43,896,894,895,897,0,770,768,769,771,896,894,895,897,43,803,801,896,898,0,669,667,770,772,803,801,896,898,43,898,896,897,899,0,772,770,771,773,898,896,897,899,43,805,803,898,900,0,675,674,774,775,805,803,898,900,43,900,898,899,901,0,775,774,776,777,900,898,899,901,43,807,805,900,902,0,677,675,775,778,807,805,900,902,43,902,900,901,903,0,778,775,777,779,902,900,901,903,43,809,807,902,904,0,679,677,778,780,809,807,902,904,43,904,902,903,905,0,780,778,779,781,904,902,903,905,43,811,809,904,906,0,681,679,780,782,811,809,904,906,43,906,904,905,907,0,782,780,781,783,906,904,905,907,43,908,813,811,906,0,784,683,681,782,908,813,811,906,43,909,908,906,907,0,785,784,782,783,909,908,906,907,43,910,815,813,908,0,786,685,683,784,910,815,813,908,43,911,910,908,909,0,787,786,784,785,911,910,908,909,43,912,817,815,910,0,788,687,685,786,912,817,815,910,43,913,912,910,911,0,789,788,786,787,913,912,910,911,43,883,789,817,912,0,757,655,687,788,883,789,817,912,43,885,883,912,913,0,759,757,788,789,885,883,912,913,43,914,915,884,885,0,790,791,758,759,914,915,884,885,43,915,914,916,917,0,791,790,792,793,915,914,916,917,43,887,884,915,918,0,761,758,791,794,887,884,915,918,43,917,919,918,915,0,793,795,794,791,917,919,918,915,43,918,920,889,887,0,794,796,763,761,918,920,889,887,43,919,921,920,918,0,795,797,796,794,919,921,920,918,43,920,922,891,889,0,796,798,765,763,920,922,891,889,43,923,922,920,921,0,799,798,796,797,923,922,920,921,43,922,924,893,891,0,798,800,767,765,922,924,893,891,43,922,923,925,924,0,798,799,801,800,922,923,925,924,43,924,926,895,893,0,800,802,769,767,924,926,895,893,43,925,927,926,924,0,801,803,802,800,925,927,926,924,43,926,928,897,895,0,802,804,771,769,926,928,897,895,43,927,929,928,926,0,803,805,804,802,927,929,928,926,43,928,930,899,897,0,804,806,773,771,928,930,899,897,43,930,928,929,931,0,806,804,805,807,930,928,929,931,43,930,932,901,899,0,808,809,777,776,930,932,901,899,43,930,931,933,932,0,808,810,811,809,930,931,933,932,43,903,901,932,934,0,779,777,809,812,903,901,932,934,43,933,935,934,932,0,811,813,812,809,933,935,934,932,43,934,936,905,903,0,812,814,781,779,934,936,905,903,43,934,935,937,936,0,812,813,815,814,934,935,937,936,43,907,905,936,938,0,783,781,814,816,907,905,936,938,43,937,939,938,936,0,815,817,816,814,937,939,938,936,43,938,940,909,907,0,816,818,785,783,938,940,909,907,43,940,938,939,941,0,818,816,817,819,940,938,939,941,43,940,942,911,909,0,818,820,787,785,940,942,911,909,43,942,940,941,943,0,820,818,819,821,942,940,941,943,43,942,944,913,911,0,820,822,789,787,942,944,913,911,43,942,943,945,944,0,820,821,823,822,942,943,945,944,43,885,913,944,914,0,759,789,822,790,885,913,944,914,43,945,916,914,944,0,823,792,790,822,945,916,914,944,43,946,947,917,916,0,824,825,793,792,946,947,917,916,43,946,948,949,947,0,824,826,827,825,946,948,949,947,43,917,947,950,919,0,793,825,828,795,917,947,950,919,43,949,951,950,947,0,827,829,828,825,949,951,950,947,43,952,921,919,950,0,830,797,795,828,952,921,919,950,43,953,952,950,951,0,831,830,828,829,953,952,950,951,43,952,954,923,921,0,830,832,799,797,952,954,923,921,43,953,955,954,952,0,831,833,832,830,953,955,954,952,43,923,954,956,925,0,799,832,834,801,923,954,956,925,43,954,955,957,956,0,832,833,835,834,954,955,957,956,43,927,925,956,958,0,803,801,834,836,927,925,956,958,43,956,957,959,958,0,834,835,837,836,956,957,959,958,43,958,960,929,927,0,836,838,805,803,958,960,929,927,43,959,961,960,958,0,837,839,838,836,959,961,960,958,43,960,962,931,929,0,838,840,807,805,960,962,931,929,43,961,963,962,960,0,839,841,840,838,961,963,962,960,43,962,964,933,931,0,842,843,811,810,962,964,933,931,43,963,965,964,962,0,844,845,843,842,963,965,964,962,43,933,964,966,935,0,811,843,846,813,933,964,966,935,43,965,967,966,964,0,845,847,846,843,965,967,966,964,43,968,937,935,966,0,848,815,813,846,968,937,935,966,43,967,969,968,966,0,847,849,848,846,967,969,968,966,43,968,970,939,937,0,848,850,817,815,968,970,939,937,43,969,971,970,968,0,849,851,850,848,969,971,970,968,43,970,972,941,939,0,850,852,819,817,970,972,941,939,43,970,971,973,972,0,850,851,853,852,970,971,973,972,43,941,972,974,943,0,819,852,854,821,941,972,974,943,43,972,973,975,974,0,852,853,855,854,972,973,975,974,43,943,974,976,945,0,821,854,856,823,943,974,976,945,43,975,977,976,974,0,855,857,856,854,975,977,976,974,43,945,976,946,916,0,823,856,824,792,945,976,946,916,43,976,977,948,946,0,856,857,826,824,976,977,948,946,43,978,979,980,981,0,858,859,860,861,978,979,980,981,43,978,982,983,979,0,858,862,863,859,978,982,983,979,43,979,984,985,980,0,859,864,865,860,979,984,985,980,43,983,986,984,979,0,863,866,864,859,983,986,984,979,43,987,988,989,990,0,867,868,869,870,987,988,989,990,43,990,989,991,992,0,870,869,871,872,990,989,991,992,43,993,987,990,994,0,873,867,870,874,993,987,990,994,43,994,990,992,995,0,874,870,872,875,994,990,992,995,43,996,997,987,993,0,876,877,867,873,996,997,987,993,43,998,999,997,996,0,878,879,877,876,998,999,997,996,43,997,1e3,988,987,0,877,880,868,867,997,1e3,988,987,43,999,1001,1e3,997,0,879,881,880,877,999,1001,1e3,997,43,983,1002,1003,986,0,863,882,883,866,983,1002,1003,986,43,982,1004,1002,983,0,862,884,882,863,982,1004,1002,983,43,1002,999,998,1003,0,882,879,878,883,1002,999,998,1003,43,1004,1001,999,1002,0,884,881,879,882,1004,1001,999,1002,43,1005,1006,1007,1008,0,885,886,887,888,1005,1006,1007,1008,43,1006,1009,1010,1007,0,886,889,890,887,1006,1009,1010,1007,43,1007,1011,1012,1008,0,887,891,892,888,1007,1011,1012,1008,43,1007,1010,1013,1011,0,887,890,893,891,1007,1010,1013,1011,43,1011,1014,1015,1012,0,891,894,895,892,1011,1014,1015,1012,43,1016,1014,1011,1013,0,896,894,891,893,1016,1014,1011,1013,43,984,986,1015,1014,0,864,866,895,894,984,986,1015,1014,43,984,1014,1016,985,0,864,894,896,865,984,1014,1016,985,43,996,1017,1018,998,0,876,897,898,878,996,1017,1018,998,43,1017,996,993,1019,0,897,876,873,899,1017,996,993,1019,43,1017,1020,1021,1018,0,897,900,901,898,1017,1020,1021,1018,43,1017,1019,1022,1020,0,897,899,902,900,1017,1019,1022,1020,43,1020,1023,1024,1021,0,900,903,904,901,1020,1023,1024,1021,43,1022,1025,1023,1020,0,902,905,903,900,1022,1025,1023,1020,43,1023,1026,1027,1024,0,903,906,907,904,1023,1026,1027,1024,43,1025,1028,1026,1023,0,905,908,906,903,1025,1028,1026,1023,43,1003,1029,1015,986,0,883,909,895,866,1003,1029,1015,986,43,1018,1029,1003,998,0,898,909,883,878,1018,1029,1003,998,43,1012,1015,1029,1030,0,892,895,909,910,1012,1015,1029,1030,43,1021,1030,1029,1018,0,901,910,909,898,1021,1030,1029,1018,43,1031,1032,1024,1027,0,911,912,904,907,1031,1032,1024,1027,43,1005,1008,1032,1031,0,885,888,912,911,1005,1008,1032,1031,43,1032,1030,1021,1024,0,912,910,901,904,1032,1030,1021,1024,43,1008,1012,1030,1032,0,888,892,910,912,1008,1012,1030,1032,43,1022,1033,1034,1025,0,902,913,914,905,1022,1033,1034,1025,43,1035,1036,1034,1033,0,915,916,914,913,1035,1036,1034,1033,43,1034,1037,1028,1025,0,914,917,908,905,1034,1037,1028,1025,43,1036,1038,1037,1034,0,916,918,917,914,1036,1038,1037,1034,43,1019,993,994,1039,0,899,873,874,919,1019,993,994,1039,43,1039,994,995,1040,0,919,874,875,920,1039,994,995,1040,43,1019,1039,1033,1022,0,899,919,913,902,1019,1039,1033,1022,43,1039,1040,1035,1033,0,919,920,915,913,1039,1040,1035,1033,43,1041,1042,1043,1044,0,921,922,923,924,1041,1042,1043,1044,43,1044,1043,1045,1046,0,924,923,925,926,1044,1043,1045,1046,43,1047,1041,1044,1048,0,927,921,924,928,1047,1041,1044,1048,43,1048,1044,1046,1049,0,928,924,926,929,1048,1044,1046,1049,43,1050,1047,1048,1051,0,930,927,928,931,1050,1047,1048,1051,43,1051,1048,1049,1052,0,931,928,929,932,1051,1048,1049,1052,43,1053,1054,1050,1051,0,933,934,930,931,1053,1054,1050,1051,43,1053,1051,1052,1055,0,933,931,932,935,1053,1051,1052,1055,43,1056,1057,1058,1059,0,936,937,938,939,1056,1057,1058,1059,43,1057,1060,1061,1058,0,937,940,941,938,1057,1060,1061,1058,43,1059,1058,1062,1063,0,939,938,942,943,1059,1058,1062,1063,43,1058,1061,1064,1062,0,938,941,944,942,1058,1061,1064,1062,43,1063,1062,1065,1066,0,943,942,945,946,1063,1062,1065,1066,43,1062,1064,1067,1065,0,942,944,947,945,1062,1064,1067,1065,43,1065,1068,1069,1066,0,945,948,949,946,1065,1068,1069,1066,43,1067,1070,1068,1065,0,947,950,948,945,1067,1070,1068,1065,43,1059,1063,1071,1072,0,939,943,951,952,1059,1063,1071,1072,43,1072,1071,1073,1074,0,952,951,953,954,1072,1071,1073,1074,43,1056,1059,1072,1075,0,936,939,952,955,1056,1059,1072,1075,43,1075,1072,1074,1076,0,955,952,954,956,1075,1072,1074,1076,43,1049,1046,1077,1078,0,929,926,957,958,1049,1046,1077,1078,43,1046,1045,1079,1077,0,926,925,959,957,1046,1045,1079,1077,43,1074,1073,1078,1077,0,954,953,958,957,1074,1073,1078,1077,43,1076,1074,1077,1079,0,956,954,957,959,1076,1074,1077,1079,43,1066,1069,1080,1081,0,946,949,960,961,1066,1069,1080,1081,43,1081,1080,1082,1083,0,961,960,962,963,1081,1080,1082,1083,43,1063,1066,1081,1071,0,943,946,961,951,1063,1066,1081,1071,43,1071,1081,1083,1073,0,951,961,963,953,1071,1081,1083,1073,43,1055,1052,1084,1085,0,935,932,964,965,1055,1052,1084,1085,43,1052,1049,1078,1084,0,932,929,958,964,1052,1049,1078,1084,43,1084,1083,1082,1085,0,964,963,962,965,1084,1083,1082,1085,43,1073,1083,1084,1078,0,953,963,964,958,1073,1083,1084,1078,43,1086,1087,1088,1089,0,966,967,968,969,1086,1087,1088,1089,43,1089,1088,1090,1091,0,969,968,970,971,1089,1088,1090,1091,43,1092,1086,1089,1093,0,972,966,969,973,1092,1086,1089,1093,43,1093,1089,1091,1094,0,973,969,971,974,1093,1089,1091,1094,43,1095,1092,1093,1096,0,975,972,973,976,1095,1092,1093,1096,43,1096,1093,1094,1097,0,976,973,974,977,1096,1093,1094,1097,43,1098,1099,1095,1096,0,978,979,975,976,1098,1099,1095,1096,43,1098,1096,1097,1100,0,978,976,977,980,1098,1096,1097,1100,43,1101,1102,1103,1104,0,981,982,983,984,1101,1102,1103,1104,43,1102,1105,1106,1103,0,982,985,986,983,1102,1105,1106,1103,43,1104,1103,1107,1108,0,984,983,987,988,1104,1103,1107,1108,43,1103,1106,1109,1107,0,983,986,989,987,1103,1106,1109,1107,43,1108,1107,1110,1111,0,988,987,990,991,1108,1107,1110,1111,43,1107,1109,1112,1110,0,987,989,992,990,1107,1109,1112,1110,43,1111,1110,1113,1114,0,991,990,993,994,1111,1110,1113,1114,43,1112,1115,1113,1110,0,992,995,993,990,1112,1115,1113,1110,43,1104,1108,1116,1117,0,984,988,996,997,1104,1108,1116,1117,43,1117,1116,1118,1119,0,997,996,998,999,1117,1116,1118,1119,43,1101,1104,1117,1120,0,981,984,997,1e3,1101,1104,1117,1120,43,1120,1117,1119,1121,0,1e3,997,999,1001,1120,1117,1119,1121,43,1122,1094,1091,1123,0,1002,974,971,1003,1122,1094,1091,1123,43,1123,1091,1090,1124,0,1003,971,970,1004,1123,1091,1090,1124,43,1118,1122,1123,1119,0,998,1002,1003,999,1118,1122,1123,1119,43,1119,1123,1124,1121,0,999,1003,1004,1001,1119,1123,1124,1121,43,1111,1114,1125,1126,0,991,994,1005,1006,1111,1114,1125,1126,43,1126,1125,1127,1128,0,1006,1005,1007,1008,1126,1125,1127,1128,43,1108,1111,1126,1116,0,988,991,1006,996,1108,1111,1126,1116,43,1116,1126,1128,1118,0,996,1006,1008,998,1116,1126,1128,1118,43,1129,1100,1097,1130,0,1009,980,977,1010,1129,1100,1097,1130,43,1130,1097,1094,1122,0,1010,977,974,1002,1130,1097,1094,1122,43,1127,1129,1130,1128,0,1007,1009,1010,1008,1127,1129,1130,1128,43,1128,1130,1122,1118,0,1008,1010,1002,998,1128,1130,1122,1118,43,1131,1132,1133,1134,0,1011,1012,1013,1014,1131,1132,1133,1134,43,1131,1134,1135,1136,0,1011,1014,1015,1016,1131,1134,1135,1136,43,1137,1138,1132,1131,0,1017,1018,1012,1011,1137,1138,1132,1131,43,1137,1131,1136,1139,0,1017,1011,1016,1019,1137,1131,1136,1139,43,1140,1141,1138,1137,0,1020,1021,1018,1017,1140,1141,1138,1137,43,1140,1137,1139,1142,0,1020,1017,1019,1022,1140,1137,1139,1142,43,1143,1144,1141,1140,0,1023,1024,1021,1020,1143,1144,1141,1140,43,1143,1140,1142,1145,0,1023,1020,1022,1025,1143,1140,1142,1145,43,1146,1147,1148,1149,0,1026,1027,1028,1029,1146,1147,1148,1149,43,1147,1150,1151,1148,0,1027,1030,1031,1028,1147,1150,1151,1148,43,1149,1148,1152,1153,0,1029,1028,1032,1033,1149,1148,1152,1153,43,1148,1151,1154,1152,0,1028,1031,1034,1032,1148,1151,1154,1152,43,1153,1152,1155,1156,0,1033,1032,1035,1036,1153,1152,1155,1156,43,1154,1157,1155,1152,0,1034,1037,1035,1032,1154,1157,1155,1152,43,1156,1155,1158,1159,0,1036,1035,1038,1039,1156,1155,1158,1159,43,1157,1160,1158,1155,0,1037,1040,1038,1035,1157,1160,1158,1155,43,1161,1149,1153,1162,0,1041,1029,1033,1042,1161,1149,1153,1162,43,1163,1161,1162,1164,0,1043,1041,1042,1044,1163,1161,1162,1164,43,1165,1146,1149,1161,0,1045,1026,1029,1041,1165,1146,1149,1161,43,1166,1165,1161,1163,0,1046,1045,1041,1043,1166,1165,1161,1163,43,1139,1136,1167,1168,0,1019,1016,1047,1048,1139,1136,1167,1168,43,1136,1135,1169,1167,0,1016,1015,1049,1047,1136,1135,1169,1167,43,1167,1163,1164,1168,0,1047,1043,1044,1048,1167,1163,1164,1168,43,1169,1166,1163,1167,0,1049,1046,1043,1047,1169,1166,1163,1167,43,1170,1156,1159,1171,0,1050,1036,1039,1051,1170,1156,1159,1171,43,1172,1170,1171,1173,0,1052,1050,1051,1053,1172,1170,1171,1173,43,1162,1153,1156,1170,0,1042,1033,1036,1050,1162,1153,1156,1170,43,1164,1162,1170,1172,0,1044,1042,1050,1052,1164,1162,1170,1172,43,1145,1142,1174,1175,0,1025,1022,1054,1055,1145,1142,1174,1175,43,1142,1139,1168,1174,0,1022,1019,1048,1054,1142,1139,1168,1174,43,1175,1174,1172,1173,0,1055,1054,1052,1053,1175,1174,1172,1173,43,1174,1168,1164,1172,0,1054,1048,1044,1052,1174,1168,1164,1172,43,1176,1177,1178,1179,0,1056,1057,1058,1059,1176,1177,1178,1179,43,1180,1176,1179,1181,0,1060,1056,1059,1061,1180,1176,1179,1181,43,1182,1183,1177,1176,0,1062,1063,1057,1056,1182,1183,1177,1176,43,1184,1182,1176,1180,0,1064,1062,1056,1060,1184,1182,1176,1180,43,1185,1186,1183,1182,0,1065,1066,1063,1062,1185,1186,1183,1182,43,1187,1185,1182,1184,0,1067,1065,1062,1064,1187,1185,1182,1184,43,1188,1189,1186,1185,0,1068,1069,1066,1065,1188,1189,1186,1185,43,1190,1188,1185,1187,0,1070,1068,1065,1067,1190,1188,1185,1187,43,1191,1180,1181,1192,0,1071,1060,1061,1072,1191,1180,1181,1192,43,1192,1193,1194,1191,0,1072,1073,1074,1071,1192,1193,1194,1191,43,1195,1184,1180,1191,0,1075,1064,1060,1071,1195,1184,1180,1191,43,1191,1194,1196,1195,0,1071,1074,1076,1075,1191,1194,1196,1195,43,1197,1187,1184,1195,0,1077,1067,1064,1075,1197,1187,1184,1195,43,1195,1196,1198,1197,0,1075,1076,1078,1077,1195,1196,1198,1197,43,1199,1190,1187,1197,0,1079,1070,1067,1077,1199,1190,1187,1197,43,1197,1198,1200,1199,0,1077,1078,1080,1079,1197,1198,1200,1199,43,1201,1202,1194,1193,0,1081,1082,1074,1073,1201,1202,1194,1193,43,1203,1204,1202,1201,0,1083,1084,1082,1081,1203,1204,1202,1201,43,1202,1205,1196,1194,0,1082,1085,1076,1074,1202,1205,1196,1194,43,1204,1206,1205,1202,0,1084,1086,1085,1082,1204,1206,1205,1202,43,1205,1207,1198,1196,0,1085,1087,1078,1076,1205,1207,1198,1196,43,1206,1208,1207,1205,0,1086,1088,1087,1085,1206,1208,1207,1205,43,1207,1209,1200,1198,0,1087,1089,1080,1078,1207,1209,1200,1198,43,1208,1210,1209,1207,0,1088,1090,1089,1087,1208,1210,1209,1207,43,1211,1212,1213,1214,0,1091,1092,1093,1094,1211,1212,1213,1214,43,1215,1211,1214,1216,0,1095,1091,1094,1096,1215,1211,1214,1216,43,1217,1218,1212,1211,0,1097,1098,1092,1091,1217,1218,1212,1211,43,1219,1217,1211,1215,0,1099,1097,1091,1095,1219,1217,1211,1215,43,1220,1221,1218,1217,0,1100,1101,1098,1097,1220,1221,1218,1217,43,1222,1220,1217,1219,0,1102,1100,1097,1099,1222,1220,1217,1219,43,1223,1224,1221,1220,0,1103,1104,1101,1100,1223,1224,1221,1220,43,1225,1223,1220,1222,0,1105,1103,1100,1102,1225,1223,1220,1222,43,1226,1215,1216,1227,0,1106,1095,1096,1107,1226,1215,1216,1227,43,1228,1229,1226,1227,0,1108,1109,1106,1107,1228,1229,1226,1227,43,1230,1219,1215,1226,0,1110,1099,1095,1106,1230,1219,1215,1226,43,1229,1231,1230,1226,0,1109,1111,1110,1106,1229,1231,1230,1226,43,1232,1222,1219,1230,0,1112,1102,1099,1110,1232,1222,1219,1230,43,1231,1233,1232,1230,0,1111,1113,1112,1110,1231,1233,1232,1230,43,1234,1225,1222,1232,0,1114,1105,1102,1112,1234,1225,1222,1232,43,1233,1235,1234,1232,0,1113,1115,1114,1112,1233,1235,1234,1232,43,1236,1237,1229,1228,0,1116,1117,1109,1108,1236,1237,1229,1228,43,1238,1239,1237,1236,0,1118,1119,1117,1116,1238,1239,1237,1236,43,1237,1240,1231,1229,0,1117,1120,1111,1109,1237,1240,1231,1229,43,1239,1241,1240,1237,0,1119,1121,1120,1117,1239,1241,1240,1237,43,1240,1242,1233,1231,0,1120,1122,1113,1111,1240,1242,1233,1231,43,1241,1243,1242,1240,0,1121,1123,1122,1120,1241,1243,1242,1240,43,1242,1244,1235,1233,0,1122,1124,1115,1113,1242,1244,1235,1233,43,1243,1245,1244,1242,0,1123,1125,1124,1122,1243,1245,1244,1242,43,1246,1247,1248,1249,0,1126,1127,1128,1129,1246,1247,1248,1249,43,1249,1248,1250,1251,0,1129,1128,1130,1131,1249,1248,1250,1251,43,1252,1246,1249,1253,0,1132,1126,1129,1133,1252,1246,1249,1253,43,1253,1249,1251,1254,0,1133,1129,1131,1134,1253,1249,1251,1254,43,1255,1252,1253,1256,0,1135,1132,1133,1136,1255,1252,1253,1256,43,1256,1253,1254,1257,0,1136,1133,1134,1137,1256,1253,1254,1257,43,1258,1259,1255,1256,0,1138,1139,1135,1136,1258,1259,1255,1256,43,1258,1256,1257,1260,0,1138,1136,1137,1140,1258,1256,1257,1260,43,1261,1262,1263,1264,0,1141,1142,1143,1144,1261,1262,1263,1264,43,1262,1265,1266,1263,0,1142,1145,1146,1143,1262,1265,1266,1263,43,1264,1263,1267,1268,0,1144,1143,1147,1148,1264,1263,1267,1268,43,1263,1266,1269,1267,0,1143,1146,1149,1147,1263,1266,1269,1267,43,1268,1267,1270,1271,0,1148,1147,1150,1151,1268,1267,1270,1271,43,1267,1269,1272,1270,0,1147,1149,1152,1150,1267,1269,1272,1270,43,1271,1270,1273,1274,0,1151,1150,1153,1154,1271,1270,1273,1274,43,1272,1275,1273,1270,0,1152,1155,1153,1150,1272,1275,1273,1270,43,1264,1268,1276,1277,0,1144,1148,1156,1157,1264,1268,1276,1277,43,1277,1276,1278,1279,0,1157,1156,1158,1159,1277,1276,1278,1279,43,1261,1264,1277,1280,0,1141,1144,1157,1160,1261,1264,1277,1280,43,1280,1277,1279,1281,0,1160,1157,1159,1161,1280,1277,1279,1281,43,1282,1254,1251,1283,0,1162,1134,1131,1163,1282,1254,1251,1283,43,1283,1251,1250,1284,0,1163,1131,1130,1164,1283,1251,1250,1284,43,1278,1282,1283,1279,0,1158,1162,1163,1159,1278,1282,1283,1279,43,1279,1283,1284,1281,0,1159,1163,1164,1161,1279,1283,1284,1281,43,1271,1274,1285,1286,0,1151,1154,1165,1166,1271,1274,1285,1286,43,1286,1285,1287,1288,0,1166,1165,1167,1168,1286,1285,1287,1288,43,1268,1271,1286,1276,0,1148,1151,1166,1156,1268,1271,1286,1276,43,1276,1286,1288,1278,0,1156,1166,1168,1158,1276,1286,1288,1278,43,1289,1260,1257,1290,0,1169,1140,1137,1170,1289,1260,1257,1290,43,1290,1257,1254,1282,0,1170,1137,1134,1162,1290,1257,1254,1282,43,1287,1289,1290,1288,0,1167,1169,1170,1168,1287,1289,1290,1288,43,1288,1290,1282,1278,0,1168,1170,1162,1158,1288,1290,1282,1278,43,1291,1292,1293,1294,0,1171,1172,1173,1174,1291,1292,1293,1294,43,1294,1293,1295,1296,0,1174,1173,1175,1176,1294,1293,1295,1296,43,1297,1291,1294,1298,0,1177,1171,1174,1178,1297,1291,1294,1298,43,1298,1294,1296,1299,0,1178,1174,1176,1179,1298,1294,1296,1299,43,1300,1301,1302,1303,0,1180,1181,1182,1183,1300,1301,1302,1303,43,1303,1302,1304,1305,0,1183,1182,1184,1185,1303,1302,1304,1305,43,1306,1307,1300,1303,0,1186,1187,1180,1183,1306,1307,1300,1303,43,1308,1306,1303,1305,0,1188,1186,1183,1185,1308,1306,1303,1305,43,1309,1310,1311,1312,0,1189,1190,1191,1192,1309,1310,1311,1312,43,1310,1313,1314,1311,0,1190,1193,1194,1191,1310,1313,1314,1311,43,1312,1311,1315,1316,0,1192,1191,1195,1196,1312,1311,1315,1316,43,1311,1314,1317,1315,0,1191,1194,1197,1195,1311,1314,1317,1315,43,1318,1319,1320,1321,0,1198,1199,1200,1201,1318,1319,1320,1321,43,1319,1322,1323,1320,0,1199,1202,1203,1200,1319,1322,1323,1320,43,1320,1324,1325,1321,0,1200,1204,1205,1201,1320,1324,1325,1321,43,1323,1326,1324,1320,0,1203,1206,1204,1200,1323,1326,1324,1320,43,1309,1312,1327,1328,0,1189,1192,1207,1208,1309,1312,1327,1327,43,1312,1316,1329,1327,0,1192,1196,1209,1207,1312,1316,1328,1327,43,1328,1327,1330,1331,0,1208,1207,1210,1211,1327,1327,1329,1329,43,1327,1329,1332,1330,0,1207,1209,1212,1210,1327,1328,1330,1329,43,1296,1333,1334,1299,0,1176,1213,1214,1179,1296,1331,1332,1299,43,1295,1335,1333,1296,0,1175,1215,1213,1176,1295,1331,1331,1296,43,1333,1330,1332,1334,0,1213,1210,1212,1214,1331,1329,1330,1332,43,1335,1331,1330,1333,0,1215,1211,1210,1213,1331,1329,1329,1331,43,1336,1321,1325,1337,0,1216,1201,1205,1217,1333,1321,1325,1334,43,1338,1336,1337,1339,0,1218,1216,1217,1219,1335,1333,1334,1336,43,1340,1318,1321,1336,0,1220,1198,1201,1216,1337,1318,1321,1333,43,1341,1340,1336,1338,0,1221,1220,1216,1218,1338,1337,1333,1335,43,1308,1305,1342,1343,0,1188,1185,1222,1223,1308,1305,1339,1340,43,1305,1304,1344,1342,0,1185,1184,1224,1222,1305,1304,1341,1339,43,1343,1342,1338,1339,0,1223,1222,1218,1219,1340,1339,1335,1336,43,1342,1344,1341,1338,0,1222,1224,1221,1218,1339,1341,1338,1335,43,1302,1345,1346,1304,0,1182,1225,1226,1184,1302,1342,1343,1304,43,1301,1347,1345,1302,0,1181,1227,1225,1182,1301,1344,1342,1302,43,1348,1346,1345,1349,0,1228,1226,1225,1229,1345,1343,1342,1346,43,1349,1345,1347,1350,0,1229,1225,1227,1230,1346,1342,1344,1347,43,1298,1351,1352,1297,0,1178,1231,1232,1177,1298,1348,1349,1297,43,1299,1353,1351,1298,0,1179,1233,1231,1178,1299,1350,1348,1298,43,1351,1349,1350,1352,0,1231,1229,1230,1232,1348,1346,1347,1349,43,1353,1348,1349,1351,0,1233,1228,1229,1231,1350,1345,1346,1348,43,1334,1354,1353,1299,0,1214,1234,1233,1179,1332,1351,1350,1299,43,1332,1355,1354,1334,0,1212,1235,1234,1214,1330,1352,1351,1332,43,1354,1356,1348,1353,0,1234,1236,1228,1233,1351,1353,1345,1350,43,1355,1357,1356,1354,0,1235,1237,1236,1234,1352,1354,1353,1351,43,1344,1358,1359,1341,0,1224,1238,1239,1221,1341,1355,1356,1338,43,1304,1346,1358,1344,0,1184,1226,1238,1224,1304,1343,1355,1341,43,1356,1357,1359,1358,0,1236,1237,1239,1238,1353,1354,1356,1355,43,1356,1358,1346,1348,0,1236,1238,1226,1228,1353,1355,1343,1345,43,1329,1360,1355,1332,0,1209,1240,1235,1212,1328,1357,1352,1330,43,1316,1361,1360,1329,0,1196,1241,1240,1209,1316,1358,1357,1328,43,1362,1357,1355,1360,0,1242,1237,1235,1240,1359,1354,1352,1357,43,1363,1362,1360,1361,0,1243,1242,1240,1241,1360,1359,1357,1358,43,1364,1365,1318,1340,0,1244,1245,1198,1220,1361,1362,1318,1337,43,1359,1364,1340,1341,0,1239,1244,1220,1221,1356,1361,1337,1338,43,1365,1364,1362,1363,0,1245,1244,1242,1243,1362,1361,1359,1360,43,1364,1359,1357,1362,0,1244,1239,1237,1242,1361,1356,1354,1359,43,1366,1367,1322,1319,0,1246,1247,1202,1199,1363,1364,1322,1319,43,1365,1366,1319,1318,0,1245,1246,1199,1198,1362,1363,1319,1318,43,1367,1366,1368,1369,0,1247,1246,1248,1249,1364,1363,1365,1366,43,1366,1365,1363,1368,0,1246,1245,1243,1248,1363,1362,1360,1365,43,1370,1361,1316,1315,0,1250,1241,1196,1195,1367,1358,1316,1315,43,1371,1370,1315,1317,0,1251,1250,1195,1197,1368,1367,1315,1317,43,1368,1363,1361,1370,0,1248,1243,1241,1250,1365,1360,1358,1367,43,1369,1368,1370,1371,0,1249,1248,1250,1251,1366,1365,1367,1368,43,1372,1373,1374,1375,0,1252,1253,1254,1255,1369,1370,1371,1372,43,1375,1374,1376,1377,0,1255,1254,1256,1257,1372,1371,1373,1374,43,1378,1379,1372,1375,0,1258,1259,1252,1255,1375,1376,1369,1372,43,1380,1378,1375,1377,0,1260,1258,1255,1257,1377,1375,1372,1374,43,1381,1382,1383,1384,0,1261,1262,1263,1264,1378,1379,1380,1381,43,1382,1385,1386,1383,0,1262,1265,1266,1263,1379,1382,1383,1380,43,1383,1387,1388,1384,0,1263,1267,1268,1264,1380,1384,1385,1381,43,1386,1389,1387,1383,0,1266,1269,1267,1263,1383,1386,1384,1380,43,1390,1384,1388,1391,0,1270,1264,1268,1271,1387,1381,1385,1388,43,1392,1390,1391,1393,0,1272,1270,1271,1273,1389,1387,1388,1390,43,1394,1381,1384,1390,0,1274,1261,1264,1270,1391,1378,1381,1387,43,1395,1394,1390,1392,0,1275,1274,1270,1272,1392,1391,1387,1389,43,1380,1377,1396,1397,0,1260,1257,1276,1277,1377,1374,1393,1394,43,1377,1376,1398,1396,0,1257,1256,1278,1276,1374,1373,1395,1393,43,1397,1396,1392,1393,0,1277,1276,1272,1273,1394,1393,1389,1390,43,1396,1398,1395,1392,0,1276,1278,1275,1272,1393,1395,1392,1389,43,1374,1399,1400,1376,0,1254,1279,1280,1256,1371,1396,1397,1373,43,1373,1401,1399,1374,0,1253,1281,1279,1254,1370,1398,1396,1371,43,1402,1400,1399,1403,0,1282,1280,1279,1283,1399,1397,1396,1400,43,1403,1399,1401,1404,0,1283,1279,1281,1284,1400,1396,1398,1401,43,1405,1406,1407,1408,0,1285,1286,1287,1288,1402,1403,1404,1405,43,1409,1410,1406,1405,0,1289,1290,1286,1285,1406,1407,1403,1402,43,1406,1403,1404,1407,0,1286,1283,1284,1287,1403,1400,1401,1404,43,1410,1402,1403,1406,0,1290,1282,1283,1286,1407,1399,1400,1403,43,1411,1412,1410,1409,0,1291,1292,1290,1289,1408,1409,1407,1406,43,1413,1414,1412,1411,0,1293,1294,1292,1291,1410,1411,1409,1408,43,1412,1415,1402,1410,0,1292,1295,1282,1290,1409,1412,1399,1407,43,1414,1416,1415,1412,0,1294,1296,1295,1292,1411,1413,1412,1409,43,1398,1417,1418,1395,0,1278,1297,1298,1275,1395,1414,1415,1392,43,1376,1400,1417,1398,0,1256,1280,1297,1278,1373,1397,1414,1395,43,1415,1416,1418,1417,0,1295,1296,1298,1297,1412,1413,1415,1414,43,1415,1417,1400,1402,0,1295,1297,1280,1282,1412,1414,1397,1399,43,1419,1420,1414,1413,0,1299,1300,1294,1293,1416,1417,1411,1410,43,1421,1422,1420,1419,0,1301,1302,1300,1299,1418,1419,1417,1416,43,1423,1416,1414,1420,0,1303,1296,1294,1300,1420,1413,1411,1417,43,1424,1423,1420,1422,0,1304,1303,1300,1302,1421,1420,1417,1419,43,1425,1426,1381,1394,0,1305,1306,1261,1274,1422,1423,1378,1391,43,1418,1425,1394,1395,0,1298,1305,1274,1275,1415,1422,1391,1392,43,1426,1425,1423,1424,0,1306,1305,1303,1304,1423,1422,1420,1421,43,1425,1418,1416,1423,0,1305,1298,1296,1303,1422,1415,1413,1420,43,1427,1428,1385,1382,0,1307,1308,1265,1262,1424,1425,1382,1379,43,1426,1427,1382,1381,0,1306,1307,1262,1261,1423,1424,1379,1378,43,1428,1427,1429,1430,0,1308,1307,1309,1310,1425,1424,1426,1427,43,1427,1426,1424,1429,0,1307,1306,1304,1309,1424,1423,1421,1426,43,1431,1422,1421,1432,0,1311,1302,1301,1312,1428,1419,1418,1429,43,1433,1431,1432,1434,0,1313,1311,1312,1314,1430,1428,1429,1431,43,1429,1424,1422,1431,0,1309,1304,1302,1311,1426,1421,1419,1428,43,1430,1429,1431,1433,0,1310,1309,1311,1313,1427,1426,1428,1430,43,1435,1436,1437,1438,0,1315,1316,1317,1318,1432,1433,1434,1435,43,1438,1437,1439,1440,0,1318,1317,1319,1320,1435,1434,1436,1437,43,1441,1442,1435,1438,0,1321,1322,1315,1318,1438,1439,1432,1435,43,1443,1441,1438,1440,0,1323,1321,1318,1320,1440,1438,1435,1437,43,1444,1445,1446,1447,0,1324,1325,1326,1327,1441,1442,1443,1444,43,1445,1448,1449,1446,0,1325,1328,1329,1326,1442,1445,1446,1443,43,1446,1450,1451,1447,0,1326,1330,1331,1327,1443,1447,1448,1444,43,1449,1452,1450,1446,0,1329,1332,1330,1326,1446,1449,1447,1443,43,1453,1447,1451,1454,0,1333,1327,1331,1334,1450,1444,1448,1451,43,1455,1453,1454,1456,0,1335,1333,1334,1336,1452,1450,1451,1453,43,1457,1444,1447,1453,0,1337,1324,1327,1333,1454,1441,1444,1450,43,1458,1457,1453,1455,0,1338,1337,1333,1335,1455,1454,1450,1452,43,1443,1440,1459,1460,0,1323,1320,1339,1340,1440,1437,1456,1457,43,1440,1439,1461,1459,0,1320,1319,1341,1339,1437,1436,1458,1456,43,1460,1459,1455,1456,0,1340,1339,1335,1336,1457,1456,1452,1453,43,1459,1461,1458,1455,0,1339,1341,1338,1335,1456,1458,1455,1452,43,1437,1462,1463,1439,0,1317,1342,1343,1319,1434,1459,1460,1436,43,1436,1464,1462,1437,0,1316,1344,1342,1317,1433,1461,1459,1434,43,1465,1463,1462,1466,0,1345,1343,1342,1346,1462,1460,1459,1463,43,1466,1462,1464,1467,0,1346,1342,1344,1347,1463,1459,1461,1464,43,1468,1469,1470,1471,0,1348,1349,1350,1351,1465,1466,1467,1468,43,1472,1473,1469,1468,0,1352,1353,1349,1348,1469,1470,1466,1465,43,1469,1466,1467,1470,0,1349,1346,1347,1350,1466,1463,1464,1467,43,1473,1465,1466,1469,0,1353,1345,1346,1349,1470,1462,1463,1466,43,1474,1475,1473,1472,0,1354,1355,1353,1352,1471,1472,1470,1469,43,1476,1477,1475,1474,0,1356,1357,1355,1354,1473,1474,1472,1471,43,1475,1478,1465,1473,0,1355,1358,1345,1353,1472,1475,1462,1470,43,1477,1479,1478,1475,0,1357,1359,1358,1355,1474,1476,1475,1472,43,1461,1480,1481,1458,0,1341,1360,1361,1338,1458,1477,1478,1455,43,1439,1463,1480,1461,0,1319,1343,1360,1341,1436,1460,1477,1458,43,1478,1479,1481,1480,0,1358,1359,1361,1360,1475,1476,1478,1477,43,1478,1480,1463,1465,0,1358,1360,1343,1345,1475,1477,1460,1462,43,1482,1483,1477,1476,0,1362,1363,1357,1356,1479,1480,1474,1473,43,1484,1485,1483,1482,0,1364,1365,1363,1362,1481,1482,1480,1479,43,1486,1479,1477,1483,0,1366,1359,1357,1363,1483,1476,1474,1480,43,1487,1486,1483,1485,0,1367,1366,1363,1365,1484,1483,1480,1482,43,1488,1489,1444,1457,0,1368,1369,1324,1337,1485,1486,1441,1454,43,1481,1488,1457,1458,0,1361,1368,1337,1338,1478,1485,1454,1455,43,1489,1488,1486,1487,0,1369,1368,1366,1367,1486,1485,1483,1484,43,1488,1481,1479,1486,0,1368,1361,1359,1366,1485,1478,1476,1483,43,1490,1491,1448,1445,0,1370,1371,1328,1325,1487,1488,1445,1442,43,1489,1490,1445,1444,0,1369,1370,1325,1324,1486,1487,1442,1441,43,1491,1490,1492,1493,0,1371,1370,1372,1373,1488,1487,1489,1490,43,1490,1489,1487,1492,0,1370,1369,1367,1372,1487,1486,1484,1489,43,1494,1485,1484,1495,0,1374,1365,1364,1375,1491,1482,1481,1492,43,1496,1494,1495,1497,0,1376,1374,1375,1377,1493,1491,1492,1494,43,1492,1487,1485,1494,0,1372,1367,1365,1374,1489,1484,1482,1491,43,1493,1492,1494,1496,0,1373,1372,1374,1376,1490,1489,1491,1493,43,1498,1499,1500,1501,0,1378,1379,1380,1381,1495,1496,1497,1498,43,1501,1500,1502,1503,0,1381,1380,1382,1383,1498,1497,1499,1500,43,1504,1505,1498,1501,0,1384,1385,1378,1381,1501,1502,1495,1498,43,1506,1504,1501,1503,0,1386,1384,1381,1383,1503,1501,1498,1500,43,1507,1508,1509,1510,0,1387,1388,1389,1390,1504,1505,1506,1507,43,1508,1511,1512,1509,0,1388,1391,1392,1389,1505,1508,1509,1506,43,1509,1513,1514,1510,0,1389,1393,1394,1390,1506,1510,1511,1507,43,1512,1515,1513,1509,0,1392,1395,1393,1389,1509,1512,1510,1506,43,1516,1510,1514,1517,0,1396,1390,1394,1397,1513,1507,1511,1514,43,1518,1516,1517,1519,0,1398,1396,1397,1399,1515,1513,1514,1516,43,1520,1507,1510,1516,0,1400,1387,1390,1396,1517,1504,1507,1513,43,1521,1520,1516,1518,0,1401,1400,1396,1398,1518,1517,1513,1515,43,1506,1503,1522,1523,0,1386,1383,1402,1403,1503,1500,1519,1520,43,1503,1502,1524,1522,0,1383,1382,1404,1402,1500,1499,1521,1519,43,1523,1522,1518,1519,0,1403,1402,1398,1399,1520,1519,1515,1516,43,1522,1524,1521,1518,0,1402,1404,1401,1398,1519,1521,1518,1515,43,1500,1525,1526,1502,0,1380,1405,1406,1382,1497,1522,1523,1499,43,1499,1527,1525,1500,0,1379,1407,1405,1380,1496,1524,1522,1497,43,1528,1526,1525,1529,0,1408,1406,1405,1409,1525,1523,1522,1526,43,1529,1525,1527,1530,0,1409,1405,1407,1410,1526,1522,1524,1527,43,1531,1532,1533,1534,0,1411,1412,1413,1414,1528,1529,1530,1531,43,1535,1536,1532,1531,0,1415,1416,1412,1411,1532,1533,1529,1528,43,1532,1529,1530,1533,0,1412,1409,1410,1413,1529,1526,1527,1530,43,1536,1528,1529,1532,0,1416,1408,1409,1412,1533,1525,1526,1529,43,1537,1538,1536,1535,0,1417,1418,1416,1415,1534,1535,1533,1532,43,1539,1540,1538,1537,0,1419,1420,1418,1417,1536,1537,1535,1534,43,1538,1541,1528,1536,0,1418,1421,1408,1416,1535,1538,1525,1533,43,1540,1542,1541,1538,0,1420,1422,1421,1418,1537,1539,1538,1535,43,1524,1543,1544,1521,0,1404,1423,1424,1401,1521,1540,1541,1518,43,1502,1526,1543,1524,0,1382,1406,1423,1404,1499,1523,1540,1521,43,1541,1542,1544,1543,0,1421,1422,1424,1423,1538,1539,1541,1540,43,1541,1543,1526,1528,0,1421,1423,1406,1408,1538,1540,1523,1525,43,1545,1546,1540,1539,0,1425,1426,1420,1419,1542,1543,1537,1536,43,1547,1548,1546,1545,0,1427,1428,1426,1425,1544,1545,1543,1542,43,1549,1542,1540,1546,0,1429,1422,1420,1426,1546,1539,1537,1543,43,1550,1549,1546,1548,0,1430,1429,1426,1428,1547,1546,1543,1545,43,1551,1552,1507,1520,0,1431,1432,1387,1400,1548,1549,1504,1517,43,1544,1551,1520,1521,0,1424,1431,1400,1401,1541,1548,1517,1518,43,1552,1551,1549,1550,0,1432,1431,1429,1430,1549,1548,1546,1547,43,1551,1544,1542,1549,0,1431,1424,1422,1429,1548,1541,1539,1546,43,1553,1554,1511,1508,0,1433,1434,1391,1388,1550,1551,1508,1505,43,1552,1553,1508,1507,0,1432,1433,1388,1387,1549,1550,1505,1504,43,1554,1553,1555,1556,0,1434,1433,1435,1436,1551,1550,1552,1553,43,1553,1552,1550,1555,0,1433,1432,1430,1435,1550,1549,1547,1552,43,1557,1548,1547,1558,0,1437,1428,1427,1438,1554,1545,1544,1555,43,1559,1557,1558,1560,0,1439,1437,1438,1440,1556,1554,1555,1557,43,1555,1550,1548,1557,0,1435,1430,1428,1437,1552,1547,1545,1554,43,1556,1555,1557,1559,0,1436,1435,1437,1439,1553,1552,1554,1556,43,1561,1562,1563,1564,0,1441,1442,1443,1444,1558,1559,1560,1561,43,1564,1563,1565,1566,0,1444,1443,1445,1446,1561,1560,1562,1563,43,1567,1561,1564,1568,0,1447,1441,1444,1448,1564,1558,1561,1565,43,1568,1564,1566,1569,0,1448,1444,1446,1449,1565,1561,1563,1566,43,1570,1571,1572,1573,0,1450,1451,1452,1453,1567,1568,1569,1570,43,1573,1572,1574,1575,0,1453,1452,1454,1455,1570,1569,1571,1572,43,1576,1577,1570,1573,0,1456,1457,1450,1453,1573,1574,1567,1570,43,1578,1576,1573,1575,0,1458,1456,1453,1455,1575,1573,1570,1572,43,1579,1580,1581,1582,0,1459,1460,1461,1462,1576,1577,1578,1579,43,1580,1583,1584,1581,0,1460,1463,1464,1461,1577,1580,1581,1578,43,1582,1581,1585,1586,0,1462,1461,1465,1466,1579,1578,1582,1583,43,1581,1584,1587,1585,0,1461,1464,1467,1465,1578,1581,1584,1582,43,1588,1589,1590,1591,0,1468,1469,1470,1471,1585,1586,1587,1588,43,1589,1592,1593,1590,0,1469,1472,1473,1470,1586,1589,1590,1587,43,1590,1594,1595,1591,0,1470,1474,1475,1471,1587,1591,1592,1588,43,1593,1596,1594,1590,0,1473,1476,1474,1470,1590,1593,1591,1587,43,1579,1582,1597,1598,0,1459,1462,1477,1478,1576,1579,1594,1594,43,1582,1586,1599,1597,0,1462,1466,1479,1477,1579,1583,1595,1594,43,1598,1597,1600,1601,0,1478,1477,1480,1481,1594,1594,1596,1596,43,1597,1599,1602,1600,0,1477,1479,1482,1480,1594,1595,1597,1596,43,1566,1603,1604,1569,0,1446,1483,1484,1449,1563,1598,1599,1566,43,1565,1605,1603,1566,0,1445,1485,1483,1446,1562,1598,1598,1563,43,1603,1600,1602,1604,0,1483,1480,1482,1484,1598,1596,1597,1599,43,1605,1601,1600,1603,0,1485,1481,1480,1483,1598,1596,1596,1598,43,1606,1591,1595,1607,0,1486,1471,1475,1487,1600,1588,1592,1601,43,1608,1606,1607,1609,0,1488,1486,1487,1489,1602,1600,1601,1603,43,1610,1588,1591,1606,0,1490,1468,1471,1486,1604,1585,1588,1600,43,1611,1610,1606,1608,0,1491,1490,1486,1488,1605,1604,1600,1602,43,1578,1575,1612,1613,0,1458,1455,1492,1493,1575,1572,1606,1607,43,1575,1574,1614,1612,0,1455,1454,1494,1492,1572,1571,1608,1606,43,1613,1612,1608,1609,0,1493,1492,1488,1489,1607,1606,1602,1603,43,1612,1614,1611,1608,0,1492,1494,1491,1488,1606,1608,1605,1602,43,1572,1615,1616,1574,0,1452,1495,1496,1454,1569,1609,1610,1571,43,1571,1617,1615,1572,0,1451,1497,1495,1452,1568,1611,1609,1569,43,1618,1616,1615,1619,0,1498,1496,1495,1499,1612,1610,1609,1613,43,1619,1615,1617,1620,0,1499,1495,1497,1500,1613,1609,1611,1614,43,1568,1621,1622,1567,0,1448,1501,1502,1447,1565,1615,1616,1564,43,1569,1623,1621,1568,0,1449,1503,1501,1448,1566,1617,1615,1565,43,1621,1619,1620,1622,0,1501,1499,1500,1502,1615,1613,1614,1616,43,1623,1618,1619,1621,0,1503,1498,1499,1501,1617,1612,1613,1615,43,1604,1624,1623,1569,0,1484,1504,1503,1449,1599,1618,1617,1566,43,1602,1625,1624,1604,0,1482,1505,1504,1484,1597,1619,1618,1599,43,1624,1626,1618,1623,0,1504,1506,1498,1503,1618,1620,1612,1617,43,1625,1627,1626,1624,0,1505,1507,1506,1504,1619,1621,1620,1618,43,1614,1628,1629,1611,0,1494,1508,1509,1491,1608,1622,1623,1605,43,1574,1616,1628,1614,0,1454,1496,1508,1494,1571,1610,1622,1608,43,1626,1627,1629,1628,0,1506,1507,1509,1508,1620,1621,1623,1622,43,1626,1628,1616,1618,0,1506,1508,1496,1498,1620,1622,1610,1612,43,1599,1630,1625,1602,0,1479,1510,1505,1482,1595,1624,1619,1597,43,1586,1631,1630,1599,0,1466,1511,1510,1479,1583,1625,1624,1595,43,1632,1627,1625,1630,0,1512,1507,1505,1510,1626,1621,1619,1624,43,1633,1632,1630,1631,0,1513,1512,1510,1511,1627,1626,1624,1625,43,1634,1635,1588,1610,0,1514,1515,1468,1490,1628,1629,1585,1604,43,1629,1634,1610,1611,0,1509,1514,1490,1491,1623,1628,1604,1605,43,1635,1634,1632,1633,0,1515,1514,1512,1513,1629,1628,1626,1627,43,1634,1629,1627,1632,0,1514,1509,1507,1512,1628,1623,1621,1626,43,1636,1637,1592,1589,0,1516,1517,1472,1469,1630,1631,1589,1586,43,1635,1636,1589,1588,0,1515,1516,1469,1468,1629,1630,1586,1585,43,1637,1636,1638,1639,0,1517,1516,1518,1519,1631,1630,1632,1633,43,1636,1635,1633,1638,0,1516,1515,1513,1518,1630,1629,1627,1632,43,1640,1631,1586,1585,0,1520,1511,1466,1465,1634,1625,1583,1582,43,1641,1640,1585,1587,0,1521,1520,1465,1467,1635,1634,1582,1584,43,1638,1633,1631,1640,0,1518,1513,1511,1520,1632,1627,1625,1634,43,1639,1638,1640,1641,0,1519,1518,1520,1521,1633,1632,1634,1635,43,1642,1643,1644,1645,0,1522,1523,1524,1525,1636,1637,1638,1639,43,1645,1644,1646,1647,0,1525,1524,1526,1527,1639,1638,1640,1641,43,1648,1642,1645,1649,0,1528,1522,1525,1529,1642,1636,1639,1643,43,1649,1645,1647,1650,0,1529,1525,1527,1530,1643,1639,1641,1644,43,1651,1652,1653,1654,0,1531,1532,1533,1534,1645,1646,1647,1648,43,1654,1653,1655,1656,0,1534,1533,1535,1536,1648,1647,1649,1650,43,1657,1658,1651,1654,0,1537,1538,1531,1534,1651,1652,1645,1648,43,1659,1657,1654,1656,0,1539,1537,1534,1536,1653,1651,1648,1650,43,1660,1661,1662,1663,0,1540,1541,1542,1543,1654,1655,1656,1657,43,1661,1664,1665,1662,0,1541,1544,1545,1542,1655,1658,1659,1656,43,1663,1662,1666,1667,0,1543,1542,1546,1547,1657,1656,1660,1661,43,1662,1665,1668,1666,0,1542,1545,1548,1546,1656,1659,1662,1660,43,1669,1670,1671,1672,0,1549,1550,1551,1552,1663,1664,1665,1666,43,1670,1673,1674,1671,0,1550,1553,1554,1551,1664,1667,1668,1665,43,1671,1675,1676,1672,0,1551,1555,1556,1552,1665,1669,1670,1666,43,1674,1677,1675,1671,0,1554,1557,1555,1551,1668,1671,1669,1665,43,1660,1663,1678,1679,0,1540,1543,1558,1559,1654,1657,1672,1672,43,1663,1667,1680,1678,0,1543,1547,1560,1558,1657,1661,1673,1672,43,1679,1678,1681,1682,0,1559,1558,1561,1562,1672,1672,1674,1674,43,1678,1680,1683,1681,0,1558,1560,1563,1561,1672,1673,1675,1674,43,1647,1684,1685,1650,0,1527,1564,1565,1530,1641,1676,1677,1644,43,1646,1686,1684,1647,0,1526,1566,1564,1527,1640,1676,1676,1641,43,1684,1681,1683,1685,0,1564,1561,1563,1565,1676,1674,1675,1677,43,1686,1682,1681,1684,0,1566,1562,1561,1564,1676,1674,1674,1676,43,1687,1672,1676,1688,0,1567,1552,1556,1568,1678,1666,1670,1679,43,1689,1687,1688,1690,0,1569,1567,1568,1570,1680,1678,1679,1681,43,1691,1669,1672,1687,0,1571,1549,1552,1567,1682,1663,1666,1678,43,1692,1691,1687,1689,0,1572,1571,1567,1569,1683,1682,1678,1680,43,1659,1656,1693,1694,0,1539,1536,1573,1574,1653,1650,1684,1685,43,1656,1655,1695,1693,0,1536,1535,1575,1573,1650,1649,1686,1684,43,1694,1693,1689,1690,0,1574,1573,1569,1570,1685,1684,1680,1681,43,1693,1695,1692,1689,0,1573,1575,1572,1569,1684,1686,1683,1680,43,1653,1696,1697,1655,0,1533,1576,1577,1535,1647,1687,1688,1649,43,1652,1698,1696,1653,0,1532,1578,1576,1533,1646,1689,1687,1647,43,1699,1697,1696,1700,0,1579,1577,1576,1580,1690,1688,1687,1691,43,1700,1696,1698,1701,0,1580,1576,1578,1581,1691,1687,1689,1692,43,1649,1702,1703,1648,0,1529,1582,1583,1528,1643,1693,1694,1642,43,1650,1704,1702,1649,0,1530,1584,1582,1529,1644,1695,1693,1643,43,1702,1700,1701,1703,0,1582,1580,1581,1583,1693,1691,1692,1694,43,1704,1699,1700,1702,0,1584,1579,1580,1582,1695,1690,1691,1693,43,1685,1705,1704,1650,0,1565,1585,1584,1530,1677,1696,1695,1644,43,1683,1706,1705,1685,0,1563,1586,1585,1565,1675,1697,1696,1677,43,1705,1707,1699,1704,0,1585,1587,1579,1584,1696,1698,1690,1695,43,1706,1708,1707,1705,0,1586,1588,1587,1585,1697,1699,1698,1696,43,1695,1709,1710,1692,0,1575,1589,1590,1572,1686,1700,1701,1683,43,1655,1697,1709,1695,0,1535,1577,1589,1575,1649,1688,1700,1686,43,1707,1708,1710,1709,0,1587,1588,1590,1589,1698,1699,1701,1700,43,1707,1709,1697,1699,0,1587,1589,1577,1579,1698,1700,1688,1690,43,1680,1711,1706,1683,0,1560,1591,1586,1563,1673,1702,1697,1675,43,1667,1712,1711,1680,0,1547,1592,1591,1560,1661,1703,1702,1673,43,1713,1708,1706,1711,0,1593,1588,1586,1591,1704,1699,1697,1702,43,1714,1713,1711,1712,0,1594,1593,1591,1592,1705,1704,1702,1703,43,1715,1716,1669,1691,0,1595,1596,1549,1571,1706,1707,1663,1682,43,1710,1715,1691,1692,0,1590,1595,1571,1572,1701,1706,1682,1683,43,1716,1715,1713,1714,0,1596,1595,1593,1594,1707,1706,1704,1705,43,1715,1710,1708,1713,0,1595,1590,1588,1593,1706,1701,1699,1704,43,1717,1718,1673,1670,0,1597,1598,1553,1550,1708,1709,1667,1664,43,1716,1717,1670,1669,0,1596,1597,1550,1549,1707,1708,1664,1663,43,1718,1717,1719,1720,0,1598,1597,1599,1600,1709,1708,1710,1711,43,1717,1716,1714,1719,0,1597,1596,1594,1599,1708,1707,1705,1710,43,1721,1712,1667,1666,0,1601,1592,1547,1546,1712,1703,1661,1660,43,1722,1721,1666,1668,0,1602,1601,1546,1548,1713,1712,1660,1662,43,1719,1714,1712,1721,0,1599,1594,1592,1601,1710,1705,1703,1712,43,1720,1719,1721,1722,0,1600,1599,1601,1602,1711,1710,1712,1713,43,1723,1724,1725,1726,0,1522,1523,1524,1525,1636,1637,1638,1639,43,1726,1725,1727,1728,0,1525,1524,1526,1527,1639,1638,1640,1641,43,1729,1723,1726,1730,0,1528,1522,1525,1529,1642,1636,1639,1643,43,1730,1726,1728,1731,0,1529,1525,1527,1530,1643,1639,1641,1644,43,1732,1733,1734,1735,0,1531,1532,1533,1534,1645,1646,1647,1648,43,1735,1734,1736,1737,0,1534,1533,1535,1536,1648,1647,1649,1650,43,1738,1739,1732,1735,0,1537,1538,1531,1534,1651,1652,1645,1648,43,1740,1738,1735,1737,0,1539,1537,1534,1536,1653,1651,1648,1650,43,1741,1742,1743,1744,0,1540,1541,1542,1543,1654,1655,1656,1657,43,1742,1745,1746,1743,0,1541,1544,1545,1542,1655,1658,1659,1656,43,1744,1743,1747,1748,0,1543,1542,1546,1547,1657,1656,1660,1661,43,1743,1746,1749,1747,0,1542,1545,1548,1546,1656,1659,1662,1660,43,1750,1751,1752,1753,0,1549,1550,1551,1552,1663,1664,1665,1666,43,1751,1754,1755,1752,0,1550,1553,1554,1551,1664,1667,1668,1665,43,1752,1756,1757,1753,0,1551,1555,1556,1552,1665,1669,1670,1666,43,1755,1758,1756,1752,0,1554,1557,1555,1551,1668,1671,1669,1665,43,1741,1744,1759,1760,0,1540,1543,1558,1559,1654,1657,1672,1672,43,1744,1748,1761,1759,0,1543,1547,1560,1558,1657,1661,1673,1672,43,1760,1759,1762,1763,0,1559,1558,1561,1562,1672,1672,1674,1674,43,1759,1761,1764,1762,0,1558,1560,1563,1561,1672,1673,1675,1674,43,1728,1765,1766,1731,0,1527,1564,1565,1530,1641,1676,1677,1644,43,1727,1767,1765,1728,0,1526,1566,1564,1527,1640,1676,1676,1641,43,1765,1762,1764,1766,0,1564,1561,1563,1565,1676,1674,1675,1677,43,1767,1763,1762,1765,0,1566,1562,1561,1564,1676,1674,1674,1676,43,1768,1753,1757,1769,0,1567,1552,1556,1568,1678,1666,1670,1679,43,1770,1768,1769,1771,0,1569,1567,1568,1570,1680,1678,1679,1681,43,1772,1750,1753,1768,0,1571,1549,1552,1567,1682,1663,1666,1678,43,1773,1772,1768,1770,0,1572,1571,1567,1569,1683,1682,1678,1680,43,1740,1737,1774,1775,0,1539,1536,1573,1574,1653,1650,1684,1685,43,1737,1736,1776,1774,0,1536,1535,1575,1573,1650,1649,1686,1684,43,1775,1774,1770,1771,0,1574,1573,1569,1570,1685,1684,1680,1681,43,1774,1776,1773,1770,0,1573,1575,1572,1569,1684,1686,1683,1680,43,1734,1777,1778,1736,0,1533,1576,1577,1535,1647,1687,1688,1649,43,1733,1779,1777,1734,0,1532,1578,1576,1533,1646,1689,1687,1647,43,1780,1778,1777,1781,0,1579,1577,1576,1580,1690,1688,1687,1691,43,1781,1777,1779,1782,0,1580,1576,1578,1581,1691,1687,1689,1692,43,1730,1783,1784,1729,0,1529,1582,1583,1528,1643,1693,1694,1642,43,1731,1785,1783,1730,0,1530,1584,1582,1529,1644,1695,1693,1643,43,1783,1781,1782,1784,0,1582,1580,1581,1583,1693,1691,1692,1694,43,1785,1780,1781,1783,0,1584,1579,1580,1582,1695,1690,1691,1693,43,1766,1786,1785,1731,0,1565,1585,1584,1530,1677,1696,1695,1644,43,1764,1787,1786,1766,0,1563,1586,1585,1565,1675,1697,1696,1677,43,1786,1788,1780,1785,0,1585,1587,1579,1584,1696,1698,1690,1695,43,1787,1789,1788,1786,0,1586,1588,1587,1585,1697,1699,1698,1696,43,1776,1790,1791,1773,0,1575,1589,1590,1572,1686,1700,1701,1683,43,1736,1778,1790,1776,0,1535,1577,1589,1575,1649,1688,1700,1686,43,1788,1789,1791,1790,0,1587,1588,1590,1589,1698,1699,1701,1700,43,1788,1790,1778,1780,0,1587,1589,1577,1579,1698,1700,1688,1690,43,1761,1792,1787,1764,0,1560,1591,1586,1563,1673,1702,1697,1675,43,1748,1793,1792,1761,0,1547,1592,1591,1560,1661,1703,1702,1673,43,1794,1789,1787,1792,0,1593,1588,1586,1591,1704,1699,1697,1702,43,1795,1794,1792,1793,0,1594,1593,1591,1592,1705,1704,1702,1703,43,1796,1797,1750,1772,0,1595,1596,1549,1571,1706,1707,1663,1682,43,1791,1796,1772,1773,0,1590,1595,1571,1572,1701,1706,1682,1683,43,1797,1796,1794,1795,0,1596,1595,1593,1594,1707,1706,1704,1705,43,1796,1791,1789,1794,0,1595,1590,1588,1593,1706,1701,1699,1704,43,1798,1799,1754,1751,0,1597,1598,1553,1550,1708,1709,1667,1664,43,1797,1798,1751,1750,0,1596,1597,1550,1549,1707,1708,1664,1663,43,1799,1798,1800,1801,0,1598,1597,1599,1600,1709,1708,1710,1711,43,1798,1797,1795,1800,0,1597,1596,1594,1599,1708,1707,1705,1710,43,1802,1793,1748,1747,0,1601,1592,1547,1546,1712,1703,1661,1660,43,1803,1802,1747,1749,0,1602,1601,1546,1548,1713,1712,1660,1662,43,1800,1795,1793,1802,0,1599,1594,1592,1601,1710,1705,1703,1712,43,1801,1800,1802,1803,0,1600,1599,1601,1602,1711,1710,1712,1713,43,1804,1805,1806,1807,0,1603,1604,1605,1606,1714,1715,1716,1717,43,1807,1806,1808,1809,0,1606,1605,1607,1608,1717,1716,1718,1719,43,1810,1804,1807,1811,0,1609,1603,1606,1610,1720,1714,1717,1721,43,1811,1807,1809,1812,0,1610,1606,1608,1611,1721,1717,1719,1722,43,1813,1814,1815,1816,0,1612,1613,1614,1615,1723,1724,1725,1726,43,1816,1815,1817,1818,0,1615,1614,1616,1617,1726,1725,1727,1728,43,1819,1820,1813,1816,0,1618,1619,1612,1615,1729,1730,1723,1726,43,1821,1819,1816,1818,0,1620,1618,1615,1617,1731,1729,1726,1728,43,1822,1823,1824,1825,0,1621,1622,1623,1624,1732,1733,1734,1735,43,1823,1826,1827,1824,0,1622,1625,1626,1623,1733,1736,1737,1734,43,1825,1824,1828,1829,0,1624,1623,1627,1628,1735,1734,1738,1739,43,1824,1827,1830,1828,0,1623,1626,1629,1627,1734,1737,1740,1738,43,1831,1832,1833,1834,0,1630,1631,1632,1633,1741,1742,1743,1744,43,1832,1835,1836,1833,0,1631,1634,1635,1632,1742,1745,1746,1743,43,1833,1837,1838,1834,0,1632,1636,1637,1633,1743,1747,1748,1744,43,1836,1839,1837,1833,0,1635,1638,1636,1632,1746,1749,1747,1743,43,1822,1825,1840,1841,0,1621,1624,1639,1640,1732,1735,1750,1750,43,1825,1829,1842,1840,0,1624,1628,1641,1639,1735,1739,1751,1750,43,1841,1840,1843,1844,0,1640,1639,1642,1643,1750,1750,1752,1752,43,1840,1842,1845,1843,0,1639,1641,1644,1642,1750,1751,1753,1752,43,1809,1846,1847,1812,0,1608,1645,1646,1611,1719,1754,1755,1722,43,1808,1848,1846,1809,0,1607,1647,1645,1608,1718,1754,1754,1719,43,1846,1843,1845,1847,0,1645,1642,1644,1646,1754,1752,1753,1755,43,1848,1844,1843,1846,0,1647,1643,1642,1645,1754,1752,1752,1754,43,1849,1834,1838,1850,0,1648,1633,1637,1649,1756,1744,1748,1757,43,1851,1849,1850,1852,0,1650,1648,1649,1651,1758,1756,1757,1759,43,1853,1831,1834,1849,0,1652,1630,1633,1648,1760,1741,1744,1756,43,1854,1853,1849,1851,0,1653,1652,1648,1650,1761,1760,1756,1758,43,1821,1818,1855,1856,0,1620,1617,1654,1655,1731,1728,1762,1763,43,1818,1817,1857,1855,0,1617,1616,1656,1654,1728,1727,1764,1762,43,1856,1855,1851,1852,0,1655,1654,1650,1651,1763,1762,1758,1759,43,1855,1857,1854,1851,0,1654,1656,1653,1650,1762,1764,1761,1758,43,1815,1858,1859,1817,0,1614,1657,1658,1616,1725,1765,1766,1727,43,1814,1860,1858,1815,0,1613,1659,1657,1614,1724,1767,1765,1725,43,1861,1859,1858,1862,0,1660,1658,1657,1661,1768,1766,1765,1769,43,1862,1858,1860,1863,0,1661,1657,1659,1662,1769,1765,1767,1770,43,1811,1864,1865,1810,0,1610,1663,1664,1609,1721,1771,1772,1720,43,1812,1866,1864,1811,0,1611,1665,1663,1610,1722,1773,1771,1721,43,1864,1862,1863,1865,0,1663,1661,1662,1664,1771,1769,1770,1772,43,1866,1861,1862,1864,0,1665,1660,1661,1663,1773,1768,1769,1771,43,1847,1867,1866,1812,0,1646,1666,1665,1611,1755,1774,1773,1722,43,1845,1868,1867,1847,0,1644,1667,1666,1646,1753,1775,1774,1755,43,1867,1869,1861,1866,0,1666,1668,1660,1665,1774,1776,1768,1773,43,1868,1870,1869,1867,0,1667,1669,1668,1666,1775,1777,1776,1774,43,1857,1871,1872,1854,0,1656,1670,1671,1653,1764,1778,1779,1761,43,1817,1859,1871,1857,0,1616,1658,1670,1656,1727,1766,1778,1764,43,1869,1870,1872,1871,0,1668,1669,1671,1670,1776,1777,1779,1778,43,1869,1871,1859,1861,0,1668,1670,1658,1660,1776,1778,1766,1768,43,1842,1873,1868,1845,0,1641,1672,1667,1644,1751,1780,1775,1753,43,1829,1874,1873,1842,0,1628,1673,1672,1641,1739,1781,1780,1751,43,1875,1870,1868,1873,0,1674,1669,1667,1672,1782,1777,1775,1780,43,1876,1875,1873,1874,0,1675,1674,1672,1673,1783,1782,1780,1781,43,1877,1878,1831,1853,0,1676,1677,1630,1652,1784,1785,1741,1760,43,1872,1877,1853,1854,0,1671,1676,1652,1653,1779,1784,1760,1761,43,1878,1877,1875,1876,0,1677,1676,1674,1675,1785,1784,1782,1783,43,1877,1872,1870,1875,0,1676,1671,1669,1674,1784,1779,1777,1782,43,1879,1880,1835,1832,0,1678,1679,1634,1631,1786,1787,1745,1742,43,1878,1879,1832,1831,0,1677,1678,1631,1630,1785,1786,1742,1741,43,1880,1879,1881,1882,0,1679,1678,1680,1681,1787,1786,1788,1789,43,1879,1878,1876,1881,0,1678,1677,1675,1680,1786,1785,1783,1788,43,1883,1874,1829,1828,0,1682,1673,1628,1627,1790,1781,1739,1738,43,1884,1883,1828,1830,0,1683,1682,1627,1629,1791,1790,1738,1740,43,1881,1876,1874,1883,0,1680,1675,1673,1682,1788,1783,1781,1790,43,1882,1881,1883,1884,0,1681,1680,1682,1683,1789,1788,1790,1791,43,1885,1886,1887,1888,0,1684,1685,1686,1687,1792,1793,1794,1795,43,1886,1889,1890,1887,0,1685,1688,1689,1686,1793,1796,1797,1794,43,1888,1887,978,981,0,1687,1686,858,861,1795,1794,978,981,43,1887,1890,982,978,0,1686,1689,862,858,1794,1797,982,978,43,1891,1892,1893,1894,0,1690,1691,1692,1693,1798,1799,1800,1801,43,1e3,1891,1894,988,0,880,1690,1693,868,1e3,1798,1801,988,43,1895,1896,1892,1891,0,1694,1695,1691,1690,1802,1803,1799,1798,43,1001,1895,1891,1e3,0,881,1694,1690,880,1001,1802,1798,1e3,43,1890,1897,1004,982,0,1689,1696,884,862,1797,1804,1004,982,43,1889,1898,1897,1890,0,1688,1697,1696,1689,1796,1805,1804,1797,43,1897,1895,1001,1004,0,1696,1694,881,884,1804,1802,1001,1004,43,1898,1896,1895,1897,0,1697,1695,1694,1696,1805,1803,1802,1804,43,1899,1900,1411,1409,0,1698,1699,1291,1289,1806,1807,1408,1406,43,1901,1902,1900,1899,0,1700,1701,1699,1698,1808,1809,1807,1806,43,1900,1903,1413,1411,0,1699,1702,1293,1291,1807,1810,1410,1408,43,1902,1904,1903,1900,0,1701,1703,1702,1699,1809,1811,1810,1807,43,1905,1906,1907,1908,0,1704,1705,1706,1707,1812,1813,1814,1815,43,1908,1907,1421,1419,0,1707,1706,1301,1299,1815,1814,1418,1416,43,1904,1905,1908,1903,0,1703,1704,1707,1702,1811,1812,1815,1810,43,1903,1908,1419,1413,0,1702,1707,1299,1293,1810,1815,1416,1410,43,1909,1910,1911,1912,0,1708,1709,1710,1711,1816,1817,1818,1819,43,1910,1901,1899,1911,0,1709,1700,1698,1710,1817,1808,1806,1818,43,1912,1911,1405,1408,0,1711,1710,1285,1288,1819,1818,1402,1405,43,1911,1899,1409,1405,0,1710,1698,1289,1285,1818,1806,1406,1402,43,1906,1913,1914,1907,0,1705,1712,1713,1706,1813,1820,1821,1814,43,1913,1915,1916,1914,0,1712,1714,1715,1713,1820,1822,1823,1821,43,1907,1914,1432,1421,0,1706,1713,1312,1301,1814,1821,1429,1418,43,1914,1916,1434,1432,0,1713,1715,1314,1312,1821,1823,1431,1429,43,1917,1918,1919,1920,0,1716,1717,1718,1719,1824,1825,1826,1827,43,1918,1921,1922,1919,0,1717,1720,1721,1718,1825,1828,1829,1826,43,1920,1919,1495,1484,0,1719,1718,1375,1364,1827,1826,1492,1481,43,1919,1922,1497,1495,0,1718,1721,1377,1375,1826,1829,1494,1492,43,1923,1917,1920,1924,0,1722,1716,1719,1723,1830,1824,1827,1831,43,1924,1920,1484,1482,0,1723,1719,1364,1362,1831,1827,1481,1479,43,1925,1923,1924,1926,0,1724,1722,1723,1725,1832,1830,1831,1833,43,1926,1924,1482,1476,0,1725,1723,1362,1356,1833,1831,1479,1473,43,1927,1928,1929,1930,0,1726,1727,1728,1729,1834,1835,1836,1837,43,1928,1931,1932,1929,0,1727,1730,1731,1728,1835,1838,1839,1836,43,1930,1929,1558,1547,0,1729,1728,1438,1427,1837,1836,1555,1544,43,1929,1932,1560,1558,0,1728,1731,1440,1438,1836,1839,1557,1555,43,1933,1934,1474,1472,0,1732,1733,1354,1352,1840,1841,1471,1469,43,1935,1936,1934,1933,0,1734,1735,1733,1732,1842,1843,1841,1840,43,1934,1926,1476,1474,0,1733,1725,1356,1354,1841,1833,1473,1471,43,1936,1925,1926,1934,0,1735,1724,1725,1733,1843,1832,1833,1841,43,1937,1938,1939,1940,0,1736,1737,1738,1739,1844,1845,1846,1847,43,1938,1941,1942,1939,0,1737,1740,1741,1738,1845,1848,1849,1846,43,1940,1939,1088,1087,0,1739,1738,968,967,1847,1846,1088,1087,43,1939,1942,1090,1088,0,1738,1741,970,968,1846,1849,1090,1088,43,1942,1943,1124,1090,0,1741,1742,1004,970,1849,1850,1124,1090,43,1941,1944,1943,1942,0,1740,1743,1742,1741,1848,1851,1850,1849,43,1943,1945,1121,1124,0,1742,1744,1001,1004,1850,1852,1121,1124,43,1944,1946,1945,1943,0,1743,1745,1744,1742,1851,1853,1852,1850,43,1947,1948,1949,1950,0,1746,1747,1748,1749,1854,1855,1856,1857,43,1949,1948,1951,1952,0,1748,1747,1750,1751,1856,1855,1858,1859,43,1950,1949,1134,1133,0,1749,1748,1014,1013,1857,1856,1134,1133,43,1949,1952,1135,1134,0,1748,1751,1015,1014,1856,1859,1135,1134,43,1953,1954,1955,1956,0,1752,1753,1754,1755,1860,1861,1862,1863,43,1954,1957,1958,1955,0,1753,1756,1757,1754,1861,1864,1865,1862,43,1956,1955,1147,1146,0,1755,1754,1027,1026,1863,1862,1147,1146,43,1955,1958,1150,1147,0,1754,1757,1030,1027,1862,1865,1150,1147,43,1959,1953,1956,1960,0,1758,1752,1755,1759,1866,1860,1863,1867,43,1960,1956,1146,1165,0,1759,1755,1026,1045,1867,1863,1146,1165,43,1961,1959,1960,1962,0,1760,1758,1759,1761,1868,1866,1867,1869,43,1962,1960,1165,1166,0,1761,1759,1045,1046,1869,1867,1165,1166,43,1952,1963,1169,1135,0,1751,1762,1049,1015,1859,1870,1169,1135,43,1952,1951,1964,1963,0,1751,1750,1763,1762,1859,1858,1871,1870,43,1963,1962,1166,1169,0,1762,1761,1046,1049,1870,1869,1166,1169,43,1964,1961,1962,1963,0,1763,1760,1761,1762,1871,1868,1869,1870,43,1965,1966,1967,1968,0,1764,1765,1766,1767,1872,1873,1874,1875,43,1966,1969,1970,1967,0,1765,1768,1769,1766,1873,1876,1877,1874,43,1968,1967,1248,1247,0,1767,1766,1128,1127,1875,1874,1248,1247,43,1967,1970,1250,1248,0,1766,1769,1130,1128,1874,1877,1250,1248,43,1971,1972,1973,1974,0,1770,1771,1772,1773,1878,1879,1880,1881,43,1972,1975,1976,1973,0,1771,1774,1775,1772,1879,1882,1883,1880,43,1974,1973,1531,1534,0,1773,1772,1411,1414,1881,1880,1528,1531,43,1973,1976,1535,1531,0,1772,1775,1415,1411,1880,1883,1532,1528,43,1894,1893,1977,1978,0,1693,1692,1776,1777,1801,1800,1884,1885,43,1978,1977,1979,1980,0,1777,1776,1778,1779,1885,1884,1886,1887,43,988,1894,1978,989,0,868,1693,1777,869,988,1801,1885,989,43,989,1978,1980,991,0,869,1777,1779,871,989,1885,1887,991,43,1970,1981,1284,1250,0,1769,1780,1164,1130,1877,1888,1284,1250,43,1969,1982,1981,1970,0,1768,1781,1780,1769,1876,1889,1888,1877,43,1981,1983,1281,1284,0,1780,1782,1161,1164,1888,1890,1281,1284,43,1982,1984,1983,1981,0,1781,1783,1782,1780,1889,1891,1890,1888,43,1985,1986,1987,1988,0,1784,1785,1786,1787,1892,1893,1894,1895,43,1986,1935,1933,1987,0,1785,1734,1732,1786,1893,1842,1840,1894,43,1988,1987,1468,1471,0,1787,1786,1348,1351,1895,1894,1465,1468,43,1987,1933,1472,1468,0,1786,1732,1352,1348,1894,1840,1469,1465,43,1989,1927,1930,1990,0,1788,1726,1729,1789,1896,1834,1837,1897,43,1990,1930,1547,1545,0,1789,1729,1427,1425,1897,1837,1544,1542,43,1991,1989,1990,1992,0,1790,1788,1789,1791,1898,1896,1897,1899,43,1992,1990,1545,1539,0,1791,1789,1425,1419,1899,1897,1542,1536,43,1976,1993,1537,1535,0,1775,1792,1417,1415,1883,1900,1534,1532,43,1975,1994,1993,1976,0,1774,1793,1792,1775,1882,1901,1900,1883,43,1993,1992,1539,1537,0,1792,1791,1419,1417,1900,1899,1536,1534,43,1994,1991,1992,1993,0,1793,1790,1791,1792,1901,1898,1899,1900,43,1995,1996,1997,1998,0,1794,1795,1796,1797,1902,1903,1904,1905,43,1998,1997,1101,1120,0,1797,1796,981,1e3,1905,1904,1101,1120,43,1946,1995,1998,1945,0,1745,1794,1797,1744,1853,1902,1905,1852,43,1945,1998,1120,1121,0,1744,1797,1e3,1001,1852,1905,1120,1121,43,1999,2e3,2001,2002,0,1798,1799,1800,1801,1906,1907,1908,1909,43,2002,2001,1056,1075,0,1801,1800,936,955,1909,1908,1056,1075,43,2003,1999,2002,2004,0,1802,1798,1801,1803,1910,1906,1909,1911,43,2004,2002,1075,1076,0,1803,1801,955,956,1911,1909,1075,1076,43,2005,2006,1079,1045,0,1804,1805,959,925,1912,1913,1079,1045,43,2007,2008,2006,2005,0,1806,1807,1805,1804,1914,1915,1913,1912,43,2006,2004,1076,1079,0,1805,1803,956,959,1913,1911,1076,1079,43,2008,2003,2004,2006,0,1807,1802,1803,1805,1915,1910,1911,1913,43,2e3,2009,2010,2001,0,1799,1808,1809,1800,1907,1916,1917,1908,43,2009,2011,2012,2010,0,1808,1810,1811,1809,1916,1918,1919,1917,43,2001,2010,1057,1056,0,1800,1809,937,936,1908,1917,1057,1056,43,2010,2012,1060,1057,0,1809,1811,940,937,1917,1919,1060,1057,43,2013,2014,2015,2016,0,1812,1813,1814,1815,1920,1921,1922,1923,43,2014,2007,2005,2015,0,1813,1806,1804,1814,1921,1914,1912,1922,43,2016,2015,1043,1042,0,1815,1814,923,922,1923,1922,1043,1042,43,2015,2005,1045,1043,0,1814,1804,925,923,1922,1912,1045,1043,43,2017,2018,2019,2020,0,1816,1817,1818,1819,1924,1925,1926,1927,43,2018,2021,2022,2019,0,1817,1820,1821,1818,1925,1928,1929,1926,43,2020,2019,1262,1261,0,1819,1818,1142,1141,1927,1926,1262,1261,43,2019,2022,1265,1262,0,1818,1821,1145,1142,1926,1929,1265,1262,43,1996,2023,2024,1997,0,1795,1822,1823,1796,1903,1930,1931,1904,43,2023,2025,2026,2024,0,1822,1824,1825,1823,1930,1932,1933,1931,43,1997,2024,1102,1101,0,1796,1823,982,981,1904,1931,1102,1101,43,2024,2026,1105,1102,0,1823,1825,985,982,1931,1933,1105,1102,43,2027,2028,2029,2030,0,1826,1827,1828,1829,1934,1935,1936,1937,43,2028,2031,2032,2029,0,1827,1830,1831,1828,1935,1938,1939,1936,43,2030,2029,1179,1178,0,1829,1828,1059,1058,1937,1936,1179,1178,43,2029,2032,1181,1179,0,1828,1831,1061,1059,1936,1939,1181,1179,43,2032,2031,2033,2034,0,1831,1830,1832,1833,1939,1938,1940,1941,43,2033,2035,2036,2034,0,1832,1834,1835,1833,1940,1942,1943,1941,43,2032,2034,1192,1181,0,1831,1833,1072,1061,1939,1941,1192,1181,43,2034,2036,1193,1192,0,1833,1835,1073,1072,1941,1943,1193,1192,43,2037,2038,2039,2040,0,1836,1837,1838,1839,1944,1945,1946,1947,43,2038,2041,2042,2039,0,1837,1840,1841,1838,1945,1948,1949,1946,43,2040,2039,1214,1213,0,1839,1838,1094,1093,1947,1946,1214,1213,43,2039,2042,1216,1214,0,1838,1841,1096,1094,1946,1949,1216,1214,43,2043,2017,2020,2044,0,1842,1816,1819,1843,1950,1924,1927,1951,43,2044,2020,1261,1280,0,1843,1819,1141,1160,1951,1927,1261,1280,43,1984,2043,2044,1983,0,1783,1842,1843,1782,1891,1950,1951,1890,43,1983,2044,1280,1281,0,1782,1843,1160,1161,1890,1951,1280,1281,43,2045,2046,2047,2048,0,1844,1845,1846,1847,1952,1953,1954,1955,43,2046,2049,2050,2047,0,1845,1848,1849,1846,1953,1956,1957,1954,43,1228,2048,2047,1236,0,1108,1847,1846,1116,1228,1955,1954,1236,43,2047,2050,1238,1236,0,1846,1849,1118,1116,1954,1957,1238,1236,43,2035,2051,2052,2036,0,1834,1850,1851,1835,1942,1958,1959,1943,43,2052,2051,2053,2054,0,1851,1850,1852,1853,1959,1958,1960,1961,43,2036,2052,1201,1193,0,1835,1851,1081,1073,1943,1959,1201,1193,43,2052,2054,1203,1201,0,1851,1853,1083,1081,1959,1961,1203,1201,43,2041,2055,2056,2042,0,1840,1854,1855,1841,1948,1962,1963,1949,43,2055,2045,2048,2056,0,1854,1844,1847,1855,1962,1952,1955,1963,43,2042,2056,1227,1216,0,1841,1855,1107,1096,1949,1963,1227,1216,43,2056,2048,1228,1227,0,1855,1847,1108,1107,1963,1955,1228,1227,43,1885,2057,2058,1886,0,1684,1856,1857,1685,1792,1964,1965,1793,43,2057,2059,2060,2058,0,1856,1858,1859,1857,1964,1966,1967,1965,43,1886,2058,2061,1889,0,1685,1857,1860,1688,1793,1965,1968,1796,43,2058,2060,2062,2061,0,1857,1859,1861,1860,1965,1967,1969,1968,43,1896,2063,2064,1892,0,1695,1862,1863,1691,1803,1970,1971,1799,43,2065,2066,2064,2063,0,1864,1865,1863,1862,1972,1973,1971,1970,43,1892,2064,2067,1893,0,1691,1863,1866,1692,1799,1971,1974,1800,43,2064,2066,2068,2067,0,1863,1865,1867,1866,1971,1973,1975,1974,43,2061,2069,1898,1889,0,1860,1868,1697,1688,1968,1976,1805,1796,43,2062,2070,2069,2061,0,1861,1869,1868,1860,1969,1977,1976,1968,43,1898,2069,2063,1896,0,1697,1868,1862,1695,1805,1976,1970,1803,43,2069,2070,2065,2063,0,1868,1869,1864,1862,1976,1977,1972,1970,43,2071,2072,1902,1901,0,1870,1871,1701,1700,1978,1979,1809,1808,43,2071,2073,2074,2072,0,1870,1872,1873,1871,1978,1980,1981,1979,43,1902,2072,2075,1904,0,1701,1871,1874,1703,1809,1979,1982,1811,43,2072,2074,2076,2075,0,1871,1873,1875,1874,1979,1981,1983,1982,43,2075,2077,1905,1904,0,1874,1876,1704,1703,1982,1984,1812,1811,43,2076,2078,2077,2075,0,1875,1877,1876,1874,1983,1985,1984,1982,43,2077,2079,1906,1905,0,1876,1878,1705,1704,1984,1986,1813,1812,43,2078,2080,2079,2077,0,1877,1879,1878,1876,1985,1987,1986,1984,43,1909,2081,2082,1910,0,1708,1880,1881,1709,1816,1988,1989,1817,43,2081,2083,2084,2082,0,1880,1882,1883,1881,1988,1990,1991,1989,43,1910,2082,2071,1901,0,1709,1881,1870,1700,1817,1989,1978,1808,43,2082,2084,2073,2071,0,1881,1883,1872,1870,1989,1991,1980,1978,43,2079,2085,1913,1906,0,1878,1884,1712,1705,1986,1992,1820,1813,43,2080,2086,2085,2079,0,1879,1885,1884,1878,1987,1993,1992,1986,43,2085,2087,1915,1913,0,1884,1886,1714,1712,1992,1994,1822,1820,43,2086,2088,2087,2085,0,1885,1887,1886,1884,1993,1995,1994,1992,43,2089,2090,1918,1917,0,1888,1889,1717,1716,1996,1997,1825,1824,43,2091,2092,2090,2089,0,1890,1891,1889,1888,1998,1999,1997,1996,43,2090,2093,1921,1918,0,1889,1892,1720,1717,1997,2e3,1828,1825,43,2092,2094,2093,2090,0,1891,1893,1892,1889,1999,2001,2e3,1997,43,2095,2096,1923,1925,0,1894,1895,1722,1724,2002,2003,1830,1832,43,2095,2097,2098,2096,0,1894,1896,1897,1895,2002,2004,2005,2003,43,2096,2089,1917,1923,0,1895,1888,1716,1722,2003,1996,1824,1830,43,2098,2091,2089,2096,0,1897,1890,1888,1895,2005,1998,1996,2003,43,2099,2100,1928,1927,0,1898,1899,1727,1726,2006,2007,1835,1834,43,2101,2102,2100,2099,0,1900,1901,1899,1898,2008,2009,2007,2006,43,2100,2103,1931,1928,0,1899,1902,1730,1727,2007,2010,1838,1835,43,2102,2104,2103,2100,0,1901,1903,1902,1899,2009,2011,2010,2007,43,2105,2106,1936,1935,0,1904,1905,1735,1734,2012,2013,1843,1842,43,2107,2108,2106,2105,0,1906,1907,1905,1904,2014,2015,2013,2012,43,2106,2095,1925,1936,0,1905,1894,1724,1735,2013,2002,1832,1843,43,2108,2097,2095,2106,0,1907,1896,1894,1905,2015,2004,2002,2013,43,1937,2109,2110,1938,0,1736,1908,1909,1737,1844,2016,2017,1845,43,2109,2111,2112,2110,0,1908,1910,1911,1909,2016,2018,2019,2017,43,1938,2110,2113,1941,0,1737,1909,1912,1740,1845,2017,2020,1848,43,2110,2112,2114,2113,0,1909,1911,1913,1912,2017,2019,2021,2020,43,2113,2115,1944,1941,0,1912,1914,1743,1740,2020,2022,1851,1848,43,2114,2116,2115,2113,0,1913,1915,1914,1912,2021,2023,2022,2020,43,2115,2117,1946,1944,0,1914,1916,1745,1743,2022,2024,1853,1851,43,2116,2118,2117,2115,0,1915,1917,1916,1914,2023,2025,2024,2022,43,1947,2119,2120,1948,0,1746,1918,1919,1747,1854,2026,2027,1855,43,2119,2121,2122,2120,0,1918,1920,1921,1919,2026,2028,2029,2027,43,1948,2120,2123,1951,0,1747,1919,1922,1750,1855,2027,2030,1858,43,2120,2122,2124,2123,0,1919,1921,1923,1922,2027,2029,2031,2030,43,2125,2126,1954,1953,0,1924,1925,1753,1752,2032,2033,1861,1860,43,2127,2128,2126,2125,0,1926,1927,1925,1924,2034,2035,2033,2032,43,2126,2129,1957,1954,0,1925,1928,1756,1753,2033,2036,1864,1861,43,2128,2130,2129,2126,0,1927,1929,1928,1925,2035,2037,2036,2033,43,1961,2131,2132,1959,0,1760,1930,1931,1758,1868,2038,2039,1866,43,2133,2134,2132,2131,0,1932,1933,1931,1930,2040,2041,2039,2038,43,2132,2125,1953,1959,0,1931,1924,1752,1758,2039,2032,1860,1866,43,2132,2134,2127,2125,0,1931,1933,1926,1924,2039,2041,2034,2032,43,2123,2135,1964,1951,0,1922,1934,1763,1750,2030,2042,1871,1858,43,2124,2136,2135,2123,0,1923,1935,1934,1922,2031,2043,2042,2030,43,1964,2135,2131,1961,0,1763,1934,1930,1760,1871,2042,2038,1868,43,2135,2136,2133,2131,0,1934,1935,1932,1930,2042,2043,2040,2038,43,1965,2137,2138,1966,0,1764,1936,1937,1765,1872,2044,2045,1873,43,2137,2139,2140,2138,0,1936,1938,1939,1937,2044,2046,2047,2045,43,1966,2138,2141,1969,0,1765,1937,1940,1768,1873,2045,2048,1876,43,2138,2140,2142,2141,0,1937,1939,1941,1940,2045,2047,2049,2048,43,1971,2143,2144,1972,0,1770,1942,1943,1771,1878,2050,2051,1879,43,2143,2145,2146,2144,0,1942,1944,1945,1943,2050,2052,2053,2051,43,1972,2144,2147,1975,0,1771,1943,1946,1774,1879,2051,2054,1882,43,2144,2146,2148,2147,0,1943,1945,1947,1946,2051,2053,2055,2054,43,1893,2067,2149,1977,0,1692,1866,1948,1776,1800,1974,2056,1884,43,2068,2150,2149,2067,0,1867,1949,1948,1866,1975,2057,2056,1974,43,2149,2151,1979,1977,0,1948,1950,1778,1776,2056,2058,1886,1884,43,2150,2152,2151,2149,0,1949,1951,1950,1948,2057,2059,2058,2056,43,1969,2141,2153,1982,0,1768,1940,1952,1781,1876,2048,2060,1889,43,2142,2154,2153,2141,0,1941,1953,1952,1940,2049,2061,2060,2048,43,2153,2155,1984,1982,0,1952,1954,1783,1781,2060,2062,1891,1889,43,2154,2156,2155,2153,0,1953,1955,1954,1952,2061,2063,2062,2060,43,1985,2157,2158,1986,0,1784,1956,1957,1785,1892,2064,2065,1893,43,2157,2159,2160,2158,0,1956,1958,1959,1957,2064,2066,2067,2065,43,1986,2158,2105,1935,0,1785,1957,1904,1734,1893,2065,2012,1842,43,2158,2160,2107,2105,0,1957,1959,1906,1904,2065,2067,2014,2012,43,1991,2161,2162,1989,0,1790,1960,1961,1788,1898,2068,2069,1896,43,2163,2164,2162,2161,0,1962,1963,1961,1960,2070,2071,2069,2068,43,2162,2099,1927,1989,0,1961,1898,1726,1788,2069,2006,1834,1896,43,2162,2164,2101,2099,0,1961,1963,1900,1898,2069,2071,2008,2006,43,2147,2165,1994,1975,0,1946,1964,1793,1774,2054,2072,1901,1882,43,2148,2166,2165,2147,0,1947,1965,1964,1946,2055,2073,2072,2054,43,2165,2161,1991,1994,0,1964,1960,1790,1793,2072,2068,1898,1901,43,2165,2166,2163,2161,0,1964,1965,1962,1960,2072,2073,2070,2068,43,1946,2117,2167,1995,0,1745,1916,1966,1794,1853,2024,2074,1902,43,2118,2168,2167,2117,0,1917,1967,1966,1916,2025,2075,2074,2024,43,1995,2167,2169,1996,0,1794,1966,1968,1795,1902,2074,2076,1903,43,2168,2170,2169,2167,0,1967,1969,1968,1966,2075,2077,2076,2074,43,2171,2172,1999,2003,0,1970,1971,1798,1802,2078,2079,1906,1910,43,2173,2174,2172,2171,0,1972,1973,1971,1970,2080,2081,2079,2078,43,2172,2175,2e3,1999,0,1971,1974,1799,1798,2079,2082,1907,1906,43,2172,2174,2176,2175,0,1971,1973,1975,1974,2079,2081,2083,2082,43,2007,2177,2178,2008,0,1806,1976,1977,1807,1914,2084,2085,1915,43,2179,2180,2178,2177,0,1978,1979,1977,1976,2086,2087,2085,2084,43,2178,2171,2003,2008,0,1977,1970,1802,1807,2085,2078,1910,1915,43,2178,2180,2173,2171,0,1977,1979,1972,1970,2085,2087,2080,2078,43,2175,2181,2009,2e3,0,1974,1980,1808,1799,2082,2088,1916,1907,43,2176,2182,2181,2175,0,1975,1981,1980,1974,2083,2089,2088,2082,43,2181,2183,2011,2009,0,1980,1982,1810,1808,2088,2090,1918,1916,43,2182,2184,2183,2181,0,1981,1983,1982,1980,2089,2091,2090,2088,43,2013,2185,2186,2014,0,1812,1984,1985,1813,1920,2092,2093,1921,43,2185,2187,2188,2186,0,1984,1986,1987,1985,2092,2094,2095,2093,43,2014,2186,2177,2007,0,1813,1985,1976,1806,1921,2093,2084,1914,43,2186,2188,2179,2177,0,1985,1987,1978,1976,2093,2095,2086,2084,43,2189,2190,2018,2017,0,1988,1989,1817,1816,2096,2097,1925,1924,43,2191,2192,2190,2189,0,1990,1991,1989,1988,2098,2099,2097,2096,43,2190,2193,2021,2018,0,1989,1992,1820,1817,2097,2100,1928,1925,43,2192,2194,2193,2190,0,1991,1993,1992,1989,2099,2101,2100,2097,43,2169,2195,2023,1996,0,1968,1994,1822,1795,2076,2102,1930,1903,43,2170,2196,2195,2169,0,1969,1995,1994,1968,2077,2103,2102,2076,43,2195,2197,2025,2023,0,1994,1996,1824,1822,2102,2104,1932,1930,43,2196,2198,2197,2195,0,1995,1997,1996,1994,2103,2105,2104,2102,43,2027,2199,2200,2028,0,1826,1998,1999,1827,1934,2106,2107,1935,43,2199,2201,2202,2200,0,1998,2ee3,2988,2987,0,2796,2799,2787,2786,2904,2907,2895,2894,43,2999,3001,3e3,2997,0,2798,2800,2799,2796,2906,2908,2907,2904,43,2983,3002,3003,2986,0,2782,2801,2802,2785,2890,2909,2910,2893,43,2982,3004,3002,2983,0,2781,2803,2801,2782,2889,2911,2909,2890,43,3002,2999,2998,3003,0,2801,2798,2797,2802,2909,2906,2905,2910,43,3004,3001,2999,3002,0,2803,2800,2798,2801,2911,2908,2906,2909,43,3005,3006,3007,3008,0,2804,2805,2806,2807,2912,2913,2914,2915,43,3006,3009,3010,3007,0,2805,2808,2809,2806,2913,2916,2917,2914,43,3007,3011,3012,3008,0,2806,2810,2811,2807,2914,2918,2919,2915,43,3007,3010,3013,3011,0,2806,2809,2812,2810,2914,2917,2920,2918,43,3011,3014,3015,3012,0,2810,2813,2814,2811,2918,2921,2922,2919,43,3016,3014,3011,3013,0,2815,2813,2810,2812,2923,2921,2918,2920,43,2984,2986,3015,3014,0,2783,2785,2814,2813,2891,2893,2922,2921,43,2985,2984,3014,3016,0,2784,2783,2813,2815,2892,2891,2921,2923,43,3017,2998,2996,3018,0,2816,2797,2795,2817,2924,2905,2903,2925,43,3018,2996,2993,3019,0,2817,2795,2792,2818,2925,2903,2900,2926,43,3018,3020,3021,3017,0,2817,2819,2820,2816,2925,2927,2928,2924,43,3018,3019,3022,3020,0,2817,2818,2821,2819,2925,2926,2929,2927,43,3020,3023,3024,3021,0,2819,2822,2823,2820,2927,2930,2931,2928,43,3020,3022,3025,3023,0,2819,2821,2824,2822,2927,2929,2932,2930,43,3024,3023,3026,3027,0,2823,2822,2825,2826,2931,2930,2933,2934,43,3023,3025,3028,3026,0,2822,2824,2827,2825,2930,2932,2935,2933,43,3003,3029,3015,2986,0,2802,2828,2814,2785,2910,2936,2922,2893,43,3017,3029,3003,2998,0,2816,2828,2802,2797,2924,2936,2910,2905,43,3012,3015,3029,3030,0,2811,2814,2828,2829,2919,2922,2936,2937,43,3021,3030,3029,3017,0,2820,2829,2828,2816,2928,2937,2936,2924,43,3031,3032,3024,3027,0,2830,2831,2823,2826,2938,2939,2931,2934,43,3005,3008,3032,3031,0,2804,2807,2831,2830,2912,2915,2939,2938,43,3032,3030,3021,3024,0,2831,2829,2820,2823,2939,2937,2928,2931,43,3008,3012,3030,3032,0,2807,2811,2829,2831,2915,2919,2937,2939,43,3022,3033,3034,3025,0,2821,2832,2833,2824,2929,2940,2941,2932,43,3035,3036,3034,3033,0,2834,2835,2833,2832,2942,2943,2941,2940,43,3034,3037,3028,3025,0,2833,2836,2827,2824,2941,2944,2935,2932,43,3036,3038,3037,3034,0,2835,2837,2836,2833,2943,2945,2944,2941,43,3019,2993,2994,3039,0,2818,2792,2793,2838,2926,2900,2901,2946,43,3039,2994,2995,3040,0,2838,2793,2794,2839,2946,2901,2902,2947,43,3019,3039,3033,3022,0,2818,2838,2832,2821,2926,2946,2940,2929,43,3039,3040,3035,3033,0,2838,2839,2834,2832,2946,2947,2942,2940,43,3041,3042,3043,3044,0,2840,2841,2842,2843,2948,2949,2950,2951,43,3044,3043,3045,3046,0,2843,2842,2844,2845,2951,2950,2952,2953,43,2925,3041,3044,2926,0,2724,2840,2843,2725,2832,2948,2951,2833,43,2926,3044,3046,2929,0,2725,2843,2845,2728,2833,2951,2953,2836,43,3047,3048,3049,3050,0,2846,2847,2848,2849,2954,2955,2956,2957,43,2874,3047,3050,2863,0,2673,2846,2849,2662,2781,2954,2957,2770,43,3051,3052,3048,3047,0,2850,2851,2847,2846,2958,2959,2955,2954,43,2875,3051,3047,2874,0,2674,2850,2846,2673,2782,2958,2954,2781,43,2878,2856,3053,3054,0,2677,2655,2852,2853,2785,2763,2960,2961,43,3053,3055,3056,3054,0,2852,2854,2855,2853,2960,2962,2963,2961,43,2875,2878,3054,3051,0,2674,2677,2853,2850,2782,2785,2961,2958,43,3054,3056,3052,3051,0,2853,2855,2851,2850,2961,2963,2959,2958,43,3057,3058,3042,3041,0,2856,2857,2841,2840,2964,2965,2949,2948,43,2937,3057,3041,2925,0,2736,2856,2840,2724,2844,2964,2948,2832,43,3059,3060,3058,3057,0,2858,2859,2857,2856,2966,2967,2965,2964,43,2938,3059,3057,2937,0,2737,2858,2856,2736,2845,2966,2964,2844,43,3061,3062,2941,2919,0,2860,2861,2740,2718,2968,2969,2848,2826,43,3063,3064,3062,3061,0,2862,2863,2861,2860,2970,2971,2969,2968,43,3062,3059,2938,2941,0,2861,2858,2737,2740,2969,2966,2845,2848,43,3064,3060,3059,3062,0,2863,2859,2858,2861,2971,2967,2966,2969,43,3065,3066,3067,3068,0,2864,2865,2866,2867,2972,2973,2974,2975,43,3066,3069,3070,3067,0,2865,2868,2869,2866,2973,2976,2977,2974,43,3067,2791,2790,3068,0,2866,2590,2589,2867,2974,2698,2697,2975,43,3070,2793,2791,3067,0,2869,2592,2590,2866,2977,2700,2698,2974,43,3050,3049,3071,3072,0,2849,2848,2870,2871,2957,2956,2978,2979,43,3072,3071,3073,3074,0,2871,2870,2872,2873,2979,2978,2980,2981,43,2863,3050,3072,2864,0,2662,2849,2871,2663,2770,2957,2979,2771,43,2864,3072,3074,2866,0,2663,2871,2873,2665,2771,2979,2981,2773,43,3075,3076,3077,3078,0,2874,2875,2876,2877,2982,2983,2984,2985,43,3076,3063,3061,3077,0,2875,2862,2860,2876,2983,2970,2968,2984,43,3078,3077,2915,2918,0,2877,2876,2714,2717,2985,2984,2822,2825,43,3077,3061,2919,2915,0,2876,2860,2718,2714,2984,2968,2826,2822,43,3079,3080,3081,3082,0,2878,2879,2880,2881,2986,2987,2988,2989,43,3082,3081,3083,3084,0,2881,2880,2882,2883,2989,2988,2990,2991,43,2988,3079,3082,2989,0,2787,2878,2881,2788,2895,2986,2989,2896,43,2989,3082,3084,2991,0,2788,2881,2883,2790,2896,2989,2991,2898,43,3085,3086,3080,3079,0,2884,2885,2879,2878,2992,2993,2987,2986,43,3e3,3085,3079,2988,0,2799,2884,2878,2787,2907,2992,2986,2895,43,3087,3088,3086,3085,0,2886,2887,2885,2884,2994,2995,2993,2992,43,3001,3087,3085,3e3,0,2800,2886,2884,2799,2908,2994,2992,2907,43,2815,2793,3070,3089,0,2614,2592,2869,2888,2722,2700,2977,2996,43,3070,3069,3090,3089,0,2869,2868,2889,2888,2977,2976,2997,2996,43,2812,2815,3089,3091,0,2611,2614,2888,2890,2719,2722,2996,2998,43,3089,3090,3092,3091,0,2888,2889,2891,2890,2996,2997,2999,2998,43,3093,3094,3095,3096,0,2892,2893,2894,2895,3e3,3001,3002,3003,43,2748,3093,3096,2736,0,2547,2892,2895,2535,2655,3e3,3003,2643,43,3097,3098,3094,3093,0,2896,2897,2893,2892,3004,3005,3001,3e3,43,2749,3097,3093,2748,0,2548,2896,2892,2547,2656,3004,3e3,2655,43,3099,3100,2752,2730,0,2898,2899,2551,2529,3006,3007,2659,2637,43,3101,3102,3100,3099,0,2900,2901,2899,2898,3008,3009,3007,3006,43,3100,3097,2749,2752,0,2899,2896,2548,2551,3007,3004,2656,2659,43,3102,3098,3097,3100,0,2901,2897,2896,2899,3009,3005,3004,3007,43,3103,3104,3105,3106,0,2902,2903,2904,2905,3010,3011,3012,3013,43,3104,3101,3099,3105,0,2903,2900,2898,2904,3011,3008,3006,3012,43,3106,3105,2727,2726,0,2905,2904,2526,2525,3013,3012,2634,2633,43,3105,3099,2730,2727,0,2904,2898,2529,2526,3012,3006,2637,2634,43,3096,3095,3107,3108,0,2895,2894,2906,2907,3003,3002,3014,3015,43,3108,3107,3109,3110,0,2907,2906,2908,2909,3015,3014,3016,3017,43,2736,3096,3108,2737,0,2535,2895,2907,2536,2643,3003,3015,2644,43,2737,3108,3110,2739,0,2536,2907,2909,2538,2644,3015,3017,2646,43,3111,3112,3113,3114,0,2910,2911,2912,2913,3018,3019,3020,3021,43,3112,3115,3116,3113,0,2911,2914,2915,2912,3019,3022,3023,3020,43,3114,3113,2978,2981,0,2913,2912,2777,2780,3021,3020,2885,2888,43,3113,3116,2982,2978,0,2912,2915,2781,2777,3020,3023,2889,2885,43,3117,3118,3119,3120,0,2916,2917,2918,2919,3024,3025,3026,3027,43,3120,3119,3121,3122,0,2919,2918,2920,2921,3027,3026,3028,3029,43,2800,3117,3120,2801,0,2599,2916,2919,2600,2707,3024,3027,2708,43,2801,3120,3122,2803,0,2600,2919,2921,2602,2708,3027,3029,2710,43,3123,3124,3118,3117,0,2922,2923,2917,2916,3030,3031,3025,3024,43,2811,3123,3117,2800,0,2610,2922,2916,2599,2718,3030,3024,2707,43,3091,3092,3124,3123,0,2890,2891,2923,2922,2998,2999,3031,3030,43,2812,3091,3123,2811,0,2611,2890,2922,2610,2719,2998,3030,2718,43,3116,3125,3004,2982,0,2915,2924,2803,2781,3023,3032,2911,2889,43,3115,3126,3125,3116,0,2914,2925,2924,2915,3022,3033,3032,3023,43,3125,3087,3001,3004,0,2924,2886,2800,2803,3032,2994,2908,2911,43,3126,3088,3087,3125,0,2925,2887,2886,2924,3033,2995,2994,3032,43,3127,3128,3129,3130,0,2926,2927,2928,2929,3034,3035,3036,3037,43,3128,3055,3053,3129,0,2927,2854,2852,2928,3035,2962,2960,3036,43,3130,3129,2854,2853,0,2929,2928,2653,2652,3037,3036,2761,2760,43,3129,3053,2856,2854,0,2928,2852,2655,2653,3036,2960,2763,2761,43,3131,3132,3043,3042,0,2930,2931,2842,2841,3038,3039,2950,2949,43,3133,3134,3132,3131,0,2932,2933,2931,2930,3040,3041,3039,3038,43,3132,3135,3045,3043,0,2931,2934,2844,2842,3039,3042,2952,2950,43,3134,3136,3135,3132,0,2933,2935,2934,2931,3041,3043,3042,3039,43,3052,3137,3138,3048,0,2851,2936,2937,2847,2959,3044,3045,2955,43,3137,3139,3140,3138,0,2936,2938,2939,2937,3044,3046,3047,3045,43,3048,3138,3141,3049,0,2847,2937,2940,2848,2955,3045,3048,2956,43,3138,3140,3142,3141,0,2937,2939,2941,2940,3045,3047,3049,3048,43,3055,3143,3144,3056,0,2854,2942,2943,2855,2962,3050,3051,2963,43,3143,3145,3146,3144,0,2942,2944,2945,2943,3050,3052,3053,3051,43,3056,3144,3137,3052,0,2855,2943,2936,2851,2963,3051,3044,2959,43,3144,3146,3139,3137,0,2943,2945,2938,2936,3051,3053,3046,3044,43,3060,3147,3148,3058,0,2859,2946,2947,2857,2967,3054,3055,2965,43,3149,3150,3148,3147,0,2948,2949,2947,2946,3056,3057,3055,3054,43,3058,3148,3131,3042,0,2857,2947,2930,2841,2965,3055,3038,2949,43,3148,3150,3133,3131,0,2947,2949,2932,2930,3055,3057,3040,3038,43,3151,3152,3064,3063,0,2950,2951,2863,2862,3058,3059,2971,2970,43,3153,3154,3152,3151,0,2952,2953,2951,2950,3060,3061,3059,3058,43,3152,3147,3060,3064,0,2951,2946,2859,2863,3059,3054,2967,2971,43,3154,3149,3147,3152,0,2953,2948,2946,2951,3061,3056,3054,3059,43,3065,3155,3156,3066,0,2864,2954,2955,2865,2972,3062,3063,2973,43,3155,3157,3158,3156,0,2954,2956,2957,2955,3062,3064,3065,3063,43,3066,3156,3159,3069,0,2865,2955,2958,2868,2973,3063,3066,2976,43,3156,3158,3160,3159,0,2955,2957,2959,2958,3063,3065,3067,3066,43,3141,3161,3071,3049,0,2940,2960,2870,2848,3048,3068,2978,2956,43,3142,3162,3161,3141,0,2941,2961,2960,2940,3049,3069,3068,3048,43,3161,3163,3073,3071,0,2960,2962,2872,2870,3068,3070,2980,2978,43,3162,3164,3163,3161,0,2961,2963,2962,2960,3069,3071,3070,3068,43,3075,3165,3166,3076,0,2874,2964,2965,2875,2982,3072,3073,2983,43,3165,3167,3168,3166,0,2964,2966,2967,2965,3072,3074,3075,3073,43,3076,3166,3151,3063,0,2875,2965,2950,2862,2983,3073,3058,2970,43,3166,3168,3153,3151,0,2965,2967,2952,2950,3073,3075,3060,3058,43,3169,3170,3081,3080,0,2968,2969,2880,2879,3076,3077,2988,2987,43,3171,3172,3170,3169,0,2970,2971,2969,2968,3078,3079,3077,3076,43,3170,3173,3083,3081,0,2969,2972,2882,2880,3077,3080,2990,2988,43,3172,3174,3173,3170,0,2971,2973,2972,2969,3079,3081,3080,3077,43,3088,3175,3176,3086,0,2887,2974,2975,2885,2995,3082,3083,2993,43,3177,3178,3176,3175,0,2976,2977,2975,2974,3084,3085,3083,3082,43,3086,3176,3169,3080,0,2885,2975,2968,2879,2993,3083,3076,2987,43,3176,3178,3171,3169,0,2975,2977,2970,2968,3083,3085,3078,3076,43,3159,3179,3090,3069,0,2958,2978,2889,2868,3066,3086,2997,2976,43,3160,3180,3179,3159,0,2959,2979,2978,2958,3067,3087,3086,3066,43,3179,3181,3092,3090,0,2978,2980,2891,2889,3086,3088,2999,2997,43,3180,3182,3181,3179,0,2979,2981,2980,2978,3087,3089,3088,3086,43,3098,3183,3184,3094,0,2897,2982,2983,2893,3005,3090,3091,3001,43,3183,3185,3186,3184,0,2982,2984,2985,2983,3090,3092,3093,3091,43,3094,3184,3187,3095,0,2893,2983,2986,2894,3001,3091,3094,3002,43,3184,3186,3188,3187,0,2983,2985,2987,2986,3091,3093,3095,3094,43,3189,3190,3102,3101,0,2988,2989,2901,2900,3096,3097,3009,3008,43,3191,3192,3190,3189,0,2990,2991,2989,2988,3098,3099,3097,3096,43,3102,3190,3183,3098,0,2901,2989,2982,2897,3009,3097,3090,3005,43,3190,3192,3185,3183,0,2989,2991,2984,2982,3097,3099,3092,3090,43,3103,3193,3194,3104,0,2902,2992,2993,2903,3010,3100,3101,3011,43,3193,3195,3196,3194,0,2992,2994,2995,2993,3100,3102,3103,3101,43,3104,3194,3189,3101,0,2903,2993,2988,2900,3011,3101,3096,3008,43,3194,3196,3191,3189,0,2993,2995,2990,2988,3101,3103,3098,3096,43,3187,3197,3107,3095,0,2986,2996,2906,2894,3094,3104,3014,3002,43,3188,3198,3197,3187,0,2987,2997,2996,2986,3095,3105,3104,3094,43,3197,3199,3109,3107,0,2996,2998,2908,2906,3104,3106,3016,3014,43,3198,3200,3199,3197,0,2997,2999,2998,2996,3105,3107,3106,3104,43,3111,3201,3202,3112,0,2910,3e3,3001,2911,3018,3108,3109,3019,43,3201,3203,3204,3202,0,3ee3,0,3796,3797,3798,3799,3904,3905,3906,3907,43,3998,4001,4002,3999,0,3797,3800,3801,3798,3905,3908,3909,3906,43,4e3,3999,3992,3991,0,3799,3798,3791,3790,3907,3906,3899,3898,43,3999,4002,3995,3992,0,3798,3801,3794,3791,3906,3909,3902,3899,43,4003,4004,4005,4006,0,3802,3803,3804,3805,3910,3911,3912,3913,43,4004,4007,4008,4005,0,3803,3806,3807,3804,3911,3914,3915,3912,43,4006,4005,3998,3997,0,3805,3804,3797,3796,3913,3912,3905,3904,43,4005,4008,4001,3998,0,3804,3807,3800,3797,3912,3915,3908,3905,43,4009,4010,4011,4012,0,3808,3809,3810,3811,3916,3917,3918,3919,43,4013,4014,4010,4009,0,3812,3813,3809,3808,3920,3921,3917,3916,43,4011,4010,4004,4003,0,3810,3809,3803,3802,3918,3917,3911,3910,43,4010,4014,4007,4004,0,3809,3813,3806,3803,3917,3921,3914,3911,43,3934,4015,4016,3935,0,3733,3814,3815,3734,3841,3922,3923,3842,43,3936,4017,4015,3934,0,3735,3816,3814,3733,3843,3924,3922,3841,43,4015,4009,4012,4016,0,3814,3808,3811,3815,3922,3916,3919,3923,43,4017,4013,4009,4015,0,3816,3812,3808,3814,3924,3920,3916,3922,43,3932,4018,4019,3933,0,3731,3817,3818,3732,3839,3925,3926,3840,43,4018,4020,4021,4019,0,3817,3819,3820,3818,3925,3927,3928,3926,43,4019,4022,3936,3933,0,3818,3821,3735,3732,3926,3929,3843,3840,43,4021,4023,4022,4019,0,3820,3822,3821,3818,3928,3930,3929,3926,43,3941,4024,4025,3942,0,3740,3823,3824,3741,3848,3931,3932,3849,43,4024,4026,4027,4025,0,3823,3825,3826,3824,3931,3933,3934,3932,43,3942,4025,4018,3932,0,3741,3824,3817,3731,3849,3932,3925,3839,43,4025,4027,4020,4018,0,3824,3826,3819,3817,3932,3934,3927,3925,43,3947,4028,4029,3948,0,3746,3827,3828,3747,3854,3935,3936,3855,43,4028,4030,4031,4029,0,3827,3829,3830,3828,3935,3937,3938,3936,43,3948,4029,4024,3941,0,3747,3828,3823,3740,3855,3936,3931,3848,43,4029,4031,4026,4024,0,3828,3830,3825,3823,3936,3938,3933,3931,43,4032,4033,3954,3953,0,3831,3832,3753,3752,3939,3940,3861,3860,43,4034,4035,4033,4032,0,3833,3834,3832,3831,3941,3942,3940,3939,43,4033,4028,3947,3954,0,3832,3827,3746,3753,3940,3935,3854,3861,43,4035,4030,4028,4033,0,3834,3829,3827,3832,3942,3937,3935,3940,43,3959,4036,4037,3960,0,3758,3835,3836,3759,3866,3943,3944,3867,43,4036,4038,4039,4037,0,3835,3837,3838,3836,3943,3945,3946,3944,43,3960,4037,4032,3953,0,3759,3836,3831,3752,3867,3944,3939,3860,43,4037,4039,4034,4032,0,3836,3838,3833,3831,3944,3946,3941,3939,43,4040,4041,3966,3965,0,3839,3840,3765,3764,3947,3948,3873,3872,43,4042,4043,4041,4040,0,3841,3842,3840,3839,3949,3950,3948,3947,43,3966,4041,4036,3959,0,3765,3840,3835,3758,3873,3948,3943,3866,43,4041,4043,4038,4036,0,3840,3842,3837,3835,3948,3950,3945,3943,43,3971,4044,4045,3972,0,3770,3843,3844,3771,3878,3951,3952,3879,43,4044,4046,4047,4045,0,3843,3845,3846,3844,3951,3953,3954,3952,43,4045,4040,3965,3972,0,3844,3839,3764,3771,3952,3947,3872,3879,43,4047,4042,4040,4045,0,3846,3841,3839,3844,3954,3949,3947,3952,43,3977,4048,4049,3978,0,3776,3847,3848,3777,3884,3955,3956,3885,43,4048,4050,4051,4049,0,3847,3849,3850,3848,3955,3957,3958,3956,43,4049,4044,3971,3978,0,3848,3843,3770,3777,3956,3951,3878,3885,43,4051,4046,4044,4049,0,3850,3845,3843,3848,3958,3953,3951,3956,43,3983,4052,4053,3984,0,3782,3851,3852,3783,3890,3959,3960,3891,43,4052,4054,4055,4053,0,3851,3853,3854,3852,3959,3961,3962,3960,43,4053,4048,3977,3984,0,3852,3847,3776,3783,3960,3955,3884,3891,43,4055,4050,4048,4053,0,3854,3849,3847,3852,3962,3957,3955,3960,43,4056,4057,3990,3989,0,3855,3856,3789,3788,3963,3964,3897,3896,43,4058,4059,4057,4056,0,3857,3858,3856,3855,3965,3966,3964,3963,43,4057,4052,3983,3990,0,3856,3851,3782,3789,3964,3959,3890,3897,43,4059,4054,4052,4057,0,3858,3853,3851,3856,3966,3961,3959,3964,43,3995,4060,4061,3996,0,3794,3859,3860,3795,3902,3967,3968,3903,43,4060,4062,4063,4061,0,3859,3861,3862,3860,3967,3969,3970,3968,43,3996,4061,4056,3989,0,3795,3860,3855,3788,3903,3968,3963,3896,43,4063,4058,4056,4061,0,3862,3857,3855,3860,3970,3965,3963,3968,43,4001,4064,4065,4002,0,3800,3863,3864,3801,3908,3971,3972,3909,43,4064,4066,4067,4065,0,3863,3865,3866,3864,3971,3973,3974,3972,43,4002,4065,4060,3995,0,3801,3864,3859,3794,3909,3972,3967,3902,43,4065,4067,4062,4060,0,3864,3866,3861,3859,3972,3974,3969,3967,43,4007,4068,4069,4008,0,3806,3867,3868,3807,3914,3975,3976,3915,43,4070,4071,4069,4068,0,3869,3870,3868,3867,3977,3978,3976,3975,43,4008,4069,4064,4001,0,3807,3868,3863,3800,3915,3976,3971,3908,43,4069,4071,4066,4064,0,3868,3870,3865,3863,3976,3978,3973,3971,43,4013,4072,4073,4014,0,3812,3871,3872,3813,3920,3979,3980,3921,43,4072,4074,4075,4073,0,3871,3873,3874,3872,3979,3981,3982,3980,43,4014,4073,4068,4007,0,3813,3872,3867,3806,3921,3980,3975,3914,43,4073,4075,4070,4068,0,3872,3874,3869,3867,3980,3982,3977,3975,43,4022,4076,4017,3936,0,3821,3875,3816,3735,3929,3983,3924,3843,43,4023,4077,4076,4022,0,3822,3876,3875,3821,3930,3984,3983,3929,43,4076,4072,4013,4017,0,3875,3871,3812,3816,3983,3979,3920,3924,43,4076,4077,4074,4072,0,3875,3876,3873,3871,3983,3984,3981,3979,43,4020,4078,4079,4021,0,3819,3877,3878,3820,3927,3985,3986,3928,43,4078,4080,4081,4079,0,3877,3879,3880,3878,3985,3987,3988,3986,43,4079,4082,4023,4021,0,3878,3881,3822,3820,3986,3989,3930,3928,43,4081,4083,4082,4079,0,3880,3882,3881,3878,3988,3990,3989,3986,43,4026,4084,4085,4027,0,3825,3883,3884,3826,3933,3991,3992,3934,43,4086,4087,4085,4084,0,3885,3886,3884,3883,3993,3994,3992,3991,43,4027,4085,4078,4020,0,3826,3884,3877,3819,3934,3992,3985,3927,43,4087,4080,4078,4085,0,3886,3879,3877,3884,3994,3987,3985,3992,43,4030,4088,4089,4031,0,3829,3887,3888,3830,3937,3995,3996,3938,43,4090,4091,4089,4088,0,3889,3890,3888,3887,3997,3998,3996,3995,43,4031,4089,4084,4026,0,3830,3888,3883,3825,3938,3996,3991,3933,43,4091,4086,4084,4089,0,3890,3885,3883,3888,3998,3993,3991,3996,43,4092,4093,4035,4034,0,3891,3892,3834,3833,3999,4e3,3942,3941,43,4092,4094,4095,4093,0,3891,3893,3894,3892,3999,4001,4002,4e3,43,4093,4088,4030,4035,0,3892,3887,3829,3834,4e3,3995,3937,3942,43,4093,4095,4090,4088,0,3892,3894,3889,3887,4e3,4002,3997,3995,43,4038,4096,4097,4039,0,3837,3895,3896,3838,3945,4003,4004,3946,43,4096,4098,4099,4097,0,3895,3897,3898,3896,4003,4005,4006,4004,43,4039,4097,4092,4034,0,3838,3896,3891,3833,3946,4004,3999,3941,43,4097,4099,4094,4092,0,3896,3898,3893,3891,4004,4006,4001,3999,43,4100,4101,4043,4042,0,3899,3900,3842,3841,4007,4008,3950,3949,43,4100,4102,4103,4101,0,3899,3901,3902,3900,4007,4009,4010,4008,43,4043,4101,4096,4038,0,3842,3900,3895,3837,3950,4008,4003,3945,43,4101,4103,4098,4096,0,3900,3902,3897,3895,4008,4010,4005,4003,43,4047,4046,4104,4105,0,3846,3845,3903,3904,3954,3953,4011,4012,43,4106,4105,4104,4107,0,3905,3904,3903,3906,4013,4012,4011,4014,43,4105,4100,4042,4047,0,3904,3899,3841,3846,4012,4007,3949,3954,43,4106,4102,4100,4105,0,3905,3901,3899,3904,4013,4009,4007,4012,42,4108,4107,4104,0,3907,3906,3903,4015,4014,4011,42,4108,4104,4051,0,3907,3903,3850,4015,4011,3958,42,4051,4104,4046,0,3850,3903,3845,3958,4011,3953,42,4050,4108,4051,0,3849,3907,3850,3957,4015,3958,43,4109,4110,4059,4058,0,3908,3909,3858,3857,4016,4017,3966,3965,43,4111,4112,4110,4109,0,3910,3911,3909,3908,4018,4019,4017,4016,43,4113,4054,4059,4110,0,3912,3853,3858,3909,4020,3961,3966,4017,43,4113,4110,4112,4107,0,3912,3909,3911,3906,4020,4017,4019,4014,43,4114,4115,4063,4062,0,3913,3914,3862,3861,4021,4022,3970,3969,43,4116,4117,4115,4114,0,3915,3916,3914,3913,4023,4024,4022,4021,43,4115,4109,4058,4063,0,3914,3908,3857,3862,4022,4016,3965,3970,43,4117,4111,4109,4115,0,3916,3910,3908,3914,4024,4018,4016,4022,43,4066,4118,4119,4067,0,3865,3917,3918,3866,3973,4025,4026,3974,43,4120,4121,4119,4118,0,3919,3920,3918,3917,4027,4028,4026,4025,43,4067,4119,4114,4062,0,3866,3918,3913,3861,3974,4026,4021,3969,43,4121,4116,4114,4119,0,3920,3915,3913,3918,4028,4023,4021,4026,43,4070,4122,4123,4071,0,3869,3921,3922,3870,3977,4029,4030,3978,43,4122,4124,4125,4123,0,3921,3923,3924,3922,4029,4031,4032,4030,43,4123,4118,4066,4071,0,3922,3917,3865,3870,4030,4025,3973,3978,43,4125,4120,4118,4123,0,3924,3919,3917,3922,4032,4027,4025,4030,43,4074,4126,4127,4075,0,3873,3925,3926,3874,3981,4033,4034,3982,43,4126,4128,4129,4127,0,3925,3927,3928,3926,4033,4035,4036,4034,43,4075,4127,4122,4070,0,3874,3926,3921,3869,3982,4034,4029,3977,43,4127,4129,4124,4122,0,3926,3928,3923,3921,4034,4036,4031,4029,43,4023,4082,4130,4077,0,3822,3881,3929,3876,3930,3989,4037,3984,43,4082,4083,4131,4130,0,3881,3882,3930,3929,3989,3990,4038,4037,43,4077,4130,4126,4074,0,3876,3929,3925,3873,3984,4037,4033,3981,43,4130,4131,4128,4126,0,3929,3930,3927,3925,4037,4038,4035,4033,42,4113,4107,4108,0,3912,3906,3907,4020,4014,4015,42,4113,4108,4055,0,3912,3907,3854,4020,4015,3962,42,4055,4108,4050,0,3854,3907,3849,3962,4015,3957,42,4054,4113,4055,0,3853,3912,3854,3961,4020,3962,42,4132,4133,4134,0,3931,3932,3933,4039,4040,4041,42,4132,4134,4081,0,3931,3933,3880,4039,4041,3988,42,4081,4134,4080,0,3880,3933,3879,3988,4041,3987,42,4083,4132,4081,0,3882,3931,3880,3990,4039,3988,42,4134,4133,4135,0,3933,3932,3934,4041,4040,4042,42,4134,4135,4087,0,3933,3934,3886,4041,4042,3994,42,4087,4135,4086,0,3886,3934,3885,3994,4042,3993,42,4080,4134,4087,0,3879,3933,3886,3987,4041,3994,42,4136,4133,4132,0,3935,3932,3931,4043,4040,4039,42,4136,4132,4131,0,3935,3931,3930,4043,4039,4038,42,4131,4132,4083,0,3930,3931,3882,4038,4039,3990,42,4128,4136,4131,0,3927,3935,3930,4035,4043,4038,43,4137,4138,4139,4140,0,3936,3937,3938,3939,4044,4045,4046,4047,43,4138,4133,4136,4139,0,3937,3932,3935,3938,4045,4040,4043,4046,43,4140,4139,4129,4124,0,3939,3938,3928,3923,4047,4046,4036,4031,43,4139,4136,4128,4129,0,3938,3935,3927,3928,4046,4043,4035,4036,43,4141,4137,4140,4142,0,3940,3936,3939,3941,4048,4044,4047,4049,43,4142,4140,4124,4125,0,3941,3939,3923,3924,4049,4047,4031,4032,43,4143,4144,4141,4142,0,3942,3943,3940,3941,4050,4051,4048,4049,43,4120,4143,4142,4125,0,3919,3942,3941,3924,4027,4050,4049,4032,43,4121,4145,4143,4120,0,3920,3944,3942,3919,4028,4052,4050,4027,43,4116,4146,4145,4121,0,3915,3945,3944,3920,4023,4053,4052,4028,43,4145,4147,4144,4143,0,3944,3946,3943,3942,4052,4054,4051,4050,43,4145,4146,4148,4147,0,3944,3945,3947,3946,4052,4053,4055,4054,43,4117,4149,4146,4116,0,3916,3948,3945,3915,4024,4056,4053,4023,43,4111,4150,4149,4117,0,3910,3949,3948,3916,4018,4057,4056,4024,43,4149,4151,4148,4146,0,3948,3950,3947,3945,4056,4058,4055,4053,43,4150,4152,4151,4149,0,3949,3951,3950,3948,4057,4059,4058,4056,42,4150,4152,4153,0,3949,3951,3952,4057,4059,4060,42,4150,4153,4112,0,3949,3952,3911,4057,4060,4019,42,4112,4153,4107,0,3911,3952,3906,4019,4060,4014,42,4111,4150,4112,0,3910,3949,3911,4018,4057,4019,42,4153,4107,4106,0,3952,3906,3905,4060,4014,4013,42,4153,4106,4154,0,3952,3905,3953,4060,4013,4061,42,4154,4106,4102,0,3953,3905,3901,4061,4013,4009,42,4152,4153,4154,0,3951,3952,3953,4059,4060,4061,43,4155,4154,4102,4103,0,3954,3953,3901,3902,4062,4061,4009,4010,43,4156,4155,4103,4098,0,3955,3954,3902,3897,4063,4062,4010,4005,43,4151,4152,4154,4155,0,3950,3951,3953,3954,4058,4059,4061,4062,43,4148,4151,4155,4156,0,3947,3950,3954,3955,4055,4058,4062,4063,43,4157,4156,4098,4099,0,3956,3955,3897,3898,4064,4063,4005,4006,43,4158,4157,4099,4094,0,3957,3956,3898,3893,4065,4064,4006,4001,43,4147,4148,4156,4157,0,3946,3947,3955,3956,4054,4055,4063,4064,43,4144,4147,4157,4158,0,3943,3946,3956,3957,4051,4054,4064,4065,43,4159,4158,4094,4095,0,3958,3957,3893,3894,4066,4065,4001,4002,43,4160,4159,4095,4090,0,3959,3958,3894,3889,4067,4066,4002,3997,43,4144,4158,4159,4141,0,3943,3957,3958,3940,4051,4065,4066,4048,43,4159,4160,4137,4141,0,3958,3959,3936,3940,4066,4067,4044,4048,43,4161,4135,4133,4138,0,3960,3934,3932,3937,4068,4042,4040,4045,43,4160,4161,4138,4137,0,3959,3960,3937,3936,4067,4068,4045,4044,43,4086,4135,4161,4091,0,3885,3934,3960,3890,3993,4042,4068,3998,43,4091,4161,4160,4090,0,3890,3960,3959,3889,3998,4068,4067,3997,43,4162,4163,4164,4165,0,3961,3962,3963,3964,4069,4070,4071,4072,43,4166,4167,4165,4164,0,3965,3966,3964,3963,4073,4074,4072,4071,43,4168,4169,4162,4165,0,3967,3968,3961,3964,4075,4076,4069,4072,43,4167,4170,4168,4165,0,3966,3969,3967,3964,4074,4077,4075,4072,43,4171,4172,4167,4166,0,3970,3971,3966,3965,4078,4079,4074,4073,43,4173,4172,4171,4174,0,3972,3971,3970,3973,4080,4079,4078,4081,43,4172,4175,4170,4167,0,3971,3974,3969,3966,4079,4082,4077,4074,43,4176,4175,4172,4173,0,3975,3974,3971,3972,4083,4082,4079,4080,43,4173,4174,4177,4178,0,3972,3973,3976,3977,4080,4081,4084,4085,43,4179,4178,4177,4180,0,3978,3977,3976,3979,4086,4085,4084,4087,43,4176,4173,4178,4181,0,3975,3972,3977,3980,4083,4080,4085,4088,43,4181,4178,4179,4182,0,3980,3977,3978,3981,4088,4085,4086,4089,43,4183,4184,4185,4186,0,3982,3983,3984,3985,4090,4091,4092,4093,43,4186,4185,4187,4188,0,3985,3984,3986,3987,4093,4092,4094,4095,43,4189,4183,4186,4190,0,3988,3982,3985,3989,4096,4090,4093,4097,43,4190,4186,4188,4191,0,3989,3985,3987,3990,4097,4093,4095,4098,43,4192,4188,4187,4193,0,3991,3987,3986,3992,4099,4095,4094,4100,43,4194,4192,4193,4195,0,3993,3991,3992,3994,4101,4099,4100,4102,43,4196,4191,4188,4192,0,3995,3990,3987,3991,4103,4098,4095,4099,43,4197,4196,4192,4194,0,3996,3995,3991,3993,4104,4103,4099,4101,43,4198,4195,4194,4199,0,3997,3994,3993,3998,4105,4102,4101,4106,43,4200,4199,4194,4197,0,3999,3998,3993,3996,4107,4106,4101,4104,43,4199,4179,4182,4198,0,3998,3978,3981,3997,4106,4086,4089,4105,43,4180,4179,4199,4200,0,3979,3978,3998,3999,4087,4086,4106,4107,43,4201,4202,4203,4204,0,4e3,4001,4002,4003,4108,4109,4110,4111,43,4205,4206,4202,4201,0,4004,4005,4001,4e3,4112,4113,4109,4108,43,4203,4202,4207,4208,0,4002,4001,4006,4007,4110,4109,4114,4115,43,4202,4206,4209,4207,0,4001,4005,4008,4006,4109,4113,4116,4114,43,4210,4211,4212,4213,0,4009,4010,4011,4012,4117,4118,4119,4120,43,4214,4215,4212,4211,0,4013,4014,4011,4010,4121,4122,4119,4118,43,4212,4201,4204,4213,0,4011,4e3,4003,4012,4119,4108,4111,4120,43,4215,4205,4201,4212,0,4014,4004,4ee3,4933,4932,0,4798,4799,4732,4731,4906,4907,4840,4839,43,5001,5002,5e3,4999,0,4800,4801,4799,4798,4908,4909,4907,4906,43,5e3,4995,4926,4933,0,4799,4794,4725,4732,4907,4902,4833,4840,43,5002,4997,4995,5e3,0,4801,4796,4794,4799,4909,4904,4902,4907,43,4938,5003,5004,4939,0,4737,4802,4803,4738,4845,4910,4911,4846,43,5003,5005,5006,5004,0,4802,4804,4805,4803,4910,4912,4913,4911,43,4939,5004,4999,4932,0,4738,4803,4798,4731,4846,4911,4906,4839,43,5006,5001,4999,5004,0,4805,4800,4798,4803,4913,4908,4906,4911,43,4944,5007,5008,4945,0,4743,4806,4807,4744,4851,4914,4915,4852,43,5007,5009,5010,5008,0,4806,4808,4809,4807,4914,4916,4917,4915,43,4945,5008,5003,4938,0,4744,4807,4802,4737,4852,4915,4910,4845,43,5008,5010,5005,5003,0,4807,4809,4804,4802,4915,4917,4912,4910,43,4950,5011,5012,4951,0,4749,4810,4811,4750,4857,4918,4919,4858,43,5013,5014,5012,5011,0,4812,4813,4811,4810,4920,4921,4919,4918,43,4951,5012,5007,4944,0,4750,4811,4806,4743,4858,4919,4914,4851,43,5012,5014,5009,5007,0,4811,4813,4808,4806,4919,4921,4916,4914,43,4956,5015,5016,4957,0,4755,4814,4815,4756,4863,4922,4923,4864,43,5015,5017,5018,5016,0,4814,4816,4817,4815,4922,4924,4925,4923,43,4957,5016,5011,4950,0,4756,4815,4810,4749,4864,4923,4918,4857,43,5016,5018,5013,5011,0,4815,4817,4812,4810,4923,4925,4920,4918,43,4965,5019,4960,4879,0,4764,4818,4759,4678,4872,4926,4867,4786,43,4966,5020,5019,4965,0,4765,4819,4818,4764,4873,4927,4926,4872,43,5019,5015,4956,4960,0,4818,4814,4755,4759,4926,4922,4863,4867,43,5019,5020,5017,5015,0,4818,4819,4816,4814,4926,4927,4924,4922,43,4963,5021,5022,4964,0,4762,4820,4821,4763,4870,4928,4929,4871,43,5021,5023,5024,5022,0,4820,4822,4823,4821,4928,4930,4931,4929,43,5022,5025,4966,4964,0,4821,4824,4765,4763,4929,4932,4873,4871,43,5024,5026,5025,5022,0,4823,4825,4824,4821,4931,4933,4932,4929,43,4969,5027,5028,4970,0,4768,4826,4827,4769,4876,4934,4935,4877,43,5029,5030,5028,5027,0,4828,4829,4827,4826,4936,4937,4935,4934,43,4970,5028,5021,4963,0,4769,4827,4820,4762,4877,4935,4928,4870,43,5030,5023,5021,5028,0,4829,4822,4820,4827,4937,4930,4928,4935,43,4973,5031,5032,4974,0,4772,4830,4831,4773,4880,4938,4939,4881,43,5033,5034,5032,5031,0,4832,4833,4831,4830,4940,4941,4939,4938,43,4974,5032,5027,4969,0,4773,4831,4826,4768,4881,4939,4934,4876,43,5034,5029,5027,5032,0,4833,4828,4826,4831,4941,4936,4934,4939,43,5035,5036,4978,4977,0,4834,4835,4777,4776,4942,4943,4885,4884,43,5035,5037,5038,5036,0,4834,4836,4837,4835,4942,4944,4945,4943,43,5036,5031,4973,4978,0,4835,4830,4772,4777,4943,4938,4880,4885,43,5036,5038,5033,5031,0,4835,4837,4832,4830,4943,4945,4940,4938,43,4981,5039,5040,4982,0,4780,4838,4839,4781,4888,4946,4947,4889,43,5039,5041,5042,5040,0,4838,4840,4841,4839,4946,4948,4949,4947,43,4982,5040,5035,4977,0,4781,4839,4834,4776,4889,4947,4942,4884,43,5040,5042,5037,5035,0,4839,4841,4836,4834,4947,4949,4944,4942,43,5043,5044,4986,4985,0,4842,4843,4785,4784,4950,4951,4893,4892,43,5043,5045,5046,5044,0,4842,4844,4845,4843,4950,4952,4953,4951,43,4986,5044,5039,4981,0,4785,4843,4838,4780,4893,4951,4946,4888,43,5044,5046,5041,5039,0,4843,4845,4840,4838,4951,4953,4948,4946,43,4990,4989,5047,5048,0,4789,4788,4846,4847,4897,4896,4954,4955,43,5049,5048,5047,5050,0,4848,4847,4846,4849,4956,4955,4954,4957,43,5048,5043,4985,4990,0,4847,4842,4784,4789,4955,4950,4892,4897,43,5049,5045,5043,5048,0,4848,4844,4842,4847,4956,4952,4950,4955,42,5051,5050,5047,0,4850,4849,4846,4958,4957,4954,42,5051,5047,4994,0,4850,4846,4793,4958,4954,4901,42,4994,5047,4989,0,4793,4846,4788,4901,4954,4896,42,4993,5051,4994,0,4792,4850,4793,4900,4958,4901,43,5052,5053,5002,5001,0,4851,4852,4801,4800,4959,4960,4909,4908,43,5054,5055,5053,5052,0,4853,4854,4852,4851,4961,4962,4960,4959,43,5056,4997,5002,5053,0,4855,4796,4801,4852,4963,4904,4909,4960,43,5056,5053,5055,5050,0,4855,4852,4854,4849,4963,4960,4962,4957,43,5057,5058,5006,5005,0,4856,4857,4805,4804,4964,4965,4913,4912,43,5059,5060,5058,5057,0,4858,4859,4857,4856,4966,4967,4965,4964,43,5058,5052,5001,5006,0,4857,4851,4800,4805,4965,4959,4908,4913,43,5060,5054,5052,5058,0,4859,4853,4851,4857,4967,4961,4959,4965,43,5009,5061,5062,5010,0,4808,4860,4861,4809,4916,4968,4969,4917,43,5063,5064,5062,5061,0,4862,4863,4861,4860,4970,4971,4969,4968,43,5010,5062,5057,5005,0,4809,4861,4856,4804,4917,4969,4964,4912,43,5064,5059,5057,5062,0,4863,4858,4856,4861,4971,4966,4964,4969,43,5013,5065,5066,5014,0,4812,4864,4865,4813,4920,4972,4973,4921,43,5065,5067,5068,5066,0,4864,4866,4867,4865,4972,4974,4975,4973,43,5066,5061,5009,5014,0,4865,4860,4808,4813,4973,4968,4916,4921,43,5068,5063,5061,5066,0,4867,4862,4860,4865,4975,4970,4968,4973,43,5017,5069,5070,5018,0,4816,4868,4869,4817,4924,4976,4977,4925,43,5069,5071,5072,5070,0,4868,4870,4871,4869,4976,4978,4979,4977,43,5018,5070,5065,5013,0,4817,4869,4864,4812,4925,4977,4972,4920,43,5070,5072,5067,5065,0,4869,4871,4866,4864,4977,4979,4974,4972,43,4966,5025,5073,5020,0,4765,4824,4872,4819,4873,4932,4980,4927,43,5025,5026,5074,5073,0,4824,4825,4873,4872,4932,4933,4981,4980,43,5020,5073,5069,5017,0,4819,4872,4868,4816,4927,4980,4976,4924,43,5073,5074,5071,5069,0,4872,4873,4870,4868,4980,4981,4978,4976,42,5056,5050,5051,0,4855,4849,4850,4963,4957,4958,42,5056,5051,4998,0,4855,4850,4797,4963,4958,4905,42,4998,5051,4993,0,4797,4850,4792,4905,4958,4900,42,4997,5056,4998,0,4796,4855,4797,4904,4963,4905,42,5075,5076,5077,0,4874,4875,4876,4982,4983,4984,42,5075,5077,5024,0,4874,4876,4823,4982,4984,4931,42,5024,5077,5023,0,4823,4876,4822,4931,4984,4930,42,5026,5075,5024,0,4825,4874,4823,4933,4982,4931,42,5077,5076,5078,0,4876,4875,4877,4984,4983,4985,42,5077,5078,5030,0,4876,4877,4829,4984,4985,4937,42,5030,5078,5029,0,4829,4877,4828,4937,4985,4936,42,5023,5077,5030,0,4822,4876,4829,4930,4984,4937,42,5079,5076,5075,0,4878,4875,4874,4986,4983,4982,42,5079,5075,5074,0,4878,4874,4873,4986,4982,4981,42,5074,5075,5026,0,4873,4874,4825,4981,4982,4933,42,5071,5079,5074,0,4870,4878,4873,4978,4986,4981,43,5080,5081,5082,5083,0,4879,4880,4881,4882,4987,4988,4989,4990,43,5081,5076,5079,5082,0,4880,4875,4878,4881,4988,4983,4986,4989,43,5083,5082,5072,5067,0,4882,4881,4871,4866,4990,4989,4979,4974,43,5082,5079,5071,5072,0,4881,4878,4870,4871,4989,4986,4978,4979,43,5084,5080,5083,5085,0,4883,4879,4882,4884,4991,4987,4990,4992,43,5085,5083,5067,5068,0,4884,4882,4866,4867,4992,4990,4974,4975,43,5086,5087,5084,5085,0,4885,4886,4883,4884,4993,4994,4991,4992,43,5063,5086,5085,5068,0,4862,4885,4884,4867,4970,4993,4992,4975,43,5064,5088,5086,5063,0,4863,4887,4885,4862,4971,4995,4993,4970,43,5059,5089,5088,5064,0,4858,4888,4887,4863,4966,4996,4995,4971,43,5088,5090,5087,5086,0,4887,4889,4886,4885,4995,4997,4994,4993,43,5088,5089,5091,5090,0,4887,4888,4890,4889,4995,4996,4998,4997,43,5060,5092,5089,5059,0,4859,4891,4888,4858,4967,4999,4996,4966,43,5054,5093,5092,5060,0,4853,4892,4891,4859,4961,5e3,4999,4967,43,5092,5094,5091,5089,0,4891,4893,4890,4888,4999,5001,4998,4996,43,5093,5095,5094,5092,0,4892,4894,4893,4891,5e3,5002,5001,4999,42,5093,5095,5096,0,4892,4894,4895,5e3,5002,5003,42,5093,5096,5055,0,4892,4895,4854,5e3,5003,4962,42,5055,5096,5050,0,4854,4895,4849,4962,5003,4957,42,5054,5093,5055,0,4853,4892,4854,4961,5ee3,5001,5002,5003,5108,5109,5110,5111,43,5202,5205,5206,5203,0,5001,5004,5005,5002,5109,5112,5113,5110,43,5204,5203,5196,5195,0,5003,5002,4995,4994,5111,5110,5103,5102,43,5203,5206,5199,5196,0,5002,5005,4998,4995,5110,5113,5106,5103,43,5207,5208,5209,5210,0,5006,5007,5008,5009,5114,5115,5116,5117,43,5211,5212,5208,5207,0,5010,5011,5007,5006,5118,5119,5115,5114,43,5209,5208,5202,5201,0,5008,5007,5001,5e},type:"Geometry",materials:[{opacity:1,mapDiffuseAnisotropy:1,wireframe:!1,depthTest:!0,mapDiffuseWrap:["RepeatWrapping","RepeatWrapping"],colorAmbient:[.784314,.784314,.784314],doubleSided:!0,colorDiffuse:[.784314,.784314,.784314],DbgColor:15658734,visible:!0,depthWrite:!0,DbgName:"rose1",colorEmissive:[0,0,0],transparent:!1,mapDiffuseRepeat:[1,1],specularCoef:50,DbgIndex:0,mapDiffuse:"rose_texture.jpg",shading:"phong",blending:"NormalBlending",colorSpecular:[0,0,0]}],uuid:"BF0FA6FF-CF10-38C0-9193-1A8024789BA6"}],images:[{url:"rose_texture.jpg",name:"rose_texture.jpg",uuid:"38F039B2-3C0A-38ED-865A-4BBC5562C75B"}],metadata:{version:4.4,type:"Object",generator:"io_three"},animations:[{fps:29,name:"default",tracks:[]}],object:{type:"Scene",matrix:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],children:[{name:"rose",uuid:"CF165E13-CD58-3DAC-AA84-51CADA477C38",matrix:[-1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1],visible:!0,type:"Object",children:[{name:"rose1",uuid:"B2DA0CF1-E908-37D6-8059-3924843959C2",matrix:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],visible:!0,type:"Mesh",material:"B2DA0CF1-E908-37D6-8059-3924843959C2",castShadow:!0,receiveShadow:!0,geometry:"BF0FA6FF-CF10-38C0-9193-1A8024789BA6"}]}],uuid:"B5D6DC41-06AA-4C4B-BE14-DA7D3FF536AA"},textures:[{wrap:[1e3,1e3],repeat:[1,1],mapping:300,uuid:"F3008185-8782-3899-A54B-3F7C6BDBBA60",magFilter:1006,anisotropy:1,name:"rose_texture_jpg",minFilter:1008,image:"38F039B2-3C0A-38ED-865A-4BBC5562C75B"}],materials:[{map:"F3008185-8782-3899-A54B-3F7C6BDBBA60",emissive:0,depthTest:!0,uuid:"B2DA0CF1-E908-37D6-8059-3924843959C2",name:"rose1",color:13158600,depthWrite:!0,vertexColors:!1,specular:0,ambient:13158600,shininess:50,type:"MeshPhongMaterial",side:2,blending:"NormalBlending"}]}},function(e,t,n){e.exports=n.p+"static/media/rose_texture.99e59178.jpg"},function(e,t){e.exports={container:"src-__app-module___container"}},function(e,t,n){"use strict";function r(){"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/three-store/service-worker.js").then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(function(e){console.error("Error during service worker registration:",e)})})}t.a=r},function(e,t){}]);
//# sourceMappingURL=main.5d92e70b.js.map